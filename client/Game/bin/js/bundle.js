var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AntMine_1 = require("./Platform/AntMine");
var AntWX_1 = require("./Platform/AntWX");
var Game_1 = require("../Game");
var AntFrame = /** @class */ (function () {
    function AntFrame() {
    }
    AntFrame.LocationUrlParam = function (name) {
        if (Game_1.default.browserSetting.isWeixinMinigame) {
            return null;
        }
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
        var r = window.location.search.substr(1).match(reg);
        if (r != null) {
            return unescape(r[2]);
        }
        return null;
    };
    AntFrame.RandName = function (min, max, randomFlag) {
        if (randomFlag === void 0) { randomFlag = true; }
        var str = "";
        var range = min;
        var arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
        if (randomFlag) {
            range = Math.round(Math.random() * (max - min)) + min;
        }
        for (var i = 0; i < range; i++) {
            var pos = Math.round(Math.random() * (arr.length - 1));
            str += arr[pos];
        }
        return str;
    };
    Object.defineProperty(AntFrame, "platform", {
        get: function () {
            if (!AntFrame._insPlatform) {
                if (Game_1.default.browserSetting.isWeixinMinigame && AntFrame.enableWXLogin) {
                    AntFrame._insPlatform = new AntWX_1.AntPlatformWX();
                }
                else {
                    AntFrame._insPlatform = new AntMine_1.default();
                }
            }
            return AntFrame._insPlatform;
        },
        enumerable: true,
        configurable: true
    });
    AntFrame.enableWXLogin = false;
    AntFrame._insPlatform = null;
    return AntFrame;
}());
exports.default = AntFrame;
},{"../Game":546,"./Platform/AntMine":51,"./Platform/AntWX":53}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AntFrameConfig = /** @class */ (function () {
    function AntFrameConfig() {
    }
    Object.defineProperty(AntFrameConfig, "json", {
        get: function () {
            return this._netConfig;
        },
        enumerable: true,
        configurable: true
    });
    AntFrameConfig.GetNetConfig = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (AntFrameConfig._netConfig && AntFrameConfig._netConfig.error == 0) {
                    return [2 /*return*/, new Promise(function (resolve) {
                            resolve(AntFrameConfig._netConfig);
                        })];
                }
                return [2 /*return*/, new Promise(function (resolve) {
                        net.auth.config(function (ok, j) {
                            AntFrameConfig._netConfig = j;
                            resolve(AntFrameConfig._netConfig);
                        });
                    })];
            });
        });
    };
    AntFrameConfig.GetErrorStr = function (code) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (AntFrameConfig._netConfig) {
                            return [2 /*return*/, new Promise(function (resolve) {
                                    resolve(AntFrameConfig._netConfig.errstr[code.toString()]);
                                })];
                        }
                        return [4 /*yield*/, AntFrameConfig.GetNetConfig()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, new Promise(function (resolve) {
                                resolve(AntFrameConfig._netConfig.errstr[code.toString()]);
                            })];
                }
            });
        });
    };
    AntFrameConfig.FIRST_SCENE = "test"; //第一个场景
    // Game
    AntFrameConfig.GAME_WIDTH = 1334; // 客户端宽度
    AntFrameConfig.GAME_HEIGHT = 750; // 客户端高度
    AntFrameConfig.GROUP_ID = 0;
    AntFrameConfig.WXAppID = "wxedab64fed19eb5b4"; //微信的小程序ID
    //public static SHARE_IMG_URL: string = "https://thkdev.123u.com/game/wechatgame/"; //分享图片的url
    AntFrameConfig.SHARE_IMG_URL = "https://thkdev.123u.com/game/makemore/"; //分享图片的url
    //public static GO_URL: string = "https://h5-makemore2-ready.123u.com";
    //public static GO_URL:string = "http://192.168.1.3:5000";
    //public static GO_URL:string = "https://www.magiclvzs.club:5000";
    AntFrameConfig.GO_URL = "http://192.168.2.80:5000";
    AntFrameConfig.shouldShowGuide = true;
    return AntFrameConfig;
}());
exports.default = AntFrameConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CreateLeagueS2CHandler = function (msg) {
};
exports.CreateLeagueS2CHandler = CreateLeagueS2CHandler;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMS2CHandler = function (msg) {
};
exports.GMS2CHandler = GMS2CHandler;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerChangeMailStateS2CHandler = function (msg) {
};
exports.GamerChangeMailStateS2CHandler = GamerChangeMailStateS2CHandler;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerCheckPVPBattleS2CHandler = function (msg) {
};
exports.GamerCheckPVPBattleS2CHandler = GamerCheckPVPBattleS2CHandler;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerClubRequestS2CHandler = function (msg) {
};
exports.GamerClubRequestS2CHandler = GamerClubRequestS2CHandler;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerCompoundItemS2CHandler = function (msg) {
};
exports.GamerCompoundItemS2CHandler = GamerCompoundItemS2CHandler;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerDelHaveReadMailS2CHandler = function (msg) {
};
exports.GamerDelHaveReadMailS2CHandler = GamerDelHaveReadMailS2CHandler;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerDelMailS2CHandler = function (msg) {
};
exports.GamerDelMailS2CHandler = GamerDelMailS2CHandler;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerExtractGashaponS2CHandler = function (msg) {
    if (msg.error)
        return;
    // let menuId: number = Game.config.gashapon.getConfig(msg.gashaponId).menu;
    // switch (menuId) {
    //     case MenuId.Information:
    //         // Game.system.informationGetShow(msg.items);
    //         break;
    //     default:
    //         break;
    // }
};
exports.GamerExtractGashaponS2CHandler = GamerExtractGashaponS2CHandler;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerFriendChatS2CHandler = function (msg) {
};
exports.GamerFriendChatS2CHandler = GamerFriendChatS2CHandler;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GamerGetBackpackS2CHandler = function (msg) {
    var items = msg.items;
    console.log("========================s2c itemlist: ", msg);
    items.forEach(function (item) {
        Game_1.default.moduleModel.item.setItemNum(item.id, item.count, item.obtainTime);
    });
};
exports.GamerGetBackpackS2CHandler = GamerGetBackpackS2CHandler;
},{"../../Game":546}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerGetMailS2CHandler = function (msg) {
};
exports.GamerGetMailS2CHandler = GamerGetMailS2CHandler;
},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerGetRealTimeRankS2CHandler = function (msg) {
};
exports.GamerGetRealTimeRankS2CHandler = GamerGetRealTimeRankS2CHandler;
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GamerLoginGetDataS2CHandler = function (msg) {
    if (msg.error)
        return;
    console.log("GamerLoginGetDataS2CHandler msg.time：");
    console.info(msg.time);
    Game_1.default.time.settingServerTime(msg.time.timestamp, msg.time.timezone);
};
exports.GamerLoginGetDataS2CHandler = GamerLoginGetDataS2CHandler;
},{"../../Game":546}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GamerLoginS2CHandler = function (msg) {
    if (msg.error)
        return;
    Game_1.default.user.setGamerMain(msg.main);
};
exports.GamerLoginS2CHandler = GamerLoginS2CHandler;
},{"../../Game":546}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerMatchS2CHandler = function (msg) {
};
exports.GamerMatchS2CHandler = GamerMatchS2CHandler;
},{}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNewFriendReqS2CHandler = function (msg) {
};
exports.GamerNewFriendReqS2CHandler = GamerNewFriendReqS2CHandler;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyActivitiesS2CHandler = function (msg) {
};
exports.GamerNotifyActivitiesS2CHandler = GamerNotifyActivitiesS2CHandler;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GamerNotifyExpLevelS2CHandler = function (msg) {
    if (0 == msg.error) {
        Game_1.default.user.levelSnapshot();
        Game_1.default.user.exp = msg.exp;
        Game_1.default.user.level = msg.level;
    }
};
exports.GamerNotifyExpLevelS2CHandler = GamerNotifyExpLevelS2CHandler;
},{"../../Game":546}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GamerNotifyGashaponInfoS2CHandler = function (msg) {
    if (msg.error)
        return;
    var gashaponmodel = Game_1.default.moduleModel.gashapon;
    var infos = msg.infos;
    gashaponmodel.setGashaponList(infos);
};
exports.GamerNotifyGashaponInfoS2CHandler = GamerNotifyGashaponInfoS2CHandler;
},{"../../Game":546}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyIconChangeS2CHandler = function (msg) {
};
exports.GamerNotifyIconChangeS2CHandler = GamerNotifyIconChangeS2CHandler;
},{}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GamerNotifyItemChangeS2CHandler = function (msg) {
    if (0 == msg.error) {
        var items = msg.itemsChange;
        items.forEach(function (item) {
            Game_1.default.moduleModel.item.setItemNum(item.id, item.count, item.obtainTime);
        });
    }
};
exports.GamerNotifyItemChangeS2CHandler = GamerNotifyItemChangeS2CHandler;
},{"../../Game":546}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GamerNotifyItemS2CHandler = function (msg) {
    if (0 == msg.error) {
        var item = msg.item;
        if (item)
            Game_1.default.moduleModel.item.setItemNum(item.id, item.count, item.obtainTime);
    }
};
exports.GamerNotifyItemS2CHandler = GamerNotifyItemS2CHandler;
},{"../../Game":546}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyLeagueDataS2CHandler = function (msg) {
};
exports.GamerNotifyLeagueDataS2CHandler = GamerNotifyLeagueDataS2CHandler;
},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyLeagueGamerOnlineS2CHandler = function (msg) {
};
exports.GamerNotifyLeagueGamerOnlineS2CHandler = GamerNotifyLeagueGamerOnlineS2CHandler;
},{}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyLoginOtherS2CHandler = function (msg) {
};
exports.GamerNotifyLoginOtherS2CHandler = GamerNotifyLoginOtherS2CHandler;
},{}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GameEventKey_1 = require("../../GameEventKey");
var GamerNotifyMailS2CHandler = function (msg) {
    if (msg.error)
        return;
    var mails = msg.mails;
    Game_1.default.moduleModel.mail.setMailList(mails);
    Game_1.default.event.dispatch(GameEventKey_1.default.Mail_Update);
};
exports.GamerNotifyMailS2CHandler = GamerNotifyMailS2CHandler;
},{"../../Game":546,"../../GameEventKey":548}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyMatchInfoS2CHandler = function (msg) {
};
exports.GamerNotifyMatchInfoS2CHandler = GamerNotifyMatchInfoS2CHandler;
},{}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyNewChatS2CHandler = function (msg) {
};
exports.GamerNotifyNewChatS2CHandler = GamerNotifyNewChatS2CHandler;
},{}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyNewFriendReqS2CHandler = function (msg) {
};
exports.GamerNotifyNewFriendReqS2CHandler = GamerNotifyNewFriendReqS2CHandler;
},{}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyNewFriendS2CHandler = function (msg) {
};
exports.GamerNotifyNewFriendS2CHandler = GamerNotifyNewFriendS2CHandler;
},{}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GameEventKey_1 = require("../../GameEventKey");
var GamerNotifyNewMailS2CHandler = function (msg) {
    if (msg.error)
        return;
    var mails = msg.mails;
    Game_1.default.moduleModel.mail.setMailList(mails);
    Game_1.default.event.dispatch(GameEventKey_1.default.Mail_Update);
};
exports.GamerNotifyNewMailS2CHandler = GamerNotifyNewMailS2CHandler;
},{"../../Game":546,"../../GameEventKey":548}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyNewPVPResultS2CHandler = function (msg) {
};
exports.GamerNotifyNewPVPResultS2CHandler = GamerNotifyNewPVPResultS2CHandler;
},{}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerNotifyPVPSyncS2CHandler = function (msg) {
};
exports.GamerNotifyPVPSyncS2CHandler = GamerNotifyPVPSyncS2CHandler;
},{}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerOneKeyRcvMailRewardS2CHandler = function (msg) {
};
exports.GamerOneKeyRcvMailRewardS2CHandler = GamerOneKeyRcvMailRewardS2CHandler;
},{}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerPVPSyncS2CHandler = function (msg) {
};
exports.GamerPVPSyncS2CHandler = GamerPVPSyncS2CHandler;
},{}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerProcessFriendReqS2CHandler = function (msg) {
};
exports.GamerProcessFriendReqS2CHandler = GamerProcessFriendReqS2CHandler;
},{}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerSellItemS2CHandler = function (msg) {
};
exports.GamerSellItemS2CHandler = GamerSellItemS2CHandler;
},{}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerSplitItemS2CHandler = function (msg) {
};
exports.GamerSplitItemS2CHandler = GamerSplitItemS2CHandler;
},{}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerSubChatChannelS2CHandler = function (msg) {
};
exports.GamerSubChatChannelS2CHandler = GamerSubChatChannelS2CHandler;
},{}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerTestChatS2CHandler = function (msg) {
};
exports.GamerTestChatS2CHandler = GamerTestChatS2CHandler;
},{}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerUploadWXInfoS2CHandler = function (msg) {
};
exports.GamerUploadWXInfoS2CHandler = GamerUploadWXInfoS2CHandler;
},{}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerUseItemS2CHandler = function (msg) {
};
exports.GamerUseItemS2CHandler = GamerUseItemS2CHandler;
},{}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerWorldChatS2CHandler = function (msg) {
};
exports.GamerWorldChatS2CHandler = GamerWorldChatS2CHandler;
},{}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GetActivityRewardS2CHandler = function (msg) {
};
exports.GetActivityRewardS2CHandler = GetActivityRewardS2CHandler;
},{}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamerLoginS2CHandler_1 = require("./GamerLoginS2CHandler");
var GamerLoginGetDataS2CHandler_1 = require("./GamerLoginGetDataS2CHandler");
var ServerTimeS2CHandler_1 = require("./ServerTimeS2CHandler");
var GamerNotifyLoginOtherS2CHandler_1 = require("./GamerNotifyLoginOtherS2CHandler");
var GamerSubChatChannelS2CHandler_1 = require("./GamerSubChatChannelS2CHandler");
var GamerNotifyExpLevelS2CHandler_1 = require("./GamerNotifyExpLevelS2CHandler");
var GamerFriendChatS2CHandler_1 = require("./GamerFriendChatS2CHandler");
var GamerWorldChatS2CHandler_1 = require("./GamerWorldChatS2CHandler");
var GamerTestChatS2CHandler_1 = require("./GamerTestChatS2CHandler");
var GamerClubRequestS2CHandler_1 = require("./GamerClubRequestS2CHandler");
var GamerNotifyNewChatS2CHandler_1 = require("./GamerNotifyNewChatS2CHandler");
var GamerNewFriendReqS2CHandler_1 = require("./GamerNewFriendReqS2CHandler");
var GamerNotifyNewFriendReqS2CHandler_1 = require("./GamerNotifyNewFriendReqS2CHandler");
var GamerProcessFriendReqS2CHandler_1 = require("./GamerProcessFriendReqS2CHandler");
var GamerNotifyNewFriendS2CHandler_1 = require("./GamerNotifyNewFriendS2CHandler");
var GamerNotifyMailS2CHandler_1 = require("./GamerNotifyMailS2CHandler");
var GamerNotifyNewMailS2CHandler_1 = require("./GamerNotifyNewMailS2CHandler");
var GamerGetMailS2CHandler_1 = require("./GamerGetMailS2CHandler");
var GamerDelMailS2CHandler_1 = require("./GamerDelMailS2CHandler");
var GamerDelHaveReadMailS2CHandler_1 = require("./GamerDelHaveReadMailS2CHandler");
var GamerOneKeyRcvMailRewardS2CHandler_1 = require("./GamerOneKeyRcvMailRewardS2CHandler");
var GamerChangeMailStateS2CHandler_1 = require("./GamerChangeMailStateS2CHandler");
var GamerMatchS2CHandler_1 = require("./GamerMatchS2CHandler");
var GamerNotifyMatchInfoS2CHandler_1 = require("./GamerNotifyMatchInfoS2CHandler");
var GamerPVPSyncS2CHandler_1 = require("./GamerPVPSyncS2CHandler");
var GamerNotifyPVPSyncS2CHandler_1 = require("./GamerNotifyPVPSyncS2CHandler");
var GamerNotifyNewPVPResultS2CHandler_1 = require("./GamerNotifyNewPVPResultS2CHandler");
var GamerNotifyIconChangeS2CHandler_1 = require("./GamerNotifyIconChangeS2CHandler");
var GamerGetRealTimeRankS2CHandler_1 = require("./GamerGetRealTimeRankS2CHandler");
var GamerCheckPVPBattleS2CHandler_1 = require("./GamerCheckPVPBattleS2CHandler");
var GamerUploadWXInfoS2CHandler_1 = require("./GamerUploadWXInfoS2CHandler");
var CreateLeagueS2CHandler_1 = require("./CreateLeagueS2CHandler");
var GamerNotifyLeagueDataS2CHandler_1 = require("./GamerNotifyLeagueDataS2CHandler");
var GamerNotifyLeagueGamerOnlineS2CHandler_1 = require("./GamerNotifyLeagueGamerOnlineS2CHandler");
var GamerGetBackpackS2CHandler_1 = require("./GamerGetBackpackS2CHandler");
var GamerNotifyItemS2CHandler_1 = require("./GamerNotifyItemS2CHandler");
var GamerSellItemS2CHandler_1 = require("./GamerSellItemS2CHandler");
var GamerUseItemS2CHandler_1 = require("./GamerUseItemS2CHandler");
var GamerCompoundItemS2CHandler_1 = require("./GamerCompoundItemS2CHandler");
var GamerSplitItemS2CHandler_1 = require("./GamerSplitItemS2CHandler");
var GamerNotifyItemChangeS2CHandler_1 = require("./GamerNotifyItemChangeS2CHandler");
var GMS2CHandler_1 = require("./GMS2CHandler");
var GamerNotifyGashaponInfoS2CHandler_1 = require("./GamerNotifyGashaponInfoS2CHandler");
var GamerExtractGashaponS2CHandler_1 = require("./GamerExtractGashaponS2CHandler");
var GamerNotifyActivitiesS2CHandler_1 = require("./GamerNotifyActivitiesS2CHandler");
var GetActivityRewardS2CHandler_1 = require("./GetActivityRewardS2CHandler");
var ProtoHandlerList = /** @class */ (function () {
    function ProtoHandlerList() {
        this.GamerLoginS2C = GamerLoginS2CHandler_1.GamerLoginS2CHandler;
        this.GamerLoginGetDataS2C = GamerLoginGetDataS2CHandler_1.GamerLoginGetDataS2CHandler;
        this.ServerTimeS2C = ServerTimeS2CHandler_1.ServerTimeS2CHandler;
        this.GamerNotifyLoginOtherS2C = GamerNotifyLoginOtherS2CHandler_1.GamerNotifyLoginOtherS2CHandler;
        this.GamerSubChatChannelS2C = GamerSubChatChannelS2CHandler_1.GamerSubChatChannelS2CHandler;
        this.GamerNotifyExpLevelS2C = GamerNotifyExpLevelS2CHandler_1.GamerNotifyExpLevelS2CHandler;
        this.GamerFriendChatS2C = GamerFriendChatS2CHandler_1.GamerFriendChatS2CHandler;
        this.GamerWorldChatS2C = GamerWorldChatS2CHandler_1.GamerWorldChatS2CHandler;
        this.GamerTestChatS2C = GamerTestChatS2CHandler_1.GamerTestChatS2CHandler;
        this.GamerClubRequestS2C = GamerClubRequestS2CHandler_1.GamerClubRequestS2CHandler;
        this.GamerNotifyNewChatS2C = GamerNotifyNewChatS2CHandler_1.GamerNotifyNewChatS2CHandler;
        this.GamerNewFriendReqS2C = GamerNewFriendReqS2CHandler_1.GamerNewFriendReqS2CHandler;
        this.GamerNotifyNewFriendReqS2C = GamerNotifyNewFriendReqS2CHandler_1.GamerNotifyNewFriendReqS2CHandler;
        this.GamerProcessFriendReqS2C = GamerProcessFriendReqS2CHandler_1.GamerProcessFriendReqS2CHandler;
        this.GamerNotifyNewFriendS2C = GamerNotifyNewFriendS2CHandler_1.GamerNotifyNewFriendS2CHandler;
        this.GamerNotifyMailS2C = GamerNotifyMailS2CHandler_1.GamerNotifyMailS2CHandler;
        this.GamerNotifyNewMailS2C = GamerNotifyNewMailS2CHandler_1.GamerNotifyNewMailS2CHandler;
        this.GamerGetMailS2C = GamerGetMailS2CHandler_1.GamerGetMailS2CHandler;
        this.GamerDelMailS2C = GamerDelMailS2CHandler_1.GamerDelMailS2CHandler;
        this.GamerDelHaveReadMailS2C = GamerDelHaveReadMailS2CHandler_1.GamerDelHaveReadMailS2CHandler;
        this.GamerOneKeyRcvMailRewardS2C = GamerOneKeyRcvMailRewardS2CHandler_1.GamerOneKeyRcvMailRewardS2CHandler;
        this.GamerChangeMailStateS2C = GamerChangeMailStateS2CHandler_1.GamerChangeMailStateS2CHandler;
        this.GamerMatchS2C = GamerMatchS2CHandler_1.GamerMatchS2CHandler;
        this.GamerNotifyMatchInfoS2C = GamerNotifyMatchInfoS2CHandler_1.GamerNotifyMatchInfoS2CHandler;
        this.GamerPVPSyncS2C = GamerPVPSyncS2CHandler_1.GamerPVPSyncS2CHandler;
        this.GamerNotifyPVPSyncS2C = GamerNotifyPVPSyncS2CHandler_1.GamerNotifyPVPSyncS2CHandler;
        this.GamerNotifyNewPVPResultS2C = GamerNotifyNewPVPResultS2CHandler_1.GamerNotifyNewPVPResultS2CHandler;
        this.GamerNotifyIconChangeS2C = GamerNotifyIconChangeS2CHandler_1.GamerNotifyIconChangeS2CHandler;
        this.GamerGetRealTimeRankS2C = GamerGetRealTimeRankS2CHandler_1.GamerGetRealTimeRankS2CHandler;
        this.GamerCheckPVPBattleS2C = GamerCheckPVPBattleS2CHandler_1.GamerCheckPVPBattleS2CHandler;
        this.GamerUploadWXInfoS2C = GamerUploadWXInfoS2CHandler_1.GamerUploadWXInfoS2CHandler;
        this.CreateLeagueS2C = CreateLeagueS2CHandler_1.CreateLeagueS2CHandler;
        this.GamerNotifyLeagueDataS2C = GamerNotifyLeagueDataS2CHandler_1.GamerNotifyLeagueDataS2CHandler;
        this.GamerNotifyLeagueGamerOnlineS2C = GamerNotifyLeagueGamerOnlineS2CHandler_1.GamerNotifyLeagueGamerOnlineS2CHandler;
        this.GamerGetBackpackS2C = GamerGetBackpackS2CHandler_1.GamerGetBackpackS2CHandler;
        this.GamerNotifyItemS2C = GamerNotifyItemS2CHandler_1.GamerNotifyItemS2CHandler;
        this.GamerSellItemS2C = GamerSellItemS2CHandler_1.GamerSellItemS2CHandler;
        this.GamerUseItemS2C = GamerUseItemS2CHandler_1.GamerUseItemS2CHandler;
        this.GamerCompoundItemS2C = GamerCompoundItemS2CHandler_1.GamerCompoundItemS2CHandler;
        this.GamerSplitItemS2C = GamerSplitItemS2CHandler_1.GamerSplitItemS2CHandler;
        this.GamerNotifyItemChangeS2C = GamerNotifyItemChangeS2CHandler_1.GamerNotifyItemChangeS2CHandler;
        this.GMS2C = GMS2CHandler_1.GMS2CHandler;
        this.GamerNotifyGashaponInfoS2C = GamerNotifyGashaponInfoS2CHandler_1.GamerNotifyGashaponInfoS2CHandler;
        this.GamerExtractGashaponS2C = GamerExtractGashaponS2CHandler_1.GamerExtractGashaponS2CHandler;
        this.GamerNotifyActivitiesS2C = GamerNotifyActivitiesS2CHandler_1.GamerNotifyActivitiesS2CHandler;
        this.GetActivityRewardS2C = GetActivityRewardS2CHandler_1.GetActivityRewardS2CHandler;
    }
    ProtoHandlerList.prototype.init = function () {
        this.GamerLoginS2C.bind(this);
        this.GamerLoginGetDataS2C.bind(this);
        this.ServerTimeS2C.bind(this);
        this.GamerNotifyLoginOtherS2C.bind(this);
        this.GamerSubChatChannelS2C.bind(this);
        this.GamerNotifyExpLevelS2C.bind(this);
        this.GamerFriendChatS2C.bind(this);
        this.GamerWorldChatS2C.bind(this);
        this.GamerTestChatS2C.bind(this);
        this.GamerClubRequestS2C.bind(this);
        this.GamerNotifyNewChatS2C.bind(this);
        this.GamerNewFriendReqS2C.bind(this);
        this.GamerNotifyNewFriendReqS2C.bind(this);
        this.GamerProcessFriendReqS2C.bind(this);
        this.GamerNotifyNewFriendS2C.bind(this);
        this.GamerNotifyMailS2C.bind(this);
        this.GamerNotifyNewMailS2C.bind(this);
        this.GamerGetMailS2C.bind(this);
        this.GamerDelMailS2C.bind(this);
        this.GamerDelHaveReadMailS2C.bind(this);
        this.GamerOneKeyRcvMailRewardS2C.bind(this);
        this.GamerChangeMailStateS2C.bind(this);
        this.GamerMatchS2C.bind(this);
        this.GamerNotifyMatchInfoS2C.bind(this);
        this.GamerPVPSyncS2C.bind(this);
        this.GamerNotifyPVPSyncS2C.bind(this);
        this.GamerNotifyNewPVPResultS2C.bind(this);
        this.GamerNotifyIconChangeS2C.bind(this);
        this.GamerGetRealTimeRankS2C.bind(this);
        this.GamerCheckPVPBattleS2C.bind(this);
        this.GamerUploadWXInfoS2C.bind(this);
        this.CreateLeagueS2C.bind(this);
        this.GamerNotifyLeagueDataS2C.bind(this);
        this.GamerNotifyLeagueGamerOnlineS2C.bind(this);
        this.GamerGetBackpackS2C.bind(this);
        this.GamerNotifyItemS2C.bind(this);
        this.GamerSellItemS2C.bind(this);
        this.GamerUseItemS2C.bind(this);
        this.GamerCompoundItemS2C.bind(this);
        this.GamerSplitItemS2C.bind(this);
        this.GamerNotifyItemChangeS2C.bind(this);
        this.GMS2C.bind(this);
        this.GamerNotifyGashaponInfoS2C.bind(this);
        this.GamerExtractGashaponS2C.bind(this);
        this.GamerNotifyActivitiesS2C.bind(this);
        this.GetActivityRewardS2C.bind(this);
    };
    return ProtoHandlerList;
}());
exports.default = ProtoHandlerList;
},{"./CreateLeagueS2CHandler":3,"./GMS2CHandler":4,"./GamerChangeMailStateS2CHandler":5,"./GamerCheckPVPBattleS2CHandler":6,"./GamerClubRequestS2CHandler":7,"./GamerCompoundItemS2CHandler":8,"./GamerDelHaveReadMailS2CHandler":9,"./GamerDelMailS2CHandler":10,"./GamerExtractGashaponS2CHandler":11,"./GamerFriendChatS2CHandler":12,"./GamerGetBackpackS2CHandler":13,"./GamerGetMailS2CHandler":14,"./GamerGetRealTimeRankS2CHandler":15,"./GamerLoginGetDataS2CHandler":16,"./GamerLoginS2CHandler":17,"./GamerMatchS2CHandler":18,"./GamerNewFriendReqS2CHandler":19,"./GamerNotifyActivitiesS2CHandler":20,"./GamerNotifyExpLevelS2CHandler":21,"./GamerNotifyGashaponInfoS2CHandler":22,"./GamerNotifyIconChangeS2CHandler":23,"./GamerNotifyItemChangeS2CHandler":24,"./GamerNotifyItemS2CHandler":25,"./GamerNotifyLeagueDataS2CHandler":26,"./GamerNotifyLeagueGamerOnlineS2CHandler":27,"./GamerNotifyLoginOtherS2CHandler":28,"./GamerNotifyMailS2CHandler":29,"./GamerNotifyMatchInfoS2CHandler":30,"./GamerNotifyNewChatS2CHandler":31,"./GamerNotifyNewFriendReqS2CHandler":32,"./GamerNotifyNewFriendS2CHandler":33,"./GamerNotifyNewMailS2CHandler":34,"./GamerNotifyNewPVPResultS2CHandler":35,"./GamerNotifyPVPSyncS2CHandler":36,"./GamerOneKeyRcvMailRewardS2CHandler":37,"./GamerPVPSyncS2CHandler":38,"./GamerProcessFriendReqS2CHandler":39,"./GamerSellItemS2CHandler":40,"./GamerSplitItemS2CHandler":41,"./GamerSubChatChannelS2CHandler":42,"./GamerTestChatS2CHandler":43,"./GamerUploadWXInfoS2CHandler":44,"./GamerUseItemS2CHandler":45,"./GamerWorldChatS2CHandler":46,"./GetActivityRewardS2CHandler":47,"./ServerTimeS2CHandler":49}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var ServerTimeS2CHandler = function (msg) {
    if (msg.error)
        return;
    if (!msg.time)
        return;
    // console.log("ServerTimeS2CHandler msg.time：");
    // console.info(msg.time);
    Game_1.default.time.settingServerTime(msg.time.timestamp, msg.time.timezone);
};
exports.ServerTimeS2CHandler = ServerTimeS2CHandler;
},{"../../Game":546}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AntNet = /** @class */ (function () {
    function AntNet() {
    }
    Object.defineProperty(AntNet, "onError", {
        get: function () {
            return net.logic.onError;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "onConnect", {
        get: function () {
            return net.logic.onConnect;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "onClose", {
        get: function () {
            return net.logic.onClose;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "onReconnect", {
        get: function () {
            return net.logic.onReconnect;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "logicPing", {
        get: function () {
            return net.logic.ping;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.GamerLoginC2S = function (session, addr) {
        net.logic.gamerLoginC2S(session, addr);
    };
    Object.defineProperty(AntNet, "gamerLoginS2C", {
        get: function () {
            return net.logic.gamerLoginS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerLoginC2S = function (session, addr) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerLoginS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerLoginS2C.on(fun);
                        AntNet.GamerLoginC2S(session, addr);
                    })];
            });
        });
    };
    AntNet.GamerLoginGetDataC2S = function () {
        net.logic.gamerLoginGetDataC2S();
    };
    Object.defineProperty(AntNet, "gamerLoginGetDataS2C", {
        get: function () {
            return net.logic.gamerLoginGetDataS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerLoginGetDataC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerLoginGetDataS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerLoginGetDataS2C.on(fun);
                        AntNet.GamerLoginGetDataC2S();
                    })];
            });
        });
    };
    AntNet.ServerTimeC2S = function () {
        net.logic.serverTimeC2S();
    };
    Object.defineProperty(AntNet, "serverTimeS2C", {
        get: function () {
            return net.logic.serverTimeS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncServerTimeC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.serverTimeS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.serverTimeS2C.on(fun);
                        AntNet.ServerTimeC2S();
                    })];
            });
        });
    };
    AntNet.GamerSubChatChannelC2S = function (channel, open) {
        net.logic.gamerSubChatChannelC2S(channel, open);
    };
    Object.defineProperty(AntNet, "gamerSubChatChannelS2C", {
        get: function () {
            return net.logic.gamerSubChatChannelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerSubChatChannelC2S = function (channel, open) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerSubChatChannelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerSubChatChannelS2C.on(fun);
                        AntNet.GamerSubChatChannelC2S(channel, open);
                    })];
            });
        });
    };
    AntNet.GamerFriendChatC2S = function (toId, msg) {
        net.logic.gamerFriendChatC2S(toId, msg);
    };
    Object.defineProperty(AntNet, "gamerFriendChatS2C", {
        get: function () {
            return net.logic.gamerFriendChatS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerFriendChatC2S = function (toId, msg) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerFriendChatS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerFriendChatS2C.on(fun);
                        AntNet.GamerFriendChatC2S(toId, msg);
                    })];
            });
        });
    };
    AntNet.GamerWorldChatC2S = function (server, msg) {
        net.logic.gamerWorldChatC2S(server, msg);
    };
    Object.defineProperty(AntNet, "gamerWorldChatS2C", {
        get: function () {
            return net.logic.gamerWorldChatS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerWorldChatC2S = function (server, msg) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerWorldChatS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerWorldChatS2C.on(fun);
                        AntNet.GamerWorldChatC2S(server, msg);
                    })];
            });
        });
    };
    AntNet.GamerTestChatC2S = function (toId, msg) {
        net.logic.gamerTestChatC2S(toId, msg);
    };
    Object.defineProperty(AntNet, "gamerTestChatS2C", {
        get: function () {
            return net.logic.gamerTestChatS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerTestChatC2S = function (toId, msg) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerTestChatS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerTestChatS2C.on(fun);
                        AntNet.GamerTestChatC2S(toId, msg);
                    })];
            });
        });
    };
    AntNet.GamerClubRequestC2S = function (clubId, msg) {
        net.logic.gamerClubRequestC2S(clubId, msg);
    };
    Object.defineProperty(AntNet, "gamerClubRequestS2C", {
        get: function () {
            return net.logic.gamerClubRequestS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerClubRequestC2S = function (clubId, msg) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerClubRequestS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerClubRequestS2C.on(fun);
                        AntNet.GamerClubRequestC2S(clubId, msg);
                    })];
            });
        });
    };
    AntNet.GamerNewFriendReqC2S = function (oid, msg) {
        net.logic.gamerNewFriendReqC2S(oid, msg);
    };
    Object.defineProperty(AntNet, "gamerNewFriendReqS2C", {
        get: function () {
            return net.logic.gamerNewFriendReqS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerNewFriendReqC2S = function (oid, msg) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerNewFriendReqS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerNewFriendReqS2C.on(fun);
                        AntNet.GamerNewFriendReqC2S(oid, msg);
                    })];
            });
        });
    };
    AntNet.GamerProcessFriendReqC2S = function (oid, result) {
        net.logic.gamerProcessFriendReqC2S(oid, result);
    };
    Object.defineProperty(AntNet, "gamerProcessFriendReqS2C", {
        get: function () {
            return net.logic.gamerProcessFriendReqS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerProcessFriendReqC2S = function (oid, result) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerProcessFriendReqS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerProcessFriendReqS2C.on(fun);
                        AntNet.GamerProcessFriendReqC2S(oid, result);
                    })];
            });
        });
    };
    AntNet.GamerGetMailC2S = function () {
        net.logic.gamerGetMailC2S();
    };
    Object.defineProperty(AntNet, "gamerGetMailS2C", {
        get: function () {
            return net.logic.gamerGetMailS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetMailC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetMailS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetMailS2C.on(fun);
                        AntNet.GamerGetMailC2S();
                    })];
            });
        });
    };
    AntNet.GamerDelMailC2S = function (mailId) {
        net.logic.gamerDelMailC2S(mailId);
    };
    Object.defineProperty(AntNet, "gamerDelMailS2C", {
        get: function () {
            return net.logic.gamerDelMailS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerDelMailC2S = function (mailId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerDelMailS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerDelMailS2C.on(fun);
                        AntNet.GamerDelMailC2S(mailId);
                    })];
            });
        });
    };
    AntNet.GamerDelHaveReadMailC2S = function () {
        net.logic.gamerDelHaveReadMailC2S();
    };
    Object.defineProperty(AntNet, "gamerDelHaveReadMailS2C", {
        get: function () {
            return net.logic.gamerDelHaveReadMailS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerDelHaveReadMailC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerDelHaveReadMailS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerDelHaveReadMailS2C.on(fun);
                        AntNet.GamerDelHaveReadMailC2S();
                    })];
            });
        });
    };
    AntNet.GamerOneKeyRcvMailRewardC2S = function () {
        net.logic.gamerOneKeyRcvMailRewardC2S();
    };
    Object.defineProperty(AntNet, "gamerOneKeyRcvMailRewardS2C", {
        get: function () {
            return net.logic.gamerOneKeyRcvMailRewardS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerOneKeyRcvMailRewardC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerOneKeyRcvMailRewardS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerOneKeyRcvMailRewardS2C.on(fun);
                        AntNet.GamerOneKeyRcvMailRewardC2S();
                    })];
            });
        });
    };
    AntNet.GamerChangeMailStateC2S = function (mailId, state) {
        net.logic.gamerChangeMailStateC2S(mailId, state);
    };
    Object.defineProperty(AntNet, "gamerChangeMailStateS2C", {
        get: function () {
            return net.logic.gamerChangeMailStateS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerChangeMailStateC2S = function (mailId, state) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerChangeMailStateS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerChangeMailStateS2C.on(fun);
                        AntNet.GamerChangeMailStateC2S(mailId, state);
                    })];
            });
        });
    };
    AntNet.GamerMatchC2S = function (type) {
        net.logic.gamerMatchC2S(type);
    };
    Object.defineProperty(AntNet, "gamerMatchS2C", {
        get: function () {
            return net.logic.gamerMatchS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerMatchC2S = function (type) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerMatchS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerMatchS2C.on(fun);
                        AntNet.GamerMatchC2S(type);
                    })];
            });
        });
    };
    AntNet.GamerPVPSyncC2S = function (session, input, needFrames, crc, agents, reconn, index, addr, result) {
        net.logic.gamerPVPSyncC2S(session, input, needFrames, crc, agents, reconn, index, addr, result);
    };
    Object.defineProperty(AntNet, "gamerPVPSyncS2C", {
        get: function () {
            return net.logic.gamerPVPSyncS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerPVPSyncC2S = function (session, input, needFrames, crc, agents, reconn, index, addr, result) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerPVPSyncS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerPVPSyncS2C.on(fun);
                        AntNet.GamerPVPSyncC2S(session, input, needFrames, crc, agents, reconn, index, addr, result);
                    })];
            });
        });
    };
    AntNet.GamerGetRealTimeRankC2S = function () {
        net.logic.gamerGetRealTimeRankC2S();
    };
    Object.defineProperty(AntNet, "gamerGetRealTimeRankS2C", {
        get: function () {
            return net.logic.gamerGetRealTimeRankS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetRealTimeRankC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetRealTimeRankS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetRealTimeRankS2C.on(fun);
                        AntNet.GamerGetRealTimeRankC2S();
                    })];
            });
        });
    };
    AntNet.GamerCheckPVPBattleC2S = function (session) {
        net.logic.gamerCheckPVPBattleC2S(session);
    };
    Object.defineProperty(AntNet, "gamerCheckPVPBattleS2C", {
        get: function () {
            return net.logic.gamerCheckPVPBattleS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerCheckPVPBattleC2S = function (session) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerCheckPVPBattleS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerCheckPVPBattleS2C.on(fun);
                        AntNet.GamerCheckPVPBattleC2S(session);
                    })];
            });
        });
    };
    AntNet.GamerUploadWXInfoC2S = function (wxInfo) {
        net.logic.gamerUploadWXInfoC2S(wxInfo);
    };
    Object.defineProperty(AntNet, "gamerUploadWXInfoS2C", {
        get: function () {
            return net.logic.gamerUploadWXInfoS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerUploadWXInfoC2S = function (wxInfo) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerUploadWXInfoS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerUploadWXInfoS2C.on(fun);
                        AntNet.GamerUploadWXInfoC2S(wxInfo);
                    })];
            });
        });
    };
    AntNet.CreateLeagueC2S = function (name, declaration) {
        net.logic.createLeagueC2S(name, declaration);
    };
    Object.defineProperty(AntNet, "createLeagueS2C", {
        get: function () {
            return net.logic.createLeagueS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncCreateLeagueC2S = function (name, declaration) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.createLeagueS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.createLeagueS2C.on(fun);
                        AntNet.CreateLeagueC2S(name, declaration);
                    })];
            });
        });
    };
    AntNet.GamerGetBackpackC2S = function () {
        net.logic.gamerGetBackpackC2S();
    };
    Object.defineProperty(AntNet, "gamerGetBackpackS2C", {
        get: function () {
            return net.logic.gamerGetBackpackS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetBackpackC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetBackpackS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetBackpackS2C.on(fun);
                        AntNet.GamerGetBackpackC2S();
                    })];
            });
        });
    };
    AntNet.GamerSellItemC2S = function (itemId, num) {
        net.logic.gamerSellItemC2S(itemId, num);
    };
    Object.defineProperty(AntNet, "gamerSellItemS2C", {
        get: function () {
            return net.logic.gamerSellItemS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerSellItemC2S = function (itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerSellItemS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerSellItemS2C.on(fun);
                        AntNet.GamerSellItemC2S(itemId, num);
                    })];
            });
        });
    };
    AntNet.GamerUseItemC2S = function (itemId, num) {
        net.logic.gamerUseItemC2S(itemId, num);
    };
    Object.defineProperty(AntNet, "gamerUseItemS2C", {
        get: function () {
            return net.logic.gamerUseItemS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerUseItemC2S = function (itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerUseItemS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerUseItemS2C.on(fun);
                        AntNet.GamerUseItemC2S(itemId, num);
                    })];
            });
        });
    };
    AntNet.GamerCompoundItemC2S = function (itemId, num) {
        net.logic.gamerCompoundItemC2S(itemId, num);
    };
    Object.defineProperty(AntNet, "gamerCompoundItemS2C", {
        get: function () {
            return net.logic.gamerCompoundItemS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerCompoundItemC2S = function (itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerCompoundItemS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerCompoundItemS2C.on(fun);
                        AntNet.GamerCompoundItemC2S(itemId, num);
                    })];
            });
        });
    };
    AntNet.GamerSplitItemC2S = function (itemId, num) {
        net.logic.gamerSplitItemC2S(itemId, num);
    };
    Object.defineProperty(AntNet, "gamerSplitItemS2C", {
        get: function () {
            return net.logic.gamerSplitItemS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerSplitItemC2S = function (itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerSplitItemS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerSplitItemS2C.on(fun);
                        AntNet.GamerSplitItemC2S(itemId, num);
                    })];
            });
        });
    };
    AntNet.GamerGetActorListC2S = function () {
        net.logic.gamerGetActorListC2S();
    };
    Object.defineProperty(AntNet, "gamerGetActorListS2C", {
        get: function () {
            return net.logic.gamerGetActorListS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetActorListC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetActorListS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetActorListS2C.on(fun);
                        AntNet.GamerGetActorListC2S();
                    })];
            });
        });
    };
    AntNet.GamerChangeActorNameC2S = function (actorId, name) {
        net.logic.gamerChangeActorNameC2S(actorId, name);
    };
    Object.defineProperty(AntNet, "gamerChangeActorNameS2C", {
        get: function () {
            return net.logic.gamerChangeActorNameS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerChangeActorNameC2S = function (actorId, name) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerChangeActorNameS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerChangeActorNameS2C.on(fun);
                        AntNet.GamerChangeActorNameC2S(actorId, name);
                    })];
            });
        });
    };
    AntNet.GamerActorUpLevelC2S = function (actorId) {
        net.logic.gamerActorUpLevelC2S(actorId);
    };
    Object.defineProperty(AntNet, "gamerActorUpLevelS2C", {
        get: function () {
            return net.logic.gamerActorUpLevelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorUpLevelC2S = function (actorId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorUpLevelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorUpLevelS2C.on(fun);
                        AntNet.GamerActorUpLevelC2S(actorId);
                    })];
            });
        });
    };
    AntNet.GamerGetActorSetListC2S = function () {
        net.logic.gamerGetActorSetListC2S();
    };
    Object.defineProperty(AntNet, "gamerGetActorSetListS2C", {
        get: function () {
            return net.logic.gamerGetActorSetListS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetActorSetListC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetActorSetListS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetActorSetListS2C.on(fun);
                        AntNet.GamerGetActorSetListC2S();
                    })];
            });
        });
    };
    AntNet.GamerGetActorSetRewardC2S = function (actorSetId) {
        net.logic.gamerGetActorSetRewardC2S(actorSetId);
    };
    Object.defineProperty(AntNet, "gamerGetActorSetRewardS2C", {
        get: function () {
            return net.logic.gamerGetActorSetRewardS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetActorSetRewardC2S = function (actorSetId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetActorSetRewardS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetActorSetRewardS2C.on(fun);
                        AntNet.GamerGetActorSetRewardC2S(actorSetId);
                    })];
            });
        });
    };
    AntNet.GamerActorSendGiftC2S = function (actorId, giftId, giftNum) {
        net.logic.gamerActorSendGiftC2S(actorId, giftId, giftNum);
    };
    Object.defineProperty(AntNet, "gamerActorSendGiftS2C", {
        get: function () {
            return net.logic.gamerActorSendGiftS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorSendGiftC2S = function (actorId, giftId, giftNum) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorSendGiftS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorSendGiftS2C.on(fun);
                        AntNet.GamerActorSendGiftC2S(actorId, giftId, giftNum);
                    })];
            });
        });
    };
    AntNet.GamerActorLabelUpLevelC2S = function (actorId, labelId, itemId, itemNum) {
        net.logic.gamerActorLabelUpLevelC2S(actorId, labelId, itemId, itemNum);
    };
    Object.defineProperty(AntNet, "gamerActorLabelUpLevelS2C", {
        get: function () {
            return net.logic.gamerActorLabelUpLevelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorLabelUpLevelC2S = function (actorId, labelId, itemId, itemNum) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorLabelUpLevelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorLabelUpLevelS2C.on(fun);
                        AntNet.GamerActorLabelUpLevelC2S(actorId, labelId, itemId, itemNum);
                    })];
            });
        });
    };
    AntNet.GamerActorOpenNewLabelC2S = function (actorId, slotId, labelId) {
        net.logic.gamerActorOpenNewLabelC2S(actorId, slotId, labelId);
    };
    Object.defineProperty(AntNet, "gamerActorOpenNewLabelS2C", {
        get: function () {
            return net.logic.gamerActorOpenNewLabelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorOpenNewLabelC2S = function (actorId, slotId, labelId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorOpenNewLabelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorOpenNewLabelS2C.on(fun);
                        AntNet.GamerActorOpenNewLabelC2S(actorId, slotId, labelId);
                    })];
            });
        });
    };
    AntNet.GamerActorBuyNewLabelC2S = function (actorId, labelId) {
        net.logic.gamerActorBuyNewLabelC2S(actorId, labelId);
    };
    Object.defineProperty(AntNet, "gamerActorBuyNewLabelS2C", {
        get: function () {
            return net.logic.gamerActorBuyNewLabelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorBuyNewLabelC2S = function (actorId, labelId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorBuyNewLabelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorBuyNewLabelS2C.on(fun);
                        AntNet.GamerActorBuyNewLabelC2S(actorId, labelId);
                    })];
            });
        });
    };
    AntNet.GamerActorAdNewLabelC2S = function (actorId, labelId) {
        net.logic.gamerActorAdNewLabelC2S(actorId, labelId);
    };
    Object.defineProperty(AntNet, "gamerActorAdNewLabelS2C", {
        get: function () {
            return net.logic.gamerActorAdNewLabelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorAdNewLabelC2S = function (actorId, labelId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorAdNewLabelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorAdNewLabelS2C.on(fun);
                        AntNet.GamerActorAdNewLabelC2S(actorId, labelId);
                    })];
            });
        });
    };
    AntNet.GamerActorFriendshipUpLevelC2S = function (actorId, itemNum) {
        net.logic.gamerActorFriendshipUpLevelC2S(actorId, itemNum);
    };
    Object.defineProperty(AntNet, "gamerActorFriendshipUpLevelS2C", {
        get: function () {
            return net.logic.gamerActorFriendshipUpLevelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorFriendshipUpLevelC2S = function (actorId, itemNum) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorFriendshipUpLevelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorFriendshipUpLevelS2C.on(fun);
                        AntNet.GamerActorFriendshipUpLevelC2S(actorId, itemNum);
                    })];
            });
        });
    };
    AntNet.GamerActorFriendshipTaskReportC2S = function (actorId, taskId, progress, state) {
        net.logic.gamerActorFriendshipTaskReportC2S(actorId, taskId, progress, state);
    };
    Object.defineProperty(AntNet, "gamerActorFriendshipTaskReportS2C", {
        get: function () {
            return net.logic.gamerActorFriendshipTaskReportS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorFriendshipTaskReportC2S = function (actorId, taskId, progress, state) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorFriendshipTaskReportS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorFriendshipTaskReportS2C.on(fun);
                        AntNet.GamerActorFriendshipTaskReportC2S(actorId, taskId, progress, state);
                    })];
            });
        });
    };
    AntNet.GamerActorSkillUpLevelC2S = function (actorId, skillType) {
        net.logic.gamerActorSkillUpLevelC2S(actorId, skillType);
    };
    Object.defineProperty(AntNet, "gamerActorSkillUpLevelS2C", {
        get: function () {
            return net.logic.gamerActorSkillUpLevelS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerActorSkillUpLevelC2S = function (actorId, skillType) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerActorSkillUpLevelS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerActorSkillUpLevelS2C.on(fun);
                        AntNet.GamerActorSkillUpLevelC2S(actorId, skillType);
                    })];
            });
        });
    };
    AntNet.GMC2S = function (gm) {
        net.logic.gMC2S(gm);
    };
    Object.defineProperty(AntNet, "gMS2C", {
        get: function () {
            return net.logic.gMS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGMC2S = function (gm) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gMS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gMS2C.on(fun);
                        AntNet.GMC2S(gm);
                    })];
            });
        });
    };
    AntNet.StoryGiveLikeC2S = function (commentId, storyId) {
        net.logic.storyGiveLikeC2S(commentId, storyId);
    };
    Object.defineProperty(AntNet, "storyGiveLikeS2C", {
        get: function () {
            return net.logic.storyGiveLikeS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStoryGiveLikeC2S = function (commentId, storyId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.storyGiveLikeS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.storyGiveLikeS2C.on(fun);
                        AntNet.StoryGiveLikeC2S(commentId, storyId);
                    })];
            });
        });
    };
    AntNet.StoryCommentC2S = function (storyId, content) {
        net.logic.storyCommentC2S(storyId, content);
    };
    Object.defineProperty(AntNet, "storyCommentS2C", {
        get: function () {
            return net.logic.storyCommentS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStoryCommentC2S = function (storyId, content) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.storyCommentS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.storyCommentS2C.on(fun);
                        AntNet.StoryCommentC2S(storyId, content);
                    })];
            });
        });
    };
    AntNet.StoryReadCommentC2S = function (storyId) {
        net.logic.storyReadCommentC2S(storyId);
    };
    Object.defineProperty(AntNet, "storyReadCommentS2C", {
        get: function () {
            return net.logic.storyReadCommentS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStoryReadCommentC2S = function (storyId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.storyReadCommentS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.storyReadCommentS2C.on(fun);
                        AntNet.StoryReadCommentC2S(storyId);
                    })];
            });
        });
    };
    AntNet.StoryGetCommentC2S = function (storyId) {
        net.logic.storyGetCommentC2S(storyId);
    };
    Object.defineProperty(AntNet, "storyGetCommentS2C", {
        get: function () {
            return net.logic.storyGetCommentS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStoryGetCommentC2S = function (storyId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.storyGetCommentS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.storyGetCommentS2C.on(fun);
                        AntNet.StoryGetCommentC2S(storyId);
                    })];
            });
        });
    };
    AntNet.StoryChangeNameC2S = function (storyId, name) {
        net.logic.storyChangeNameC2S(storyId, name);
    };
    Object.defineProperty(AntNet, "storyChangeNameS2C", {
        get: function () {
            return net.logic.storyChangeNameS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStoryChangeNameC2S = function (storyId, name) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.storyChangeNameS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.storyChangeNameS2C.on(fun);
                        AntNet.StoryChangeNameC2S(storyId, name);
                    })];
            });
        });
    };
    AntNet.BuildLevelUpC2S = function (buildType) {
        net.logic.buildLevelUpC2S(buildType);
    };
    Object.defineProperty(AntNet, "buildLevelUpS2C", {
        get: function () {
            return net.logic.buildLevelUpS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncBuildLevelUpC2S = function (buildType) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.buildLevelUpS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.buildLevelUpS2C.on(fun);
                        AntNet.BuildLevelUpC2S(buildType);
                    })];
            });
        });
    };
    AntNet.BuildEndOfLevelUpC2S = function (buildType) {
        net.logic.buildEndOfLevelUpC2S(buildType);
    };
    Object.defineProperty(AntNet, "buildEndOfLevelUpS2C", {
        get: function () {
            return net.logic.buildEndOfLevelUpS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncBuildEndOfLevelUpC2S = function (buildType) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.buildEndOfLevelUpS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.buildEndOfLevelUpS2C.on(fun);
                        AntNet.BuildEndOfLevelUpC2S(buildType);
                    })];
            });
        });
    };
    AntNet.BuildBreakUpC2S = function (buildType) {
        net.logic.buildBreakUpC2S(buildType);
    };
    Object.defineProperty(AntNet, "buildBreakUpS2C", {
        get: function () {
            return net.logic.buildBreakUpS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncBuildBreakUpC2S = function (buildType) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.buildBreakUpS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.buildBreakUpS2C.on(fun);
                        AntNet.BuildBreakUpC2S(buildType);
                    })];
            });
        });
    };
    AntNet.BuildSpeedUpC2S = function (buildType, speedUpType) {
        net.logic.buildSpeedUpC2S(buildType, speedUpType);
    };
    Object.defineProperty(AntNet, "buildSpeedUpS2C", {
        get: function () {
            return net.logic.buildSpeedUpS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncBuildSpeedUpC2S = function (buildType, speedUpType) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.buildSpeedUpS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.buildSpeedUpS2C.on(fun);
                        AntNet.BuildSpeedUpC2S(buildType, speedUpType);
                    })];
            });
        });
    };
    AntNet.BuildGetProductC2S = function (buildType) {
        net.logic.buildGetProductC2S(buildType);
    };
    Object.defineProperty(AntNet, "buildGetProductS2C", {
        get: function () {
            return net.logic.buildGetProductS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncBuildGetProductC2S = function (buildType) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.buildGetProductS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.buildGetProductS2C.on(fun);
                        AntNet.BuildGetProductC2S(buildType);
                    })];
            });
        });
    };
    AntNet.ActorEnterBuildC2S = function (actorId, cellId) {
        net.logic.actorEnterBuildC2S(actorId, cellId);
    };
    Object.defineProperty(AntNet, "actorEnterBuildS2C", {
        get: function () {
            return net.logic.actorEnterBuildS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncActorEnterBuildC2S = function (actorId, cellId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.actorEnterBuildS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.actorEnterBuildS2C.on(fun);
                        AntNet.ActorEnterBuildC2S(actorId, cellId);
                    })];
            });
        });
    };
    AntNet.ActorLeaveBuildC2S = function (actorId) {
        net.logic.actorLeaveBuildC2S(actorId);
    };
    Object.defineProperty(AntNet, "actorLeaveBuildS2C", {
        get: function () {
            return net.logic.actorLeaveBuildS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncActorLeaveBuildC2S = function (actorId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.actorLeaveBuildS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.actorLeaveBuildS2C.on(fun);
                        AntNet.ActorLeaveBuildC2S(actorId);
                    })];
            });
        });
    };
    AntNet.GamerExtractGashaponC2S = function (gashaponId) {
        net.logic.gamerExtractGashaponC2S(gashaponId);
    };
    Object.defineProperty(AntNet, "gamerExtractGashaponS2C", {
        get: function () {
            return net.logic.gamerExtractGashaponS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerExtractGashaponC2S = function (gashaponId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerExtractGashaponS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerExtractGashaponS2C.on(fun);
                        AntNet.GamerExtractGashaponC2S(gashaponId);
                    })];
            });
        });
    };
    AntNet.StoryExtractGashaponC2S = function (gashaponId) {
        net.logic.storyExtractGashaponC2S(gashaponId);
    };
    Object.defineProperty(AntNet, "storyExtractGashaponS2C", {
        get: function () {
            return net.logic.storyExtractGashaponS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStoryExtractGashaponC2S = function (gashaponId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.storyExtractGashaponS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.storyExtractGashaponS2C.on(fun);
                        AntNet.StoryExtractGashaponC2S(gashaponId);
                    })];
            });
        });
    };
    AntNet.GamerGetAllowanceC2S = function (type) {
        net.logic.gamerGetAllowanceC2S(type);
    };
    Object.defineProperty(AntNet, "gamerGetAllowanceS2C", {
        get: function () {
            return net.logic.gamerGetAllowanceS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetAllowanceC2S = function (type) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetAllowanceS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetAllowanceS2C.on(fun);
                        AntNet.GamerGetAllowanceC2S(type);
                    })];
            });
        });
    };
    AntNet.GetStoryExtractInfoC2S = function (gashaponId) {
        net.logic.getStoryExtractInfoC2S(gashaponId);
    };
    Object.defineProperty(AntNet, "getStoryExtractInfoS2C", {
        get: function () {
            return net.logic.getStoryExtractInfoS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGetStoryExtractInfoC2S = function (gashaponId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.getStoryExtractInfoS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.getStoryExtractInfoS2C.on(fun);
                        AntNet.GetStoryExtractInfoC2S(gashaponId);
                    })];
            });
        });
    };
    AntNet.CleanStoryExtractCDC2S = function (gashaponId) {
        net.logic.cleanStoryExtractCDC2S(gashaponId);
    };
    Object.defineProperty(AntNet, "cleanStoryExtractCDS2C", {
        get: function () {
            return net.logic.cleanStoryExtractCDS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncCleanStoryExtractCDC2S = function (gashaponId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.cleanStoryExtractCDS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.cleanStoryExtractCDS2C.on(fun);
                        AntNet.CleanStoryExtractCDC2S(gashaponId);
                    })];
            });
        });
    };
    AntNet.PurchaseStoryExtractNumC2S = function (gashaponId) {
        net.logic.purchaseStoryExtractNumC2S(gashaponId);
    };
    Object.defineProperty(AntNet, "purchaseStoryExtractNumS2C", {
        get: function () {
            return net.logic.purchaseStoryExtractNumS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncPurchaseStoryExtractNumC2S = function (gashaponId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.purchaseStoryExtractNumS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.purchaseStoryExtractNumS2C.on(fun);
                        AntNet.PurchaseStoryExtractNumC2S(gashaponId);
                    })];
            });
        });
    };
    AntNet.GamerGetIntelligenceC2S = function () {
        net.logic.gamerGetIntelligenceC2S();
    };
    Object.defineProperty(AntNet, "gamerGetIntelligenceS2C", {
        get: function () {
            return net.logic.gamerGetIntelligenceS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerGetIntelligenceC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerGetIntelligenceS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerGetIntelligenceS2C.on(fun);
                        AntNet.GamerGetIntelligenceC2S();
                    })];
            });
        });
    };
    AntNet.GamerChangeIntelligenceStateC2S = function (intelligencesId) {
        net.logic.gamerChangeIntelligenceStateC2S(intelligencesId);
    };
    Object.defineProperty(AntNet, "gamerChangeIntelligenceStateS2C", {
        get: function () {
            return net.logic.gamerChangeIntelligenceStateS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerChangeIntelligenceStateC2S = function (intelligencesId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerChangeIntelligenceStateS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerChangeIntelligenceStateS2C.on(fun);
                        AntNet.GamerChangeIntelligenceStateC2S(intelligencesId);
                    })];
            });
        });
    };
    AntNet.GamerIntelligenceParseC2S = function (type, intelligencesId) {
        net.logic.gamerIntelligenceParseC2S(type, intelligencesId);
    };
    Object.defineProperty(AntNet, "gamerIntelligenceParseS2C", {
        get: function () {
            return net.logic.gamerIntelligenceParseS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGamerIntelligenceParseC2S = function (type, intelligencesId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.gamerIntelligenceParseS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.gamerIntelligenceParseS2C.on(fun);
                        AntNet.GamerIntelligenceParseC2S(type, intelligencesId);
                    })];
            });
        });
    };
    AntNet.StudioC2S = function () {
        net.logic.studioC2S();
    };
    Object.defineProperty(AntNet, "studioS2C", {
        get: function () {
            return net.logic.studioS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioS2C.on(fun);
                        AntNet.StudioC2S();
                    })];
            });
        });
    };
    AntNet.StudioStorySelectC2S = function (storyId, name) {
        net.logic.studioStorySelectC2S(storyId, name);
    };
    Object.defineProperty(AntNet, "studioStorySelectS2C", {
        get: function () {
            return net.logic.studioStorySelectS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioStorySelectC2S = function (storyId, name) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioStorySelectS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioStorySelectS2C.on(fun);
                        AntNet.StudioStorySelectC2S(storyId, name);
                    })];
            });
        });
    };
    AntNet.StudioActorSelectC2S = function (storyCharactersId, actorId) {
        net.logic.studioActorSelectC2S(storyCharactersId, actorId);
    };
    Object.defineProperty(AntNet, "studioActorSelectS2C", {
        get: function () {
            return net.logic.studioActorSelectS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioActorSelectC2S = function (storyCharactersId, actorId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioActorSelectS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioActorSelectS2C.on(fun);
                        AntNet.StudioActorSelectC2S(storyCharactersId, actorId);
                    })];
            });
        });
    };
    AntNet.StudioMatchingDisplayEndC2S = function () {
        net.logic.studioMatchingDisplayEndC2S();
    };
    Object.defineProperty(AntNet, "studioMatchingDisplayEndS2C", {
        get: function () {
            return net.logic.studioMatchingDisplayEndS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioMatchingDisplayEndC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioMatchingDisplayEndS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioMatchingDisplayEndS2C.on(fun);
                        AntNet.StudioMatchingDisplayEndC2S();
                    })];
            });
        });
    };
    AntNet.StudioEventOptionSelectC2S = function (eventOption) {
        net.logic.studioEventOptionSelectC2S(eventOption);
    };
    Object.defineProperty(AntNet, "studioEventOptionSelectS2C", {
        get: function () {
            return net.logic.studioEventOptionSelectS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioEventOptionSelectC2S = function (eventOption) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioEventOptionSelectS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioEventOptionSelectS2C.on(fun);
                        AntNet.StudioEventOptionSelectC2S(eventOption);
                    })];
            });
        });
    };
    AntNet.StudioStartC2S = function () {
        net.logic.studioStartC2S();
    };
    Object.defineProperty(AntNet, "studioStartS2C", {
        get: function () {
            return net.logic.studioStartS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioStartC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioStartS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioStartS2C.on(fun);
                        AntNet.StudioStartC2S();
                    })];
            });
        });
    };
    AntNet.StudioNextStepC2S = function (step) {
        net.logic.studioNextStepC2S(step);
    };
    Object.defineProperty(AntNet, "studioNextStepS2C", {
        get: function () {
            return net.logic.studioNextStepS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioNextStepC2S = function (step) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioNextStepS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioNextStepS2C.on(fun);
                        AntNet.StudioNextStepC2S(step);
                    })];
            });
        });
    };
    AntNet.StudioContinuedListC2S = function () {
        net.logic.studioContinuedListC2S();
    };
    Object.defineProperty(AntNet, "studioContinuedListS2C", {
        get: function () {
            return net.logic.studioContinuedListS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioContinuedListC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioContinuedListS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioContinuedListS2C.on(fun);
                        AntNet.StudioContinuedListC2S();
                    })];
            });
        });
    };
    AntNet.StudioContinuedReceiveC2S = function (uid) {
        net.logic.studioContinuedReceiveC2S(uid);
    };
    Object.defineProperty(AntNet, "studioContinuedReceiveS2C", {
        get: function () {
            return net.logic.studioContinuedReceiveS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioContinuedReceiveC2S = function (uid) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioContinuedReceiveS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioContinuedReceiveS2C.on(fun);
                        AntNet.StudioContinuedReceiveC2S(uid);
                    })];
            });
        });
    };
    AntNet.StudioContinuedReceiveAllC2S = function () {
        net.logic.studioContinuedReceiveAllC2S();
    };
    Object.defineProperty(AntNet, "studioContinuedReceiveAllS2C", {
        get: function () {
            return net.logic.studioContinuedReceiveAllS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncStudioContinuedReceiveAllC2S = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.studioContinuedReceiveAllS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.studioContinuedReceiveAllS2C.on(fun);
                        AntNet.StudioContinuedReceiveAllC2S();
                    })];
            });
        });
    };
    AntNet.GetActivityRewardC2S = function (activityId) {
        net.logic.getActivityRewardC2S(activityId);
    };
    Object.defineProperty(AntNet, "getActivityRewardS2C", {
        get: function () {
            return net.logic.getActivityRewardS2C;
        },
        enumerable: true,
        configurable: true
    });
    AntNet.AsyncGetActivityRewardC2S = function (activityId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var s2c = { error: 200 };
                        var timeObj = setTimeout(function () {
                            resolve(s2c);
                        }, 5000);
                        var fun = function (e) {
                            clearTimeout(timeObj);
                            AntNet.getActivityRewardS2C.off(fun);
                            resolve(e);
                        };
                        AntNet.getActivityRewardS2C.on(fun);
                        AntNet.GetActivityRewardC2S(activityId);
                    })];
            });
        });
    };
    Object.defineProperty(AntNet, "gamerNotifyLoginOtherS2C", {
        get: function () {
            return net.logic.gamerNotifyLoginOtherS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyExpLevelS2C", {
        get: function () {
            return net.logic.gamerNotifyExpLevelS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyNewChatS2C", {
        get: function () {
            return net.logic.gamerNotifyNewChatS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyNewFriendReqS2C", {
        get: function () {
            return net.logic.gamerNotifyNewFriendReqS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyNewFriendS2C", {
        get: function () {
            return net.logic.gamerNotifyNewFriendS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyMailS2C", {
        get: function () {
            return net.logic.gamerNotifyMailS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyNewMailS2C", {
        get: function () {
            return net.logic.gamerNotifyNewMailS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyMatchInfoS2C", {
        get: function () {
            return net.logic.gamerNotifyMatchInfoS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyPVPSyncS2C", {
        get: function () {
            return net.logic.gamerNotifyPVPSyncS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyNewPVPResultS2C", {
        get: function () {
            return net.logic.gamerNotifyNewPVPResultS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyIconChangeS2C", {
        get: function () {
            return net.logic.gamerNotifyIconChangeS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyLeagueDataS2C", {
        get: function () {
            return net.logic.gamerNotifyLeagueDataS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyLeagueGamerOnlineS2C", {
        get: function () {
            return net.logic.gamerNotifyLeagueGamerOnlineS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyItemS2C", {
        get: function () {
            return net.logic.gamerNotifyItemS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyItemChangeS2C", {
        get: function () {
            return net.logic.gamerNotifyItemChangeS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyActorChangeS2C", {
        get: function () {
            return net.logic.gamerNotifyActorChangeS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyActorSetChangeS2C", {
        get: function () {
            return net.logic.gamerNotifyActorSetChangeS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyStoryListS2C", {
        get: function () {
            return net.logic.gamerNotifyStoryListS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyBuildInfoS2C", {
        get: function () {
            return net.logic.gamerNotifyBuildInfoS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyGashaponInfoS2C", {
        get: function () {
            return net.logic.gamerNotifyGashaponInfoS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyIntelligenceS2C", {
        get: function () {
            return net.logic.gamerNotifyIntelligenceS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyStudioEventS2C", {
        get: function () {
            return net.logic.gamerNotifyStudioEventS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyStudioFirstRewardS2C", {
        get: function () {
            return net.logic.gamerNotifyStudioFirstRewardS2C;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntNet, "gamerNotifyActivitiesS2C", {
        get: function () {
            return net.logic.gamerNotifyActivitiesS2C;
        },
        enumerable: true,
        configurable: true
    });
    return AntNet;
}());
exports.default = AntNet;
},{}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AntFrame_1 = require("../AntFrame");
var AntPlatformBase_1 = require("./AntPlatformBase");
var AntPlatformBase_2 = require("./AntPlatformBase");
var AntPlatformMine = /** @class */ (function (_super) {
    __extends(AntPlatformMine, _super);
    function AntPlatformMine() {
        return _super.call(this) || this;
    }
    AntPlatformMine.prototype.Login = function (userName, password, server, roletype) {
        if (userName === void 0) { userName = null; }
        if (password === void 0) { password = ""; }
        if (server === void 0) { server = 1; }
        if (roletype === void 0) { roletype = 1; }
        return __awaiter(this, void 0, void 0, function () {
            var name;
            return __generator(this, function (_a) {
                net.config.channel = "mine";
                name = userName;
                if (isNullOrEmpty(name))
                    name = AntFrame_1.default.LocationUrlParam("name") || AntFrame_1.default.RandName(2, 7);
                return [2 /*return*/, new Promise(function (resolve) {
                        net.auth.mineLogin(name, password, name, roletype, server, function (ok, json) {
                            if (!ok) {
                                resolve({ error: 45 });
                            }
                            else {
                                net.logic.connect();
                                var callback_1 = function (e) {
                                    net.logic.gamerLoginS2C.off(callback_1);
                                    resolve(e);
                                };
                                net.logic.gamerLoginS2C.on(callback_1);
                            }
                        });
                    })];
            });
        });
    };
    AntPlatformMine.prototype.FastLogin = function (name, channel, openid) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                net.config.channel = channel;
                return [2 /*return*/, new Promise(function (resolve) {
                        net.auth.fastLogin(name, channel, openid, function (ok, json) {
                            if (!ok) {
                                resolve({ error: 45 });
                            }
                            else {
                                net.logic.connect();
                                var callback_2 = function (e) {
                                    net.logic.gamerLoginS2C.off(callback_2);
                                    resolve(e);
                                };
                                net.logic.gamerLoginS2C.on(callback_2);
                            }
                        });
                    })];
            });
        });
    };
    AntPlatformMine.prototype.GameDoSdkAuthAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                this.m_stSdkUserInfo.nickName = "ANTMINE-NICKNAME";
                this.m_stSdkUserInfo.avatarUrl = "https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKpmpnxfYeeUqFOlwK9x260xibs866I7NpmuHjgerLXgUk1B77HpIo2oZP0wAbnib4Lkc30N7yibYoww/132";
                this.m_stSdkUserInfo.gender = AntPlatformBase_2.eSex.Man;
                this.m_stSdkUserInfo.city = "上海";
                this.m_stSdkUserInfo.country = "中国";
                this.m_stSdkUserInfo.language = "zh_CN";
                this.m_stSdkUserInfo.province = "上海";
                return [2 /*return*/, new Promise(function (resolve) {
                        resolve(_this.m_stSdkUserInfo);
                    })];
            });
        });
    };
    AntPlatformMine.prototype.GetLaunchOptions = function () {
        return {
            key1: AntFrame_1.default.LocationUrlParam("key1"),
            key2: AntFrame_1.default.LocationUrlParam("key2"),
        };
    };
    return AntPlatformMine;
}(AntPlatformBase_1.default));
exports.default = AntPlatformMine;
},{"../AntFrame":1,"./AntPlatformBase":52}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var eSex;
(function (eSex) {
    eSex[eSex["None"] = 0] = "None";
    eSex[eSex["Man"] = 1] = "Man";
    eSex[eSex["Woman"] = 2] = "Woman";
})(eSex = exports.eSex || (exports.eSex = {}));
var SdkUserInfo = /** @class */ (function () {
    function SdkUserInfo() {
        this.language = "";
        this.nickName = ""; // 玩家昵称
        this.avatarUrl = ""; // 玩家头像
        this.gender = eSex.None; // 玩家性别
        this.country = ""; // 玩家国家
        this.province = ""; // 玩家省份
        this.city = "";
        this.unionId = "";
        this.openId = "";
        this.sessionId = "";
        this.sign = "";
    }
    SdkUserInfo.prototype.ToString = function () {
        return " UserInfo::<br/>NickName:" + this.nickName
            + ",<br/>AvatarUrl:" + this.avatarUrl
            + ",<br/>OpenID:" + this.openId
            + ",<br/>City:" + this.city
            + ",<br/>SessionID:" + this.sessionId;
    };
    return SdkUserInfo;
}());
exports.SdkUserInfo = SdkUserInfo;
var SdkLoginInfo = /** @class */ (function () {
    function SdkLoginInfo() {
        this.code = "";
    }
    return SdkLoginInfo;
}());
exports.SdkLoginInfo = SdkLoginInfo;
var SystemInfo = /** @class */ (function () {
    function SystemInfo() {
    }
    return SystemInfo;
}());
exports.SystemInfo = SystemInfo;
var ReferrerInfo = /** @class */ (function () {
    function ReferrerInfo() {
    }
    return ReferrerInfo;
}());
exports.ReferrerInfo = ReferrerInfo;
/**向opendata发送的数据类型 */
var MsgType;
(function (MsgType) {
    MsgType[MsgType["RemoveRankList"] = 0] = "RemoveRankList";
    MsgType[MsgType["FetchFriendRankList"] = 1] = "FetchFriendRankList";
    MsgType[MsgType["SubmitScore"] = 3] = "SubmitScore";
    MsgType[MsgType["GameOverRank"] = 4] = "GameOverRank";
    MsgType[MsgType["FetchGroupFriendRankList"] = 5] = "FetchGroupFriendRankList";
    MsgType[MsgType["NotifyTime"] = 6] = "NotifyTime";
})(MsgType = exports.MsgType || (exports.MsgType = {}));
var AntPlatformBase = /** @class */ (function () {
    function AntPlatformBase() {
        this.m_stSystemInfo = null;
        this.m_stSdkUserInfo = null;
        this.m_stSdkLoginInfo = null;
        this.m_stSystemInfo = new SystemInfo();
        this.m_stSdkUserInfo = new SdkUserInfo();
        this.m_stSdkLoginInfo = new SdkLoginInfo();
    }
    Object.defineProperty(AntPlatformBase, "platformWX", {
        get: function () {
            return Game_1.default.browserSetting.isWeixinMinigame;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntPlatformBase.prototype, "userInfo", {
        get: function () {
            return this.m_stSdkUserInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AntPlatformBase.prototype, "systemInfo", {
        get: function () {
            return this.m_stSystemInfo;
        },
        enumerable: true,
        configurable: true
    });
    AntPlatformBase.prototype.Login = function (userName, password, server, roletype) {
        if (userName === void 0) { userName = null; }
        if (password === void 0) { password = ""; }
        if (server === void 0) { server = 1; }
        if (roletype === void 0) { roletype = 1; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, null];
            });
        });
    };
    AntPlatformBase.prototype.FastLogin = function (name, channel, openid) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, null];
            });
        });
    };
    AntPlatformBase.prototype.GameDoSdkAuthAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, null];
            });
        });
    };
    AntPlatformBase.prototype.GameDoSdkLoginAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        resolve(_this.m_stSdkLoginInfo);
                    })];
            });
        });
    };
    AntPlatformBase.prototype.GetLaunchOptions = function () {
        return {};
    };
    AntPlatformBase.prototype.UserCheck = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        resolve(true);
                    })];
            });
        });
    };
    AntPlatformBase.prototype.Share = function (title, imgUrl, query) {
        return null;
    };
    return AntPlatformBase;
}());
exports.default = AntPlatformBase;
},{"../../Game":546}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AntPlatformBase_1 = require("./AntPlatformBase");
var AntPlatformWX = /** @class */ (function (_super) {
    __extends(AntPlatformWX, _super);
    function AntPlatformWX() {
        var _this = _super.call(this) || this;
        // 获取系统信息
        _this.GetSystemInfo();
        // 设置屏幕常亮
        wx.setKeepScreenOn && wx.setKeepScreenOn({
            keepScreenOn: true,
            success: function () {
                console.log("常亮设置成功！");
            }
        });
        return _this;
    }
    AntPlatformWX.prototype.WXGetSdkAuthSetting = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        wx.getSetting({
                            success: function (res) {
                                console.info("success: wx.getSetting", res);
                                resolve(res.authSetting['scope.userInfo']);
                            },
                            fail: function (res) {
                                console.log("fail: wx.getSetting", res.errMsg);
                                resolve(false);
                            },
                        });
                    })];
            });
        });
    };
    AntPlatformWX.prototype.UserCheck = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.WXGetSdkAuthSetting()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    AntPlatformWX.prototype.WXGetSdkUserInfo = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        console.log("发起向微信获取用户信息");
                        wx.getUserInfo({
                            success: function (res) {
                                console.info("success: wx.getUserInfo", res);
                                resolve(res.userInfo);
                            },
                            fail: function (res) {
                                console.log("fail: wx.getUserInfo", res.errMsg);
                                resolve(null);
                            }
                        });
                    })];
            });
        });
    };
    // 授权
    AntPlatformWX.prototype.WXAuth = function () {
        return __awaiter(this, void 0, void 0, function () {
            var sdkInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.GameDoSdkAuthAsync()];
                    case 1:
                        sdkInfo = _a.sent();
                        _a.label = 2;
                    case 2:
                        if (!!sdkInfo) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.GameDoSdkAuthAsync()];
                    case 3:
                        sdkInfo = _a.sent();
                        return [3 /*break*/, 2];
                    case 4: return [2 /*return*/, sdkInfo];
                }
            });
        });
    };
    AntPlatformWX.prototype.Login = function (userName, password, server, roletype) {
        if (userName === void 0) { userName = null; }
        if (password === void 0) { password = ""; }
        if (server === void 0) { server = 1; }
        if (roletype === void 0) { roletype = 1; }
        return __awaiter(this, void 0, void 0, function () {
            var sdkInfo, loginInfo, code;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.GameDoSdkAuthAsync()];
                    case 1:
                        sdkInfo = _a.sent();
                        _a.label = 2;
                    case 2:
                        if (!!sdkInfo) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.GameDoSdkAuthAsync()];
                    case 3:
                        sdkInfo = _a.sent();
                        return [3 /*break*/, 2];
                    case 4: return [4 /*yield*/, this.GameDoSdkLoginAsync()];
                    case 5:
                        loginInfo = _a.sent();
                        _a.label = 6;
                    case 6:
                        if (!!loginInfo) return [3 /*break*/, 8];
                        return [4 /*yield*/, this.GameDoSdkLoginAsync()];
                    case 7:
                        loginInfo = _a.sent();
                        return [3 /*break*/, 6];
                    case 8:
                        code = this.m_stSdkLoginInfo.code;
                        net.config.channel = "wechat";
                        return [2 /*return*/, new Promise(function (resolve) {
                                net.auth.sdkLogin(code, "", _this.m_stSdkUserInfo.nickName, roletype, server, sdkInfo.avatarUrl, function (ok, json) {
                                    if (!ok) {
                                        resolve({ error: 45 });
                                    }
                                    else {
                                        net.logic.connect();
                                        var callback_1 = function (e) {
                                            net.logic.gamerLoginS2C.off(callback_1);
                                            resolve(e);
                                        };
                                        net.logic.gamerLoginS2C.on(callback_1);
                                    }
                                });
                            })];
                }
            });
        });
    };
    // 获取授权
    // 获取用户信息
    AntPlatformWX.prototype.GameDoSdkAuthAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var flag, info, _a;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.WXGetSdkAuthSetting()];
                    case 1:
                        flag = _b.sent();
                        if (!flag) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.WXGetSdkUserInfo()];
                    case 2:
                        _a = _b.sent();
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, this.WXCreateWXUserButton()];
                    case 4:
                        _a = _b.sent();
                        _b.label = 5;
                    case 5:
                        info = _a;
                        if (info) {
                            this.SetUserInfo(info);
                            return [2 /*return*/, new Promise(function (resolve) {
                                    resolve(_this.m_stSdkUserInfo);
                                })];
                        }
                        else {
                            return [2 /*return*/, new Promise(function (resolve) {
                                    resolve(null);
                                })];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    // 登录
    AntPlatformWX.prototype.GameDoSdkLoginAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                //console.log("AntPlatform WX Game Do Sdk Login Async");
                console.log("发起登录微信 wx.login");
                return [2 /*return*/, new Promise(function (resolve) {
                        wx.login({
                            success: function (res) {
                                console.info("success: wx.login", res);
                                _this.m_stSdkLoginInfo.code = res.code;
                                resolve(_this.m_stSdkLoginInfo);
                            },
                            fail: function (res) {
                                console.info("fail: wx.login", res);
                                resolve(null);
                            },
                        });
                    })];
            });
        });
    };
    AntPlatformWX.prototype.WXCreateWXUserButton = function () {
        return __awaiter(this, void 0, void 0, function () {
            var button;
            return __generator(this, function (_a) {
                button = wx.createUserInfoButton({
                    type: 'text',
                    lang: "zh_CN",
                    text: '',
                    style: {
                        left: 0,
                        top: 0,
                        width: 2000,
                        height: 2000,
                        lineHeight: 40,
                        textAlign: 'center',
                        fontSize: 16,
                        borderRadius: 4
                    }
                });
                button.show();
                return [2 /*return*/, new Promise(function (resolve) {
                        button.onTap(function (res) {
                            if (res.userInfo) {
                                console.log("按钮获取用户信息成功", "wxLogin auth success");
                                button.hide();
                                resolve(res.userInfo);
                            }
                            else {
                                console.error("按钮获取用户信息失败");
                                resolve(null);
                            }
                        });
                    })];
            });
        });
    };
    AntPlatformWX.prototype.SetUserInfo = function (info) {
        console.info("用户信息", info);
        this.m_stSdkUserInfo.language = info.language;
        this.m_stSdkUserInfo.nickName = info.nickName;
        this.m_stSdkUserInfo.avatarUrl = info.avatarUrl;
        this.m_stSdkUserInfo.gender = info.gender;
        this.m_stSdkUserInfo.country = info.country;
        this.m_stSdkUserInfo.province = info.province;
        this.m_stSdkUserInfo.city = info.city;
    };
    AntPlatformWX.prototype.GetSystemInfo = function () {
        var info = wx.getSystemInfoSync();
        console.info("wx.getSystemInfoSync:", info);
        this.m_stSystemInfo.benchmarkLevel = info.benchmarkLevel;
        this.m_stSystemInfo.model = info.model;
        this.m_stSystemInfo.pixelRatio = info.pixelRatio;
        this.m_stSystemInfo.platform = info.platform;
        this.m_stSystemInfo.screenHeight = info.screenHeight;
        this.m_stSystemInfo.screenWidth = info.screenWidth;
        this.m_stSystemInfo.system = info.system;
        this.m_stSystemInfo.version = info.version;
        this.m_stSystemInfo.windowHeight = info.windowHeight;
        this.m_stSystemInfo.windowWidth = info.windowWidth;
        this.m_stSystemInfo.SDKVersion = info.SDKVersion;
        return this.m_stSystemInfo;
    };
    AntPlatformWX.prototype.Share = function (title, imgUrl, query) {
        return new Promise(function (resolve) {
            wx.shareAppMessage({
                title: title,
                imageUrl: imgUrl,
                query: query,
                success: function () {
                    console.error("share success!");
                    resolve(true);
                },
                fail: function () {
                    console.error("share fail!");
                    resolve(false);
                }
            });
        });
    };
    AntPlatformWX.prototype.GetLaunchOptions = function () {
        return wx.getLaunchOptionsSync().query;
    };
    return AntPlatformWX;
}(AntPlatformBase_1.default));
exports.AntPlatformWX = AntPlatformWX;
/*

// 设置屏幕常亮
wx.setKeepScreenOn

// 获取授权
wx.getSetting

// 获取用户信息
wx.getUserInfo

// 或者 创建用户获取用户信息按钮
wx.createUserInfoButton

// 登录
wx.login

*/ 
},{"./AntPlatformBase":52}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoginSender_1 = require("./Senders/LoginSender");
var MailSender_1 = require("./Senders/MailSender");
var GMSender_1 = require("./Senders/GMSender");
var ItemSender_1 = require("./Senders/ItemSender");
var GashaponSender_1 = require("./Senders/GashaponSender");
//====================
// 消息发送器列表
//--------------------
var ProtoSenderList = /** @class */ (function () {
    function ProtoSenderList() {
        this.login = new LoginSender_1.default();
        this.mail = new MailSender_1.default();
        this.gm = new GMSender_1.default();
        this.item = new ItemSender_1.default();
        this.gashapon = new GashaponSender_1.default();
    }
    return ProtoSenderList;
}());
exports.default = ProtoSenderList;
},{"./Senders/GMSender":55,"./Senders/GashaponSender":56,"./Senders/ItemSender":57,"./Senders/LoginSender":58,"./Senders/MailSender":59}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GMSender = /** @class */ (function () {
    function GMSender() {
    }
    /**
     * 添加物品
     * @param itemId 物品id
     * @param num 物品数量
     */
    GMSender.prototype.addItem = function (itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    GMSender.prototype.addActor = function (actorId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    GMSender.prototype.gmCommand = function (cmd) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log(cmd);
                        return [4 /*yield*/, Game_1.default.net.GMC2S(cmd)];
                    case 1:
                        s2c = _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return GMSender;
}());
exports.default = GMSender;
},{"../../Game":546}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GashaponSender = /** @class */ (function () {
    function GashaponSender() {
    }
    //请求抽奖
    GashaponSender.prototype.extractGashapon = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerExtractGashaponC2S(id)];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error == 0) {
                        }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    //请求保底奖励6
    GashaponSender.prototype.giftGashapon = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerGetAllowanceC2S(id)];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error == 0) {
                        }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    return GashaponSender;
}());
exports.default = GashaponSender;
},{"../../Game":546}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var ItemData_1 = require("../../GameModule/DataStructs/ItemData");
var GameEventKey_1 = require("../../GameEventKey");
var ItemSender = /** @class */ (function () {
    function ItemSender() {
    }
    ItemSender.prototype.getItemList = function () {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerGetBackpackC2S()];
                    case 1:
                        s2c = _a.sent();
                        console.log("背包列表： ", s2c.items);
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    /**
     * 物品销售
     * @param uid uuid
     * @param itemId 物品id
     * @param num 销售数量
     */
    ItemSender.prototype.sellItem = function (uid, itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log("uid");
                        return [4 /*yield*/, Game_1.default.net.AsyncGamerSellItemC2S(itemId, num)];
                    case 1:
                        s2c = _a.sent();
                        console.log("=========items ", s2c);
                        // if (s2c.error == 0) {
                        //     Game.system.rewardDialog(s2c.items);
                        //     this.SetItemModel(s2c.itemsChange);
                        // }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    /**
     * 物品使用
     * @param uid uuid
     * @param itemId 物品id
     * @param num 使用数量
     */
    ItemSender.prototype.useItem = function (uid, itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c, items;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerUseItemC2S(itemId, num)];
                    case 1:
                        s2c = _a.sent();
                        console.log("=========items ", s2c);
                        items = [];
                        if (s2c.error == 0) {
                            s2c.items.forEach(function (item) {
                                var itemData = new ItemData_1.default();
                                itemData.setProtoData(item);
                                items.push(itemData);
                            });
                            // Game.system.rewardDialog(s2c.items);
                            // this.SetItemModel(s2c.itemsChange);
                        }
                        return [2 /*return*/, Promise.resolve(items)];
                }
            });
        });
    };
    /**
     * 物品合成
     * @param uid uuid
     * @param itemId 物品id
     * @param num 合成数量
     */
    ItemSender.prototype.compoundItem = function (uid, itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerCompoundItemC2S(itemId, num)];
                    case 1:
                        s2c = _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * 物品拆分
     * @param uid uuid
     * @param itemId 物品id
     * @param num 拆分数量
     */
    ItemSender.prototype.splitItem = function (uid, itemId, num) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerSplitItemC2S(itemId, num)];
                    case 1:
                        s2c = _a.sent();
                        // if (s2c.error == 0) {
                        //     Game.system.rewardDialog(s2c.items);
                        //     this.SetItemModel(s2c.itemsChange);
                        // }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    ItemSender.prototype.SetItemModel = function (items) {
        for (var index in items) {
            var itemInfo = items[index];
            // let item = Game.moduleModel.item.getItem(itemInfo.id);
            Game_1.default.moduleModel.item.setItemNum(itemInfo.id, itemInfo.count, itemInfo.obtainTime);
        }
        Game_1.default.event.dispatch(GameEventKey_1.default.Item_Change);
    };
    return ItemSender;
}());
exports.default = ItemSender;
},{"../../Game":546,"../../GameEventKey":548,"../../GameModule/DataStructs/ItemData":598}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AntFrame_1 = require("../AntFrame");
var Game_1 = require("../../Game");
var LoginSender = /** @class */ (function () {
    function LoginSender() {
    }
    LoginSender.prototype.login = function (userName, password) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (isNullOrEmpty(userName))
                            userName = AntFrame_1.default.RandName(2, 7);
                        return [4 /*yield*/, AntFrame_1.default.platform.Login(userName, password)];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error) {
                            Game_1.default.launch.onNetError(s2c.error);
                            return [2 /*return*/];
                        }
                        Game_1.default.localStorage.username = userName;
                        Game_1.default.localStorage.password = password;
                        Game_1.default.localStorage.addUseraccount(userName, password);
                        return [4 /*yield*/, Game_1.default.net.AsyncGamerLoginGetDataC2S()];
                    case 2:
                        // 请求角色初始数据
                        s2c = _a.sent();
                        return [4 /*yield*/, Game_1.default.sender.item.getItemList()];
                    case 3:
                        // if(s2c.error) return;
                        // 请求背包数据
                        if (!(_a.sent()))
                            1;
                        // 登录了并且获取了用户数据
                        Game_1.default.user.isLoginAndGetUserData = true;
                        Game_1.default.launch.enterGame();
                        return [2 /*return*/];
                }
            });
        });
    };
    return LoginSender;
}());
exports.default = LoginSender;
},{"../../Game":546,"../AntFrame":1}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GameEventKey_1 = require("../../GameEventKey");
var MailSender = /** @class */ (function () {
    function MailSender() {
    }
    //请求邮件列表
    MailSender.prototype.getMailDatas = function () {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerGetMailC2S()];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error == 0) {
                        }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    //请求读/领取邮件
    MailSender.prototype.changeStateMail = function (id, state) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerChangeMailStateC2S(id, state)];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error == 0) {
                            Game_1.default.moduleModel.mail.changeMail(id, state);
                            Game_1.default.event.dispatch(GameEventKey_1.default.Mail_Change, state);
                            Game_1.default.event.dispatch(GameEventKey_1.default.Mail_Update);
                        }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    //请求删除单条邮件
    MailSender.prototype.delMail = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var s2c, len;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerDelMailC2S(id)];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error == 0) {
                            Game_1.default.moduleModel.mail.delMails(id);
                            len = Game_1.default.moduleModel.mail.getMailList().length;
                            if (len == 9)
                                this.getMailDatas();
                            Game_1.default.event.dispatch(GameEventKey_1.default.Mail_DelOne);
                            Game_1.default.event.dispatch(GameEventKey_1.default.Mail_Update, [id]);
                        }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    //请求删除已读邮件
    MailSender.prototype.delHaveReadMail = function () {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerDelHaveReadMailC2S()];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error == 0) {
                            Game_1.default.moduleModel.mail.delMails();
                            Game_1.default.event.dispatch(GameEventKey_1.default.Mail_Update);
                        }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    //请求一键领取奖励
    MailSender.prototype.oneKeyRcvMail = function () {
        return __awaiter(this, void 0, void 0, function () {
            var s2c;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.net.AsyncGamerOneKeyRcvMailRewardC2S()];
                    case 1:
                        s2c = _a.sent();
                        if (s2c.error == 0) {
                            Game_1.default.moduleModel.mail.rcvMails();
                            Game_1.default.event.dispatch(GameEventKey_1.default.Mail_Update);
                        }
                        return [2 /*return*/, Promise.resolve(s2c.error == 0)];
                }
            });
        });
    };
    //---------------------GM-----------------
    //GM添加邮件
    MailSender.prototype.addMailGM = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // let s2c = await Game.net.AsyncGamerGmAddMailC2S();
                // if (s2c.error == 0) {
                // }
                // return Promise.resolve(s2c.error == 0);
                return [2 /*return*/, Promise.resolve(0 == 0)];
            });
        });
    };
    //GM新邮件
    MailSender.prototype.newMailGM = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // let s2c = await Game.net.AsyncGamerGmNewMailC2S();
                // if (s2c.error == 0) {
                // }
                // return Promise.resolve(s2c.error == 0);
                return [2 /*return*/, Promise.resolve(0 == 0)];
            });
        });
    };
    return MailSender;
}());
exports.default = MailSender;
},{"../../Game":546,"../../GameEventKey":548}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = require("../../Libs/signals/Signal");
var GameApplicationBrowser = /** @class */ (function () {
    function GameApplicationBrowser() {
        this.jsClassName = "GameApplicationBrowser";
        this.networkEnable = true;
        /////////////////////////////////////
        // 事件
        /////////////////////////////////////
        // 获取完基本消息
        this.sInfo = new Signal_1.default();
        // 触发时机：从活动状态进入非活动状态。
        this.sAppPause = new Signal_1.default();
        // 触发时机：程序进入前台并处于活动状态时调用。
        this.sAppResume = new Signal_1.default();
        this.isSetUserInfo = false;
    }
    GameApplicationBrowser.prototype.openURL = function (url) {
    };
    GameApplicationBrowser.prototype.checkNetwork = function () {
    };
    GameApplicationBrowser.prototype.setUserInfo = function (username, name) {
        if (this.isSetUserInfo)
            return;
        this.isSetUserInfo = true;
    };
    // 退出游戏应用
    GameApplicationBrowser.prototype.exit = function () {
    };
    return GameApplicationBrowser;
}());
exports.default = GameApplicationBrowser;
},{"../../Libs/signals/Signal":640}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig = /** @class */ (function () {
    function BaseConfig() {
    }
    return BaseConfig;
}());
exports.default = BaseConfig;
},{}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Res_1 = require("./Keys/Res");
var BaseConfigRender = /** @class */ (function () {
    function BaseConfigRender() {
        // 配置字典
        this.configs = new Dictionary_1.default();
    }
    // 获取配置列表
    BaseConfigRender.prototype.getConfigList = function () {
        return this.configs.getValues();
    };
    Object.defineProperty(BaseConfigRender.prototype, "configList", {
        // 配置列表
        get: function () {
            return this.configs.getValues();
        },
        enumerable: true,
        configurable: true
    });
    // 获取配置
    BaseConfigRender.prototype.getConfig = function (id) {
        if (!this.configs.hasKey(id)) {
            console.log(this.tableName + " \u6CA1\u6709 id=" + id + " \u7684\u914D\u7F6E");
        }
        return this.configs.getValue(id);
    };
    // 添加配置
    BaseConfigRender.prototype.addConfig = function (config) {
        this.configs.add(config.id, config);
    };
    // 获取配置文件路径        
    BaseConfigRender.prototype.getConfigPath = function () {
        return Res_1.default.config + ("csv/" + this.tableName + ".csv");
    };
    // 加载配置
    BaseConfigRender.prototype.load = function (configLoader, onComplete) {
    };
    // 重新加载配置
    BaseConfigRender.prototype.reload = function (configLoader, onComplete) {
    };
    // 游戏加载完所有
    BaseConfigRender.prototype.onGameLoadedAll = function () {
    };
    // 清理
    BaseConfigRender.prototype.clear = function () {
        this.configs.clear();
    };
    return BaseConfigRender;
}());
exports.default = BaseConfigRender;
},{"../Libs/Helpers/Dictionary":626,"./Keys/Res":124}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigExpression = /** @class */ (function () {
    function ConfigExpression() {
    }
    return ConfigExpression;
}());
exports.default = ConfigExpression;
},{}],64:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AvatarConfigStruct_1 = require("../ConfigStructs/AvatarConfigStruct");
var Game_1 = require("../../Game");
var LangType_1 = require("../LangType");
var AssetItemType_1 = require("../../GameFrame/AssetManagers/AssetItemType");
var AssetHelper_1 = require("../../GameFrame/AssetManagers/AssetHelper");
var Res_1 = require("../Keys/Res");
var AvatarConfig = /** @class */ (function (_super) {
    __extends(AvatarConfig, _super);
    function AvatarConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //全身像
        _this._diamondIconUrl = null;
        /* ---------------------------------------  我是漂亮的分割线  --------------------------------------- */
        _this._assetList = [];
        return _this;
    }
    Object.defineProperty(AvatarConfig.prototype, "icon", {
        get: function () {
            var value = this.zh_cn_icon;
            switch (Game_1.default.lang.lang) {
                case LangType_1.default.en:
                    value = this.en_icon;
                    break;
            }
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_icon;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelSkinUrlF", {
        get: function () {
            if (isNullOrEmpty(this.modelBones) || isNullOrEmpty(this.modelSkin))
                return null;
            if (!this._modelSkinUrlF) {
                this._modelSkinUrlF = Res_1.default.getSpinePngPathF(this.modelBones, this.modelSkin);
            }
            return this._modelSkinUrlF;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelSkinUrlB", {
        get: function () {
            if (isNullOrEmpty(this.modelBones) || isNullOrEmpty(this.modelSkin))
                return null;
            if (!this._modelSkinUrlB) {
                this._modelSkinUrlB = Res_1.default.getSpinePngPathB(this.modelBones, this.modelSkin);
            }
            return this._modelSkinUrlB;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelBoneUrlF", {
        get: function () {
            if (isNullOrEmpty(this.modelBones) || isNullOrEmpty(this.modelSkin))
                return null;
            if (!this._modelBoneUrlF) {
                this._modelBoneUrlF = Res_1.default.getSpineSKPathF(this.modelBones, this.modelSkin);
            }
            return this._modelBoneUrlF;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelBoneUrlB", {
        get: function () {
            if (isNullOrEmpty(this.modelBones) || isNullOrEmpty(this.modelSkin))
                return null;
            if (!this._modelBoneUrlB) {
                this._modelBoneUrlB = Res_1.default.getSpineSKPathB(this.modelBones, this.modelSkin);
            }
            return this._modelBoneUrlB;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "picUrl", {
        get: function () {
            if (!this.bgPic) {
                return null;
            }
            if (!this._picUrl) {
                this._picUrl = Res_1.default.getSpritePath(this.bgPic);
            }
            return this._picUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelSkinAssetItemF", {
        get: function () {
            if (!this.modelSkinUrlF) {
                return null;
            }
            if (!this._modelSkinAssetItemF) {
                this._modelSkinAssetItemF = { url: this.modelSkinUrlF, type: AssetItemType_1.AssetItemType.Image };
            }
            return this._modelSkinAssetItemF;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelSkinAssetItemB", {
        get: function () {
            if (!this.modelSkinUrlB) {
                return null;
            }
            if (!this._modelSkinAssetItemB) {
                this._modelSkinAssetItemB = { url: this.modelSkinUrlB, type: AssetItemType_1.AssetItemType.Image };
            }
            return this._modelSkinAssetItemB;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelBoneAssetItemF", {
        get: function () {
            if (!this.modelBoneUrlF) {
                return null;
            }
            if (!this._modelBoneAssetItemF) {
                this._modelBoneAssetItemF = { url: this.modelBoneUrlF, type: AssetItemType_1.AssetItemType.Buffer };
            }
            return this._modelBoneAssetItemF;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelBoneAssetItemB", {
        get: function () {
            if (!this.modelBoneUrlB) {
                return null;
            }
            if (!this._modelBoneAssetItemB) {
                this._modelBoneAssetItemB = { url: this.modelBoneUrlB, type: AssetItemType_1.AssetItemType.Buffer };
            }
            return this._modelBoneAssetItemB;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "picAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.bgPic)) {
                return null;
            }
            if (!this._picAssetItem) {
                this._picAssetItem = { url: this.picUrl, type: AssetItemType_1.AssetItemType.Image };
            }
            return this._picAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    /* ---------------------------------------  我是漂亮的分割线  --------------------------------------- */
    AvatarConfig.prototype.getPackagenameByUrl = function (url) {
        return url.split("/")[0];
    };
    Object.defineProperty(AvatarConfig.prototype, "iconUrl", {
        get: function () {
            if (!this._iconUrl) {
                // let packageName = this.getPackagenameByUrl(this.icon);
                // if (packageName == "ActorBodyIcon")
                {
                    this._iconUrl = "res/fspriteassets/" + this.icon + ".png";
                }
                // else
                // {
                // 	this._iconUrl = "ui://" + this.icon;
                // }
            }
            return this._iconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "iconUrl2", {
        get: function () {
            if (!this._iconUrl2) {
                this._iconUrl2 = "res/fspriteassets/" + this.icon + "2.png";
            }
            return this._iconUrl2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "halfIconUrl", {
        get: function () {
            if (!this._halfIconUrl) {
                this._halfIconUrl = "res/fspriteassets/" + this.halfIcon + ".png";
            }
            return this._halfIconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "bodyIconUrl", {
        get: function () {
            if (!this._bodyIconUrl) {
                // let packageName = this.getPackagenameByUrl(this.bodyIcon);
                // if (packageName == "ActorBodyIcon")
                {
                    this._bodyIconUrl = "res/fspriteassets/" + this.bodyIcon + ".png";
                }
                // else
                // {
                // 	this._bodyIconUrl = "ui://" + this.bodyIcon;
                // }
            }
            return this._bodyIconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "diamondIconUrl", {
        get: function () {
            if (!this._diamondIconUrl) {
                {
                    this._diamondIconUrl = "res/fspriteassets/" + this.diamondHeadIcon + ".png";
                }
            }
            return this._diamondIconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "pieceIconUrl", {
        get: function () {
            if (!this._pieceIconUrl) {
                this._pieceIconUrl = "res/fspriteassets/" + this.pieceIcon + ".png";
                // this._pieceIconUrl = "ui://" + this.pieceIcon;
            }
            return this._pieceIconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "iconPackagename", {
        get: function () {
            if (isNullOrEmpty(this.icon)) {
                return null;
            }
            if (!this._iconPackagename) {
                this._iconPackagename = this.icon.split("/")[0];
            }
            return this._iconPackagename;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "bodyIconPackageName", {
        get: function () {
            if (isNullOrEmpty(this.bodyIcon)) {
                return null;
            }
            if (!this._bodyIconPackageName) {
                this._bodyIconPackageName = this.bodyIcon.split("/")[0];
            }
            return this._bodyIconPackageName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "pieceIconPackageName", {
        get: function () {
            if (isNullOrEmpty(this.pieceIcon)) {
                return null;
            }
            if (!this._pieceIconPackageName) {
                this._pieceIconPackageName = this.pieceIcon.split("/")[0];
            }
            return this._pieceIconPackageName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "iconAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.icon)) {
                return null;
            }
            if (!this._iconAssetItem) {
                this._iconAssetItem = { url: this.iconPackagename, type: AssetItemType_1.AssetItemType.FspritePackage };
            }
            return this._iconAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "bodyIconAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.bodyIcon)) {
                return null;
            }
            if (!this._bodyIconAssetItem) {
                this._bodyIconAssetItem = { url: this.bodyIconPackageName, type: AssetItemType_1.AssetItemType.FspritePackage };
            }
            return this._bodyIconAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "pieceIconAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.pieceIcon)) {
                return null;
            }
            if (!this._pieceIconAssetItem) {
                this._pieceIconAssetItem = { url: this.pieceIconPackageName, type: AssetItemType_1.AssetItemType.FspritePackage };
            }
            return this._pieceIconAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "assetList", {
        get: function () {
            if (!this._assetList) {
                this._assetList = [];
                if (this.iconAssetItem)
                    this._assetList.push(this.iconAssetItem);
                if (this.bodyIconAssetItem)
                    this._assetList.push(this.bodyIconAssetItem);
                if (this.pieceIconAssetItem)
                    this._assetList.push(this.pieceIconAssetItem);
                // if (this.modelBoneAssetItemF)
                // {
                //     this._assetList.push(this.modelBoneAssetItemF);
                //     this._assetList.push(this.modelSkinAssetItemF);
                //     this._assetList.push(this.modelBoneAssetItemB);
                //     this._assetList.push(this.modelSkinAssetItemB);
                // }
                if (this.picAssetItem)
                    this._assetList.push(this.picAssetItem);
            }
            return this._assetList;
        },
        enumerable: true,
        configurable: true
    });
    // 获取预加载的资源列表
    AvatarConfig.prototype.getAllAssset = function (list, dict) {
        if (!list) {
            return this.assetList;
        }
        for (var i = 0; i < this.assetList.length; i++) {
            var item = this.assetList[i];
            if (dict) {
                var key = AssetHelper_1.default.getAssetItemKey(item);
                if (!dict.hasKey(key)) {
                    list.push(item);
                    dict.add(key, item);
                }
            }
            else {
                list.push(item);
            }
        }
        return list;
    };
    return AvatarConfig;
}(AvatarConfigStruct_1.default));
exports.default = AvatarConfig;
},{"../../Game":546,"../../GameFrame/AssetManagers/AssetHelper":549,"../../GameFrame/AssetManagers/AssetItemType":550,"../ConfigStructs/AvatarConfigStruct":92,"../Keys/Res":124,"../LangType":131}],65:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CompoundConfigStruct_1 = require("../ConfigStructs/CompoundConfigStruct");
var CompoundConfig = /** @class */ (function (_super) {
    __extends(CompoundConfig, _super);
    function CompoundConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompoundConfig;
}(CompoundConfigStruct_1.default));
exports.default = CompoundConfig;
},{"../ConfigStructs/CompoundConfigStruct":93}],66:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTDateTimeStruct_1 = require("../ConfigStructs/DTDateTimeStruct");
var DTDateTime = /** @class */ (function (_super) {
    __extends(DTDateTime, _super);
    function DTDateTime() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTDateTime;
}(DTDateTimeStruct_1.default));
exports.default = DTDateTime;
},{"../ConfigStructs/DTDateTimeStruct":94}],67:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTFixItemNumStruct_1 = require("../ConfigStructs/DTFixItemNumStruct");
var DTFixItemNum = /** @class */ (function (_super) {
    __extends(DTFixItemNum, _super);
    function DTFixItemNum() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTFixItemNum;
}(DTFixItemNumStruct_1.default));
exports.default = DTFixItemNum;
},{"../ConfigStructs/DTFixItemNumStruct":95}],68:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTItemNumStruct_1 = require("../ConfigStructs/DTItemNumStruct");
var DTItemNum = /** @class */ (function (_super) {
    __extends(DTItemNum, _super);
    function DTItemNum() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTItemNum;
}(DTItemNumStruct_1.default));
exports.default = DTItemNum;
},{"../ConfigStructs/DTItemNumStruct":96}],69:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTPerformActoinStruct_1 = require("../ConfigStructs/DTPerformActoinStruct");
var DTPerformActoin = /** @class */ (function (_super) {
    __extends(DTPerformActoin, _super);
    function DTPerformActoin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTPerformActoin;
}(DTPerformActoinStruct_1.default));
exports.default = DTPerformActoin;
},{"../ConfigStructs/DTPerformActoinStruct":97}],70:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTRewardRandomStruct_1 = require("../ConfigStructs/DTRewardRandomStruct");
var DTRewardRandom = /** @class */ (function (_super) {
    __extends(DTRewardRandom, _super);
    function DTRewardRandom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTRewardRandom;
}(DTRewardRandomStruct_1.default));
exports.default = DTRewardRandom;
},{"../ConfigStructs/DTRewardRandomStruct":98}],71:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTValue2Struct_1 = require("../ConfigStructs/DTValue2Struct");
var DTValue2 = /** @class */ (function (_super) {
    __extends(DTValue2, _super);
    function DTValue2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTValue2;
}(DTValue2Struct_1.default));
exports.default = DTValue2;
},{"../ConfigStructs/DTValue2Struct":99}],72:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTValue3Struct_1 = require("../ConfigStructs/DTValue3Struct");
var DTValue3 = /** @class */ (function (_super) {
    __extends(DTValue3, _super);
    function DTValue3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTValue3;
}(DTValue3Struct_1.default));
exports.default = DTValue3;
},{"../ConfigStructs/DTValue3Struct":100}],73:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTVector2Struct_1 = require("../ConfigStructs/DTVector2Struct");
var DTVector2 = /** @class */ (function (_super) {
    __extends(DTVector2, _super);
    function DTVector2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTVector2;
}(DTVector2Struct_1.default));
exports.default = DTVector2;
},{"../ConfigStructs/DTVector2Struct":101}],74:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GashaponConfigStruct_1 = require("../ConfigStructs/GashaponConfigStruct");
var GashaponConfig = /** @class */ (function (_super) {
    __extends(GashaponConfig, _super);
    function GashaponConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GashaponConfig;
}(GashaponConfigStruct_1.default));
exports.default = GashaponConfig;
},{"../ConfigStructs/GashaponConfigStruct":102}],75:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalConfigStruct_1 = require("../ConfigStructs/GlobalConfigStruct");
var Game_1 = require("../../Game");
var GlobalConfig = /** @class */ (function (_super) {
    __extends(GlobalConfig, _super);
    function GlobalConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlobalConfig.getConfig = function (key) {
        return Game_1.default.config.global.getConfig(key);
    };
    // 获取一个整数
    GlobalConfig.getValue = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value;
        }
        return 0;
    };
    // 获取一维数组
    GlobalConfig.getValue1 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value1;
        }
        return [];
    };
    // 获取二维数组
    GlobalConfig.getValue2 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value2;
        }
        return [];
    };
    // 获取三维数组
    GlobalConfig.getValue3 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value3;
        }
        return [];
    };
    // 获取字符串
    GlobalConfig.getValue4 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value4;
        }
        return "";
    };
    GlobalConfig.getValue6 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value6;
        }
        return 0;
    };
    return GlobalConfig;
}(GlobalConfigStruct_1.default));
exports.default = GlobalConfig;
},{"../../Game":546,"../ConfigStructs/GlobalConfigStruct":103}],76:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var HeadPortraitConfigStruct_1 = require("../ConfigStructs/HeadPortraitConfigStruct");
var Game_1 = require("../../Game");
var HeadPortraitConfig = /** @class */ (function (_super) {
    __extends(HeadPortraitConfig, _super);
    function HeadPortraitConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(HeadPortraitConfig.prototype, "iconUrl", {
        get: function () {
            var avatarConfig = Game_1.default.config.avatar.getConfig(this.icon);
            if (avatarConfig) {
                return avatarConfig.iconUrl;
            }
        },
        enumerable: true,
        configurable: true
    });
    return HeadPortraitConfig;
}(HeadPortraitConfigStruct_1.default));
exports.default = HeadPortraitConfig;
},{"../../Game":546,"../ConfigStructs/HeadPortraitConfigStruct":104}],77:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemConfigStruct_1 = require("../ConfigStructs/ItemConfigStruct");
var Game_1 = require("../../Game");
var ItemConfig = /** @class */ (function (_super) {
    __extends(ItemConfig, _super);
    function ItemConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ItemConfig.prototype, "avatarConfig", {
        get: function () {
            return Game_1.default.config.avatar.getConfig(this.icon);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfig.prototype, "iconUrl", {
        get: function () {
            if (this.avatarConfig) {
                if (this.type == 7) {
                    return this.avatarConfig.bodyIconUrl;
                }
                return this.avatarConfig.iconUrl;
            }
            return "";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfig.prototype, "itemStarNum", {
        /**
         * 物品星级 0,1,2,3,4,5
         */
        get: function () {
            if (this.star == 0) {
                return 0;
            }
            var propertyCfg = Game_1.default.config.property.getConfig(this.star);
            if (propertyCfg) {
                var star = Number(propertyCfg.zh_cn_name);
                if (star == null) {
                    console.log("Error Item Star");
                    return 0;
                }
                star = star < 0 ? 0 : star;
                star = star > 6 ? 6 : star;
                return star;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfig.prototype, "getWayMenus", {
        /** 获取所有可以获取的菜单 */
        get: function () {
            if (!this._getWayMenus) {
                this._getWayMenus = [];
                for (var _i = 0, _a = this.get_way; _i < _a.length; _i++) {
                    var menuId = _a[_i];
                    var menuConfig = Game_1.default.config.menu.getConfig(menuId);
                    if (menuConfig)
                        this._getWayMenus.push(menuConfig);
                }
            }
            return this._getWayMenus;
        },
        enumerable: true,
        configurable: true
    });
    /** 获取已经开放的可以获取的菜单 */
    ItemConfig.prototype.getWayMenusForEnable = function () {
        var list = [];
        for (var _i = 0, _a = this.getWayMenus; _i < _a.length; _i++) {
            var menuConfig = _a[_i];
            if (menuConfig.isUnlock) {
                list.push(menuConfig);
            }
        }
        return list;
    };
    return ItemConfig;
}(ItemConfigStruct_1.default));
exports.default = ItemConfig;
},{"../../Game":546,"../ConfigStructs/ItemConfigStruct":105}],78:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemTypeConfigStruct_1 = require("../ConfigStructs/ItemTypeConfigStruct");
var ItemTypeConfig = /** @class */ (function (_super) {
    __extends(ItemTypeConfig, _super);
    function ItemTypeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ItemTypeConfig;
}(ItemTypeConfigStruct_1.default));
exports.default = ItemTypeConfig;
},{"../ConfigStructs/ItemTypeConfigStruct":106}],79:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderConfigStruct_1 = require("../ConfigStructs/LoaderConfigStruct");
var LoaderConfig = /** @class */ (function (_super) {
    __extends(LoaderConfig, _super);
    function LoaderConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoaderConfig;
}(LoaderConfigStruct_1.default));
exports.default = LoaderConfig;
},{"../ConfigStructs/LoaderConfigStruct":107}],80:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoadingConfigStruct_1 = require("../ConfigStructs/LoadingConfigStruct");
var LoadingConfig = /** @class */ (function (_super) {
    __extends(LoadingConfig, _super);
    function LoadingConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoadingConfig;
}(LoadingConfigStruct_1.default));
exports.default = LoadingConfig;
},{"../ConfigStructs/LoadingConfigStruct":108}],81:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailConfigStruct_1 = require("../ConfigStructs/MailConfigStruct");
var MailConfig = /** @class */ (function (_super) {
    __extends(MailConfig, _super);
    function MailConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MailConfig;
}(MailConfigStruct_1.default));
exports.default = MailConfig;
},{"../ConfigStructs/MailConfigStruct":109}],82:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuConfigStruct_1 = require("../ConfigStructs/MenuConfigStruct");
var MenuId_1 = require("../../GameModule/MenuId");
var Game_1 = require("../../Game");
var MenuValidateUnlock_1 = require("../../GameModule/MenuValidateUnlock");
var TEXT_1 = require("../Keys/TEXT");
var MenuValidateEnableOpen_1 = require("../../GameModule/MenuValidateEnableOpen");
var MenuValidateNew_1 = require("../../GameModule/MenuValidateNew");
var MenuWindows_1 = require("../../GameModule/MenuWindows");
var MenuBarType_1 = require("../../GameFrame/Menu/MenuBarType");
var Res_1 = require("../Keys/Res");
var MenuConfig = /** @class */ (function (_super) {
    __extends(MenuConfig, _super);
    function MenuConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MenuConfig.prototype, "menuId", {
        // 模块ID
        get: function () {
            return this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "menuLayer", {
        // 层级
        get: function () {
            return this.layer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "menuCloseOtherType", {
        // 关闭其他类型
        get: function () {
            return this.closeOtherType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "menuLoaderId", {
        // 加载界面ID
        get: function () {
            return this.loaderId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "iconUrl", {
        // 	菜单图片	
        get: function () {
            if (!this._iconUrl) {
                if (!isNullOrEmpty(this.icon)) {
                    this._iconUrl = Res_1.default.getMenuIconUrl(this.icon);
                }
            }
            return this._iconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "isSubbarMainButton", {
        /**
         * 是否是子菜单栏的主菜单
         */
        get: function () {
            return this.menuId >= MenuId_1.MenuId.SubMenuButtonBegin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "isUnlock", {
        /**
         * 获取是否解锁
         */
        get: function () {
            return MenuValidateUnlock_1.default.getInstance().validate(this.menuId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "lockText", {
        /**
         * 获取未解锁文本
         */
        get: function () {
            var unlockConfig = Game_1.default.config.unlock.getUnlockConfig(this.menuId);
            if (unlockConfig) {
                return unlockConfig.touch_txt;
            }
            return TEXT_1.default.Lock;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "lockVisiable", {
        /**
         * 锁住情况下是否显示
         */
        get: function () {
            // TODO ZF
            return this.barType == MenuBarType_1.MenuBarType.Bottom;
            var unlockConfig = Game_1.default.config.unlock.getConfig(this.menuId);
            if (unlockConfig) {
                return unlockConfig.icon_type == 1;
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "enableOpen", {
        /**
         * 是否可以打开
         */
        get: function () {
            return MenuValidateEnableOpen_1.default.getInstance().validate(this.menuId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "isNew", {
        /**
         * 是否可以是新的
         */
        get: function () {
            return MenuValidateNew_1.default.getInstance().validate(this.menuId);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 前往
     */
    MenuConfig.prototype.openMenu = function () {
        return __awaiter(this, void 0, void 0, function () {
            var windowConfig, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.menuId < MenuId_1.MenuId.SubMenuButtonBegin)) return [3 /*break*/, 3];
                        if (!this.isUnlock) {
                            Game_1.default.system.toastText(this.lockText);
                            return [2 /*return*/, Promise.resolve(false)];
                        }
                        windowConfig = MenuWindows_1.default.get(this.menuId);
                        if (!windowConfig) {
                            Game_1.default.system.toastText(TEXT_1.default.Disable);
                            return [2 /*return*/, Promise.resolve(false)];
                        }
                        if (!windowConfig.windowClass) return [3 /*break*/, 2];
                        return [4 /*yield*/, windowConfig.windowClass.AsyncEnableOpen()];
                    case 1:
                        result = _a.sent();
                        if (!result) {
                            return [2 /*return*/, Promise.resolve(false)];
                        }
                        _a.label = 2;
                    case 2:
                        if (this.enableOpen) {
                            Game_1.default.menu.open(this.menuId);
                            return [2 /*return*/, Promise.resolve(true)];
                        }
                        _a.label = 3;
                    case 3: return [2 /*return*/, Promise.resolve(true)];
                }
            });
        });
    };
    return MenuConfig;
}(MenuConfigStruct_1.default));
exports.default = MenuConfig;
},{"../../Game":546,"../../GameFrame/Menu/MenuBarType":568,"../../GameModule/MenuId":603,"../../GameModule/MenuValidateEnableOpen":605,"../../GameModule/MenuValidateNew":606,"../../GameModule/MenuValidateUnlock":608,"../../GameModule/MenuWindows":609,"../ConfigStructs/MenuConfigStruct":110,"../Keys/Res":124,"../Keys/TEXT":125}],83:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuIndexConfigStruct_1 = require("../ConfigStructs/MenuIndexConfigStruct");
var MenuIndexConfig = /** @class */ (function (_super) {
    __extends(MenuIndexConfig, _super);
    function MenuIndexConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuIndexConfig;
}(MenuIndexConfigStruct_1.default));
exports.default = MenuIndexConfig;
},{"../ConfigStructs/MenuIndexConfigStruct":111}],84:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgConfigStruct_1 = require("../ConfigStructs/MsgConfigStruct");
var MsgConfig = /** @class */ (function (_super) {
    __extends(MsgConfig, _super);
    function MsgConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MsgConfig;
}(MsgConfigStruct_1.default));
exports.default = MsgConfig;
},{"../ConfigStructs/MsgConfigStruct":112}],85:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerLevelConfigStruct_1 = require("../ConfigStructs/PlayerLevelConfigStruct");
var PlayerLevelConfig = /** @class */ (function (_super) {
    __extends(PlayerLevelConfig, _super);
    function PlayerLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerLevelConfig;
}(PlayerLevelConfigStruct_1.default));
exports.default = PlayerLevelConfig;
},{"../ConfigStructs/PlayerLevelConfigStruct":113}],86:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PropertyConfigStruct_1 = require("../ConfigStructs/PropertyConfigStruct");
var Game_1 = require("../../Game");
var PropHelper_1 = require("../../GameFrame/Props/PropHelper");
var PropertyConfig = /** @class */ (function (_super) {
    __extends(PropertyConfig, _super);
    function PropertyConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PropertyConfig.prototype, "iconAvatar", {
        get: function () {
            if (this.icon > 0)
                return Game_1.default.config.avatar.getConfig(this.icon);
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PropertyConfig.prototype, "iconUrl", {
        get: function () {
            if (this.icon > 0)
                return this.iconAvatar.iconUrl;
            return "";
        },
        enumerable: true,
        configurable: true
    });
    PropertyConfig.prototype.getPropertyByField = function (field) {
        var id = PropHelper_1.default.GetPropId(field);
        var config = Game_1.default.config.property.getConfig(id);
        return config;
    };
    return PropertyConfig;
}(PropertyConfigStruct_1.default));
exports.default = PropertyConfig;
},{"../../Game":546,"../../GameFrame/Props/PropHelper":584,"../ConfigStructs/PropertyConfigStruct":114}],87:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RewardConfigStruct_1 = require("../ConfigStructs/RewardConfigStruct");
var RewardConfig = /** @class */ (function (_super) {
    __extends(RewardConfig, _super);
    function RewardConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RewardConfig;
}(RewardConfigStruct_1.default));
exports.default = RewardConfig;
},{"../ConfigStructs/RewardConfigStruct":115}],88:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var UnlockConfigStruct_1 = require("../ConfigStructs/UnlockConfigStruct");
var Game_1 = require("../../Game");
var UnlockConfig = /** @class */ (function (_super) {
    __extends(UnlockConfig, _super);
    function UnlockConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(UnlockConfig.prototype, "menuConfig", {
        get: function () {
            return Game_1.default.config.menu.getConfig(this.menu_id);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "lockvisible", {
        get: function () {
            return this.show_type == 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isUnlock", {
        get: function () {
            var menuConfig = this.menuConfig;
            if (menuConfig) {
                return menuConfig.isUnlock;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isNew", {
        get: function () {
            var menuConfig = this.menuConfig;
            if (menuConfig) {
                return menuConfig.isNew;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "menuId", {
        get: function () {
            return this.menu_id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isOpenShow", {
        //是否展示
        get: function () {
            for (var index = 0; index < this.open_show.length; index++) {
                var element = this.open_show[index];
                if (element == 1) {
                    return true;
                }
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isOpenShowMenu", {
        get: function () {
            for (var index = 0; index < this.open_show.length; index++) {
                var element = this.open_show[index];
                if (element == 2) {
                    return true;
                }
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "iconUrl", {
        // 	菜单图片	
        get: function () {
            var url = "";
            if (this.item_id > 0) {
                url = Game_1.default.config.item.getItemIcon(this.item_id);
            }
            else if (this.menuConfig) {
                url = this.menuConfig.iconUrl;
            }
            return url;
        },
        enumerable: true,
        configurable: true
    });
    return UnlockConfig;
}(UnlockConfigStruct_1.default));
exports.default = UnlockConfig;
},{"../../Game":546,"../ConfigStructs/UnlockConfigStruct":116}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = require("../Libs/signals/Signal");
var Typed3Signal_1 = require("../Libs/signals/Typed3Signal");
var ConfigManagerExpressionList_1 = require("./ConfigManagerExpressionList");
var ConfigManager = /** @class */ (function (_super) {
    __extends(ConfigManager, _super);
    function ConfigManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 消息--加载进度
        _this.sLoadProgress = new Typed3Signal_1.default();
        // 消息--加载完成
        _this.sLoaded = new Signal_1.default();
        // 加载进度
        _this.loadProgress = 0;
        return _this;
    }
    ConfigManager.prototype.loadAllAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.loadAll();
                        _this.sLoaded.addOnce(function () {
                            resolve();
                        }, _this);
                    })];
            });
        });
    };
    // 加载所有
    ConfigManager.prototype.loadAll = function () {
        var _this = this;
        this.loadProgress = 0;
        var count = this.renders.length;
        var loadedNum = 0;
        var onItemLoaded = function () {
            loadedNum++;
            _this.loadProgress = loadedNum / count;
            _this.sLoadProgress.dispatch(loadedNum, count, _this.loadProgress);
            if (loadedNum >= count) {
                _this.onGameLoadedAll();
            }
        };
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].load(this.configLoader, onItemLoaded);
        }
    };
    // 加载完成所有
    ConfigManager.prototype.onGameLoadedAll = function () {
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].onGameLoadedAll();
        }
        this.sLoaded.dispatch();
    };
    return ConfigManager;
}(ConfigManagerExpressionList_1.default));
exports.default = ConfigManager;
},{"../Libs/signals/Signal":640,"../Libs/signals/Typed3Signal":642,"./ConfigManagerExpressionList":90}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigManagerList_1 = require("./ConfigManagerList");
var ConfigManagerExpressionList = /** @class */ (function (_super) {
    __extends(ConfigManagerExpressionList, _super);
    function ConfigManagerExpressionList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ConfigManagerExpressionList;
}(ConfigManagerList_1.default));
exports.default = ConfigManagerExpressionList;
},{"./ConfigManagerList":91}],91:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AvatarConfigReader_1 = require("./ReaderExtends/AvatarConfigReader");
var CompoundConfigReader_1 = require("./ReaderExtends/CompoundConfigReader");
var GashaponConfigReader_1 = require("./ReaderExtends/GashaponConfigReader");
var GlobalConfigReader_1 = require("./ReaderExtends/GlobalConfigReader");
var HeadPortraitConfigReader_1 = require("./ReaderExtends/HeadPortraitConfigReader");
var ItemConfigReader_1 = require("./ReaderExtends/ItemConfigReader");
var ItemTypeConfigReader_1 = require("./ReaderExtends/ItemTypeConfigReader");
var LoaderConfigReader_1 = require("./ReaderExtends/LoaderConfigReader");
var LoadingConfigReader_1 = require("./ReaderExtends/LoadingConfigReader");
var MailConfigReader_1 = require("./ReaderExtends/MailConfigReader");
var MenuConfigReader_1 = require("./ReaderExtends/MenuConfigReader");
var MenuIndexConfigReader_1 = require("./ReaderExtends/MenuIndexConfigReader");
var MsgConfigReader_1 = require("./ReaderExtends/MsgConfigReader");
var PlayerLevelConfigReader_1 = require("./ReaderExtends/PlayerLevelConfigReader");
var PropertyConfigReader_1 = require("./ReaderExtends/PropertyConfigReader");
var RewardConfigReader_1 = require("./ReaderExtends/RewardConfigReader");
var UnlockConfigReader_1 = require("./ReaderExtends/UnlockConfigReader");
/// 配置读取器列表
var ConfigManagerList = /** @class */ (function () {
    function ConfigManagerList() {
        // 读取器列表
        this.renders = [];
        this.avatar = new AvatarConfigReader_1.default();
        this.compound = new CompoundConfigReader_1.default();
        this.gashapon = new GashaponConfigReader_1.default();
        this.global = new GlobalConfigReader_1.default();
        this.headPortrait = new HeadPortraitConfigReader_1.default();
        this.item = new ItemConfigReader_1.default();
        this.itemType = new ItemTypeConfigReader_1.default();
        this.loader = new LoaderConfigReader_1.default();
        this.loading = new LoadingConfigReader_1.default();
        this.mail = new MailConfigReader_1.default();
        this.menu = new MenuConfigReader_1.default();
        this.menuIndex = new MenuIndexConfigReader_1.default();
        this.msg = new MsgConfigReader_1.default();
        this.playerLevel = new PlayerLevelConfigReader_1.default();
        this.property = new PropertyConfigReader_1.default();
        this.reward = new RewardConfigReader_1.default();
        this.unlock = new UnlockConfigReader_1.default();
    }
    // 初始化读取器列表
    ConfigManagerList.prototype.initList = function () {
        this.renders.push(this.avatar);
        this.renders.push(this.compound);
        this.renders.push(this.gashapon);
        this.renders.push(this.global);
        this.renders.push(this.headPortrait);
        this.renders.push(this.item);
        this.renders.push(this.itemType);
        this.renders.push(this.loader);
        this.renders.push(this.loading);
        this.renders.push(this.mail);
        this.renders.push(this.menu);
        this.renders.push(this.menuIndex);
        this.renders.push(this.msg);
        this.renders.push(this.playerLevel);
        this.renders.push(this.property);
        this.renders.push(this.reward);
        this.renders.push(this.unlock);
    };
    return ConfigManagerList;
}());
exports.default = ConfigManagerList;
},{"./ReaderExtends/AvatarConfigReader":132,"./ReaderExtends/CompoundConfigReader":133,"./ReaderExtends/GashaponConfigReader":134,"./ReaderExtends/GlobalConfigReader":135,"./ReaderExtends/HeadPortraitConfigReader":136,"./ReaderExtends/ItemConfigReader":137,"./ReaderExtends/ItemTypeConfigReader":138,"./ReaderExtends/LoaderConfigReader":139,"./ReaderExtends/LoadingConfigReader":140,"./ReaderExtends/MailConfigReader":141,"./ReaderExtends/MenuConfigReader":142,"./ReaderExtends/MenuIndexConfigReader":143,"./ReaderExtends/MsgConfigReader":144,"./ReaderExtends/PlayerLevelConfigReader":145,"./ReaderExtends/PropertyConfigReader":146,"./ReaderExtends/RewardConfigReader":147,"./ReaderExtends/UnlockConfigReader":148}],92:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var AvatarConfigStruct = /** @class */ (function (_super) {
    __extends(AvatarConfigStruct, _super);
    function AvatarConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(AvatarConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("avatar", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfigStruct.prototype, "icon", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_icon;
            var value = Game_1.default.lang.getValue("avatar", this.id, "icon");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_icon;
        },
        enumerable: true,
        configurable: true
    });
    return AvatarConfigStruct;
}(BaseConfig_1.default));
exports.default = AvatarConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],93:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var CompoundConfigStruct = /** @class */ (function (_super) {
    __extends(CompoundConfigStruct, _super);
    function CompoundConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompoundConfigStruct;
}(BaseConfig_1.default));
exports.default = CompoundConfigStruct;
},{"../BaseConfig":61}],94:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTDateTime_1 = require("../ConfigExtends/DTDateTime");
var DTDateTimeStruct = /** @class */ (function (_super) {
    __extends(DTDateTimeStruct, _super);
    function DTDateTimeStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTDateTimeStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTDateTime_1.default();
        config.y = csvGetInt(csv, 0);
        config.m = csvGetInt(csv, 1);
        config.d = csvGetInt(csv, 2);
        config.h = csvGetInt(csv, 3);
        config.mm = csvGetInt(csv, 4);
        config.s = csvGetInt(csv, 5);
        return config;
    };
    DTDateTimeStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTDateTime_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTDateTimeStruct;
}(BaseConfig_1.default));
exports.default = DTDateTimeStruct;
},{"../BaseConfig":61,"../ConfigExtends/DTDateTime":66}],95:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTFixItemNum_1 = require("../ConfigExtends/DTFixItemNum");
var DTFixItemNumStruct = /** @class */ (function (_super) {
    __extends(DTFixItemNumStruct, _super);
    function DTFixItemNumStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTFixItemNumStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTFixItemNum_1.default();
        config.itemType = csvGetInt(csv, 0);
        config.itemId = csvGetInt(csv, 1);
        config.itemNum = csvGetInt(csv, 2);
        return config;
    };
    DTFixItemNumStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTFixItemNum_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTFixItemNumStruct;
}(BaseConfig_1.default));
exports.default = DTFixItemNumStruct;
},{"../BaseConfig":61,"../ConfigExtends/DTFixItemNum":67}],96:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var DTItemNumStruct = /** @class */ (function (_super) {
    __extends(DTItemNumStruct, _super);
    function DTItemNumStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTItemNumStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTItemNum_1.default();
        config.itemId = csvGetInt(csv, 0);
        config.itemNum = csvGetInt(csv, 1);
        return config;
    };
    DTItemNumStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTItemNum_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTItemNumStruct;
}(BaseConfig_1.default));
exports.default = DTItemNumStruct;
},{"../BaseConfig":61,"../ConfigExtends/DTItemNum":68}],97:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTPerformActoin_1 = require("../ConfigExtends/DTPerformActoin");
var DTPerformActoinStruct = /** @class */ (function (_super) {
    __extends(DTPerformActoinStruct, _super);
    function DTPerformActoinStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTPerformActoinStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTPerformActoin_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        config.v3 = csvGetInt(csv, 2);
        return config;
    };
    DTPerformActoinStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTPerformActoin_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTPerformActoinStruct;
}(BaseConfig_1.default));
exports.default = DTPerformActoinStruct;
},{"../BaseConfig":61,"../ConfigExtends/DTPerformActoin":69}],98:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTRewardRandom_1 = require("../ConfigExtends/DTRewardRandom");
var DTRewardRandomStruct = /** @class */ (function (_super) {
    __extends(DTRewardRandomStruct, _super);
    function DTRewardRandomStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTRewardRandomStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTRewardRandom_1.default();
        config.weight = csvGetInt(csv, 0);
        config.itemType = csvGetInt(csv, 1);
        config.itemId = csvGetInt(csv, 2);
        config.itemNum = csvGetInt(csv, 3);
        return config;
    };
    DTRewardRandomStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTRewardRandom_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTRewardRandomStruct;
}(BaseConfig_1.default));
exports.default = DTRewardRandomStruct;
},{"../BaseConfig":61,"../ConfigExtends/DTRewardRandom":70}],99:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTValue2_1 = require("../ConfigExtends/DTValue2");
var DTValue2Struct = /** @class */ (function (_super) {
    __extends(DTValue2Struct, _super);
    function DTValue2Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTValue2Struct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTValue2_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        return config;
    };
    DTValue2Struct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTValue2_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTValue2Struct;
}(BaseConfig_1.default));
exports.default = DTValue2Struct;
},{"../BaseConfig":61,"../ConfigExtends/DTValue2":71}],100:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTValue3_1 = require("../ConfigExtends/DTValue3");
var DTValue3Struct = /** @class */ (function (_super) {
    __extends(DTValue3Struct, _super);
    function DTValue3Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTValue3Struct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTValue3_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        config.v3 = csvGetInt(csv, 2);
        return config;
    };
    DTValue3Struct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTValue3_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTValue3Struct;
}(BaseConfig_1.default));
exports.default = DTValue3Struct;
},{"../BaseConfig":61,"../ConfigExtends/DTValue3":72}],101:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTVector2_1 = require("../ConfigExtends/DTVector2");
var DTVector2Struct = /** @class */ (function (_super) {
    __extends(DTVector2Struct, _super);
    function DTVector2Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTVector2Struct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTVector2_1.default();
        config.x = csvGetFloat(csv, 0);
        config.y = csvGetFloat(csv, 1);
        return config;
    };
    DTVector2Struct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTVector2_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTVector2Struct;
}(BaseConfig_1.default));
exports.default = DTVector2Struct;
},{"../BaseConfig":61,"../ConfigExtends/DTVector2":73}],102:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var GashaponConfigStruct = /** @class */ (function (_super) {
    __extends(GashaponConfigStruct, _super);
    function GashaponConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GashaponConfigStruct;
}(BaseConfig_1.default));
exports.default = GashaponConfigStruct;
},{"../BaseConfig":61}],103:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var GlobalConfigStruct = /** @class */ (function (_super) {
    __extends(GlobalConfigStruct, _super);
    function GlobalConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GlobalConfigStruct;
}(BaseConfig_1.default));
exports.default = GlobalConfigStruct;
},{"../BaseConfig":61}],104:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var HeadPortraitConfigStruct = /** @class */ (function (_super) {
    __extends(HeadPortraitConfigStruct, _super);
    function HeadPortraitConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(HeadPortraitConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("headPortrait", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return HeadPortraitConfigStruct;
}(BaseConfig_1.default));
exports.default = HeadPortraitConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],105:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ItemConfigStruct = /** @class */ (function (_super) {
    __extends(ItemConfigStruct, _super);
    function ItemConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ItemConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("item", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfigStruct.prototype, "item_des", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_item_des;
            var value = Game_1.default.lang.getValue("item", this.id, "item_des");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_item_des;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfigStruct.prototype, "get_way_explain", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_get_way_explain;
            var value = Game_1.default.lang.getValue("item", this.id, "get_way_explain");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_get_way_explain;
        },
        enumerable: true,
        configurable: true
    });
    return ItemConfigStruct;
}(BaseConfig_1.default));
exports.default = ItemConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],106:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ItemTypeConfigStruct = /** @class */ (function (_super) {
    __extends(ItemTypeConfigStruct, _super);
    function ItemTypeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ItemTypeConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("itemType", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return ItemTypeConfigStruct;
}(BaseConfig_1.default));
exports.default = ItemTypeConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],107:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var LoaderConfigStruct = /** @class */ (function (_super) {
    __extends(LoaderConfigStruct, _super);
    function LoaderConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoaderConfigStruct;
}(BaseConfig_1.default));
exports.default = LoaderConfigStruct;
},{"../BaseConfig":61}],108:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var LoadingConfigStruct = /** @class */ (function (_super) {
    __extends(LoadingConfigStruct, _super);
    function LoadingConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoadingConfigStruct;
}(BaseConfig_1.default));
exports.default = LoadingConfigStruct;
},{"../BaseConfig":61}],109:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MailConfigStruct = /** @class */ (function (_super) {
    __extends(MailConfigStruct, _super);
    function MailConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MailConfigStruct.prototype, "title", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_title;
            var value = Game_1.default.lang.getValue("mail", this.id, "title");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MailConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_content;
            var value = Game_1.default.lang.getValue("mail", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return MailConfigStruct;
}(BaseConfig_1.default));
exports.default = MailConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],110:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MenuConfigStruct = /** @class */ (function (_super) {
    __extends(MenuConfigStruct, _super);
    function MenuConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MenuConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("menu", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return MenuConfigStruct;
}(BaseConfig_1.default));
exports.default = MenuConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],111:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var MenuIndexConfigStruct = /** @class */ (function (_super) {
    __extends(MenuIndexConfigStruct, _super);
    function MenuIndexConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuIndexConfigStruct;
}(BaseConfig_1.default));
exports.default = MenuIndexConfigStruct;
},{"../BaseConfig":61}],112:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MsgConfigStruct = /** @class */ (function (_super) {
    __extends(MsgConfigStruct, _super);
    function MsgConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MsgConfigStruct.prototype, "notice", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_notice;
            var value = Game_1.default.lang.getValue("msg", this.id, "notice");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_notice;
        },
        enumerable: true,
        configurable: true
    });
    return MsgConfigStruct;
}(BaseConfig_1.default));
exports.default = MsgConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],113:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var PlayerLevelConfigStruct = /** @class */ (function (_super) {
    __extends(PlayerLevelConfigStruct, _super);
    function PlayerLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = PlayerLevelConfigStruct;
},{"../BaseConfig":61}],114:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var PropertyConfigStruct = /** @class */ (function (_super) {
    __extends(PropertyConfigStruct, _super);
    function PropertyConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PropertyConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("property", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PropertyConfigStruct.prototype, "addname", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_addname;
            var value = Game_1.default.lang.getValue("property", this.id, "addname");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_addname;
        },
        enumerable: true,
        configurable: true
    });
    return PropertyConfigStruct;
}(BaseConfig_1.default));
exports.default = PropertyConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],115:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var RewardConfigStruct = /** @class */ (function (_super) {
    __extends(RewardConfigStruct, _super);
    function RewardConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RewardConfigStruct;
}(BaseConfig_1.default));
exports.default = RewardConfigStruct;
},{"../BaseConfig":61}],116:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var UnlockConfigStruct = /** @class */ (function (_super) {
    __extends(UnlockConfigStruct, _super);
    function UnlockConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(UnlockConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("unlock", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfigStruct.prototype, "touch_txt", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_touch_txt;
            var value = Game_1.default.lang.getValue("unlock", this.id, "touch_txt");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_touch_txt;
        },
        enumerable: true,
        configurable: true
    });
    return UnlockConfigStruct;
}(BaseConfig_1.default));
exports.default = UnlockConfigStruct;
},{"../../Game":546,"../BaseConfig":61}],117:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConstConfig = /** @class */ (function () {
    function ConstConfig() {
        /** 公共 */
        this.common = new Common();
        /** 拍摄 */
        this.studio = new Studio();
    }
    return ConstConfig;
}());
exports.default = ConstConfig;
/** 公共 */
var Common = /** @class */ (function () {
    function Common() {
    }
    return Common;
}());
/** 拍摄 */
var Studio = /** @class */ (function () {
    function Studio() {
        /** 选择剧本--海报动画持续时间 */
        this.Story_StoryIcon_Duration = 700;
        /** 选择剧本--内容渐显持续时间 */
        this.Story_Content_Duration = 500;
        /** 标签匹配动画间隔 */
        this.MatchingDisplay_Interval = 500;
        /** 标签匹配列表滚动动画持续时间 */
        this.MatchingDisplay_Duration = 1000;
        this.MatchingDisplay_Skip_Interval = 500;
        this.RollingDuration = 1000;
        this.CommentTweenAlpha = 400;
        /**后续收益-item移除动画时长 */
        this.Continue_Remove_Duration = 100;
    }
    return Studio;
}());
},{}],118:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfigRender_1 = require("./BaseConfigRender");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var CsvConfigRender = /** @class */ (function (_super) {
    __extends(CsvConfigRender, _super);
    function CsvConfigRender() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 单元格分隔符
        _this.csvDelimiter = "\t";
        // 单元格分隔符 替换
        _this.csvSeparatorReplace = null;
        // 行分隔符 替换
        _this.csvLineSeparatorReplace = "|n|";
        // 表头--类型
        _this.headTypes = new Dictionary_1.default();
        // 表头--索引
        _this.headKeyEns = new Dictionary_1.default();
        // 表头--字段
        _this.headKeyFields = new Dictionary_1.default();
        // 表头--中文
        _this.headKeyCns = new Dictionary_1.default();
        return _this;
    }
    // 替换分割符
    CsvConfigRender.prototype.ReplaceSpearator = function (txt) {
        if (this.tableName == "TextFgui" && txt.indexOf(this.csvLineSeparatorReplace) != -1) {
            var a = 1;
        }
        txt = txt.replace(/\|n\|/g, "\n");
        // if (!isNullOrEmpty(this.csvSeparatorReplace))
        // {
        //     txt = txt.replaceAll(this.csvSeparatorReplace, this.csvDelimiter);
        // }
        txt = txt.replace(/\r/g, "");
        return txt;
    };
    // 加载配置
    CsvConfigRender.prototype.load = function (configLoader, onComplete) {
        var _this = this;
        configLoader.loadConfig(this.getConfigPath(), function (txt, path) {
            _this.parse(txt);
            // console.log(`配置 ${this.path} 加载完成`);
            if (onComplete) {
                onComplete(_this);
            }
            configLoader.unloadConfig(_this.getConfigPath());
        });
    };
    // 重新加载配置
    CsvConfigRender.prototype.reload = function (configLoader, onComplete) {
        this.clear();
        this.load(configLoader, onComplete);
    };
    // 清理
    CsvConfigRender.prototype.clear = function () {
        this.headTypes.clear();
        this.headKeyEns.clear();
        this.headKeyFields.clear();
        this.headKeyCns.clear();
        _super.prototype.clear.call(this);
    };
    CsvConfigRender.prototype.parse = function (txt) {
        if (txt == null) {
            console.error(this.tableName + ": txt=" + txt);
            return;
        }
        var lines = txt.split('\n');
        var line;
        var csv;
        line = lines[0];
        csv = line.split(this.csvDelimiter);
        this.ParseHeadTypes(csv);
        line = lines[1];
        csv = line.split(this.csvDelimiter);
        this.ParseHeadKeyCN(csv);
        line = lines[2];
        csv = line.split(this.csvDelimiter);
        this.ParseHeadKeyEN(csv);
        for (var i = 3; i < lines.length; i++) {
            line = lines[i];
            if (isNullOrEmpty(line))
                continue;
            csv = line.split(this.csvDelimiter);
            for (var j = 0; j < csv.length; j++) {
                csv[j] = this.ReplaceSpearator(csv[j]);
            }
            this.ParseCsv(csv);
        }
    };
    CsvConfigRender.prototype.ParseHeadTypes = function (csv) {
        var key;
        for (var i = 0; i < csv.length; i++) {
            key = csv[i];
            if (!isNullOrEmpty(key)) {
                key = key.trim();
                this.headTypes.add(i, key);
            }
        }
    };
    CsvConfigRender.prototype.ParseHeadKeyCN = function (csv) {
        var key;
        for (var i = 0; i < csv.length; i++) {
            key = this.ReplaceSpearator(csv[i]);
            if (!isNullOrEmpty(key)) {
                key = key.trim();
                this.headKeyCns.add(i, key);
            }
        }
    };
    CsvConfigRender.prototype.ParseHeadKeyEN = function (csv) {
        var key;
        for (var i = 0; i < csv.length; i++) {
            key = csv[i];
            if (!isNullOrEmpty(key)) {
                key = key.trim();
                if (this.headKeyEns.hasKey(key)) {
                    console.error(this.tableName + ": ParseHeadKeyEN \u5DF2\u7ECF\u5B58\u5728key= " + key + ",  i = " + i);
                }
                this.headKeyEns.add(key, i);
                this.headKeyFields.add(i, key);
            }
        }
    };
    CsvConfigRender.prototype.ParseCsv = function (csv) {
    };
    CsvConfigRender.prototype.GetHeadType = function (index) {
        return this.headTypes.getValue(index);
    };
    CsvConfigRender.prototype.GetHeadField = function (index) {
        return this.headKeyFields.getValue(index);
    };
    CsvConfigRender.prototype.GetHeadIndex = function (enName) {
        if (this.headKeyEns.hasKey(enName)) {
            return this.headKeyEns.getValue(enName);
        }
        console.error(this.tableName + ": headKeyEns[" + enName + "] = -1");
        return -1;
    };
    /** 游戏所有配置加载完成 */
    CsvConfigRender.prototype.onGameLoadedAll = function () {
    };
    return CsvConfigRender;
}(BaseConfigRender_1.default));
exports.default = CsvConfigRender;
},{"../Libs/Helpers/Dictionary":626,"./BaseConfigRender":62}],119:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigFieldType = /** @class */ (function () {
    function ConfigFieldType() {
    }
    ConfigFieldType.MString = "string";
    ConfigFieldType.MStringArray = "string[]";
    return ConfigFieldType;
}());
exports.default = ConfigFieldType;
},{}],120:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Res_1 = require("./Res");
var GameURL = /** @class */ (function () {
    function GameURL() {
    }
    Object.defineProperty(GameURL, "serverCmdUrl", {
        get: function () {
            return Res_1.default.GmConfig + 'ServerGM.json';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameURL, "clientCmdUrl", {
        get: function () {
            return Res_1.default.GmConfig + 'ClientGM.json';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameURL, "serverListUrl", {
        get: function () {
            return this._serverListUrl;
        },
        enumerable: true,
        configurable: true
    });
    GameURL.getServerMainUrl = function (serverItem) {
        if (serverItem) {
            if (serverItem.https) {
                return "https://" + serverItem.ip + ":" + serverItem.port;
            }
            else {
                return "http://" + serverItem.ip + ":" + serverItem.port;
            }
        }
    };
    GameURL._serverListUrl = "ServerList.json";
    return GameURL;
}());
exports.default = GameURL;
},{"./Res":124}],121:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 代码文本--启动游戏加载界面时用，这时还没有加载配置代码。
// 处理框架可以使用
// 其他模块不准在这里添加，可以到TEXT.TS里添加
// ---------------------------
var LaunchText = /** @class */ (function () {
    function LaunchText() {
        // 进度条提示
        this.tips = [
            "正在炸爆米花...",
            "正在驱赶放映泥棒...",
            "正在张贴海报...",
            "正在DIY特制3D眼镜...",
            "影院的负责人是个天才!"
        ];
        this.btnYes = "确定";
        this.LoadedConfig = "加载配置文件";
        this.LoadedUI = "加载UI";
        this.LoadedEnd = "加载完成";
    }
    //==============================================
    // 英文
    //----------------------------------------------
    LaunchText.prototype.setLangForEn = function () {
        this.tips =
            [
                "Hiring actors...",
                "Filming movies...",
                "Popping popcorn...",
                "Selling tickets...",
                "Owner of this cinema is a genius!"
            ];
        this.btnYes = "Ok";
        this.LoadedConfig = "Loading Config...";
        this.LoadedUI = "Loading UI...";
        this.LoadedEnd = "Loading Complete";
    };
    return LaunchText;
}());
exports.default = LaunchText;
},{}],122:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportKey生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgKey = /** @class */ (function () {
    function MsgKey() {
    }
    // 0 KeyField
    // 1 KeyValue
    // 2 ID
    // 3 ModuleName
    // 4 Name
    /** 1000  测试 --- 测试 */
    MsgKey.Msg_test = "Msg_test";
    /** 1001  账号信息 --- 名称长度不对 */
    MsgKey.account_name_long = "account_name_long";
    /** 1002  账号信息 --- 名称为纯数字 */
    MsgKey.account_name_num = "account_name_num";
    /** 1003  账号信息 --- 名称开头和结尾有空格 */
    MsgKey.account_name_space = "account_name_space";
    /** 1004  账号信息 --- 名称与原名相同 */
    MsgKey.account_name_repeat = "account_name_repeat";
    /** 1005  账号信息 --- 名称中有屏蔽词 */
    MsgKey.account_name_blockword = "account_name_blockword";
    /** 1006  账号信息 --- 名称与其他玩家重名 */
    MsgKey.account_name_repeatothers = "account_name_repeatothers";
    /** 1007  账号信息 --- 公司重命名成功 */
    MsgKey.account_name_ok = "account_name_ok";
    /** 1008  账号信息 --- 频繁修改个性签名提示 */
    MsgKey.account_name_often = "account_name_often";
    /** 1009  生产 --- 一键生产 */
    MsgKey.produce_one_click = "produce_one_click";
    /** 1010  生产 --- 一键领取达仓库上限 */
    MsgKey.produce_warehouse_max = "produce_warehouse_max";
    /** 1011  生产 --- 街区等级不够 */
    MsgKey.produce_recvip_less = "produce_recvip_less";
    /** 1012  生产 --- 没有足够的道具 */
    MsgKey.produce_item_less = "produce_item_less";
    /** 1013  生产 --- 没有足够的图纸 */
    MsgKey.produce_paper_less = "produce_paper_less";
    /** 1014  生产 --- 生产线累计奖励到达上限 */
    MsgKey.produce_item_max = "produce_item_max";
    /** 1015  生产 --- 生产线队列到达上限 */
    MsgKey.produce_line_max = "produce_line_max";
    /** 1016  生产 --- 前置生产线未解锁 */
    MsgKey.produce_pre_unlock = "produce_pre_unlock";
    /** 1017  生产 --- 钻石不足 */
    MsgKey.produce_diamond_less = "produce_diamond_less";
    /** 1018  生产 --- 金币不足 */
    MsgKey.produce_gold_less = "produce_gold_less";
    /** 1019  生产 --- 街区等级不够 */
    MsgKey.produce_provip_less = "produce_provip_less";
    /** 1020  生产 --- 所有生产线队列到达上限 */
    MsgKey.produce_lines_max = "produce_lines_max";
    /** 1021  拍摄 --- 未开启媒体访问提示 */
    MsgKey.non_midia_visit = "non_midia_visit";
    /** 1022  拍摄 --- 没有符合条件的艺人 */
    MsgKey.movie_non_suitable_actor = "movie_non_suitable_actor";
    /** 1023  拍摄 --- 没有足够数量的艺人 */
    MsgKey.movie_non_enough_actor = "movie_non_enough_actor";
    /** 1024  拍摄 --- 艺人招募提示 */
    MsgKey.movie_actor_recruit = "movie_actor_recruit";
    /** 1025  拍摄 --- 比赛排行重置提示 */
    MsgKey.ranking_list_reset = "ranking_list_reset";
    /** 1026  拍摄 --- 提前下映提示 */
    MsgKey.movie_stop_tips = "movie_stop_tips";
    /** 1027  排行 --- 排行榜滚动文字1 */
    MsgKey.ranking_list_tips1 = "ranking_list_tips1";
    /** 1028  排行 --- 排行榜滚动文字2 */
    MsgKey.ranking_list_tips2 = "ranking_list_tips2";
    /** 1029  排行 --- 票房排行隐藏显示提示 */
    MsgKey.movie_ranking_list_hidden = "movie_ranking_list_hidden";
    /** 1030  街区 --- 街区升档需求提示 */
    MsgKey.block_upgrade_requirement = "block_upgrade_requirement";
    /** 1031  街区 --- 奖杯获取提示 */
    MsgKey.trophy_tips = "trophy_tips";
    /** 1032  街区 --- 奖杯获取补充提示 */
    MsgKey.trophy_tips2 = "trophy_tips2";
    /** 1033  街区 --- 完成街区提示 */
    MsgKey.finished_block = "finished_block";
    /** 1034  院线 --- 院线签约 */
    MsgKey.cinema_sign = "cinema_sign";
    /** 1035  排行榜 --- 奖励说明1 */
    MsgKey.ranking_list_instruction1 = "ranking_list_instruction1";
    /** 1036  排行榜 --- 奖励说明2 */
    MsgKey.ranking_list_instruction2 = "ranking_list_instruction2";
    /** 1037  排行榜 --- 奖励说明3 */
    MsgKey.ranking_list_instruction3 = "ranking_list_instruction3";
    /** 1038  排行榜 --- 修改服务器名称 */
    MsgKey.change_server_name = "change_server_name";
    /** 1039  影城签约 --- 未选择签约影城 */
    MsgKey.choose_cinema = "choose_cinema";
    /** 1040  拍摄 --- 领取收益提示 */
    MsgKey.movie_get_tips = "movie_get_tips";
    /** 1041  拍摄 --- 剧本契合提示 */
    MsgKey.movie_story_coordination = "movie_story_coordination";
    /** 1042  拍摄 --- 角色契合提示 */
    MsgKey.movie_character_coordination = "movie_character_coordination";
    /** 1043  拍摄 --- 剧本角色契合提示 */
    MsgKey.movie_story_character_coordination = "movie_story_character_coordination";
    /** 1044  拍摄 --- 剧本角色无契合 */
    MsgKey.movie_none_coordination = "movie_none_coordination";
    /** 1049  拍摄 --- 电影掉落提示 */
    MsgKey.movie_drop_tips = "movie_drop_tips";
    /** 1050  拍摄 --- 玩家拍摄次数过多 */
    MsgKey.movie_too_much = "movie_too_much";
    /** 1051  拍摄 --- 市场风向暴击1 */
    MsgKey.movie_critical1 = "movie_critical1";
    /** 1052  拍摄 --- 市场风向暴击2 */
    MsgKey.movie_critical2 = "movie_critical2";
    /** 1053  拍摄 --- 市场风向暴击3 */
    MsgKey.movie_critical3 = "movie_critical3";
    /** 1054  拍摄 --- 市场风向暴击4 */
    MsgKey.movie_critical4 = "movie_critical4";
    /** 1060  拍摄 --- 剧本目标未达成 */
    MsgKey.movie_target_fail = "movie_target_fail";
    /** 1061  拍摄 --- 电影未大卖提示 */
    MsgKey.movie_big_sell_tips = "movie_big_sell_tips";
    /** 1062  拍摄 --- 持续收益结束提示 */
    MsgKey.earnings_over = "earnings_over";
    /** 1063  奥斯卡 --- 票房未入榜提示 */
    MsgKey.oscar_non_rank_tips = "oscar_non_rank_tips";
    /** 1064  奥斯卡 --- 总票房未入榜提示 */
    MsgKey.oscar_non_rank_tips2 = "oscar_non_rank_tips2";
    /** 1065  奥斯卡 --- 未拍摄电影提示 */
    MsgKey.oscar_non_movie_tips = "oscar_non_movie_tips";
    /** 1066  奥斯卡 --- 未大卖提示 */
    MsgKey.oscar_non_bigsell_tips = "oscar_non_bigsell_tips";
    /** 1067  奥斯卡 --- 未完成目标提示 */
    MsgKey.oscar_non_target_tips = "oscar_non_target_tips";
    /** 1068  街区 --- 街区升档提示 */
    MsgKey.block_upgrade_msg = "block_upgrade_msg";
    /** 1070  拍摄 --- 电影大卖报纸1 */
    MsgKey.movie_big_sell1 = "movie_big_sell1";
    /** 1071  拍摄 --- 电影大卖报纸2 */
    MsgKey.movie_big_sell2 = "movie_big_sell2";
    /** 1072  拍摄 --- 电影大卖报纸3 */
    MsgKey.movie_big_sell3 = "movie_big_sell3";
    /** 1080  奥斯卡 --- 奥斯卡男演员无提名 */
    MsgKey.oscar_non_actor = "oscar_non_actor";
    /** 1081  奥斯卡 --- 奥斯卡女演员无提名 */
    MsgKey.oscar_non_actress = "oscar_non_actress";
    /** 1082  奥斯卡 --- 奥斯卡最佳表演无提名 */
    MsgKey.oscar_non_performance = "oscar_non_performance";
    /** 1083  奥斯卡 --- 奥斯卡最佳艺术无提名 */
    MsgKey.oscar_non_art = "oscar_non_art";
    /** 1084  奥斯卡 --- 奥斯卡最受欢迎无提名 */
    MsgKey.oscar_non_popular = "oscar_non_popular";
    /** 1085  奥斯卡 --- 奥斯卡最佳男演员 */
    MsgKey.oscar_actor = "oscar_actor";
    /** 1086  奥斯卡 --- 奥斯卡最佳女演员 */
    MsgKey.oscar_actress = "oscar_actress";
    /** 1087  奥斯卡 --- 奥斯卡最佳表演电影 */
    MsgKey.oscar_performance = "oscar_performance";
    /** 1088  奥斯卡 --- 奥斯卡最佳艺术电影 */
    MsgKey.oscar_art = "oscar_art";
    /** 1089  奥斯卡 --- 奥斯卡最受欢迎电影 */
    MsgKey.oscar_popular = "oscar_popular";
    /** 1090  拍摄 --- 奥斯卡前禁止拍摄电影 */
    MsgKey.oscar_forbid_movie = "oscar_forbid_movie";
    /** 1091  邮件 --- 没有可删除的邮件 */
    MsgKey.non_deletable_mail = "non_deletable_mail";
    /** 1092  邮件 --- 没有可领取的邮件 */
    MsgKey.non_can_receive_mail = "non_can_receive_mail";
    /** 1093  邮件 --- 空邮箱 */
    MsgKey.non_mail = "non_mail";
    /** 1094  拍摄 --- 剧本有目标 */
    MsgKey.story_target_tips = "story_target_tips";
    /** 1095  拍摄 --- 剧本没有目标 */
    MsgKey.story_non_target_tips = "story_non_target_tips";
    /** 1096  拍摄 --- 媒体评价提示 */
    MsgKey.story_midia_tips = "story_midia_tips";
    /** 1097  合作 --- id无效 */
    MsgKey.null_id = "null_id";
    /** 1098  合作 --- 目标玩家已合作 */
    MsgKey.cooperated_player = "cooperated_player";
    /** 1099  合作 --- 本周合作次数不足 */
    MsgKey.no_cooperation_num = "no_cooperation_num";
    /** 1100  合作 --- 没有未完成的订单 */
    MsgKey.no_cooperation_orders = "no_cooperation_orders";
    /** 1101  合作 --- 解除合作 */
    MsgKey.relieve_cooperation = "relieve_cooperation";
    /** 1102  合作 --- 重复邀请 */
    MsgKey.repetition_cooperation = "repetition_cooperation";
    /** 1103  仓库 --- 赠送资产 */
    MsgKey.null_actor_send = "null_actor_send";
    /** 1104  建筑 --- 建造确认 */
    MsgKey.build_confirm = "build_confirm";
    /** 1105  建筑 --- 材料不足 */
    MsgKey.build_non_material = "build_non_material";
    /** 1106  建筑 --- 等级不足 */
    MsgKey.build_non_level = "build_non_level";
    /** 1107  建筑 --- 没有前置建筑 */
    MsgKey.build_non_prebuilding = "build_non_prebuilding";
    /** 1108  建筑 --- 街区档次不足 */
    MsgKey.build_non_block = "build_non_block";
    /** 1109  建筑 --- 房间已建造提示 */
    MsgKey.build_be_builded = "build_be_builded";
    /** 1110  拍摄 --- 剧本与市场观众对比差1 */
    MsgKey.movie_market_bad1 = "movie_market_bad1";
    /** 1111  拍摄 --- 剧本与市场观众对比差2 */
    MsgKey.movie_market_bad2 = "movie_market_bad2";
    /** 1112  拍摄 --- 剧本和市场观众对比好1 */
    MsgKey.movie_market_good1 = "movie_market_good1";
    /** 1113  拍摄 --- 剧本和市场观众对比好2 */
    MsgKey.movie_market_good2 = "movie_market_good2";
    /** 1114  拍摄 --- 电影艺人报酬提示 */
    MsgKey.movie_actor_pay = "movie_actor_pay";
    /** 1115  拍摄 --- 艺人参加媒体访问提示 */
    MsgKey.movie_mediavisit_tips = "movie_mediavisit_tips";
    /** 1116  拍摄 --- 电影熟练度加成 */
    MsgKey.movie_type_addition = "movie_type_addition";
    /** 1117  拍摄 --- 签约院线提示 */
    MsgKey.movie_cinema_tips = "movie_cinema_tips";
    /** 1118  拍摄 --- 未签约院线提示 */
    MsgKey.movie_unlock_cinema_tips = "movie_unlock_cinema_tips";
    /** 1119  拍摄 --- 下映后市场反馈 */
    MsgKey.movie_market_feedback = "movie_market_feedback";
    /** 1120  拍摄 --- 下映后剧本反馈 */
    MsgKey.movie_story_feedback = "movie_story_feedback";
    /** 1121  拍摄 --- 下映后拍摄类型反馈 */
    MsgKey.movie_shoottype_feedback = "movie_shoottype_feedback";
    /** 1122  拍摄 --- 许可证回复提示 */
    MsgKey.movie_licence_finish_tips = "movie_licence_finish_tips";
    /** 1123  拍摄 --- 拍摄类型提示 */
    MsgKey.movie_type_tips = "movie_type_tips";
    /** 1124  拍摄 --- 拍摄1阶段提示 */
    MsgKey.movie_state_tips1 = "movie_state_tips1";
    /** 1125  拍摄 --- 拍摄2阶段提示 */
    MsgKey.movie_state_tips2 = "movie_state_tips2";
    /** 1126  拍摄 --- 拍摄3阶段提示 */
    MsgKey.movie_state_tips3 = "movie_state_tips3";
    /** 1150  仓库 --- 拥有艺人提示 */
    MsgKey.bag_own_actor_tips = "bag_own_actor_tips";
    /** 1151  仓库 --- 合成物品不足提示 */
    MsgKey.bag_no_compound_tips = "bag_no_compound_tips";
    /** 1152  仓库 --- 未选择合成提示 */
    MsgKey.bag_no_compound_choose_tips = "bag_no_compound_choose_tips";
    /** 1153  仓库 --- 未选择赠送提示 */
    MsgKey.bag_no_send_choose_tips = "bag_no_send_choose_tips";
    /** 1154  仓库 --- 未选择拆分提示 */
    MsgKey.bag_no_split_choose_tips = "bag_no_split_choose_tips";
    /** 1155  仓库 --- 未选择出售提示 */
    MsgKey.bag_no_sell_choose_tips = "bag_no_sell_choose_tips";
    /** 1156  奥斯卡 --- 奥斯卡获奖发言标题 */
    MsgKey.oscar_presentation_title = "oscar_presentation_title";
    /** 1157  奥斯卡 --- 奥斯卡预设发言1 */
    MsgKey.oscar_default_presentation1 = "oscar_default_presentation1";
    /** 1158  奥斯卡 --- 奥斯卡预设发言2 */
    MsgKey.oscar_default_presentation2 = "oscar_default_presentation2";
    /** 1159  奥斯卡 --- 奥斯卡预设发言3 */
    MsgKey.oscar_default_presentation3 = "oscar_default_presentation3";
    /** 1160  拍摄 --- 上映第N天 */
    MsgKey.movie_day = "movie_day";
    /** 1161  拍摄 --- 上映天数 */
    MsgKey.movie_remaining_days = "movie_remaining_days";
    /** 1162  拍摄 --- 剧本时长 */
    MsgKey.movie_story_times = "movie_story_times";
    /** 1163  拍摄 --- 角色契合 */
    MsgKey.movie_character_coordination_tips = "movie_character_coordination_tips";
    /** 1164  拍摄 --- 剧本契合提示 */
    MsgKey.movie_story_coordination_tips = "movie_story_coordination_tips";
    /** 1165  仓库 --- 没有可赠送资产的艺人 */
    MsgKey.bag_send_no_target = "bag_send_no_target";
    /** 1166  拍摄 --- 电影下映收益时间提示 */
    MsgKey.movie_off_line_remaining_time = "movie_off_line_remaining_time";
    /** 1167  拍摄 --- 电影下映收益提示 */
    MsgKey.movie_off_line_gain_tips = "movie_off_line_gain_tips";
    /** 1168  拍摄 --- 许可证上限提示 */
    MsgKey.movie_licence_limit_tips = "movie_licence_limit_tips";
    /** 1169  拍摄 --- 城市收益解锁提示 */
    MsgKey.movie_city_unlock_tips = "movie_city_unlock_tips";
    /** 1170  拍摄 --- 电影下映收益评价 */
    MsgKey.movie_off_line_gain_evaluation = "movie_off_line_gain_evaluation";
    /** 1171  拍摄 --- 电影下映收益提示 */
    MsgKey.movie_off_line_tips = "movie_off_line_tips";
    /** 1172  拍摄 --- 确认拍摄 */
    MsgKey.movie_confirm = "movie_confirm";
    /** 1173  训练 --- 训练室等级 */
    MsgKey.train_title_level = "train_title_level";
    /** 1174  训练 --- 训练经验加成 */
    MsgKey.train_title_tips = "train_title_tips";
    /** 1175  训练 --- 训练剩余时间 */
    MsgKey.train_remaining_times = "train_remaining_times";
    /** 1176  训练 --- 训练位提示 */
    MsgKey.train_area_tips = "train_area_tips";
    /** 1177  训练 --- 训练经验提示 */
    MsgKey.train_exp = "train_exp";
    /** 1178  训练 --- 训练艺人气泡 */
    MsgKey.train_actor_tips = "train_actor_tips";
    /** 1179  合作 --- 赠送金币美元 */
    MsgKey.cooperated_send = "cooperated_send";
    /** 1180  拍摄 --- 许可证获取提示 */
    MsgKey.movie_licence_get_tips = "movie_licence_get_tips";
    /** 1181  合作 --- 重复领取星级宝箱提示 */
    MsgKey.cooperated_claim_tips = "cooperated_claim_tips";
    /** 2022  订单 --- 订单完成失败 */
    MsgKey.order_fail = "order_fail";
    /** 2023  订单 --- 查看未解锁的订单完成度 */
    MsgKey.order_complete = "order_complete";
    /** 2024  订单 --- 已领取的奖励提示 */
    MsgKey.order_received = "order_received";
    /** 2025  订单 --- npc默认提示 */
    MsgKey.order_npc_default = "order_npc_default";
    /** 2026  公务 --- 公务倒计时 */
    MsgKey.business_countdown = "business_countdown";
    /** 2027  公务 --- 自动批阅没有秘书 */
    MsgKey.business_secretary = "business_secretary";
    /** 2028  公务 --- 全部公务批阅完毕 */
    MsgKey.business_down = "business_down";
    /** 2029  探班 --- 探班倒计时 */
    MsgKey.visit_countdown = "visit_countdown";
    /** 2030  探班 --- 自动接待没有秘书 */
    MsgKey.visit_secretary = "visit_secretary";
    /** 2031  探班 --- 探班操作提示 */
    MsgKey.visit_point = "visit_point";
    /** 2032  市场 --- 艺人国籍不对 */
    MsgKey.market_envoy_wrong1 = "market_envoy_wrong1";
    /** 2033  市场 --- 艺人类型不对 */
    MsgKey.market_envoy_wrong2 = "market_envoy_wrong2";
    /** 2034  市场 --- 艺人年龄不对 */
    MsgKey.market_envoy_wrong3 = "market_envoy_wrong3";
    /** 2035  市场 --- 艺人数值不达标 */
    MsgKey.market_envoy_wrong4 = "market_envoy_wrong4";
    /** 1045  市场 --- 艺人性别不对 */
    MsgKey.market_envoy_wrong5 = "market_envoy_wrong5";
    /** 1046  市场 --- 美元不足 */
    MsgKey.market_dollar_less = "market_dollar_less";
    /** 1047  市场 --- 路演失败 */
    MsgKey.market_show_failure = "market_show_failure";
    /** 2036  剧本 --- 留言内容非法 */
    MsgKey.story_comment_wrong = "story_comment_wrong";
    /** 2037  剧本 --- 点赞数不足 */
    MsgKey.thumbsup_less = "thumbsup_less";
    /** 2038  剧本 --- 搜罗次数不足 */
    MsgKey.story_search_less = "story_search_less";
    /** 2039  剧本 --- 街区等级需求 */
    MsgKey.block_level_less = "block_level_less";
    /** 2040  剧本 --- 搜罗冷却加速成功 */
    MsgKey.story_cd_success = "story_cd_success";
    /** 2041  会议 --- 会议倒计时提示 */
    MsgKey.meeting_time = "meeting_time";
    /** 2042  秘书 --- 本日已购买提示 */
    MsgKey.secretary_bought = "secretary_bought";
    /** 2043  秘书 --- 购买失败提示 */
    MsgKey.secretary_buy_fail = "secretary_buy_fail";
    /** 2044  秘书 --- 未聘用秘书不能购买提示 */
    MsgKey.sectrary_cannot_buy = "sectrary_cannot_buy";
    /** 2045  签到 --- 已签到提示 */
    MsgKey.daily_sign = "daily_sign";
    /** 2046  设置 --- 功能未开放提示 */
    MsgKey.setting_not_open = "setting_not_open";
    /** 2047  设置 --- 礼包兑换成功提示 */
    MsgKey.gift_success = "gift_success";
    /** 2048  设置 --- 礼包已被兑换提示 */
    MsgKey.gift_used = "gift_used";
    /** 2049  设置 --- 礼包码非法提示 */
    MsgKey.gift_illegal = "gift_illegal";
    /** 2050  商城 --- 购买非时间段内商品 */
    MsgKey.shop_period = "shop_period";
    /** 2051  生产 --- 立即完成时档位提示 */
    MsgKey.produce_down = "produce_down";
    /** 2052  生产 --- 升级生产线建筑等级不够 */
    MsgKey.produce_produce_limit = "produce_produce_limit";
    /** 2053  设置 --- 玩家ID */
    MsgKey.player_id = "player_id";
    /** 2054  设置 --- 版本号 */
    MsgKey.version_num = "version_num";
    /** 2055  设置 --- 选择语言 */
    MsgKey.choose_language = "choose_language";
    /** 2056  设置 --- 简中 */
    MsgKey.CHS = "CHS";
    /** 2057  设置 --- 繁中 */
    MsgKey.CHT = "CHT";
    /** 2058  设置 --- 英语 */
    MsgKey.EN = "EN";
    /** 2059  设置 --- 切换语言确认 */
    MsgKey.choose_language_confirm = "choose_language_confirm";
    /** 2060  设置 --- 反馈 */
    MsgKey.feedback_title = "feedback_title";
    /** 2061  设置 --- 反馈文字 */
    MsgKey.feedback_words = "feedback_words";
    /** 2062  设置 --- Q群 */
    MsgKey.Qgroup = "Qgroup";
    /** 2063  设置 --- 微信 */
    MsgKey.Wechat = "Wechat";
    /** 2064  设置 --- 微博 */
    MsgKey.Weibo = "Weibo";
    /** 2065  设置 --- 邮箱 */
    MsgKey.mailbox = "mailbox";
    /** 2066  设置 --- 兑换标题 */
    MsgKey.exchange_title = "exchange_title";
    /** 2067  设置 --- 兑换码输入框 */
    MsgKey.exchange_input = "exchange_input";
    /** 2068  设置 --- 兑换按钮 */
    MsgKey.exhange_button = "exhange_button";
    /** 2069  设置 --- 设置标题 */
    MsgKey.setting_title = "setting_title";
    /** 2070  设置 --- 设置提示 */
    MsgKey.setting_notice = "setting_notice";
    /** 2071  会议 --- 会议开始对话 */
    MsgKey.meeting_wait = "meeting_wait";
    /** 2072  会议 --- 会议目的1 */
    MsgKey.meeting_goal1 = "meeting_goal1";
    /** 2073  会议 --- 会议目的2 */
    MsgKey.meeting_goal2 = "meeting_goal2";
    /** 2074  会议 --- 会议目的3 */
    MsgKey.meeting_goal3 = "meeting_goal3";
    /** 2075  会议 --- 会议目的4 */
    MsgKey.meeting_goal4 = "meeting_goal4";
    /** 2076  会议 --- 平局 */
    MsgKey.meeting_fair = "meeting_fair";
    /** 2077  会议 --- 胜利 */
    MsgKey.meeting_win = "meeting_win";
    /** 2078  会议 --- 失败，谈判破裂 */
    MsgKey.meeting_lose1 = "meeting_lose1";
    /** 2079  会议 --- 失败，奖励减半 */
    MsgKey.meeting_lose2 = "meeting_lose2";
    /** 2080  剧本库 --- 剧本库未解锁 */
    MsgKey.story_stack_locked = "story_stack_locked";
    /** 2081  生产 --- 生产线解锁条件不够 */
    MsgKey.produce_lock = "produce_lock";
    /** 2082  会议 --- 会议弹窗文字 */
    MsgKey.meeting_goal = "meeting_goal";
    /** 2083  会议 --- 会议比试文字 */
    MsgKey.meeting_battle = "meeting_battle";
    /** 2084  会议 --- 会议主管开场白 */
    MsgKey.meeting_boss_hello = "meeting_boss_hello";
    /** 2085  会议 --- 会议客户开场白1 */
    MsgKey.meeting_client_hello1 = "meeting_client_hello1";
    /** 2086  会议 --- 会议客户开场白2 */
    MsgKey.meeting_client_hello2 = "meeting_client_hello2";
    /** 2087  会议 --- 讨价还价主管台词 */
    MsgKey.meeting_bargain1_boss = "meeting_bargain1_boss";
    /** 2088  会议 --- 讨价还价客户台词 */
    MsgKey.meeting_bargain1_client = "meeting_bargain1_client";
    /** 2089  会议 --- 漫天要价主管台词 */
    MsgKey.meeting_bargain2_boss = "meeting_bargain2_boss";
    /** 2090  会议 --- 漫天要价客户台词 */
    MsgKey.meeting_bargain2_client = "meeting_bargain2_client";
    /** 2091  会议 --- 谈判成功/平局主管台词 */
    MsgKey.meeting_bargain_not_fail_boss = "meeting_bargain_not_fail_boss";
    /** 2092  会议 --- 谈判成功/平局客户台词 */
    MsgKey.meeting_bargain_not_fail_client = "meeting_bargain_not_fail_client";
    /** 2093  会议 --- 谈判失败主管台词 */
    MsgKey.meeting_bargain_fail_boss = "meeting_bargain_fail_boss";
    /** 2094  会议 --- 谈判失败客户台词 */
    MsgKey.meeting_bargain_fail_client = "meeting_bargain_fail_client";
    /** 2095  通用 --- 天数计数 */
    MsgKey.day_count = "day_count";
    /** 2100  福利 --- 每日签到标题 */
    MsgKey.daily_sign_title = "daily_sign_title";
    /** 2101  福利 --- 终身秘书标题 */
    MsgKey.secretary_title = "secretary_title";
    /** 2102  福利 --- 申请许可证标题 */
    MsgKey.permition_title = "permition_title";
    /** 2103  福利 --- 月卡标题 */
    MsgKey.month_card_title = "month_card_title";
    /** 2096  会议 --- 会议中场说明 */
    MsgKey.meeting_midtime = "meeting_midtime";
    /** 2104  通用 --- 时长 */
    MsgKey.day_duration = "day_duration";
    /** 2105  七日 --- 超时提示 */
    MsgKey.time_out_sevendays = "time_out_sevendays";
    /** 2106  月卡 --- 月卡名 */
    MsgKey.month_card_type1 = "month_card_type1";
    /** 2107  月卡 --- 至尊月卡名 */
    MsgKey.month_card_type2 = "month_card_type2";
    /** 2108  月卡 --- 首次购买 */
    MsgKey.month_card_firstbuy = "month_card_firstbuy";
    /** 2109  月卡 --- 购买 */
    MsgKey.month_card_buy = "month_card_buy";
    /** 2110  月卡 --- 每日赠礼 */
    MsgKey.month_card_daily_gift = "month_card_daily_gift";
    /** 2111  月卡 --- 赠礼合同说明 */
    MsgKey.month_card_contracts_info = "month_card_contracts_info";
    /** 2112  通用 --- 购买通用字样 */
    MsgKey.icon_buy = "icon_buy";
    /** 2113  通用 --- 剩余天数 */
    MsgKey.days_left = "days_left";
    /** 2114  月卡 --- 特供礼包标题 */
    MsgKey.month_card_special_package1_title = "month_card_special_package1_title";
    /** 2115  月卡 --- 特供礼包标题 */
    MsgKey.month_card_special_package2_title = "month_card_special_package2_title";
    /** 2116  月卡 --- 未拥有月卡 */
    MsgKey.month_card_not_owned1 = "month_card_not_owned1";
    /** 2117  月卡 --- 未拥有至尊月卡 */
    MsgKey.month_card_not_owned2 = "month_card_not_owned2";
    /** 2118  票房目标 --- 进度条文字 */
    MsgKey.box_target_progress1 = "box_target_progress1";
    /** 2119  票房目标 --- 进度条文字 */
    MsgKey.box_target_progress2 = "box_target_progress2";
    /** 2120  票房目标 --- 进度条文字 */
    MsgKey.box_target_progress3 = "box_target_progress3";
    /** 2121  票房目标 --- 进度条文字 */
    MsgKey.box_target_progress4 = "box_target_progress4";
    /** 2122  票房目标 --- 进度条文字 */
    MsgKey.box_target_progress5 = "box_target_progress5";
    /** 2123  通用 --- 许可证上限提示 */
    MsgKey.license_limit = "license_limit";
    /** 2124  许可证申请 --- 未拥有秘书不能申请许可 */
    MsgKey.license_apply_secretary_not_owned = "license_apply_secretary_not_owned";
    /** 2125  合作订单 --- 没有合作订单 */
    MsgKey.cooperative_order_no = "cooperative_order_no";
    /** 2126  合作订单 --- 合作订单成功后提示对方 */
    MsgKey.cooperative_order_notice = "cooperative_order_notice";
    /** 2127  合作订单 --- 装填第二个订单 */
    MsgKey.cooperative_order_repeat = "cooperative_order_repeat";
    /** 2128  秘书 --- 秘书体验次数用尽 */
    MsgKey.secretary_experience = "secretary_experience";
    /** 2129  秘书 --- 前往聘用 */
    MsgKey.go_to_hire = "go_to_hire";
    /** 2130  秘书 --- 未聘用秘书 */
    MsgKey.secretary_not_owned = "secretary_not_owned";
    /** 2131  生产 --- 特殊生产线已达上限 */
    MsgKey.produce_special = "produce_special";
    /** 2132  探班 --- 探班找错人1 */
    MsgKey.visit_wrong1 = "visit_wrong1";
    /** 2133  探班 --- 探班找错人2 */
    MsgKey.visit_wrong2 = "visit_wrong2";
    /** 2134  探班 --- 探班找错人3 */
    MsgKey.visit_wrong3 = "visit_wrong3";
    /** 2135  生产 --- 生产艺人鼓舞建筑限制 */
    MsgKey.produce_inspire_buildlock = "produce_inspire_buildlock";
    /** 2136  生产 --- 生产艺人鼓舞生产线等级限制 */
    MsgKey.produce_inspire_linelock = "produce_inspire_linelock";
    /** 2137  探班 --- 没有艺人 */
    MsgKey.visit_noone = "visit_noone";
    /** 2138  秘书 --- 小秘书随即对话1 */
    MsgKey.secretary_talk1 = "secretary_talk1";
    /** 2139  秘书 --- 小秘书随即对话2 */
    MsgKey.secretary_talk2 = "secretary_talk2";
    /** 2140  秘书 --- 功能标题（无秘书） */
    MsgKey.secretary_title1 = "secretary_title1";
    /** 2141  秘书 --- 功能标题（有秘书） */
    MsgKey.secretary_title2 = "secretary_title2";
    /** 2142  秘书 --- 已拥有小秘书 */
    MsgKey.secretary_owned = "secretary_owned";
    /** 2143  市场 --- 市场解锁第5个大使 */
    MsgKey.market_ambassador = "market_ambassador";
    /** 2144  秘书 --- 秘书福利已领取提示 */
    MsgKey.secretary_gift_received = "secretary_gift_received";
    /** 2145  秘书 --- 小秘书权益说明1 */
    MsgKey.secretary_rights1 = "secretary_rights1";
    /** 2146  秘书 --- 小秘书权益说明2 */
    MsgKey.secretary_rights2 = "secretary_rights2";
    /** 2147  秘书 --- 小秘书权益说明3 */
    MsgKey.secretary_rights3 = "secretary_rights3";
    /** 2148  秘书 --- 小秘书权益说明4 */
    MsgKey.secretary_rights4 = "secretary_rights4";
    /** 2149  秘书 --- 小秘书权益说明5 */
    MsgKey.secretary_rights5 = "secretary_rights5";
    /** 2150  秘书 --- 小秘书权益说明6 */
    MsgKey.secretary_rights6 = "secretary_rights6";
    /** 2151  秘书 --- 小秘书权益说明7 */
    MsgKey.secretary_rights7 = "secretary_rights7";
    /** 2152  秘书 --- 小秘书权益说明8 */
    MsgKey.secretary_rights8 = "secretary_rights8";
    /** 2153  秘书 --- 小秘书权益说明9 */
    MsgKey.secretary_rights9 = "secretary_rights9";
    /** 2154  秘书 --- 小秘书权益说明10 */
    MsgKey.secretary_rights10 = "secretary_rights10";
    /** 2155  秘书 --- 自动市场宣传 */
    MsgKey.secretary_auto1 = "secretary_auto1";
    /** 2156  秘书 --- 自动接待粉丝 */
    MsgKey.secretary_auto2 = "secretary_auto2";
    /** 2157  秘书 --- 自动批阅公务 */
    MsgKey.secretary_auto3 = "secretary_auto3";
    /** 2158  聊天 --- 聊天间隔小于5s */
    MsgKey.chat_notime = "chat_notime";
    /** 2159  聊天 --- 聊天消息为空 */
    MsgKey.chat_nomessage = "chat_nomessage";
    /** 2160  聊天 --- 聊天消息超出长度限制 */
    MsgKey.chat_moremessage = "chat_moremessage";
    /** 2161  聊天 --- 聊天没有喇叭 */
    MsgKey.chat_nospeaker = "chat_nospeaker";
    /** 2162  聊天 --- 点击未解锁的频道 */
    MsgKey.chat_unlock = "chat_unlock";
    /** 2163  聊天 --- 获得五星艺人系统提示1 */
    MsgKey.chat_5star1 = "chat_5star1";
    /** 2164  聊天 --- 获得五星艺人系统提示2 */
    MsgKey.chat_5star2 = "chat_5star2";
    /** 2165  聊天 --- 拍出大卖的系统提示 */
    MsgKey.chat_supersale = "chat_supersale";
    /** 2166  聊天 --- 公司改名的系统提示 */
    MsgKey.chat_rename = "chat_rename";
    /** 2167  转盘 --- 转盘全部转光 */
    MsgKey.Turntable_full = "Turntable_full";
    /** 2168  订单 --- 资助合作订单提示 */
    MsgKey.order_give = "order_give";
    /** 3001  艺人 --- 一般擅长 */
    MsgKey.actor_adept_lv1 = "actor_adept_lv1";
    /** 3002  艺人 --- 普通擅长 */
    MsgKey.actor_adept_lv2 = "actor_adept_lv2";
    /** 3003  艺人 --- 比较擅长 */
    MsgKey.actor_adept_lv3 = "actor_adept_lv3";
    /** 3004  艺人 --- 非常擅长 */
    MsgKey.actor_adept_lv4 = "actor_adept_lv4";
    /** 3005  拍摄 --- {0}火热上映中 */
    MsgKey.movie_play = "movie_play";
    /** 3006  艺人 --- 训练室没有建立 */
    MsgKey.actor_trainingroom = "actor_trainingroom";
    /** 3007  许可证申请 --- 小秘书桌牌1 */
    MsgKey.license_apply_table1 = "license_apply_table1";
    /** 3008  许可证申请 --- 小秘书桌牌2 */
    MsgKey.license_apply_table2 = "license_apply_table2";
    /** 3009  许可证申请 --- 小秘书桌牌3 */
    MsgKey.license_apply_table3 = "license_apply_table3";
    /** 3010  许可证申请 --- 小秘书桌牌4 */
    MsgKey.license_apply_table4 = "license_apply_table4";
    /** 3011  许可证申请 --- 小秘书对话1 */
    MsgKey.license_apply_dialog1 = "license_apply_dialog1";
    /** 3012  许可证申请 --- 小秘书对话2 */
    MsgKey.license_apply_dialog2 = "license_apply_dialog2";
    /** 3013  许可证申请 --- 小秘书对话3 */
    MsgKey.license_apply_dialog3 = "license_apply_dialog3";
    /** 3014  许可证申请 --- 申请按钮 */
    MsgKey.license_apply_button1 = "license_apply_button1";
    /** 3015  许可证申请 --- 申请按钮 */
    MsgKey.license_apply_button2 = "license_apply_button2";
    /** 3016  许可证申请 --- 申请中说明文本 */
    MsgKey.license_apply_info = "license_apply_info";
    /** 3017  许可证申请 --- 申请数量用完 */
    MsgKey.license_apply_limit = "license_apply_limit";
    /** 3018  许可证申请 --- 许可证申请数量 */
    MsgKey.license_apply_limit_num = "license_apply_limit_num";
    /** 3019  月份 --- 一月 */
    MsgKey.month1 = "month1";
    /** 3020  月份 --- 二月 */
    MsgKey.month2 = "month2";
    /** 3021  月份 --- 三月 */
    MsgKey.month3 = "month3";
    /** 3022  月份 --- 四月 */
    MsgKey.month4 = "month4";
    /** 3023  月份 --- 五月 */
    MsgKey.month5 = "month5";
    /** 3024  月份 --- 六月 */
    MsgKey.month6 = "month6";
    /** 3025  月份 --- 七月 */
    MsgKey.month7 = "month7";
    /** 3026  月份 --- 八月 */
    MsgKey.month8 = "month8";
    /** 3027  月份 --- 九月 */
    MsgKey.month9 = "month9";
    /** 3028  月份 --- 十月 */
    MsgKey.month10 = "month10";
    /** 3029  月份 --- 十一月 */
    MsgKey.month11 = "month11";
    /** 3030  月份 --- 十二月 */
    MsgKey.month12 = "month12";
    /** 3031  活动大厅 --- 当天充值金额不足 */
    MsgKey.eventhall_moneyless1 = "eventhall_moneyless1";
    /** 3032  活动大厅 --- 领取天数不足 */
    MsgKey.eventhall_daysless = "eventhall_daysless";
    /** 3033  活动大厅 --- 累计充值金额不足 */
    MsgKey.eventhall_moneyless2 = "eventhall_moneyless2";
    /** 3034  活动大厅 --- 领取积分不足 */
    MsgKey.eventhall_scoreless2 = "eventhall_scoreless2";
    /** 3035  活动大厅 --- 培养活动介绍 */
    MsgKey.eventhall_scoretext1 = "eventhall_scoretext1";
    /** 3036  活动大厅 --- 培养问号详情 */
    MsgKey.eventhall_scoretext2 = "eventhall_scoretext2";
    /** 3037  活动大厅 --- 培养活动条件 */
    MsgKey.eventhall_scoretext3 = "eventhall_scoretext3";
    /** 3038  活动大厅 --- 星探活动介绍 */
    MsgKey.eventhall_scoretext4 = "eventhall_scoretext4";
    /** 3039  活动大厅 --- 星探问号详情 */
    MsgKey.eventhall_scoretext5 = "eventhall_scoretext5";
    /** 3040  活动大厅 --- 星探活动条件 */
    MsgKey.eventhall_scoretext6 = "eventhall_scoretext6";
    /** 2169  通用 --- 计分面板 */
    MsgKey.scoring_format = "scoring_format";
    /** 2170  任务 --- 任务未完成提示 */
    MsgKey.task_unfinished = "task_unfinished";
    /** 2171  任务 --- 任务底部滚动文字 */
    MsgKey.task_bottom = "task_bottom";
    /** 2172  活动大厅 --- 累计消耗钻石不足 */
    MsgKey.eventhall_diamondless2 = "eventhall_diamondless2";
    /** 2173  探班 --- 艺人无法接待 */
    MsgKey.visit_stop = "visit_stop";
    /** 2174  登陆 --- 名称长度不对 */
    MsgKey.account_load_long1 = "account_load_long1";
    /** 2175  登陆 --- 密码长度不对 */
    MsgKey.account_load_long2 = "account_load_long2";
    /** 2176  登陆 --- 账号已被注册 */
    MsgKey.account_load_again = "account_load_again";
    /** 2177  登陆 --- 账号未注册 */
    MsgKey.account_load_wrong1 = "account_load_wrong1";
    /** 2178  登陆 --- 登录失败 */
    MsgKey.account_load_wrong2 = "account_load_wrong2";
    /** 2179  登陆 --- 登录失败 */
    MsgKey.account_load_wrong3 = "account_load_wrong3";
    /** 2180  登陆 --- 用户协议未勾选 */
    MsgKey.account_load_wrong4 = "account_load_wrong4";
    /** 2181  账号信息 --- 头像未解锁 */
    MsgKey.account_unlock = "account_unlock";
    /** 2182  任务 --- 任务更换提示弹窗 */
    MsgKey.task_change_info = "task_change_info";
    /** 2183  任务 --- 切换次数用完 */
    MsgKey.task_change_zero = "task_change_zero";
    /** 2184  任务 --- 无限时任务 */
    MsgKey.task_zero = "task_zero";
    /** 2185  通用 --- 剩余次数 */
    MsgKey.left_times = "left_times";
    /** 2186  活动大厅 --- 无可参与活动 */
    MsgKey.no_activity = "no_activity";
    /** 2187  训练 --- 拍摄时无法训练提示 */
    MsgKey.training_tips = "training_tips";
    /** 2188  训练 --- 探班时无法训练提示 */
    MsgKey.training_tips2 = "training_tips2";
    /** 2189  生产线 --- 生产线等级不足提示 */
    MsgKey.produce_lv = "produce_lv";
    /** 2190  登陆 --- 密码含有空格 */
    MsgKey.Error_Password_HasSpace = "Error_Password_HasSpace";
    /** 2191  断线重连 --- 断线重连 */
    MsgKey.connect_lost = "connect_lost";
    /** 2192  后台超时 --- 后台超时 */
    MsgKey.backstage_restart = "backstage_restart";
    /** 2193  商城 --- 购买延时倒计时 */
    MsgKey.purchase_delay = "purchase_delay";
    /** 2194  商城 --- 购买延时提示 */
    MsgKey.purchase_delay_msg = "purchase_delay_msg";
    /** 2195  等级礼包 --- 不可领取提示 */
    MsgKey.level_package_unlock = "level_package_unlock";
    /** 2196  形象大使 --- 解锁第5位城市形象大使 */
    MsgKey.ambassador_unlock = "ambassador_unlock";
    /** 2197  剧本招募 --- 说明 */
    MsgKey.story_lottery_do = "story_lottery_do";
    /** 2198  剧本招募 --- 说明 */
    MsgKey.story_lottery_buy_num = "story_lottery_buy_num";
    /** 2199  剧本招募 --- 说明 */
    MsgKey.story_lottery_time_gold = "story_lottery_time_gold";
    return MsgKey;
}());
exports.default = MsgKey;
},{}],123:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sprite = /** @class */ (function () {
    function Sprite() {
        this.Launch_launch = "Launch/launch.png";
        this.Unit_Shadow = "Home/shadow.png";
    }
    return Sprite;
}());
var Bg = /** @class */ (function () {
    function Bg() {
        this.Studio = 'Studio';
    }
    return Bg;
}());
var SpineUI = /** @class */ (function () {
    function SpineUI() {
        this.StudioNpc = 'StudioNpc';
        this.Hourglass = 'Hourglass';
        this.Spot = 'Spot';
    }
    return SpineUI;
}());
var Cursor = /** @class */ (function () {
    function Cursor() {
        this.CursorHandler = 'Cursor/CursorHandler.png';
    }
    return Cursor;
}());
var Particles = /** @class */ (function () {
    function Particles() {
        // 拍摄 -- 进度条
        this.StudioProgress = "StudioProgress";
        this.StudioScore = "StudioScore";
        this.StudioPropScore = "StudioPropScore";
        this.StudioActorShow = "StudioActorShow";
        this.FlyExp = "FlyExp";
        // 升级--建筑
        this.UpLevelBuilding_Star = "UpLevelBuilding_Star";
        this.UpLevelBuilding_HuaBan = "UpLevelBuilding_HuaBan";
        this.UpLevelBuilding_HuaBanWhite = "UpLevelBuilding_HuaBanWhite";
        // 摆件--升级中
        this.BuildingLevelShow = "BuildingLevelShow";
        this.BuildingLevelShow1 = "BuildingLevelShow1";
        // 摆件--出现
        this.DecorationShowIn_1_Star1 = "DecorationShowIn_1_Star1";
        this.DecorationShowIn_2_Star2 = "DecorationShowIn_2_Star2";
        this.DecorationShowIn_3_Line = "DecorationShowIn_3_Line";
        this.DecorationShowIn_4_Glow = "DecorationShowIn_4_Glow";
        // 情报艺人
        this.InformationActorShow = "InformationActorShow";
        this.InformationActorShowSmall = "InformationActorShowSmall";
        this.InformationActorShowBottom = "InformationActorShowBottom";
    }
    return Particles;
}());
var ActorBodyIcon = /** @class */ (function () {
    function ActorBodyIcon() {
        this.CaiXukun = "CaiXukun";
        this.WangJiaer = "WangJiaer";
        this.ZhangYixing = "ZhangYixing";
        this.LuHan = "LuHan";
        this.WangYuan = "WangYuan";
        this.WangJunkai = "WangJunkai";
        this.HuaChenyu = "HuaChenyu";
        this.HeJiong = "HeJiong";
        this.XueZhiqian = "XueZhiqian";
        this.YangMi = "YangMi";
        this.DiLiReBa = "DiLiReBa";
        this.OuyangNana = "OuyangNana";
        this.YangYing = "YangYing";
        this.XieNa = "XieNa";
        this.YangChaoyue = "YangChaoyue";
        this.GuanXiaotong = "GuanXiaotong";
        this.JuJingyi = "JuJingyi";
        this.SongQian = "SongQian";
        this.WuXuanyi = "WuXuanyi";
    }
    return ActorBodyIcon;
}());
var R = /** @class */ (function () {
    function R() {
    }
    R.sprite = new Sprite();
    R.bg = new Bg();
    R.cursor = new Cursor();
    R.particles = new Particles();
    R.spineUI = new SpineUI();
    R.actorIcon = new ActorBodyIcon();
    return R;
}());
exports.default = R;
},{}],124:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StringUtils_1 = require("../../Libs/Helpers/StringUtils");
var Res = /** @class */ (function () {
    function Res() {
    }
    Object.defineProperty(Res, "config", {
        // 获取--config目录路径
        get: function () {
            return Res.root + "config/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "PathConfig", {
        // 获取--寻路config目录路径
        get: function () {
            return Res.root + "config/path/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "GmConfig", {
        // 获取--GM命令config目录路径
        get: function () {
            return Res.root + "config/gm/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "shader", {
        // 获取--Shader目录路径
        get: function () {
            return Res.root + "shader/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "particles", {
        // 获取--Particles目录路径
        get: function () {
            return Res.root + "particles/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "spine", {
        // 获取--骨骼动画目录路径
        get: function () {
            return Res.root + "spine/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "spineUI", {
        // 获取--UI骨骼动画目录路径
        get: function () {
            return Res.root + "spineUI/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "fspriteassets", {
        // 获取--icon图标
        get: function () {
            return Res.root + "fspriteassets/";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "actorBodyIcon", {
        get: function () {
            return Res.root + "fspriteassets/ActorBodyIcon/";
        },
        enumerable: true,
        configurable: true
    });
    Res.getActorBodyIcon = function (actorName) {
        return Res.actorBodyIcon + (actorName + ".png");
    };
    // 获取骨骼动画 -- 骨骼
    Res.getSpineSKPathF = function (boneName, skinName) {
        return Res.spine + (boneName + "_F/" + skinName + "_F/" + skinName + "_F.sk");
    };
    Res.getSpineSKPathB = function (boneName, skinName) {
        return Res.spine + (boneName + "_B/" + skinName + "_B/" + skinName + "_B.sk");
    };
    // 获取骨骼动画 -- 皮肤
    Res.getSpinePngPathF = function (boneName, skinName) {
        return Res.spine + (boneName + "_F/" + skinName + "_F/" + skinName + "_F.png");
    };
    Res.getSpinePngPathB = function (boneName, skinName) {
        return Res.spine + (boneName + "_B/" + skinName + "_B/" + skinName + "_B.png");
    };
    // 获取UI骨骼动画 -- 皮肤
    Res.getSpineUIPngPath = function (name) {
        return Res.spineUI + (name + ".png");
    };
    Res.getSpineUISkPath = function (name) {
        return Res.spineUI + (name + ".sk");
    };
    //获取骨骼动画槽位部件
    Res.getSpineSoltPartPath = function (path) {
        return Res.spine + "SlotTexture/" + path + ".png";
    };
    // 获取菜单图片Url
    Res.getMenuIconUrl = function (path) {
        return Res.fspriteassets + "MenuIcon/" + path + ".png";
    };
    // 获取背景图片
    Res.getBgUrl = function (name) {
        return Res.fspriteassets + "Background/" + name + ".png";
    };
    // 获取Sprite图片
    Res.getSpritePath = function (path) {
        return Res.root + "sprite/" + path + ".png";
    };
    Res.getSpritePathHasExt = function (path) {
        return Res.root + "sprite/" + path;
    };
    // 获取--Shader路径--vs
    Res.getShaderVS = function (filename) {
        return Res.shader + filename + ".vs";
    };
    // 获取--Shader路径--ps
    Res.getShaderPS = function (filename) {
        return Res.shader + filename + ".fs";
    };
    // 获取--Particles路径
    Res.getParticles = function (filename) {
        return Res.particles + filename + ".part";
    };
    // 获取--地图建筑图片--地板对象
    Res.getHomeBuildingPic = function (buildingId, breIndex) {
        var idStr = StringUtils_1.default.FillLeft(buildingId.toString(), 2);
        var indexStr = StringUtils_1.default.FillLeft(breIndex.toString(), 2);
        return Res.root + ("fspriteassets/HomeBuilding/" + indexStr + "/" + idStr + "_" + indexStr + ".png");
    };
    // 获取--地图建筑图片--点击对象
    Res.getHomeBuildingPicHit = function (buildingId, breIndex) {
        var idStr = StringUtils_1.default.FillLeft(buildingId.toString(), 2);
        var indexStr = StringUtils_1.default.FillLeft(breIndex.toString(), 2);
        return "ui://SystemModuleHomeMap/" + idStr + "_" + indexStr;
    };
    // 获取--地图建筑图片--家具对象
    Res.getHomeBuildingFurniture = function (buildingId, furnitureId) {
        var idStr = StringUtils_1.default.FillLeft(buildingId.toString(), 2);
        return Res.root + ("fspriteassets/HomeBuildingFurniture/" + idStr + "/" + furnitureId + ".png");
    };
    // 获取--地图
    Res.getHomeMap = function (i) {
        // return Res.fspriteassets + `HomeMap/map_0.jpg`;
        return Res.fspriteassets + ("HomeMap/home_map_01/home_map_01_" + StringUtils_1.default.FillLeft(i.toString(), 2) + ".jpg");
    };
    // 获取--寻路
    Res.getHomePath = function () {
        return Res.PathConfig + "path_home2D_01.json";
    };
    Res.root = "res/";
    return Res;
}());
exports.default = Res;
},{"../../Libs/Helpers/StringUtils":632}],125:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 代码文本
// ---------------------------
var TEXT = /** @class */ (function () {
    function TEXT() {
    }
    TEXT.Login = "登录";
    TEXT.Auth = "授权";
    TEXT.cannotRecharge = "游客不能充值";
    TEXT.cannotRechargeNoIos = "只支持ios内购";
    TEXT.rechargeError = "充值失败，请稍候重试";
    TEXT.systemTip = "系统提示";
    TEXT.LangSelectMsg = "语言需要重启游戏才有效!";
    TEXT.FunNoOpen = "此功能暂未开放，敬请期待！";
    TEXT.ButtonSelect = "选择";
    TEXT.ButtonOk = "确定";
    TEXT.ButtonCannel = "取消";
    TEXT.ButtonYes = "是";
    TEXT.ButtonNo = "否";
    TEXT.Complete = "完成";
    TEXT.Disable = "没有开放";
    TEXT.Lock = "没解锁";
    TEXT.TitleTip = "提示";
    TEXT.ErorNoInitProto = "没有初始化网络";
    TEXT.ErorRequestServerList = "请求服务器列表失败";
    TEXT.ErorAccountFrozen = "账号被冻结";
    TEXT.ErorAccountDropped = "账号被停用";
    TEXT.TipEnterRoleName = "输入你的名称";
    TEXT.ErrorNameEmpty = "名字不能是空的";
    TEXT.ErrorContentEmpty = "内容不能是空的";
    TEXT.ErrorNameUsed = "名称已经被使用";
    TEXT.ErrorHttpSendFail = "[Error] 发送请求失败";
    TEXT.HttpTimeOut = "网络超时! 当前设置的超时时间是{0}";
    TEXT.AlertTextBuyActor = "是否花费{0}{1}增加艺人数量";
    TEXT.AlertTextScountActor = "是否花费{0}{1} 探查艺人？";
    TEXT.ToastTextItemNotEnough = "{0}数量不足";
    TEXT.ToastTextItemNotEnough2 = "数量不足，需要{0} {1}";
    TEXT.AfterToScountActor = "{0}后探查次数加1";
    TEXT.AfterToClearNoseTimes = "星探今天已下班，{0}后即可在派他出去。\n也可消耗星探卡即刻派出";
    TEXT.ScountActor = "探查";
    TEXT.ActorCapacity = "{0}/{1}"; //可招募艺人：2/10
    TEXT.ActorMax = "艺人招募数量最大";
    TEXT.HideActorMax = "雪藏艺人数量达到最大,请升级公司等级或艺人教室等级";
    TEXT.DisHideAllActor = "无法雪藏全部艺人";
    TEXT.DisHideActorInUse = "无法雪藏正在使用的艺人";
    TEXT.SureHideActor = "是否确认雪藏{0}";
    TEXT.ActorWillLeave = "这些艺人将于{0}后离开";
    TEXT.ActorWillLeave1 = "艺人剩余离开时间：";
    TEXT.SureResetActors = "是否重新探查艺人？";
    TEXT.CostToResetActors = "探查次数已用完是否花费星探卡";
    TEXT.ResetNose = "重新探查";
    TEXT.TalentText = "星探";
    TEXT.HiddenText = "雪藏";
    TEXT.TalentTimes = "探查次数";
    TEXT.UnlockSkill = "艺人等级达到{0}级";
    TEXT.AlertNoseActor = "是否花费{0}{1}招募";
    TEXT.SrcActorName = "原艺名：{0}";
    TEXT.Lv = "{0}级";
    TEXT.LVDot = "LV.{0}";
    TEXT.CurNextLv = "等级：{0}/[color=#488fc1]{1}[/color]";
    TEXT.UpgradeNeedGold = "升级所需金币：{0}";
    TEXT.Upgrade = "升级";
    TEXT.RemainTimes = "剩余次数";
    TEXT.CanScountActor = "可招募：";
    TEXT.CanHideActorNums = "可雪藏{0}/{1}";
    TEXT.ActorTrain = "培养";
    TEXT.ActorTabBase = "基础";
    TEXT.ActorTabSkill = "技能";
    TEXT.ActorTabAsset = "资产";
    TEXT.ActorTabExport = "擅长";
    TEXT.ActorTabAgent = "助理";
    TEXT.PopularValue = "人气值";
    TEXT.RewardTitle = "奖励";
    TEXT.HideActor = "雪藏艺人";
    TEXT.HideActorDesc = "被雪藏的艺人无法工作，您可以在这里重新启用艺人";
    TEXT.RenameForActor = "给{0}起一个艺名吧？";
    TEXT.Rename = "改名";
    TEXT.Sure = "确定";
    TEXT.Num = "{0}个";
    TEXT.RenameDefault = "改名";
    TEXT.He = "他";
    TEXT.She = "她";
    TEXT.NewActorJoin = "新的艺人加入公司";
    TEXT.NoseSuccess = "招募成功";
    TEXT.SameActorJoin = "已有同名艺人";
    TEXT.SureUseDefaultName = "确认使用默认名字？";
    TEXT.RenameAnGoodName = "给{0}取个好名字吧";
    TEXT.NameDisNull = "名字不能为空";
    TEXT.RenameInputPlaceholder = "输入{0}到{1}个字符";
    TEXT.NoseActor = "招募";
    TEXT.AliveAcotr = "是否确认花费{0}{1}复活该艺人";
    TEXT.Hour = "小时";
    TEXT.Minute = "分";
    TEXT.Second = "秒";
    TEXT.ActorRecoverToDealAsset = "已转化为艺人合同和艺人资产";
    TEXT.NoForzen = "[没有雪藏的艺人]";
    TEXT.ChooseSendAssetNum = "选择要赠送的资产数量";
    TEXT.GetAssetToGetProp = "每得到{0}个即可";
    TEXT.LoyaltyText = "忠诚度";
    TEXT.NeedLoyalty = "需要忠诚度{0}级";
    TEXT.LvUpMax = "等级达到最大";
    TEXT.UpLvLimit = "提高等级上限";
    TEXT.LvUpTo = "玩家升级 {0} → {1}";
    TEXT.Send = "赠送";
    TEXT.ExpertStory = "擅长的剧本";
    TEXT.ExpertCharacter = "擅长的角色";
    TEXT.ExpertType = "擅长的类型";
    TEXT.SendAssetMax = "赠送数量达到上限";
    TEXT.LvMax = "等级已满";
    TEXT.SkillLvMaxTip = "技能等级已满，无法继续升级";
    TEXT.ExpCosts = "经验消耗";
    TEXT.SkillExpNotEnough = "技能经验不足";
    TEXT.GetRandomTrainAttr = "随机获取两种属性提升";
    TEXT.CompanyTodayTrain = "公司今日培养次数：";
    TEXT.ActorCanUseTrain = "艺人可用培训次数:";
    TEXT.ActorAutoVisit = "自动接待";
    TEXT.ActorBreakToLv = "该艺人等级限制突破到{0}";
    TEXT.CompanyTodayTrainMax = "公司今日培养次数达到上限";
    TEXT.ActorTrainMax = "艺人培养次数达到上限";
    TEXT.TrainCompleteRightNow = "立即完成培养";
    TEXT.HaveAgentCanComplete = "拥有终身秘书可立即完成";
    TEXT.HaveAgentCanAutoRead = "拥有终身秘书可自动批阅";
    TEXT.AutoRead = "自动批阅";
    TEXT.HaveAgentCanAutoPublicize = "拥有终身秘书可自动宣传";
    TEXT.TrainOpen = "艺人培养需先占领{0}";
    TEXT.SkillOpen = "艺人技能需要公司等级{0}";
    TEXT.AssetOpen = "艺人资产需要公司等级{0}";
    TEXT.AssistantOpen = "助理需要艺人等级{0}";
    TEXT.CompanySignAcotr = "{0}签约了新艺人";
    TEXT.ActorUpgradeAssetCount = "艺人资产上限增加{0}";
    TEXT.Use = "使用";
    TEXT.AssetSendMax = "赠送数量已达上限";
    TEXT.AssetSendMaxToExpend = "该艺人无法收下更多礼物了，可以通过提升艺人等级或使用忠诚卡增加上限?";
    TEXT.AssetExpend = "增加赠送上限";
    TEXT.AssetChooseCardNum = "选择需要使用忠诚卡的数量";
    TEXT.AssetArtistUpgrade = "艺人升级";
    TEXT.AssetUseCard = "使用忠诚卡";
    TEXT.ActorSkillExp = "技能经验:{0}";
    TEXT.age = "年龄";
    TEXT.sex = "性别";
    TEXT.country = "国籍";
    TEXT.type = "类型";
    TEXT.OldName = "原艺名：";
    TEXT.Level = "等级:";
    TEXT.RenameTitle = "老板，要给我重新起个艺名吗?";
    TEXT.DiamondTrain = "钻石培养";
    TEXT.DiamondMustBeMax = "(钻石培养必然获得最大值)";
    TEXT.PropertyTipMsg = "在仓库可分解高星资产，或者用低星资产合成。";
    TEXT.ClickAnyWhereToClose = "点击任意位置关闭界面";
    TEXT.Year = "年";
    TEXT.Month = "月";
    TEXT.Day = "日";
    TEXT.MaxLevel = "满级";
    TEXT.SecondBuyArtistMsg = "您已经拥有此艺人了，是花费{0}{1}再次招募？(会转换得到该艺人的合同和资产)";
    TEXT.RelieveArtist = "启用";
    // 拍摄子窗口标题及相关提示文字
    TEXT.FilmProficiencyTitle = "艺人熟练度展示";
    TEXT.FilmSelectActorTitle = "艺人选择";
    TEXT.FilmCostViewTitle = "薪酬统计";
    TEXT.PleaseSelectActor = "Click assign artist.";
    TEXT.ActorForFilmTitle = "艺人对剧本和角色的发挥";
    TEXT.FilmTypeSelectTitle = "请选择本次拍摄的类型";
    TEXT.CurMarketTip = "当前市场情况";
    TEXT.FilmNoticeTitle = "通告选择";
    TEXT.FilmSQViewTitle = "杀青属性对比";
    TEXT.CinemaSelectionTitle = "院线选择";
    TEXT.FeedBackTitle = "媒体评分";
    TEXT.AudienceReputationTitle = "观众口碑";
    TEXT.SysTipTitle = "系统提示";
    TEXT.AllTempTip = "不能全部使用临时演员";
    // 拍摄相关
    TEXT.RefrushStory = "刷新剧本";
    TEXT.RefrushStoryTip = "是否花费{0}{1}刷新剧本？<br>今日还可刷新{2}次";
    TEXT.RefrushStoryTipOver = "刷新次数已用完";
    TEXT.NoStoryList = "未发现任何剧本，请稍候再试";
    TEXT.ChangeStoryName = "修改剧本名称";
    TEXT.StoryNameLimit = "剧本名称{0}个字符";
    TEXT.SelectTypeNone = "请选择类型";
    TEXT.NoticeScore = "{0}分";
    TEXT.CostFree = "free";
    TEXT.SYNTH = "SYNTH";
    TEXT.Play = "Play:";
    TEXT.NoAttAdd = "不加属性";
    TEXT.NameLV = "{0}\nLV.{1}";
    TEXT.FilmActor = "饰：{0}";
    TEXT.FilmProficiency = "熟练度{0}级： + {1}";
    TEXT.FilmAverage = "同档电影平均 {0}";
    TEXT.sexMan = "男";
    TEXT.sexWomen = "女";
    TEXT.sexChild = "儿童";
    TEXT.TotalFilm = "总票房：{0}";
    TEXT.filmOverMarketTip1 = "当前市场喜好导致 {0}% 票房提升，有超过 {1}% 的观众非常喜欢这个故事！";
    TEXT.filmOverMarketTip2 = "有 {0}% 还认为 {1} 电影非常适合此故事！";
    TEXT.filmOverMarketTip3 = "There're more";
    TEXT.filmOverMarketTip4 = "Now.";
    TEXT.filmJiesuanWin = "盈利：\n+ {0}%";
    TEXT.filmJiesuanFail = "亏损：\n- {0}%";
    TEXT.filmJiesuanRewardTip = "通过拍摄这部电影，我们获得以下奖励：";
    TEXT.filmOverTip = "收益已结束";
    TEXT.guanzhuduValue = "关注度：{0}";
    TEXT.guanzhuduOpenTip = "关注度{0}级解锁";
    TEXT.continueTip = "可能获得以下物品：";
    TEXT.TimeLeftTip = "剩余时间：";
    TEXT.EndingTitle = "正在运营的电影已满";
    TEXT.EndingTip = "最多只能有5部持续收益的电影";
    TEXT.promotionBtn = "提升";
    TEXT.gainEvaluationOver = "最终收益：{0}";
    TEXT.gainEvaluation = "收益评价：{0}/分钟";
    TEXT.GZMax = "已经提升到最大等级";
    TEXT.CinemaSignTip = "请先签约院线！";
    TEXT.NineToFiftyTip = "为保证比赛公平，21点55分开始将无法拍摄电影！请各位导演周知，以免造成不必要的损失！";
    TEXT.NineToFiftyFiveTip = "很抱歉，为保证比赛公平，21点55分后将无法进行电影拍摄";
    TEXT.GoldFilmActorTalk = ["金本爆发时的人物喊话1金本爆发时的人物喊话1金本爆发时的人物喊话1", "金本爆发时的人物喊话2金本爆发时的人物喊话2金本爆发时的人物喊话2", "金本爆发时的人物喊话3金本爆发时的人物喊话3金本爆发时的人物喊话3"];
    TEXT.LevelLockTitle = "{0}级可解锁";
    TEXT.LevelUnLockTitle = "可解锁";
    TEXT.FilmLongTime = "{0}分钟";
    TEXT.FilmKouBei = "观众口碑：{0}";
    TEXT.ActivityTitle = "活动大厅";
    TEXT.WelfTitle = "福利大厅";
    // seven
    TEXT.NoGetReward = "未登录";
    TEXT.GetReward = "领取";
    //secretary
    TEXT.Secretary_GetWelfare = "领取福利";
    TEXT.Secretary_DailyGiftTitle = "每日礼包";
    TEXT.Secretary_NeedBuySecretary = "你需要购买小秘书";
    TEXT.Secretary_GetRewardDailySecretary = "礼包每日购买一次";
    TEXT.Secretary_AlreadyPurchased = "已购买";
    TEXT.Buy = "购买";
    TEXT.SureBuy = "确认购买";
    TEXT.Buyed = "已购买";
    // static Secretary_GetWelfare = "领取福利";
    // static Secretary_GetWelfare = "领取福利";
    // 合作相关
    TEXT.CooperateTaskType10 = "拍摄一部电影";
    TEXT.CooperateTaskType11 = "\n类型：{0}";
    TEXT.CooperateTaskType12 = "\n媒体评分：{0}分";
    TEXT.CooperateTaskType13 = "\n口碑：{0}分";
    TEXT.CooperateTaskType14 = "\n剧本：{0}星";
    TEXT.CooperateTaskType15 = "\n收益：{0}";
    TEXT.CooperateTaskType20 = "完成{0}次会议、公务或粉丝探班";
    TEXT.CooperateTaskType30 = "完成{0}次订单";
    TEXT.CooperateTaskType40 = "领取{0}个{1}";
    TEXT.CooperateTaskType50 = "领取{0}个任意周边产品";
    TEXT.CooperateTaskType60 = "领取{0}次城市收益";
    TEXT.CooperateTaskType70 = "完成{0}次艺人培养";
    TEXT.CooperateTaskType80 = "消费{0}钻石";
    TEXT.CooperateTaskType90 = "完成{0}次星探搜索";
    TEXT.CooperateTaskType100 = "完成{0}次剧本搜罗";
    TEXT.CooperateTaskProgress = "\n（{0}/{1}）";
    TEXT.CooperateReceiveBtn = "接受";
    TEXT.CooperateassistBtn = "协助";
    TEXT.CooperategetBtn = "领取";
    TEXT.CooperateassitingText = "协助中";
    TEXT.CooperateHaveTaskText = "你已经接受任务了，请完成后再次领取任务";
    TEXT.CooperationApplyTitle = "合作请求";
    TEXT.CooperationremindTip = "每周最多能与3家不同公司合作";
    TEXT.CooperationrefuseBtn = "拒绝";
    TEXT.CooperationreceiveBtn = "同意";
    TEXT.CooperationApplyTip = "希望与你签署合作协议，是否同意?";
    TEXT.CooperationEndTitle = "解除合作";
    TEXT.CooperationEndTip1 = "是否解除合作关系？";
    TEXT.CooperationEndTip2 = "注意：每周只能和三家不同的公司进行合作。";
    TEXT.CooperationMainPanelTitle = "公司合作";
    TEXT.Cooperationtext1 = "首次建立合作关系可得：";
    TEXT.Cooperationtext2 = "与熟人之间建立合作：";
    TEXT.Cooperationtext3 = "公开寻找合作公司：";
    TEXT.Cooperationremind = "首次账号查找建立合作提示";
    TEXT.Cooperationintro = "填写对方ID";
    TEXT.CooperationinviteBtn1 = "发出邀请";
    TEXT.CooperationinviteBtn2 = "公开邀请";
    TEXT.CooperationdisinviteBtn = "取消邀请";
    TEXT.CooperationMainPanelTip1 = "请输入对方用户id";
    TEXT.CooperationMainPanelTip2 = "请稍候再次输入";
    TEXT.CooperationMainPanelID = "本地玩家ID： {0}";
    TEXT.CooperationRealtionshipTitle = "合作任务";
    TEXT.CooperationRealtionshipTip = "星级越高奖励越好！";
    TEXT.CooperationRealtionshiprelieveBtn = "解除";
    TEXT.CooperationGiveRewardDollar = "赠送美元";
    TEXT.CooperationGiveRewardGold = "赠送金币";
    TEXT.TimeEnd = "00:00:00";
    //Build	
    TEXT.BuildTitleType = ["建造", "升级", "突破"];
    TEXT.BuildTitleCost = "消耗";
    TEXT.BuildSuccessType = ["建造成功", "升级成功", "突破成功"];
    TEXT.BuildOpenItem = "解锁{0}产出";
    TEXT.BuildOpenSys = "解锁{0}系统";
    TEXT.BuildOpenCell = "新的入驻席位开启";
    TEXT.BuildPicChange = "建筑外观变化";
    TEXT.BuildOpenBre = "{0}等级上限提高至{1}级";
    TEXT.BuildLevelMax = "提高等级上限";
    TEXT.BuildReturnActor = "召回艺人{0}入驻{1}";
    TEXT.BuildEnter = "进驻：";
    TEXT.BuildBreakOpen = "突破后开启";
    TEXT.BuildActorRemove = "移除";
    TEXT.BuildSpeedUp = "花费{0}钻石完成建造！";
    TEXT.BuildNoProduce = "暂无产出，请耐心等待";
    TEXT.BuildBreak = "建筑突破";
    TEXT.BuildContent = "详情";
    TEXT.BuildNoCd = "0秒";
    TEXT.Floor = "第{0}层";
    TEXT.BuildFloor = "扩建第{0}层";
    TEXT.BuildUpgrade = "升级至 {0}级";
    TEXT.BuildUpgrade_UBB = "[color=#66ff66]升级至{0}级[/color]";
    TEXT.CompanyLevel = "LV.{0}解锁";
    TEXT.BuildEffect = "建筑说明";
    TEXT.BuildLevelEffect = "升级效果：";
    TEXT.BuildLevelup = "升级";
    TEXT.BuildConfirm = "确认";
    TEXT.BuildLevel = "等级{0}";
    TEXT.BuildNextLevel = "下一等级 {0}";
    TEXT.BuildFloorAlert = "确认要扩建{0}层吗？";
    TEXT.BuildTitle = "建造";
    TEXT.ActorExperciseExpedite = "加速";
    TEXT.BuildFloorFailLevel = "需要公司等级达到：{0}";
    TEXT.BuildFloorFailCity = "需要占领城市：{0}. {1}";
    TEXT.BuildActorRoomTalentNpc = "星探";
    TEXT.BuildActorRoomTrainerNpc = "培训师";
    TEXT.TopFloor = "Top Floor";
    TEXT.BuildGetItem = "{0}x{1}";
    TEXT.BuildNeedLevel = "公司{0}级可建造";
    TEXT.BuildNeedOK = "可建造";
    TEXT.BuildFinish = "施工结束，点击完成";
    TEXT.BuildSuccessLevel = "建筑等级：";
    //Actor
    TEXT.ActorLevelUpSuccess = "艺人升级成功";
    //
    TEXT.LincenceMax = "拍摄许可证达到上限";
    // 艺人名录
    TEXT.ArtistDicUITitle = "艺人名录";
    TEXT.ArtistDicUInotHired = "未获得此艺人";
    TEXT.ArtistDicUIStar = "星级";
    TEXT.ArtistDicUICountry = "国籍";
    TEXT.ArtistDicUISex = "性别";
    TEXT.ArtistDicUIAge = "年龄类型";
    TEXT.ArtistDicUIShow = "表演类型";
    TEXT.ArtistDicUIDefName = "原艺名：";
    TEXT.ArtistDicUIHowHave = "如何签约该艺人？";
    TEXT.ArtistDicUIPinglun = "请输入留言内容";
    TEXT.ArtistDicUINoActor = "没有符合筛选条件的艺人";
    TEXT.ArtistDicUINoPinglun = "暂时没有玩家留言";
    TEXT.ArtistDicUIPinglunTitle = "留言薄：";
    //PlayerInfo
    TEXT.PlayerUpgradeGetAward = "Recieve";
    TEXT.PlayerSelfSignature = "Edit Self-Introduction";
    TEXT.PlayerSignature = "This person didn't leave a messege, just like a closed book~";
    TEXT.ItemHave = "拥有：";
    TEXT.PlayerInfoTab0 = "HOME";
    TEXT.PlayerInfoTab1 = "CAREER";
    TEXT.PlayerInfoTab2 = "TROPHY";
    TEXT.PlayerInfoTab3 = "FILMS";
    TEXT.PlayerInfoTab4 = "ACTORS";
    //Home
    TEXT.PlayerInfoTabHome_Rank0 = "建筑层数";
    TEXT.PlayerInfoTabHome_Rank1 = "艺人数量";
    TEXT.PlayerInfoTabHome_Rank2 = "好友数量";
    TEXT.PlayerInfoTabHome_Rank3 = "市场占领";
    TEXT.PlayerInfoTabHome_Rank4 = "宝物数量";
    TEXT.PlayerInfoTabHome_Rank5 = "仓库容量";
    //CAREER
    TEXT.PlayerInfoTabCareer_Rank0 = "拍摄过的电影数";
    TEXT.PlayerInfoTabCareer_Rank1 = "上映电影总数";
    TEXT.PlayerInfoTabCareer_Rank2 = "得到的票房总数";
    TEXT.PlayerInfoTabCareer_Rank3 = "完成的订单数量";
    TEXT.PlayerInfoTabCareer_Rank4 = "解锁过的最高档生产线";
    TEXT.PlayerInfoTabCareer_Rank5 = "完成公务次数";
    TEXT.PlayerInfoTabCareer_Rank6 = "会议达成协议次数";
    TEXT.PlayerInfoTabCareer_Rank7 = "粉丝成功拜访次数";
    TEXT.PlayerInfoTabCareer_Rank8 = "得到过多少次分组第一";
    //TROPHY
    TEXT.PlayerInfoTabTrophy_Rank00 = "最佳男演员得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank11 = "最佳女演员得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank22 = "最佳表演电影得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank3 = "最佳艺术电影得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank4 = "最受欢迎电影得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank5 = "铁齿轮奖得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank6 = "金羊驼奖得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank7 = "火星人奖得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank8 = "金月球奖得奖次数";
    //FILMS
    TEXT.PlayerInfoTabFilm_Rank0 = "大众口碑最高的电影";
    TEXT.PlayerInfoTabFilm_Rank1 = "票房最高的电影";
    TEXT.PlayerInfoTabFilm_Rank2 = "拍摄过的恐怖片数量";
    TEXT.PlayerInfoTabFilm_Rank3 = "拍摄过的悬疑片数量";
    TEXT.PlayerInfoTabFilm_Rank4 = "拍摄过的歌舞片数量";
    TEXT.PlayerInfoTabFilm_Rank5 = "拍摄过的喜剧片数量";
    TEXT.PlayerInfoTabFilm_Rank6 = "拍摄过的动画片数量";
    TEXT.PlayerInfoTabFilm_Rank7 = "拍摄过的叙事片数量";
    TEXT.PlayerInfoTabFilm_Rank8 = "拍摄过的爱情片数量";
    TEXT.PlayerInfoTabFilm_Rank9 = "拍摄过的动作片数量";
    //ACTOR
    // static PlayerInfoTabActor_Rank0 = "票房号召力最强的艺人";
    // static PlayerInfoTabActor_Rank1 = "得奖最多的艺人";
    // static PlayerInfoTabActor_Rank1Value = "{0}次";
    // static PlayerInfoTabActor_Rank2 = "拍摄电影最多的艺人";
    // static PlayerInfoTabActor_Rank2Value = "{0}部";
    // static PlayerInfoTabActor_Rank3 = "最偏爱的艺人";
    // static PlayerInfoTabActor_Rank3Value = "赠送{0}个";
    // static PlayerInfoTabActor_Rank4 = "最重视的艺人";
    // static PlayerInfoTabActor_Rank4Value = "培养{0}次";
    // static PlayerInfoTabActor_Rank5 = "最信赖的艺人";
    // static PlayerInfoTabActor_Rank5Value = "技能共{0}级";
    //Information
    TEXT.InformationMineTitle = "我的情报";
    TEXT.InformationAddTitle = "添加情报";
    TEXT.InformationBeyondMax = "最多添加{0}条情报";
    TEXT.InformationFreeTime = "{0}后免费";
    TEXT.InformationNoEnough = "至少需要3条情报";
    TEXT.InformationSpecialNoEnough = "请放入情报";
    //Story
    TEXT.StoryTitle = "剧本";
    TEXT.StoryCollect = "集齐剧本";
    TEXT.StoryFind = "收罗剧本";
    TEXT.StoryCompleteAllChallenge = "完成所有挑战";
    TEXT.StoryAchieve = "剧本成就";
    TEXT.ZuiGaoPiaoFang = "最高票房";
    TEXT.StoryDesc1 = "用本组剧本拍摄电影时{0}";
    TEXT.StoryDesc2 = "{0}属性增加{1}%";
    TEXT.StoryAchieveTarget1 = "剧本拍摄{0}/5次";
    TEXT.StoryAchieveTarget2 = "媒体评分8分或以上{0}/3次";
    TEXT.StoryAchieveTarget3 = "票房档次大卖或以上{0}/5次";
    TEXT.StorySou = "搜罗";
    TEXT.StoryRewardTitle = "奖励";
    TEXT.StoryRemainNotEnough = "剩余次数不足";
    TEXT.StoryContentEmpty = "内容不能是空的";
    TEXT.StoryContentToMax = "内容长度不得超过50";
    TEXT.StoryContentSpace = "内容开头结尾不能有空格";
    TEXT.StoryContentBlockWord = "内容中有屏蔽字符";
    TEXT.SendMsg = "发送";
    TEXT.StoryInputPromptText = "发表我的影评";
    TEXT.StoryAchievementDesc = "成就达成后拍摄时艺人可能会状态爆发";
    TEXT.StoryAchievementTitle = "成就目标";
    TEXT.StoryGetReward = "领取奖励";
    TEXT.CantGetReward = "未达到领取条件";
    TEXT.GetAllReward = "恭喜您已获得全部礼包";
    TEXT.NextRewardTip = "Unlock at LV.{0}";
    TEXT.GiftTipTitle = "LV.{0} Gift";
    TEXT.StoryNumLable = "剧本{0}/{1}";
    //Produce
    TEXT.ProduceTime = "每次生产时间：{0}";
    TEXT.ProduceGrade = "第{0}档";
    TEXT.ProduceLevel = "等级{0}";
    TEXT.ProduceSkillType1 = "队列数量";
    TEXT.ProduceSkillType2 = "存储上限";
    TEXT.ProduceSkillType3 = "时长减免";
    TEXT.ProduceSkillType4 = "每次产出";
    TEXT.ProduceActorTitle = "请选择艺人";
    TEXT.ProduceOffActorTitle = "正在进行[{0}]的艺人";
    TEXT.ProduceQuickBtnName = "一键生产";
    TEXT.ProduceQuickAwardBtnName = "一键领取";
    TEXT.ProduceStart = "开始生产";
    TEXT.ProduceItemStore = "库存";
    TEXT.ProduceUnlock = "解锁";
    TEXT.ProduceActorBusy = "忙碌";
    TEXT.ProduceActorFree = "空闲";
    TEXT.ProduceOffActor = "取消派遣";
    //订单 rder
    TEXT.OrderNeedTitle = "满足粉丝会的需求会让他们更加沉迷";
    TEXT.OrderNeed = "订单需求";
    TEXT.OrderCompleteReward = "完成报酬";
    TEXT.OrderExtraReward = "额外效果";
    TEXT.OrderNoneOrder = "暂无更多订单";
    TEXT.OrderNewOrderWay = "拍电影、市场宣传，都可能获得新订单";
    TEXT.OrderSortOrder = "排队订单：{0}";
    TEXT.OrderCooperationComfirmTitle = "资助";
    TEXT.OrderTheBoxHasPut = "该箱子已装箱完毕";
    TEXT.OrderSureDeleteOrder = "我们要拒绝这个订单吗？需要过一段时间才能收到新的订单哦~~（已装箱资源会被扣除）";
    TEXT.OrderRefuseOrder = "拒绝订单";
    TEXT.OrderComplete = "完成";
    TEXT.OrderNeedCompleteBox = "需要先完成装箱";
    TEXT.OrderRewardTitle = "获得奖励";
    TEXT.OrderArealyGotReward = "已经领取过奖励";
    TEXT.OrderNeedCompleteBoxNum = "需要完成订单{0}个";
    TEXT.OrderCooperation = "合作者";
    //探班
    TEXT.VisitNextFansNum = "待接见粉丝数量：{0}/{1}";
    TEXT.VisitStartBtnOk = "嗯，去找";
    TEXT.VisitAutoReceive = "自动接待";
    TEXT.VisitFansTomeetActor = "老板，有粉丝想见我司艺人。";
    TEXT.VisitNextVisitActor = "接待室还有{0}名粉丝，是否现在接待";
    TEXT.VisitNextFans = "下一个粉丝";
    TEXT.VisitHaveOtherFansWaiting = "当前已经有粉丝正在等待";
    TEXT.VisitDonotHaveFans = "当前没有粉丝";
    TEXT.VisitFansWantMeet = "粉丝想见";
    //公务
    TEXT.BusinessRemainRead = "待批阅：{0}/{1}";
    TEXT.BusinessSendName = "发件人：{0}";
    TEXT.BusinessNextPage = "下一页";
    TEXT.BusinessReadNewMsg = "读取新任务";
    TEXT.BusinessDonotHaveBusiness = "没有公务";
    TEXT.BusinessGet = "获得";
    //会议
    TEXT.MeetingNextNum = "待接见会议数量{0}/{1}";
    TEXT.MeetingInMeeting = "在会议中";
    TEXT.MeetingVisitCompany = "老板{0}的谈判代表已等候多时了。";
    TEXT.MeetingStartOkBtnText = "嗯，开会";
    TEXT.MeetingStartCancelBtnText = "拒绝";
    TEXT.MeetingMantianYaojia = "漫天要价";
    TEXT.MeetingTaojiahuanjia = "讨价还价";
    TEXT.MeetingChengjiao = "成交";
    TEXT.MeetingChengjiaoSure = "成交确认";
    TEXT.MeetingHuijue = "回绝";
    TEXT.MeetingBye = "再见";
    TEXT.MeetingGameStop = "停";
    TEXT.MeetingRewardTitle = "奖励";
    TEXT.MeetingNext = "{0}的会议代表已在门外等候多时，是否马上接见？";
    TEXT.MeetingNextMeet = "下一个会议";
    TEXT.MeetingNeedAddPiece = "不太满意需要加价";
    TEXT.MettingTitle = "会议室";
    // 任务
    TEXT.TaskArrangement = "今天的日程安排";
    TEXT.TaskState = "完成度: [color=#488fc1]{0}[/color]";
    TEXT.ActorExperciser = "训练师";
    TEXT.ActorExperciserStart = "点击加号选择艺人进行训练";
    TEXT.ActorExperciserOn = "完成训练剩余时间";
    TEXT.ActorExperciseMaxLine = "训练队列已达到上限";
    TEXT.ActorExperciseUnlock = "开始新的训练需要";
    TEXT.ActorExperciseQuick = "加速训练需要";
    TEXT.ActorExperciceCompleteDesc = "点击完成训练";
    TEXT.ActorExperciceKey = "艺人经验";
    TEXT.MissionPanelTipMsg = "日程任务提示信息";
    //公告
    TEXT.NoticeTitle = "提示";
    TEXT.NoticeServerClose = "服务器开始维护， 请退出游戏";
    //排行榜
    TEXT.RankText = "第{0}名";
    //市场
    TEXT.MarketOccupe = "已占领城市{0}/{1}";
    TEXT.MarketChangeHomeContent = "只能在经营总部所在城市派驻形象大使，是否更换总部";
    TEXT.MarketChangeHomeTitle = "更换总部所在城市";
    TEXT.MarketAddFansTip = "得益于公司的市场推广";
    TEXT.MainTaskAddFansTip = "得益于主线任务奖励";
    TEXT.MarketAddFansInfo = "{0}粉丝数 +{1}";
    TEXT.MarketLvUpNeedFans = "公司还需要{0}个粉丝即可升级";
    TEXT.MarketShare = "市场占有率";
    TEXT.MarketReward = "获得奖励";
    TEXT.MarketActorPromot = "提升{0}";
    TEXT.MarketNoSecretary = "您还没有购买终身秘书，是否立即购买";
    TEXT.MarketPublicityInfo = "根据调查，当地观众比较青睐{0}若能找到相关艺人来进行市场代言，将会事半功倍！";
    TEXT.MarketSelectActor = "请选择代言人在 {0} 宣传";
    TEXT.MarketSelectActorForCity = "请选择 {0} 的形象大使";
    TEXT.MarketMaxAsset = "最多存储{0}小时收益";
    TEXT.MarketItemLockTitle = "未开始生产";
    TEXT.MarketItemLockTip = "需要派遣形象大使：{0}";
    TEXT.MarketHomeActorLock = "解锁第5位形象大使，需要升到{0}";
    TEXT.MarketCityTip = "全部街区都完成宣传后可占领当地市场并获得长期收益";
    //街区
    TEXT.StreetCinemaInfo = "{0}家电影院（{1}）";
    // static StreetTitle = "Match [color=#ffffff]group {0}[/color] on {1}";
    TEXT.StreetTitle = "{1}的第{0}组";
    TEXT.OscarTitle = "{1},{0}";
    TEXT.StreetCongratulateSelf = "不能祝贺自己";
    //仓库
    TEXT.BagSelectNum = "选择数量";
    TEXT.BagNeedMoreItem = "物品不足，还需要{0}个才能合成";
    TEXT.BagSelectCompoundNum = "选择要合成的数量";
    TEXT.BagCompound = "物品合成";
    TEXT.BagSelectGive = "选择赠送对象";
    TEXT.BagSelectGiveNum = "选择要赠送的数量";
    TEXT.BagGive = "物品赠送";
    TEXT.BagSelectResolveNum = "选择要拆分的数量";
    TEXT.BagResolve = "物品拆分";
    TEXT.BagSelectSaleNum = "选择要出售的数量";
    TEXT.BagSale = "物品出售";
    TEXT.BagSelectUseNum = "选择要使用的数量";
    TEXT.BagUse = "物品使用";
    TEXT.BagSelectActor = "请选择一名演员";
    TEXT.BagSelectItem = "请选择一件物品";
    //商城
    TEXT.ShopGive = "送";
    TEXT.ShopDayLimit = "今日限购";
    TEXT.ShopWeekLimit = "每周限购";
    TEXT.ShopRegistLimit = "永久限购";
    TEXT.RechargeTitle = "充值";
    TEXT.RechargeTipsMsg = "充值界面提示信息 提示信息 提示信息";
    TEXT.ShopAvailable = "有效期{0}天";
    TEXT.AfterTime = "{0}后可以购买";
    //奥斯卡
    TEXT.OscarName = "奥斯卡";
    TEXT.OscarRewardNameDesc_6 = "今日最佳：";
    TEXT.OscarRewardNameDesc_9 = "今日票房达到大卖：";
    TEXT.OscarRewardValueDesc_7 = "总票房第{0}名[color=#e3b121]（{1}）[/color]";
    TEXT.OscarRewardValueDesc_8 = "今日拍摄电影达到{0}部";
    TEXT.OscarRewardValueDesc_9 = "{0}部";
    TEXT.OscarRewardInfoDesc_6 = "票房第{0}名（{1}）";
    TEXT.OscarRewardInfoDesc_7 = "超过{0}%的{1}玩家（共{2}人）";
    TEXT.OscarRewardNoMovie = "未拍摄电影";
    TEXT.OscarDanmuLong = "弹幕规定长度为【4-100】";
    TEXT.OscarDanmuSpace = "弹幕开头和结尾不能有空格";
    TEXT.OscarDanmuBlockword = "弹幕中有非法字符";
    TEXT.OscarMovie = "我的《{0}》拍摄完成";
    TEXT.OscarInputTip = "Enter a barrage";
    TEXT.Today = "今天";
    TEXT.Yestoday = "昨天";
    //跳转
    TEXT.SystemGoOtherFunction_Title = "提示";
    TEXT.SystemGoOtherFunction_Desc_1 = "技能经验不足，可以安排艺人前往训练室训练已获得技能经验";
    TEXT.SystemGoOtherFunction_Desc_2 = "星探次数还在恢复或者今日次数已用完，可以使用星探卡立刻进行一次星探（使用后当前为招募的艺人会离开）";
    TEXT.SystemGoOtherFunction_Go_1 = "前往训练";
    TEXT.SystemGoOtherFunction_Go_2 = "星探卡";
    //小秘书
    TEXT.SecretaryRemainAutoReadNum = "自动批阅次数{0}";
    TEXT.SecretaryRemainAutoVisitNum = "自动接待次数{0}";
    TEXT.SecretaryRemainAutoPublicizeNum = "自动宣传次数{0}";
    TEXT.SecretaryForeverAgent = "终身秘书";
    //
    TEXT.SystemDisAllowHaveNumber = "不能含有数字";
    TEXT.SystemDisAllowHaveStartLastNumber = "开头结尾不能含有数字";
    //日程任务
    TEXT.StateText = "完成度:";
    TEXT.SexTip = "请选择你喜欢的艺人";
    //设置
    TEXT.LanguageSettings = "语言";
    TEXT.FeedBackSettings = "反馈";
    TEXT.SwitchAccount = "切换账号";
    TEXT.SwitchLanguage = "切换语言";
    TEXT.SureaSwitchAccount = "是否确认切换账号？";
    //邮件
    TEXT.MailTitle = "邮件";
    TEXT.DeleteRead = "删除已读";
    TEXT.ToReader = "致玩家：";
    TEXT.ReawrdMsg = "奖励内容：";
    //主线任务
    TEXT.TaskGetReward = "点击领取奖励";
    TEXT.Log = "记录";
    TEXT.Get = "领取";
    TEXT.Go = "前往";
    //金币兑换
    TEXT.GoldExchangeTitle = "金币兑换";
    TEXT.GoldExchangeRemainNum = "剩余可兑换次数：{0}";
    TEXT.GoldExchangeOne = "兑换1次";
    TEXT.GoldExchangeTen = "兑换10次";
    TEXT.GoldExchangeTimesNoEnough = "兑换次数不足";
    TEXT.GoldExchangeBuildingTitle = "金币兑换";
    TEXT.GoldExchangeOk = "兑换成功";
    // 游客绑定失败
    TEXT.GuestBindError_1 = "不是游客账号";
    TEXT.GuestBindError_2 = "绑定失败";
    TEXT.GuestBindError_3 = "账号已存在";
    //
    TEXT.SameActorName = "艺人的名字和原来一样";
    //
    //
    TEXT.AssistantDesc = "Greatly improved actor's {0}，slightly improved other attri bute.";
    TEXT.AssistantBaseDesc = "Everybody says I look like Jackie chan Everybody says Item ok.";
    //
    TEXT.AssistantTitle1 = "属性提升";
    //
    TEXT.AssistantTitle2 = "课程效果";
    //
    TEXT.AssistantTrainTimes = "培养次数：";
    //
    TEXT.AssistantUnlockTag = "{0}级解锁";
    //
    TEXT.AssistantStudy = "学习";
    TEXT.AssistantUpgrade = "提升";
    //
    TEXT.AssistantUpgradeMax = "课程等级已达到上限，无法提升课程等级";
    //
    TEXT.GuideCompleteRewardTitle = "完成主线任务奖励";
    //
    TEXT.GuideCompleteGetBtnTitle = "领取";
    TEXT.Progress = "{0}/{1}";
    // 数字
    TEXT.N0 = "零";
    TEXT.N1 = "一";
    TEXT.N2 = "二";
    TEXT.N3 = "三";
    TEXT.N4 = "四";
    TEXT.N5 = "五";
    TEXT.N6 = "六";
    TEXT.N7 = "七";
    TEXT.N8 = "八";
    TEXT.N9 = "九";
    TEXT.N10 = "十";
    TEXT.N100 = "百";
    TEXT.N1000 = "千";
    TEXT.N10000 = "万";
    // 拍摄
    TEXT.StudioNotOpen = "拍摄中心暂未开放";
    TEXT.StudioEventAllCollected = "已完成";
    TEXT.StudioEventCollecting = "已完成{0}/{1}";
    TEXT.StudioSelectStoryTip = "请先选择剧本";
    TEXT.StudioStoryName = "《{0}》";
    TEXT.StudioStoryNameSeason = "《{0} 第{1}季》";
    TEXT.StudioStoryNameEpisode = "《{0}》 第{1}期";
    TEXT.StudioStoryNameAll = "《{0} {1}》 第{1}期";
    TEXT.StudioStorySeasonEpisode = "第{0}季 第{1}期";
    TEXT.StudioStorySeason = "第{0}季";
    TEXT.StudioStoryEpisode = "第{1}期";
    TEXT.StudioStoryNoEmpty = "剧本名字不能为空";
    TEXT.StudioEventContent = "《{0}》{1}";
    TEXT.TabAll = "综合";
    TEXT.StudioSABannerTip = "该艺人位，{0}属性、{1}属性效果更佳";
    TEXT.StudioCommentTitle = "评论 {0}";
    TEXT.StudioSACost = "拍摄消耗行动力x{0}";
    TEXT.StudioEventComment = "{0}";
    TEXT.StudioRating = "收视率 {0}";
    TEXT.StudioScorePart2 = ".{0}分";
    TEXT.StudioContinueTime = "网综收益将持续{0}";
    TEXT.StudioTicketsSold = "{0}人已购买";
    TEXT.StudioTotalProfit = "总收益{0}元";
    TEXT.StudioPropNum = "{0}: {1}";
    TEXT.StudioPlusNum = "+ {0}";
    TEXT.CompanyExperience = "公司经验值 +{0}";
    TEXT.RewardItemCount = "x{0}";
    TEXT.StudioContinueReward = "获得奖励：金币x{0}";
    TEXT.StudioContinueNotInTime = "没到时间";
    // Home
    TEXT.HomeUnitSeatOccupy = "座位已有人";
    TEXT.StoryLotteryGoldNum = "金币 {0}";
    TEXT.StoryLotteryNum = "创作次数：{0}/{1}";
    TEXT.StoryLotteryCD = "清除CD";
    TEXT.StoryLotteryBtn = "创作";
    TEXT.StoryLotteryFiald = "剧本招募未成功，返还部分金币";
    // Time xx前
    TEXT.DATE_MonthBefore = "{0}个月前";
    TEXT.DATE_WeekBefore = "{0}周前";
    TEXT.DATE_DayBefore = "{0}天前";
    TEXT.DATE_HourBefore = "{0}小时前";
    TEXT.DATE_MinuteBefore = "{0}分钟前";
    TEXT.DATE_SecondeBefore = "{0}秒前";
    return TEXT;
}());
exports.default = TEXT;
},{}],126:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("./BaseConfig");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var LangConfig = /** @class */ (function (_super) {
    __extends(LangConfig, _super);
    function LangConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dict = new Dictionary_1.default();
        return _this;
    }
    return LangConfig;
}(BaseConfig_1.default));
exports.default = LangConfig;
},{"../Libs/Helpers/Dictionary":626,"./BaseConfig":61}],127:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LangConfigLoaderList_1 = require("./LangConfigLoaderList");
var Signal_1 = require("../Libs/signals/Signal");
var Typed3Signal_1 = require("../Libs/signals/Typed3Signal");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var TEXT_1 = require("./Keys/TEXT");
var FguiHelper_1 = require("../Libs/Helpers/FguiHelper");
/// 配置读取器列表
var LangConfigLoader = /** @class */ (function (_super) {
    __extends(LangConfigLoader, _super);
    function LangConfigLoader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 消息--加载进度
        _this.sLoadProgress = new Typed3Signal_1.default();
        // 消息--加载完成
        _this.sLoaded = new Signal_1.default();
        // 加载进度
        _this.loadProgress = 0;
        // 是否已经加载完成
        _this.isLoadCompleted = false;
        _this.textRenders = [];
        // 消息--加载完成
        _this.sTextLoaded = new Signal_1.default();
        return _this;
    }
    LangConfigLoader.prototype.loadAllAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.loadAll();
                        _this.sLoaded.addOnce(function () {
                            resolve();
                        }, _this);
                    })];
            });
        });
    };
    // 加载所有
    LangConfigLoader.prototype.loadAll = function () {
        // if (this.renders.indexOf(this.textCode) != -1)
        // {
        // 	this.renders.slice(this.renders.indexOf(this.textCode), 1);
        // 	this.renders.slice(this.renders.indexOf(this.textFgui), 1);
        // }
        var _this = this;
        this.loadProgress = 0;
        var count = this.renders.length;
        var loadedNum = 0;
        var onItemLoaded = function () {
            loadedNum++;
            _this.loadProgress = loadedNum / count;
            _this.sLoadProgress.dispatch(loadedNum, count, _this.loadProgress);
            if (loadedNum >= count) {
                _this.onGameLoadedAll();
            }
        };
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].lang = this.lang;
            this.renders[i].load(this.configLoader, onItemLoaded);
        }
    };
    // 加载完成所有
    LangConfigLoader.prototype.onGameLoadedAll = function () {
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].onGameLoadedAll();
        }
        // 设置代码文本	
        this.setCodeTEXT();
        // 设置fgui文本
        FguiHelper_1.default.setStringsSource(this.textFgui);
        this.isLoadCompleted = true;
        this.sLoaded.dispatch();
    };
    LangConfigLoader.prototype.loadText = function () {
        var _this = this;
        var renders = this.textRenders;
        if (renders.length == 0) {
            renders.push(this.textCode);
            renders.push(this.textFgui);
        }
        this.loadProgress = 0;
        var count = renders.length;
        var loadedNum = 0;
        var onItemLoaded = function () {
            loadedNum++;
            if (loadedNum >= count) {
                _this.onLoadTextComplte();
            }
        };
        for (var i = 0; i < renders.length; i++) {
            renders[i].lang = this.lang;
            renders[i].load(this.configLoader, onItemLoaded);
        }
    };
    // 加载完成TEXT
    LangConfigLoader.prototype.onLoadTextComplte = function () {
        var renders = this.textRenders;
        for (var i = 0; i < renders.length; i++) {
            renders[i].onGameLoadedAll();
        }
        // 设置代码文本	
        this.setCodeTEXT();
        // 设置fgui文本
        FguiHelper_1.default.setStringsSource(this.textFgui);
        this.sTextLoaded.dispatch();
    };
    // 设置代码文本		
    LangConfigLoader.prototype.setCodeTEXT = function () {
        if (!this._srcTEXT && TEXT_1.default) {
            this._srcTEXT = new Dictionary_1.default();
            for (var key in TEXT_1.default) {
                this._srcTEXT.add(key, TEXT_1.default[key]);
            }
        }
        var list = this.textCode.getConfigList();
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            var key = item.dict.getValue("key");
            var value = item.dict.getValue("value");
            if (!isNullOrEmpty(value)) {
                TEXT_1.default[key] = value;
            }
        }
    };
    return LangConfigLoader;
}(LangConfigLoaderList_1.default));
exports.default = LangConfigLoader;
},{"../Libs/Helpers/Dictionary":626,"../Libs/Helpers/FguiHelper":627,"../Libs/signals/Signal":640,"../Libs/signals/Typed3Signal":642,"./Keys/TEXT":125,"./LangConfigLoaderList":128}],128:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LangConfigReader_1 = require("./LangConfigReader");
/////////////////////////////////////
// ihaiu.Language生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
/// 配置读取器列表
var LangConfigLoaderList = /** @class */ (function () {
    function LangConfigLoaderList() {
        this.lang = "zh_cn";
        // 读取器列表
        this.renders = [];
        this.textCode = new LangConfigReader_1.default("TextCode");
        this.textFgui = new LangConfigReader_1.default("TextFgui");
    }
    // 初始化读取器列表
    LangConfigLoaderList.prototype.initList = function () {
    };
    return LangConfigLoaderList;
}());
exports.default = LangConfigLoaderList;
},{"./LangConfigReader":129}],129:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("./CsvConfigRender");
var LangConfig_1 = require("./LangConfig");
var ConfigFieldType_1 = require("./Interfaces/ConfigFieldType");
/** 多语言配置读取器 */
var LangConfigReader = /** @class */ (function (_super) {
    __extends(LangConfigReader, _super);
    function LangConfigReader(tableName) {
        var _this = _super.call(this) || this;
        // 语言
        _this.lang = "zh_cn";
        _this.tableName = tableName;
        return _this;
    }
    // 获取配置文件路径        
    LangConfigReader.prototype.getConfigPath = function () {
        return "config/lang/" + this.lang + "/" + this.tableName + ".csv";
    };
    Object.defineProperty(LangConfigReader.prototype, "headKeyFieldList", {
        get: function () {
            if (!this._headKeyFieldList) {
                this._headKeyFieldList = this.headKeyFields.getValues();
            }
            return this._headKeyFieldList;
        },
        enumerable: true,
        configurable: true
    });
    LangConfigReader.prototype.ParseCsv = function (csv) {
        var config = new LangConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        var fieldList = this.headKeyFieldList;
        for (var i = 0; i < fieldList.length; i++) {
            var txt = csvGetString(csv, this.GetHeadIndex(fieldList[i]));
            var headType = this.GetHeadType(i);
            switch (headType) {
                case ConfigFieldType_1.default.MStringArray:
                    config.dict.add(fieldList[i], toStringArray(txt));
                    break;
                default:
                    config.dict.add(fieldList[i], txt);
                    break;
            }
        }
        this.addConfig(config);
    };
    return LangConfigReader;
}(CsvConfigRender_1.default));
exports.default = LangConfigReader;
},{"./CsvConfigRender":118,"./Interfaces/ConfigFieldType":119,"./LangConfig":126}],130:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
var LangType_1 = require("./LangType");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var LangConfigLoader_1 = require("./LangConfigLoader");
/** 多语言配置管理器 */
var LangManager = /** @class */ (function () {
    function LangManager() {
        // 是否使用多语言
        this.isUseLang = false;
        this._lang = null;
        this.langListDict = new Dictionary_1.default();
    }
    Object.defineProperty(LangManager, "Instance", {
        get: function () {
            if (!LangManager._Instance) {
                LangManager._Instance = new LangManager();
            }
            return LangManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LangManager.prototype, "httpLang", {
        get: function () {
            if (!this._httpLang) {
                this.httpLang = this.lang;
            }
            return this._httpLang;
        },
        set: function (value) {
            value = value.replace("_", "-");
            if (value.indexOf("-")) {
                var arr = value.split("-");
                for (var i = 1; i < arr.length; i++) {
                    arr[i] = arr[i].toUpperCase();
                }
                value = arr.join("-");
            }
            this._httpLang = value;
            // if (window["frame"] && window["frame"]["comm"] && window["frame"]["comm"]["HttpComm"])
            // 	frame.comm.HttpComm.SetHeader("accept-language", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LangManager.prototype, "lang", {
        get: function () {
            if (!this._lang) {
                if (Game_1.default.localStorage.hasItem("_lang", true)) {
                    this._lang = Game_1.default.localStorage.getString("_lang", true);
                }
                else {
                    // let lang = navigator.language;
                    // if (!lang)
                    // {
                    // 	lang = navigator["browserLanguage"];
                    // }
                    // lang = LangType.toLang(lang);
                    // this._lang = lang;
                    this._lang = LangType_1.default.zh_cn;
                }
                this.httpLang = this._lang;
            }
            return this._lang;
        },
        set: function (value) {
            this._lang = value;
            this.httpLang = value;
            Game_1.default.localStorage.setString("_lang", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LangManager.prototype, "current", {
        get: function () {
            if (this._current) {
                return this._current;
            }
            if (!this.langListDict.hasKey(this.lang)) {
                var langList = new LangConfigLoader_1.default();
                langList.lang = this.lang;
                this.langListDict.add(langList.lang, langList);
                this._current = langList;
            }
            return this.langListDict.getValue(this.lang);
        },
        enumerable: true,
        configurable: true
    });
    LangManager.prototype.getValue = function (tableName, id, fieldName) {
        var langReader = this.current[tableName];
        if (langReader) {
            var config = langReader.getConfig(id);
            if (config) {
                return config.dict.getValue(fieldName);
            }
        }
        return null;
    };
    return LangManager;
}());
exports.default = LangManager;
},{"../Game":546,"../Libs/Helpers/Dictionary":626,"./LangConfigLoader":127,"./LangType":131}],131:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LangType = /** @class */ (function () {
    function LangType() {
    }
    LangType.toLang = function (httpLang) {
        httpLang = httpLang.replace("-", "_").toLowerCase();
        if (httpLang.indexOf("en") != -1)
            httpLang = LangType.en;
        // if (window["Game"])	
        // {
        // 	if (!Game.config.languageType.getConfigByValue(httpLang))
        // 	{
        // 		httpLang = LangType.en;
        // 	}
        // }
        // else
        {
            var has = false;
            for (var v in LangType) {
                if (v == httpLang) {
                    has = true;
                    break;
                }
            }
            if (!has) {
                httpLang = LangType.en;
            }
        }
        return httpLang;
    };
    LangType.zh_cn = "zh_cn";
    LangType.zh_tw = "zh_tw";
    LangType.en = "en";
    return LangType;
}());
exports.default = LangType;
},{}],132:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AvatarConfigReaderStruct_1 = require("../ReaderStructs/AvatarConfigReaderStruct");
var AvatarConfigReader = /** @class */ (function (_super) {
    __extends(AvatarConfigReader, _super);
    function AvatarConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AvatarConfigReader;
}(AvatarConfigReaderStruct_1.default));
exports.default = AvatarConfigReader;
},{"../ReaderStructs/AvatarConfigReaderStruct":149}],133:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CompoundConfigReaderStruct_1 = require("../ReaderStructs/CompoundConfigReaderStruct");
var CompoundConfigReader = /** @class */ (function (_super) {
    __extends(CompoundConfigReader, _super);
    function CompoundConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompoundConfigReader;
}(CompoundConfigReaderStruct_1.default));
exports.default = CompoundConfigReader;
},{"../ReaderStructs/CompoundConfigReaderStruct":150}],134:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GashaponConfigReaderStruct_1 = require("../ReaderStructs/GashaponConfigReaderStruct");
var GashaponConfigReader = /** @class */ (function (_super) {
    __extends(GashaponConfigReader, _super);
    function GashaponConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GashaponConfigReader;
}(GashaponConfigReaderStruct_1.default));
exports.default = GashaponConfigReader;
},{"../ReaderStructs/GashaponConfigReaderStruct":151}],135:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalConfigReaderStruct_1 = require("../ReaderStructs/GlobalConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var GlobalConfigReader = /** @class */ (function (_super) {
    __extends(GlobalConfigReader, _super);
    function GlobalConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 配置字典
        _this.configsByKey = new Dictionary_1.default();
        return _this;
    }
    GlobalConfigReader.prototype.onGameLoadedAll = function () {
        _super.prototype.onGameLoadedAll.call(this);
        var list = this.configs.getValues();
        for (var i = 0; i < list.length; i++) {
            var key = list[i].key;
            if (isNullOrEmpty(key)) {
                key = list[i].id;
            }
            this.configsByKey.add(key, list[i]);
        }
    };
    GlobalConfigReader.prototype.getConfig = function (key) {
        if (!this.configsByKey.hasKey(key)) {
            if (this.configs.hasKey(key)) {
                return this.configs.getValue(key);
            }
            console.log(this.tableName + " \u6CA1\u6709 key=" + key + " \u7684\u914D\u7F6E");
        }
        return this.configsByKey.getValue(key);
    };
    return GlobalConfigReader;
}(GlobalConfigReaderStruct_1.default));
exports.default = GlobalConfigReader;
},{"../../Libs/Helpers/Dictionary":626,"../ReaderStructs/GlobalConfigReaderStruct":152}],136:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var HeadPortraitConfigReaderStruct_1 = require("../ReaderStructs/HeadPortraitConfigReaderStruct");
var HeadPortraitConfigReader = /** @class */ (function (_super) {
    __extends(HeadPortraitConfigReader, _super);
    function HeadPortraitConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return HeadPortraitConfigReader;
}(HeadPortraitConfigReaderStruct_1.default));
exports.default = HeadPortraitConfigReader;
},{"../ReaderStructs/HeadPortraitConfigReaderStruct":153}],137:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemConfigReaderStruct_1 = require("../ReaderStructs/ItemConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var ItemConfigReader = /** @class */ (function (_super) {
    __extends(ItemConfigReader, _super);
    function ItemConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._dict = new Dictionary_1.default();
        return _this;
    }
    ItemConfigReader.prototype.addConfig = function (config) {
        _super.prototype.addConfig.call(this, config);
        if (config.actor_id > 0) {
            this._dict.add(config.actor_id, config);
        }
    };
    // 根据物品类型获取物品列表		
    ItemConfigReader.prototype.getConfigsByType = function () {
        var itemTypes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            itemTypes[_i] = arguments[_i];
        }
        var list = [];
        var items = this.getConfigList();
        for (var i = 0; i < items.length; i++) {
            for (var j = 0; j < itemTypes.length; j++) {
                if (items[i].type == itemTypes[j]) {
                    list.push(items[i]);
                    break;
                }
            }
        }
        return list;
    };
    ItemConfigReader.prototype.getType = function (id) {
        var cfg = this.getConfig(id);
        if (cfg) {
            return cfg.type;
        }
        return null;
    };
    ItemConfigReader.prototype.getItemIcon = function (itemId) {
        var cfg = this.getConfig(itemId);
        return cfg.iconUrl;
    };
    ItemConfigReader.prototype.getStarNum = function (itemId) {
        var cfg = this.getConfig(itemId);
        return cfg.itemStarNum;
    };
    ItemConfigReader.prototype.getItemByActorId = function (actorId) {
        return this._dict.getValue(actorId);
    };
    return ItemConfigReader;
}(ItemConfigReaderStruct_1.default));
exports.default = ItemConfigReader;
},{"../../Libs/Helpers/Dictionary":626,"../ReaderStructs/ItemConfigReaderStruct":154}],138:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemTypeConfigReaderStruct_1 = require("../ReaderStructs/ItemTypeConfigReaderStruct");
var ItemTypeConfigReader = /** @class */ (function (_super) {
    __extends(ItemTypeConfigReader, _super);
    function ItemTypeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ItemTypeConfigReader;
}(ItemTypeConfigReaderStruct_1.default));
exports.default = ItemTypeConfigReader;
},{"../ReaderStructs/ItemTypeConfigReaderStruct":155}],139:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderConfigReaderStruct_1 = require("../ReaderStructs/LoaderConfigReaderStruct");
var LoaderConfigReader = /** @class */ (function (_super) {
    __extends(LoaderConfigReader, _super);
    function LoaderConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoaderConfigReader;
}(LoaderConfigReaderStruct_1.default));
exports.default = LoaderConfigReader;
},{"../ReaderStructs/LoaderConfigReaderStruct":156}],140:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoadingConfigReaderStruct_1 = require("../ReaderStructs/LoadingConfigReaderStruct");
var LoadingConfigReader = /** @class */ (function (_super) {
    __extends(LoadingConfigReader, _super);
    function LoadingConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoadingConfigReader;
}(LoadingConfigReaderStruct_1.default));
exports.default = LoadingConfigReader;
},{"../ReaderStructs/LoadingConfigReaderStruct":157}],141:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailConfigReaderStruct_1 = require("../ReaderStructs/MailConfigReaderStruct");
var MailConfigReader = /** @class */ (function (_super) {
    __extends(MailConfigReader, _super);
    function MailConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MailConfigReader;
}(MailConfigReaderStruct_1.default));
exports.default = MailConfigReader;
},{"../ReaderStructs/MailConfigReaderStruct":158}],142:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuConfigReaderStruct_1 = require("../ReaderStructs/MenuConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MenuBarType_1 = require("../../GameFrame/Menu/MenuBarType");
var MenuConfigReader = /** @class */ (function (_super) {
    __extends(MenuConfigReader, _super);
    function MenuConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.barDict = new Dictionary_1.default();
        return _this;
    }
    MenuConfigReader.prototype.getBarMenus = function (barType) {
        if (this.barDict.hasKey(barType))
            return this.barDict.getValue(barType);
        return [];
    };
    /** 游戏所有配置加载完成 */
    MenuConfigReader.prototype.onGameLoadedAll = function () {
        var list = this.getConfigList();
        for (var i = 0; i < list.length; i++) {
            var config = list[i];
            // TODO ZF 将右下角菜单 强制设置为右上角
            if (config.barType == MenuBarType_1.MenuBarType.Right_Bottom)
                config.barType = MenuBarType_1.MenuBarType.Right_Top;
            var menuList = this.barDict.getValue(config.barType);
            if (!menuList) {
                menuList = [];
                this.barDict.add(config.barType, menuList);
            }
            menuList.push(config);
        }
    };
    return MenuConfigReader;
}(MenuConfigReaderStruct_1.default));
exports.default = MenuConfigReader;
},{"../../GameFrame/Menu/MenuBarType":568,"../../Libs/Helpers/Dictionary":626,"../ReaderStructs/MenuConfigReaderStruct":159}],143:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuIndexConfigReaderStruct_1 = require("../ReaderStructs/MenuIndexConfigReaderStruct");
var MenuIndexConfigReader = /** @class */ (function (_super) {
    __extends(MenuIndexConfigReader, _super);
    function MenuIndexConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuIndexConfigReader;
}(MenuIndexConfigReaderStruct_1.default));
exports.default = MenuIndexConfigReader;
},{"../ReaderStructs/MenuIndexConfigReaderStruct":160}],144:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgConfigReaderStruct_1 = require("../ReaderStructs/MsgConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MsgConfigReader = /** @class */ (function (_super) {
    __extends(MsgConfigReader, _super);
    function MsgConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 配置字典
        _this.configsByKey = new Dictionary_1.default();
        return _this;
    }
    MsgConfigReader.prototype.onGameLoadedAll = function () {
        _super.prototype.onGameLoadedAll.call(this);
        var list = this.configs.getValues();
        for (var i = 0; i < list.length; i++) {
            var key = list[i].key;
            if (isNullOrEmpty(key)) {
                key = list[i].id;
            }
            this.configsByKey.add(key, list[i]);
        }
    };
    MsgConfigReader.prototype.getConfig = function (key) {
        if (!this.configsByKey.hasKey(key)) {
            if (this.configs.hasKey(key)) {
                return this.configs.getValue(key);
            }
            console.log(this.tableName + " \u6CA1\u6709 key=" + key + " \u7684\u914D\u7F6E");
        }
        return this.configsByKey.getValue(key);
    };
    MsgConfigReader.prototype.getTxt = function (key) {
        var config = this.getConfig(key);
        if (!config) {
            return "[Error]" + this.tableName + " \u6CA1\u6709 key=" + key + " \u7684\u914D\u7F6E";
        }
        return config.notice;
    };
    MsgConfigReader.prototype.getTxtFormat = function (key) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var _a;
        var txt = (_a = this.getTxt(key)).format.apply(_a, args);
        return txt;
    };
    // 生成KEY 代码
    MsgConfigReader.prototype.outKeyCode = function () {
        console.log("");
        console.log("class MsgKey");
        console.log("{");
        var list = this.configsByKey.getValues();
        for (var i = 0; i < list.length; i++) {
            var key = list[i].key;
            var val = key;
            if (isNullOrEmpty(key)) {
                key = "KEY_" + list[i].id;
                val = list[i].id;
            }
            else {
                key = key.replace("-", "_");
            }
            console.log("\tstatic " + key + " = \"" + val + "\";");
        }
        console.log("}");
        console.log("");
        console.log("");
    };
    return MsgConfigReader;
}(MsgConfigReaderStruct_1.default));
exports.default = MsgConfigReader;
},{"../../Libs/Helpers/Dictionary":626,"../ReaderStructs/MsgConfigReaderStruct":161}],145:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerLevelConfigReaderStruct_1 = require("../ReaderStructs/PlayerLevelConfigReaderStruct");
var PlayerLevelConfigReader = /** @class */ (function (_super) {
    __extends(PlayerLevelConfigReader, _super);
    function PlayerLevelConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maxLevel = 1;
        return _this;
    }
    PlayerLevelConfigReader.prototype.onGameLoadedAll = function () {
        _super.prototype.onGameLoadedAll.call(this);
        var list = this.configs.getValues();
        for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
            var config = list_1[_i];
            this.maxLevel = Math.max(this.maxLevel, config.id);
        }
    };
    return PlayerLevelConfigReader;
}(PlayerLevelConfigReaderStruct_1.default));
exports.default = PlayerLevelConfigReader;
},{"../ReaderStructs/PlayerLevelConfigReaderStruct":162}],146:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PropertyConfigReaderStruct_1 = require("../ReaderStructs/PropertyConfigReaderStruct");
var PropertyConfigReader = /** @class */ (function (_super) {
    __extends(PropertyConfigReader, _super);
    function PropertyConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PropertyConfigReader;
}(PropertyConfigReaderStruct_1.default));
exports.default = PropertyConfigReader;
},{"../ReaderStructs/PropertyConfigReaderStruct":163}],147:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RewardConfigReaderStruct_1 = require("../ReaderStructs/RewardConfigReaderStruct");
var RewardConfigReader = /** @class */ (function (_super) {
    __extends(RewardConfigReader, _super);
    function RewardConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RewardConfigReader;
}(RewardConfigReaderStruct_1.default));
exports.default = RewardConfigReader;
},{"../ReaderStructs/RewardConfigReaderStruct":164}],148:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var UnlockConfigReaderStruct_1 = require("../ReaderStructs/UnlockConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var UnlockConfigReader = /** @class */ (function (_super) {
    __extends(UnlockConfigReader, _super);
    function UnlockConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //
        _this.menuConfigs = new Dictionary_1.default();
        //
        _this.menuGroups = new Dictionary_1.default();
        //
        _this.unlockGroups = new Dictionary_1.default();
        //
        _this.sortMenus = new Dictionary_1.default();
        return _this;
    }
    UnlockConfigReader.prototype.addConfig = function (config) {
        _super.prototype.addConfig.call(this, config);
        this.menuConfigs.add(config.menu_id, config);
        var list, group;
        group = config.group;
        if (this.menuGroups.hasKey(group)) {
            list = this.menuGroups.getValue(group);
        }
        else {
            list = [];
            this.menuGroups.add(group, list);
        }
        list.push(config);
        //
        var openList, type;
        type = config.open_type;
        if (this.unlockGroups.hasKey(type)) {
            openList = this.unlockGroups.getValue(type);
        }
        else {
            openList = [];
            this.unlockGroups.add(type, openList);
        }
        openList.push(config);
    };
    /**
     * 获取解锁数据
     * @param menuId
     */
    UnlockConfigReader.prototype.getUnlockConfig = function (menuId) {
        return this.menuConfigs.getValue(menuId);
    };
    /**
     *
     * @param barType
     */
    UnlockConfigReader.prototype.getBarMenus = function (barType) {
        var list = this.menuGroups.getValue(barType);
        if (this.sortMenus.hasKey(barType) == false) {
            list.sort(function (a, b) { return a.group_id - b.group_id; });
            this.sortMenus.add(barType, true);
        }
        return list;
    };
    //获取解锁
    UnlockConfigReader.prototype.getUnlocks = function (openType) {
        var list = this.unlockGroups.getValue(openType);
        return list;
    };
    /** 游戏所有配置加载完成 */
    UnlockConfigReader.prototype.onGameLoadedAll = function () {
    };
    return UnlockConfigReader;
}(UnlockConfigReaderStruct_1.default));
exports.default = UnlockConfigReader;
},{"../../Libs/Helpers/Dictionary":626,"../ReaderStructs/UnlockConfigReaderStruct":165}],149:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var AvatarConfig_1 = require("../ConfigExtends/AvatarConfig");
var DTVector2_1 = require("../ConfigExtends/DTVector2");
var AvatarConfigReaderStruct = /** @class */ (function (_super) {
    __extends(AvatarConfigReaderStruct, _super);
    function AvatarConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Avatar";
        return _this;
    }
    AvatarConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new AvatarConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.bodyIcon = csvGetString(csv, this.GetHeadIndex("bodyIcon"));
        config.halfIcon = csvGetString(csv, this.GetHeadIndex("halfIcon"));
        config.diamondHeadIcon = csvGetString(csv, this.GetHeadIndex("diamondHeadIcon"));
        config.zh_cn_icon = csvGetString(csv, this.GetHeadIndex("zh_cn_icon"));
        config.en_icon = csvGetString(csv, this.GetHeadIndex("en_icon"));
        config.pieceIcon = csvGetString(csv, this.GetHeadIndex("pieceIcon"));
        config.modelSkin = csvGetString(csv, this.GetHeadIndex("modelSkin"));
        config.modelBones = csvGetString(csv, this.GetHeadIndex("modelBones"));
        config.bgPic = csvGetString(csv, this.GetHeadIndex("bgPic"));
        config.coVector = DTVector2_1.default.parse(csvGetString(csv, this.GetHeadIndex("coVector")));
        this.addConfig(config);
    };
    return AvatarConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = AvatarConfigReaderStruct;
},{"../ConfigExtends/AvatarConfig":64,"../ConfigExtends/DTVector2":73,"../CsvConfigRender":118}],150:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CompoundConfig_1 = require("../ConfigExtends/CompoundConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CompoundConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CompoundConfigReaderStruct, _super);
    function CompoundConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Compound";
        return _this;
    }
    CompoundConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CompoundConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.syn_item = csvGetInt(csv, this.GetHeadIndex("syn_item"));
        config.num_req = csvGetInt(csv, this.GetHeadIndex("num_req"));
        config.split_list = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("split_list")));
        this.addConfig(config);
    };
    return CompoundConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CompoundConfigReaderStruct;
},{"../ConfigExtends/CompoundConfig":65,"../ConfigExtends/DTItemNum":68,"../CsvConfigRender":118}],151:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GashaponConfig_1 = require("../ConfigExtends/GashaponConfig");
var DTFixItemNum_1 = require("../ConfigExtends/DTFixItemNum");
var DTDateTime_1 = require("../ConfigExtends/DTDateTime");
var GashaponConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GashaponConfigReaderStruct, _super);
    function GashaponConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Gashapon";
        return _this;
    }
    GashaponConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GashaponConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.menu = csvGetInt(csv, this.GetHeadIndex("menu"));
        config.num = csvGetInt(csv, this.GetHeadIndex("num"));
        config.cost = DTFixItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("cost")));
        config.freeNum = csvGetInt(csv, this.GetHeadIndex("freeNum"));
        config.freeTime = csvGetInt(csv, this.GetHeadIndex("freeTime"));
        config.startTime = DTDateTime_1.default.parse(csvGetString(csv, this.GetHeadIndex("startTime")));
        config.endTime = DTDateTime_1.default.parse(csvGetString(csv, this.GetHeadIndex("endTime")));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        config.rewardId = csvGetInt(csv, this.GetHeadIndex("rewardId"));
        config.allowance = DTFixItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("allowance")));
        config.allowanceNum = csvGetInt(csv, this.GetHeadIndex("allowanceNum"));
        config.desc = csvGetString(csv, this.GetHeadIndex("desc"));
        this.addConfig(config);
    };
    return GashaponConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GashaponConfigReaderStruct;
},{"../ConfigExtends/DTDateTime":66,"../ConfigExtends/DTFixItemNum":67,"../ConfigExtends/GashaponConfig":74,"../CsvConfigRender":118}],152:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GlobalConfig_1 = require("../ConfigExtends/GlobalConfig");
var DTValue2_1 = require("../ConfigExtends/DTValue2");
var DTValue3_1 = require("../ConfigExtends/DTValue3");
var DTPerformActoin_1 = require("../ConfigExtends/DTPerformActoin");
var GlobalConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GlobalConfigReaderStruct, _super);
    function GlobalConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Global";
        return _this;
    }
    GlobalConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GlobalConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.value = csvGetInt(csv, this.GetHeadIndex("value"));
        config.value6 = csvGetFloat(csv, this.GetHeadIndex("value6"));
        config.value4 = csvGetString(csv, this.GetHeadIndex("value4"));
        config.value1 = toIntArray(csvGetString(csv, this.GetHeadIndex("value1")));
        config.value2 = DTValue2_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("value2")));
        config.value3 = DTValue3_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("value3")));
        config.value5 = DTPerformActoin_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("value5")));
        this.addConfig(config);
    };
    return GlobalConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GlobalConfigReaderStruct;
},{"../ConfigExtends/DTPerformActoin":69,"../ConfigExtends/DTValue2":71,"../ConfigExtends/DTValue3":72,"../ConfigExtends/GlobalConfig":75,"../CsvConfigRender":118}],153:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var HeadPortraitConfig_1 = require("../ConfigExtends/HeadPortraitConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var HeadPortraitConfigReaderStruct = /** @class */ (function (_super) {
    __extends(HeadPortraitConfigReaderStruct, _super);
    function HeadPortraitConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "HeadPortrait";
        return _this;
    }
    HeadPortraitConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new HeadPortraitConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.sex = csvGetInt(csv, this.GetHeadIndex("sex"));
        config.unlock = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("unlock")));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        this.addConfig(config);
    };
    return HeadPortraitConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = HeadPortraitConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":68,"../ConfigExtends/HeadPortraitConfig":76,"../CsvConfigRender":118}],154:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ItemConfig_1 = require("../ConfigExtends/ItemConfig");
var ItemConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ItemConfigReaderStruct, _super);
    function ItemConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Item";
        return _this;
    }
    ItemConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ItemConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_item_des = csvGetString(csv, this.GetHeadIndex("zh_cn_item_des"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.star = csvGetInt(csv, this.GetHeadIndex("star"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.max_num = csvGetInt(csv, this.GetHeadIndex("max_num"));
        config.get_way = toIntArray(csvGetString(csv, this.GetHeadIndex("get_way")));
        config.rewardid = csvGetInt(csv, this.GetHeadIndex("rewardid"));
        config.can_sell = csvGetBoolean(csv, this.GetHeadIndex("can_sell"));
        config.price = csvGetInt(csv, this.GetHeadIndex("price"));
        config.syn_id = csvGetInt(csv, this.GetHeadIndex("syn_id"));
        config.actor_id = csvGetInt(csv, this.GetHeadIndex("actor_id"));
        config.actor_num = csvGetInt(csv, this.GetHeadIndex("actor_num"));
        config.zh_cn_get_way_explain = csvGetString(csv, this.GetHeadIndex("zh_cn_get_way_explain"));
        config.User_item_info = csvGetInt(csv, this.GetHeadIndex("User_item_info"));
        this.addConfig(config);
    };
    return ItemConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ItemConfigReaderStruct;
},{"../ConfigExtends/ItemConfig":77,"../CsvConfigRender":118}],155:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ItemTypeConfig_1 = require("../ConfigExtends/ItemTypeConfig");
var ItemTypeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ItemTypeConfigReaderStruct, _super);
    function ItemTypeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ItemType";
        return _this;
    }
    ItemTypeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ItemTypeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.field = csvGetString(csv, this.GetHeadIndex("field"));
        this.addConfig(config);
    };
    return ItemTypeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ItemTypeConfigReaderStruct;
},{"../ConfigExtends/ItemTypeConfig":78,"../CsvConfigRender":118}],156:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var LoaderConfig_1 = require("../ConfigExtends/LoaderConfig");
var LoaderConfigReaderStruct = /** @class */ (function (_super) {
    __extends(LoaderConfigReaderStruct, _super);
    function LoaderConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Loader";
        return _this;
    }
    LoaderConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new LoaderConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.isShowCircle = csvGetBoolean(csv, this.GetHeadIndex("isShowCircle"));
        this.addConfig(config);
    };
    return LoaderConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = LoaderConfigReaderStruct;
},{"../ConfigExtends/LoaderConfig":79,"../CsvConfigRender":118}],157:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var LoadingConfig_1 = require("../ConfigExtends/LoadingConfig");
var LoadingConfigReaderStruct = /** @class */ (function (_super) {
    __extends(LoadingConfigReaderStruct, _super);
    function LoadingConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Loading";
        return _this;
    }
    LoadingConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new LoadingConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.text = csvGetString(csv, this.GetHeadIndex("text"));
        this.addConfig(config);
    };
    return LoadingConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = LoadingConfigReaderStruct;
},{"../ConfigExtends/LoadingConfig":80,"../CsvConfigRender":118}],158:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MailConfig_1 = require("../ConfigExtends/MailConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var MailConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MailConfigReaderStruct, _super);
    function MailConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Mail";
        return _this;
    }
    MailConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MailConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.life_time = csvGetInt(csv, this.GetHeadIndex("life_time"));
        config.zh_cn_title = csvGetString(csv, this.GetHeadIndex("zh_cn_title"));
        config.en_title = csvGetString(csv, this.GetHeadIndex("en_title"));
        config.item = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("item")));
        config.zh_cn_content = csvGetString(csv, this.GetHeadIndex("zh_cn_content"));
        config.en_content = csvGetString(csv, this.GetHeadIndex("en_content"));
        this.addConfig(config);
    };
    return MailConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MailConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":68,"../ConfigExtends/MailConfig":81,"../CsvConfigRender":118}],159:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MenuConfig_1 = require("../ConfigExtends/MenuConfig");
var MenuConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MenuConfigReaderStruct, _super);
    function MenuConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Menu";
        return _this;
    }
    MenuConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MenuConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.icon = csvGetString(csv, this.GetHeadIndex("icon"));
        config.moduleName = csvGetString(csv, this.GetHeadIndex("moduleName"));
        config.layer = csvGetInt(csv, this.GetHeadIndex("layer"));
        config.closeOtherType = csvGetInt(csv, this.GetHeadIndex("closeOtherType"));
        config.closeHomeWindow = csvGetBoolean(csv, this.GetHeadIndex("closeHomeWindow"));
        config.isAutoOpenHomeWindow = csvGetBoolean(csv, this.GetHeadIndex("isAutoOpenHomeWindow"));
        config.cacheTime = csvGetInt(csv, this.GetHeadIndex("cacheTime"));
        config.loaderId = csvGetInt(csv, this.GetHeadIndex("loaderId"));
        config.barType = csvGetInt(csv, this.GetHeadIndex("barType"));
        config.barIndex = csvGetInt(csv, this.GetHeadIndex("barIndex"));
        config.openAnimation = csvGetInt(csv, this.GetHeadIndex("openAnimation"));
        config.closeAnimation = csvGetInt(csv, this.GetHeadIndex("closeAnimation"));
        this.addConfig(config);
    };
    return MenuConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MenuConfigReaderStruct;
},{"../ConfigExtends/MenuConfig":82,"../CsvConfigRender":118}],160:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MenuIndexConfig_1 = require("../ConfigExtends/MenuIndexConfig");
var MenuIndexConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MenuIndexConfigReaderStruct, _super);
    function MenuIndexConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MenuIndex";
        return _this;
    }
    MenuIndexConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MenuIndexConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.menuId = csvGetInt(csv, this.GetHeadIndex("menuId"));
        config.openType = csvGetInt(csv, this.GetHeadIndex("openType"));
        config.menuIndex = csvGetInt(csv, this.GetHeadIndex("menuIndex"));
        this.addConfig(config);
    };
    return MenuIndexConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MenuIndexConfigReaderStruct;
},{"../ConfigExtends/MenuIndexConfig":83,"../CsvConfigRender":118}],161:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MsgConfig_1 = require("../ConfigExtends/MsgConfig");
var MsgConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MsgConfigReaderStruct, _super);
    function MsgConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Msg";
        return _this;
    }
    MsgConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MsgConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.module = csvGetString(csv, this.GetHeadIndex("module"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.zh_cn_notice = csvGetString(csv, this.GetHeadIndex("zh_cn_notice"));
        config.en_notice = csvGetString(csv, this.GetHeadIndex("en_notice"));
        this.addConfig(config);
    };
    return MsgConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MsgConfigReaderStruct;
},{"../ConfigExtends/MsgConfig":84,"../CsvConfigRender":118}],162:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PlayerLevelConfig_1 = require("../ConfigExtends/PlayerLevelConfig");
var DTFixItemNum_1 = require("../ConfigExtends/DTFixItemNum");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var PlayerLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PlayerLevelConfigReaderStruct, _super);
    function PlayerLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "PlayerLevel";
        return _this;
    }
    PlayerLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PlayerLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.exp = csvGetInt(csv, this.GetHeadIndex("exp"));
        config.reward = DTFixItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.story = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("story")));
        config.order_qua = toIntArray(csvGetString(csv, this.GetHeadIndex("order_qua")));
        config.order_num = csvGetInt(csv, this.GetHeadIndex("order_num"));
        config.train_max = csvGetInt(csv, this.GetHeadIndex("train_max"));
        config.train_count = csvGetInt(csv, this.GetHeadIndex("train_count"));
        config.actor_max = csvGetInt(csv, this.GetHeadIndex("actor_max"));
        config.actor_count = csvGetInt(csv, this.GetHeadIndex("actor_count"));
        config.hide_max = csvGetInt(csv, this.GetHeadIndex("hide_max"));
        config.hide_count = csvGetInt(csv, this.GetHeadIndex("hide_count"));
        config.day_max = csvGetInt(csv, this.GetHeadIndex("day_max"));
        config.day = csvGetInt(csv, this.GetHeadIndex("day"));
        config.meeting_cd = csvGetInt(csv, this.GetHeadIndex("meeting_cd"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.mc_special_package1 = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("mc_special_package1")));
        config.mc_special_package2 = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("mc_special_package2")));
        config.shop_1003 = csvGetInt(csv, this.GetHeadIndex("shop_1003"));
        config.shop_1004 = csvGetInt(csv, this.GetHeadIndex("shop_1004"));
        config.Turntable_min = csvGetInt(csv, this.GetHeadIndex("Turntable_min"));
        config.Turntable_max = csvGetInt(csv, this.GetHeadIndex("Turntable_max"));
        this.addConfig(config);
    };
    return PlayerLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PlayerLevelConfigReaderStruct;
},{"../ConfigExtends/DTFixItemNum":67,"../ConfigExtends/DTItemNum":68,"../ConfigExtends/PlayerLevelConfig":85,"../CsvConfigRender":118}],163:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PropertyConfig_1 = require("../ConfigExtends/PropertyConfig");
var PropertyConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PropertyConfigReaderStruct, _super);
    function PropertyConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Property";
        return _this;
    }
    PropertyConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PropertyConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.field = csvGetString(csv, this.GetHeadIndex("field"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_addname = csvGetString(csv, this.GetHeadIndex("zh_cn_addname"));
        config.addnamenum = csvGetInt(csv, this.GetHeadIndex("addnamenum"));
        config.details = csvGetBoolean(csv, this.GetHeadIndex("details"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.groupType = csvGetInt(csv, this.GetHeadIndex("groupType"));
        config.visible = csvGetBoolean(csv, this.GetHeadIndex("visible"));
        this.addConfig(config);
    };
    return PropertyConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PropertyConfigReaderStruct;
},{"../ConfigExtends/PropertyConfig":86,"../CsvConfigRender":118}],164:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var RewardConfig_1 = require("../ConfigExtends/RewardConfig");
var DTFixItemNum_1 = require("../ConfigExtends/DTFixItemNum");
var DTRewardRandom_1 = require("../ConfigExtends/DTRewardRandom");
var RewardConfigReaderStruct = /** @class */ (function (_super) {
    __extends(RewardConfigReaderStruct, _super);
    function RewardConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Reward";
        return _this;
    }
    RewardConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new RewardConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.fixedItems = DTFixItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("fixedItems")));
        config.multipleReward = csvGetInt(csv, this.GetHeadIndex("multipleReward"));
        config.randomItems = DTRewardRandom_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("randomItems")));
        config.randomCount = csvGetInt(csv, this.GetHeadIndex("randomCount"));
        this.addConfig(config);
    };
    return RewardConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = RewardConfigReaderStruct;
},{"../ConfigExtends/DTFixItemNum":67,"../ConfigExtends/DTRewardRandom":70,"../ConfigExtends/RewardConfig":87,"../CsvConfigRender":118}],165:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var UnlockConfig_1 = require("../ConfigExtends/UnlockConfig");
var UnlockConfigReaderStruct = /** @class */ (function (_super) {
    __extends(UnlockConfigReaderStruct, _super);
    function UnlockConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Unlock";
        return _this;
    }
    UnlockConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new UnlockConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.icon_type = csvGetInt(csv, this.GetHeadIndex("icon_type"));
        config.menu_id = csvGetInt(csv, this.GetHeadIndex("menu_id"));
        config.item_id = csvGetInt(csv, this.GetHeadIndex("item_id"));
        config.show_type = csvGetInt(csv, this.GetHeadIndex("show_type"));
        config.group = csvGetInt(csv, this.GetHeadIndex("group"));
        config.group_id = csvGetInt(csv, this.GetHeadIndex("group_id"));
        config.position = csvGetInt(csv, this.GetHeadIndex("position"));
        config.open_type = csvGetInt(csv, this.GetHeadIndex("open_type"));
        config.open_data = csvGetInt(csv, this.GetHeadIndex("open_data"));
        config.open_show = toIntArray(csvGetString(csv, this.GetHeadIndex("open_show")));
        config.plot = csvGetInt(csv, this.GetHeadIndex("plot"));
        config.time = csvGetInt(csv, this.GetHeadIndex("time"));
        config.close_type = csvGetInt(csv, this.GetHeadIndex("close_type"));
        config.close_data = csvGetInt(csv, this.GetHeadIndex("close_data"));
        config.continue = csvGetInt(csv, this.GetHeadIndex("continue"));
        config.is_new = csvGetBoolean(csv, this.GetHeadIndex("is_new"));
        config.zh_cn_touch_txt = csvGetString(csv, this.GetHeadIndex("zh_cn_touch_txt"));
        this.addConfig(config);
    };
    return UnlockConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = UnlockConfigReaderStruct;
},{"../ConfigExtends/UnlockConfig":88,"../CsvConfigRender":118}],166:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EmitterBase_1 = require("./EmitterBase");
var ParticleTemplate2D_1 = require("./ParticleTemplate2D");
var Emitter2D = /** @class */ (function (_super) {
    __extends(Emitter2D, _super);
    function Emitter2D(_template) {
        var _this = _super.call(this) || this;
        _this.setting = null;
        _this._posRange = new Float32Array([0, 0, 0]);
        _this._emitFun = null;
        _this.template = _template;
        return _this;
    }
    /**
    *发射一个粒子
    *
    */
    Emitter2D.prototype.emit = function () {
        _super.prototype.emit.call(this);
        if (this._emitFun)
            this._emitFun();
    };
    Emitter2D.prototype.getRandom = function (value) {
        return (Math.random() * 2 - 1) * value;
    };
    Emitter2D.prototype.webGLEmit = function () {
        var pos = new Float32Array(3);
        pos[0] = this.getRandom(this._posRange[0]);
        pos[1] = this.getRandom(this._posRange[1]);
        pos[2] = this.getRandom(this._posRange[2]);
        var v = new Float32Array(3);
        v[0] = 0;
        v[1] = 0;
        v[2] = 0;
        this._particleTemplate.addParticleArray(pos, v);
    };
    Object.defineProperty(Emitter2D.prototype, "template", {
        get: function () {
            return this._particleTemplate;
        },
        set: function (template) {
            this._particleTemplate = template;
            if (!template) {
                this._emitFun = null;
                this.setting = null;
                this._posRange = null;
            }
            this.setting = template.settings;
            this._posRange[0] = this.setting.positionVariance[0];
            this._posRange[1] = this.setting.positionVariance[1];
            this._posRange[2] = this.setting.positionVariance[2];
            if (this._particleTemplate instanceof ParticleTemplate2D_1.default) {
                this._emitFun = this.webGLEmit;
            }
            this.emissionRate = this.setting.emissionRate > 0 ? this.setting.emissionRate : 60;
        },
        enumerable: true,
        configurable: true
    });
    return Emitter2D;
}(EmitterBase_1.default));
exports.default = Emitter2D;
},{"./EmitterBase":167,"./ParticleTemplate2D":173}],167:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
*<code>EmitterBase</code> 类是粒子发射器类
*/
var EmitterBase = /** @class */ (function () {
    function EmitterBase() {
        /**
        *积累的帧时间
        */
        this._frameTime = 0;
        /**
         *粒子发射速率
         */
        this._emissionRate = 60;
        /**
         *当前剩余发射时间
         */
        this._emissionTime = 0;
        /**
         *发射粒子最小时间间隔
         */
        this.minEmissionTime = 1 / 60;
    }
    /**
     *开始发射粒子
     *@param duration 发射持续的时间(秒)
     */
    EmitterBase.prototype.start = function (duration) {
        (duration === void 0) && (duration = Number.MAX_VALUE);
        if (this._emissionRate != 0)
            this._emissionTime = duration;
    };
    /**
    *停止发射粒子
    *@param clearParticles 是否清理当前的粒子
    */
    EmitterBase.prototype.stop = function () {
        this._emissionTime = 0;
    };
    /**
     *清理当前的活跃粒子
     *@param clearTexture 是否清理贴图数据,若清除贴图数据将无法再播放
     */
    EmitterBase.prototype.clear = function () {
        this._emissionTime = 0;
    };
    /**
    *发射一个粒子
    *
    */
    EmitterBase.prototype.emit = function () {
    };
    /**
     *时钟前进
     *@param passedTime 前进时间
     *
     */
    EmitterBase.prototype.advanceTime = function (passedTime) {
        (passedTime === void 0) && (passedTime = 1);
        this._emissionTime -= passedTime;
        if (this._emissionTime < 0)
            return;
        this._frameTime += passedTime;
        if (this._frameTime < this.minEmissionTime)
            return;
        while (this._frameTime > this.minEmissionTime) {
            this._frameTime -= this.minEmissionTime;
            this.emit();
        }
    };
    Object.defineProperty(EmitterBase.prototype, "particleTemplate", {
        /**
         *设置粒子粒子模板
         *@param particleTemplate 粒子模板
         *
         */
        set: function (particleTemplate) {
            this._particleTemplate = particleTemplate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EmitterBase.prototype, "emissionRate", {
        /**
        *获取粒子发射速率
        *@return 发射速率 粒子发射速率 (个/秒)
        */
        get: function () {
            return this._emissionRate;
        },
        /**
        *设置粒子发射速率
        *@param emissionRate 粒子发射速率 (个/秒)
        */
        set: function (val) {
            if (val <= 0)
                return;
            this._emissionRate = val;
            (val > 0) && (this.minEmissionTime = 1 / val);
        },
        enumerable: true,
        configurable: true
    });
    return EmitterBase;
}());
exports.default = EmitterBase;
},{}],168:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Render = Laya.Render;
var BlendMode = Laya.BlendMode;
var DrawParticleCmd = Laya.DrawParticleCmd;
var ParticleSetting_1 = require("./ParticleSetting");
var ParticleTemplate2D_1 = require("./ParticleTemplate2D");
var Emitter2D_1 = require("./Emitter2D");
var Particle2D = /** @class */ (function (_super) {
    __extends(Particle2D, _super);
    function Particle2D(setting) {
        var _this = _super.call(this) || this;
        _this._matrix4 = [
            1, 0, 0, 0,
            0, 1, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ];
        /** 是否字段播放 */
        _this.autoPlay = true;
        _this.isPlaying = false;
        _this.isSetMmat = false;
        _this.customRenderEnable = true;
        if (setting)
            _this.setParticleSetting(setting);
        return _this;
    }
    /**
    *加载粒子文件
    *@param url 粒子文件地址
    */
    Particle2D.prototype.load = function (url) {
        Laya.loader.load(url, Laya.Handler.create(this, this.setParticleSetting), null, Laya.Loader.JSON);
    };
    /**
    *设置粒子配置数据
    *@param settings 粒子配置数据
    */
    Particle2D.prototype.setParticleSetting = function (setting) {
        if (!setting)
            return this.stop();
        ParticleSetting_1.default.checkSetting(setting);
        if (Render.isConchApp) {
            this._particleTemplate = new ParticleTemplate2D_1.default(setting);
            var sBlendMode = BlendMode.NAMES[setting.blendState];
            this.blendMode = sBlendMode;
            this.tempCmd = this.graphics._saveToCmd(null, DrawParticleCmd.create.call(this.graphics, this._particleTemplate));
            this._setGraphicsCallBack();
        }
        else {
            if (Render.isWebGL) {
                this.customRenderEnable = true;
                this._particleTemplate = new ParticleTemplate2D_1.default(setting);
                this.graphics._saveToCmd(null, DrawParticleCmd.create(this._particleTemplate));
            }
        }
        if (!this._emitter) {
            this._emitter = new Emitter2D_1.default(this._particleTemplate);
        }
        else {
            this._emitter.template = this._particleTemplate;
        }
        if (this.autoPlay) {
            this.emitter.start();
            this.play();
        }
    };
    Particle2D.prototype.reset = function () {
        if (this._particleTemplate)
            this._particleTemplate.reset();
    };
    /**
     *播放
     */
    Particle2D.prototype.play = function () {
        if (this.isPlaying)
            return;
        this.isPlaying = true;
        Laya.timer.frameLoop(1, this, this._loop);
        if (this._particleTemplate.settings.life > 0) {
            Laya.timer.once(this._particleTemplate.settings.life * 1000, this, this.stop);
        }
    };
    /**
    *停止
    */
    Particle2D.prototype.stop = function () {
        this.isPlaying = false;
        Laya.timer.clear(this, this._loop);
        Laya.timer.clearAll(this);
    };
    Particle2D.prototype._loop = function () {
        this.advanceTime(1 / 60);
    };
    /**
    *时钟前进
    *@param passedTime 时钟前进时间
    */
    Particle2D.prototype.advanceTime = function (passedTime) {
        (passedTime === void 0) && (passedTime = 1);
        if (this._emitter) {
            this._emitter.advanceTime(passedTime);
        }
    };
    Particle2D.prototype.customRender = function (context, x, y) {
        if (Render.isWebGL) {
            if (this.isSetMmat) {
                // && this._particleTemplate.settings.isLocal
                //    return;
            }
            this.isSetMmat = true;
            this._matrix4[0] = context._curMat.a;
            this._matrix4[1] = context._curMat.b;
            this._matrix4[4] = context._curMat.c;
            this._matrix4[5] = context._curMat.d;
            this._matrix4[12] = context._curMat.tx;
            this._matrix4[13] = context._curMat.ty;
            var sv = this._particleTemplate.sv;
            // TODO ZF
            sv["u_mmat"] = this._matrix4;
            // sv.mmat=this._matrix4;
        }
    };
    Particle2D.prototype.destroy = function (destroyChild) {
        (destroyChild === void 0) && (destroyChild = true);
        if ((this._particleTemplate instanceof ParticleTemplate2D_1.default)) {
            this._particleTemplate.dispose();
        }
        _super.prototype.destroy.call(this, destroyChild);
    };
    Object.defineProperty(Particle2D.prototype, "url", {
        /**
        *设置 粒子文件地址
        *@param path 粒子文件地址
        */
        set: function (url) {
            this.load(url);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Particle2D.prototype, "emitter", {
        /**
        *获取粒子发射器
        */
        get: function () {
            return this._emitter;
        },
        enumerable: true,
        configurable: true
    });
    Particle2D.prototype.setStartColor = function (r, g, b, a) {
        var arr = this._particleTemplate.settings.minStartColor;
        arr[0] = r;
        arr[1] = g;
        arr[2] = b;
        arr[3] = a;
        arr = this._particleTemplate.settings.maxStartColor;
        arr[0] = r;
        arr[1] = g;
        arr[2] = b;
        arr[3] = a;
    };
    Particle2D.prototype.setEndColor = function (r, g, b, a) {
        var arr = this._particleTemplate.settings.minEndColor;
        arr[0] = r;
        arr[1] = g;
        arr[2] = b;
        arr[3] = a;
        arr = this._particleTemplate.settings.maxEndColor;
        arr[0] = r;
        arr[1] = g;
        arr[2] = b;
        arr[3] = a;
    };
    Particle2D.prototype.setColor = function (r, g, b, a) {
        this.setStartColor(r, g, b, a);
        this.setEndColor(r, g, b, a);
    };
    /** 设置发射范围 */
    Particle2D.prototype.setPosRangeScale = function (x, y, z) {
        this.emitter._posRange[0] = this._particleTemplate.settings.positionVariance[0] * x;
        this.emitter._posRange[1] = this._particleTemplate.settings.positionVariance[1] * x;
        this.emitter._posRange[2] = this._particleTemplate.settings.positionVariance[2] * x;
    };
    return Particle2D;
}(Laya.Sprite));
exports.default = Particle2D;
window["Particle2D"] = Particle2D;
},{"./Emitter2D":166,"./ParticleSetting":170,"./ParticleTemplate2D":173}],169:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MathUtil = Laya.MathUtil;
var ParticleData = /** @class */ (function () {
    function ParticleData() {
    }
    ParticleData.Create = function (settings, position, velocity, time) {
        var particleData = new ParticleData();
        particleData.position = position;
        //=====================
        // 设置速度 [x, y, z]
        //---------------------
        // 缩放 e = f * b;
        MathUtil.scaleVector3(velocity, settings.emitterVelocitySensitivity, ParticleData._tempVelocity);
        // 水平速度（单位：2D像素、3D坐标）
        var horizontalVelocity = MathUtil.lerp(settings.minHorizontalVelocity, settings.maxHorizontalVelocity, Math.random());
        // 水平角度
        var horizontalAngle = MathUtil.lerp(settings.minAngle, settings.maxAngle, Math.random());
        // 水平速度
        ParticleData._tempVelocity[0] += horizontalVelocity * Math.cos(horizontalAngle);
        ParticleData._tempVelocity[1] += horizontalVelocity * Math.sin(horizontalAngle);
        // 垂直速度
        ParticleData._tempVelocity[1] += MathUtil.lerp(settings.minVerticalVelocity, settings.maxVerticalVelocity, Math.random());
        particleData.velocity = ParticleData._tempVelocity;
        //=====================
        // 设置颜色 [r, g, b, a]
        //---------------------
        particleData.startColor = ParticleData._tempStartColor;
        particleData.endColor = ParticleData._tempEndColor;
        var i = 0;
        if (settings.disableColor) {
            for (i = 0; i < 3; i++) {
                particleData.startColor[i] = 1;
                particleData.endColor[i] = 1;
            }
            // alpha
            particleData.startColor[i] = MathUtil.lerp(settings.minStartColor[i], settings.maxStartColor[i], Math.random());
            particleData.endColor[i] = MathUtil.lerp(settings.minEndColor[i], settings.maxEndColor[i], Math.random());
        }
        else {
            if (settings.colorComponentInter) {
                for (i = 0; i < 4; i++) {
                    particleData.startColor[i] = MathUtil.lerp(settings.minStartColor[i], settings.maxStartColor[i], Math.random());
                    particleData.endColor[i] = MathUtil.lerp(settings.minEndColor[i], settings.maxEndColor[i], Math.random());
                }
            }
            else {
                MathUtil.lerpVector4(settings.minStartColor, settings.maxStartColor, Math.random(), particleData.startColor);
                MathUtil.lerpVector4(settings.minEndColor, settings.maxEndColor, Math.random(), particleData.endColor);
            }
        }
        //=====================
        // 设置 大小和旋转速度 [startSize, endSize,  rotateSpeed]
        //---------------------
        particleData.sizeRotation = ParticleData._tempSizeRotation;
        var sizeRandom = Math.random();
        particleData.sizeRotation[0] = MathUtil.lerp(settings.minStartSize, settings.maxStartSize, sizeRandom);
        particleData.sizeRotation[1] = MathUtil.lerp(settings.minEndSize, settings.maxEndSize, sizeRandom);
        particleData.sizeRotation[2] = MathUtil.lerp(settings.minRotateSpeed, settings.maxRotateSpeed, Math.random());
        //=====================
        // 设置 半径 [StartRadius,EndRadius]
        //---------------------
        particleData.radius = ParticleData._tempRadius;
        var radiusRandom = Math.random();
        particleData.radius[0] = MathUtil.lerp(settings.minStartRadius, settings.maxStartRadius, radiusRandom);
        particleData.radius[1] = MathUtil.lerp(settings.minEndRadius, settings.maxEndRadius, radiusRandom);
        //=====================
        // 设置 弧度 [HorizontalStartRadian,VerticalStartRadian, HorizontalEndRadian, VerticalEndRadian]
        //---------------------
        particleData.radian = ParticleData._tempRadian;
        particleData.radian[0] = MathUtil.lerp(settings.minHorizontalStartRadian, settings.maxHorizontalStartRadian, Math.random());
        particleData.radian[1] = MathUtil.lerp(settings.minVerticalStartRadian, settings.maxVerticalStartRadian, Math.random());
        var useEndRadian = settings.useEndRadian;
        particleData.radian[2] = useEndRadian ? MathUtil.lerp(settings.minHorizontalEndRadian, settings.maxHorizontalEndRadian, Math.random()) : particleData.radian[0];
        particleData.radian[3] = useEndRadian ? MathUtil.lerp(settings.minVerticalEndRadian, settings.maxVerticalEndRadian, Math.random()) : particleData.radian[1];
        // 设置 缩放持续时间
        particleData.durationAddScale = settings.ageAddScale * Math.random();
        // 设置 次数
        particleData.time = time;
        return particleData;
    };
    Object.defineProperty(ParticleData, "_tempVelocity", {
        get: function () {
            if (!this.___tempVelocity)
                this.___tempVelocity = new Float32Array(3);
            return this.___tempVelocity;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParticleData, "_tempStartColor", {
        get: function () {
            if (!this.__tempStartColor)
                this.__tempStartColor = new Float32Array(4);
            return this.__tempStartColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParticleData, "_tempEndColor", {
        get: function () {
            if (!this.__tempEndColor)
                this.__tempEndColor = new Float32Array(4);
            return this.__tempEndColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParticleData, "_tempSizeRotation", {
        get: function () {
            if (!this.__tempSizeRotation)
                this.__tempSizeRotation = new Float32Array(3);
            return this.__tempSizeRotation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParticleData, "_tempRadius", {
        get: function () {
            if (!this.__tempRadius)
                this.__tempRadius = new Float32Array(2);
            return this.__tempRadius;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParticleData, "_tempRadian", {
        get: function () {
            if (!this.__tempRadian)
                this.__tempRadian = new Float32Array(4);
            return this.__tempRadian;
        },
        enumerable: true,
        configurable: true
    });
    return ParticleData;
}());
exports.default = ParticleData;
},{}],170:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ParticleSetting = /** @class */ (function () {
    function ParticleSetting() {
        /** 是否本地坐标系， 会跟随主容器移动 */
        this.isLocal = false;
        /**原始贴图*/
        this.sourceTextureName = null;
        /**贴图*/
        this.textureName = null;
        /**贴图个数,默认为1可不设置*/
        this.textureCount = 1;
        /**由于循环队列判断算法，最大饱和粒子数为maxPartices-1*/
        this.maxPartices = 100;
        /**粒子生命时间(单位:秒）*/
        this.life = -1;
        /**粒子持续时间(单位:秒）*/
        this.duration = 1;
        /**如果大于0，某些粒子的持续时间会小于其他粒子,并具有随机性(单位:无）*/
        this.ageAddScale = 0;
        /**粒子受发射器速度的敏感度（需在自定义发射器中编码设置）*/
        this.emitterVelocitySensitivity = 1;
        /**最小开始尺寸（单位：2D像素、3D坐标）*/
        this.minStartSize = 100;
        /**最大开始尺寸（单位：2D像素、3D坐标）*/
        this.maxStartSize = 100;
        /**最小结束尺寸（单位：2D像素、3D坐标）*/
        this.minEndSize = 100;
        /**最大结束尺寸（单位：2D像素、3D坐标）*/
        this.maxEndSize = 100;
        /** 最小角度 */
        this.minAngle = 0;
        /** 最大角度 */
        this.maxAngle = 360;
        /**最小水平速度（单位：2D像素、3D坐标）*/
        this.minHorizontalVelocity = 0;
        /**最大水平速度（单位：2D像素、3D坐标）*/
        this.maxHorizontalVelocity = 0;
        /**最小垂直速度（单位：2D像素、3D坐标）*/
        this.minVerticalVelocity = 0;
        /**最大垂直速度（单位：2D像素、3D坐标）*/
        this.maxVerticalVelocity = 0;
        /**等于1时粒子从出生到消亡保持一致的速度，等于0时粒子消亡时速度为0，大于1时粒子会保持加速（单位：无）*/
        this.endVelocity = 1;
        /**最小旋转速度（单位：2D弧度/秒、3D弧度/秒）*/
        this.minRotateSpeed = 0;
        /**最大旋转速度（单位：2D弧度/秒、3D弧度/秒）*/
        this.maxRotateSpeed = 0;
        /**最小开始半径（单位：2D像素、3D坐标）*/
        this.minStartRadius = 0;
        /**最大开始半径（单位：2D像素、3D坐标）*/
        this.maxStartRadius = 0;
        /**最小结束半径（单位：2D像素、3D坐标）*/
        this.minEndRadius = 0;
        /**最大结束半径（单位：2D像素、3D坐标）*/
        this.maxEndRadius = 0;
        /**最小水平开始弧度（单位：2D弧度、3D弧度）*/
        this.minHorizontalStartRadian = 0;
        /**最大水平开始弧度（单位：2D弧度、3D弧度）*/
        this.maxHorizontalStartRadian = 0;
        /**最小垂直开始弧度（单位：2D弧度、3D弧度）*/
        this.minVerticalStartRadian = 0;
        /**最大垂直开始弧度（单位：2D弧度、3D弧度）*/
        this.maxVerticalStartRadian = 0;
        /**是否使用结束弧度,false为结束时与起始弧度保持一致,true为根据minHorizontalEndRadian、maxHorizontalEndRadian、minVerticalEndRadian、maxVerticalEndRadian计算结束弧度。*/
        this.useEndRadian = true;
        /**最小水平结束弧度（单位：2D弧度、3D弧度）*/
        this.minHorizontalEndRadian = 0;
        /**最大水平结束弧度（单位：2D弧度、3D弧度）*/
        this.maxHorizontalEndRadian = 0;
        /**最小垂直结束弧度（单位：2D弧度、3D弧度）*/
        this.minVerticalEndRadian = 0;
        /**最大垂直结束弧度（单位：2D弧度、3D弧度）*/
        this.maxVerticalEndRadian = 0;
        /**false代表RGBA整体插值，true代表RGBA逐分量插值*/
        this.colorComponentInter = false;
        /**false代表使用参数颜色数据，true代表使用原图颜色数据*/
        this.disableColor = false;
        /**混合模式，待调整，引擎中暂无BlendState抽象*/
        this.blendState = 0;
        /**发射器类型,"point","box","sphere","ring"*/
        this.emitterType = "null";
        /**发射器发射速率*/
        this.emissionRate = 10;
        /**球发射器半径*/
        this.sphereEmitterRadius = 1;
        /**球发射器速度*/
        this.sphereEmitterVelocity = 0;
        /**球发射器速度随机值*/
        this.sphereEmitterVelocityAddVariance = 0;
        /**环发射器半径*/
        this.ringEmitterRadius = 30;
        /**环发射器速度*/
        this.ringEmitterVelocity = 0;
        /**环发射器速度随机值*/
        this.ringEmitterVelocityAddVariance = 0;
        /**环发射器up向量，0代表X轴,1代表Y轴,2代表Z轴*/
        this.ringEmitterUp = 2;
        this.gravity = new Float32Array([0, 0, 0]);
        this.minStartColor = new Float32Array([1, 1, 1, 1]);
        this.maxStartColor = new Float32Array([1, 1, 1, 1]);
        this.minEndColor = new Float32Array([1, 1, 1, 1]);
        this.maxEndColor = new Float32Array([1, 1, 1, 1]);
        this.pointEmitterPosition = new Float32Array([0, 0, 0]);
        this.pointEmitterPositionVariance = new Float32Array([0, 0, 0]);
        this.pointEmitterVelocity = new Float32Array([0, 0, 0]);
        this.pointEmitterVelocityAddVariance = new Float32Array([0, 0, 0]);
        this.boxEmitterCenterPosition = new Float32Array([0, 0, 0]);
        this.boxEmitterSize = new Float32Array([0, 0, 0]);
        this.boxEmitterVelocity = new Float32Array([0, 0, 0]);
        this.boxEmitterVelocityAddVariance = new Float32Array([0, 0, 0]);
        this.sphereEmitterCenterPosition = new Float32Array([0, 0, 0]);
        this.ringEmitterCenterPosition = new Float32Array([0, 0, 0]);
        this.positionVariance = new Float32Array([0, 0, 0]);
    }
    Object.defineProperty(ParticleSetting, "defaultSetting", {
        get: function () {
            if (!this._defaultSetting)
                this._defaultSetting = new ParticleSetting();
            return this._defaultSetting;
        },
        enumerable: true,
        configurable: true
    });
    ParticleSetting.checkSetting = function (setting) {
        var key;
        for (key in ParticleSetting.defaultSetting) {
            if (!setting.hasOwnProperty(key)) {
                setting[key] = ParticleSetting.defaultSetting[key];
            }
        }
        setting.endVelocity = +setting.endVelocity;
        setting.gravity[0] = +setting.gravity[0];
        setting.gravity[1] = +setting.gravity[1];
        setting.gravity[2] = +setting.gravity[2];
    };
    return ParticleSetting;
}());
exports.default = ParticleSetting;
},{}],171:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
var ParticleShader = /** @class */ (function (_super) {
    __extends(ParticleShader, _super);
    function ParticleShader() {
        var _this = this;
        var vs = ParticleShader.vs;
        var ps = ParticleShader.ps;
        _this = _super.call(this, vs, ps, 'EngineParticleShader', // saveName
        null, // nameMap
        // bindAttrib
        [
            'a_CornerTextureCoordinate', 0,
            'a_Position', 1,
            'a_Velocity', 2,
            'a_StartColor', 3,
            'a_EndColor', 4,
            'a_SizeRotation', 5,
            'a_Radius', 6,
            'a_Radian', 7,
            'a_AgeAddScale', 8,
            'a_Time', 9
        ]) || this;
        return _this;
    }
    /**
     * 加载Shader
     */
    ParticleShader.install = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, Game_1.default.asset.loadShaderVSAsync(this.shaderName)];
                    case 1:
                        _a.vs = _c.sent();
                        _b = this;
                        return [4 /*yield*/, Game_1.default.asset.loadShaderPSAsync(this.shaderName)];
                    case 2:
                        _b.ps = _c.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ParticleShader.shaderName = "ParticleShader";
    return ParticleShader;
}(Laya.Shader));
exports.default = ParticleShader;
},{"../Game":546}],172:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RenderState2D = Laya.RenderState2D;
var ParticleShader_1 = require("./ParticleShader");
var ParticleShaderValue = /** @class */ (function (_super) {
    __extends(ParticleShaderValue, _super);
    function ParticleShaderValue() {
        var _this = _super.call(this, 0, 0) || this;
        /*
        public var a_CornerTextureCoordinate:Array=[4,WebGLContext.FLOAT,false,116,0];
        public var a_Position:Array=[3,WebGLContext.FLOAT,false,116,16];
        public var a_Velocity:Array=[3,WebGLContext.FLOAT,false,116,28];
        public var a_StartColor:Array=[4,WebGLContext.FLOAT,false,116,40];
        public var a_EndColor:Array=[4,WebGLContext.FLOAT,false,116,56];
        public var a_SizeRotation:Array=[3,WebGLContext.FLOAT,false,116,72];
        public var a_Radius:Array=[2,WebGLContext.FLOAT,false,116,84];
        public var a_Radian:Array=[4,WebGLContext.FLOAT,false,116,92];
        public var a_AgeAddScale:Array=[1,WebGLContext.FLOAT,false,116,108];
        public var a_Time:Array=[1,WebGLContext.FLOAT,false,116,112];
        */
        _this.u_CurrentTime = NaN;
        _this.u_Duration = NaN;
        _this.u_Gravity = null;
        //v3
        _this.u_EndVelocity = NaN;
        _this.u_texture = null;
        return _this;
    }
    /*
    this._attribLocation=[
            'a_CornerTextureCoordinate',0,
            'a_Position',1,
            'a_Velocity',2,
            'a_StartColor',3,
            'a_EndColor',4,
            'a_SizeRotation',5,
            'a_Radius',6,
            'a_Radian',7,
            'a_AgeAddScale',8,
            'a_Time',9
        ];
    */
    ParticleShaderValue.prototype.upload = function () {
        var size = this.size;
        size[0] = RenderState2D.width;
        size[1] = RenderState2D.height;
        this.alpha = this.ALPHA * RenderState2D.worldAlpha;
        ParticleShaderValue.pShader.upload(this);
    };
    Object.defineProperty(ParticleShaderValue, "pShader", {
        get: function () {
            if (!this._pShader)
                this._pShader = new ParticleShader_1.default();
            return this._pShader;
        },
        enumerable: true,
        configurable: true
    });
    return ParticleShaderValue;
}(Laya.Value2D));
exports.default = ParticleShaderValue;
},{"./ParticleShader":171}],173:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ParticleTemplateWebGL_1 = require("./ParticleTemplateWebGL");
var ParticleShaderValue_1 = require("./ParticleShaderValue");
var Handler = Laya.Handler;
var BlendMode = Laya.BlendMode;
var Render = Laya.Render;
var MeshParticle2D = Laya.MeshParticle2D;
var WebGL = Laya.WebGL;
var WebGLContext = Laya.WebGLContext;
var Stat = Laya.Stat;
var ParticleTemplate2D = /** @class */ (function (_super) {
    __extends(ParticleTemplate2D, _super);
    function ParticleTemplate2D(parSetting) {
        var _this = _super.call(this, parSetting) || this;
        _this.x = 0;
        _this.y = 0;
        _this._blendFn = null;
        _this._startTime = 0;
        _this._key = {};
        _this.sv = new ParticleShaderValue_1.default();
        Laya.loader.load(_this.settings.textureName, Handler.create(null, function (texture) {
            _this.texture = texture;
        }));
        _this.sv.u_Duration = _this.settings.duration;
        _this.sv.u_Gravity = _this.settings.gravity;
        _this.sv.u_EndVelocity = _this.settings.endVelocity;
        _this._blendFn = BlendMode.fns[parSetting.blendState];
        if (Render.isConchApp) {
            var nSize = MeshParticle2D.const_stride * _this.settings.maxPartices * 4 * 4;
            _this._conchMesh = /*__JS__ */ new ParamData(nSize, true);
        }
        else {
            _this._mesh = MeshParticle2D.getAMesh(_this.settings.maxPartices);
        }
        _this.initialize();
        return _this;
    }
    ParticleTemplate2D.prototype.getRenderType = function () {
        return -111;
    };
    ParticleTemplate2D.prototype.releaseRender = function () {
    };
    ParticleTemplate2D.prototype.addParticleArray = function (position, velocity) {
        position[0] += this.x;
        position[1] += this.y;
        _super.prototype.addParticleArray.call(this, position, velocity);
    };
    ParticleTemplate2D.prototype.addNewParticlesToVertexBuffer = function () {
        var _vertexBuffer2D = this._mesh._vb;
        _vertexBuffer2D.clear();
        _vertexBuffer2D.append(this._vertices);
        var start = 0;
        if (this._firstNewElement < this._firstFreeElement) {
            start = this._firstNewElement * 4 * this._floatCountPerVertex * 4;
            _vertexBuffer2D.subUpload(start, start, start + (this._firstFreeElement - this._firstNewElement) * 4 * this._floatCountPerVertex * 4);
        }
        else {
            start = this._firstNewElement * 4 * this._floatCountPerVertex * 4;
            _vertexBuffer2D.subUpload(start, start, start + (this.settings.maxPartices - this._firstNewElement) * 4 * this._floatCountPerVertex * 4);
            if (this._firstFreeElement > 0) {
                _vertexBuffer2D.setNeedUpload();
                _vertexBuffer2D.subUpload(0, 0, this._firstFreeElement * 4 * this._floatCountPerVertex * 4);
            }
        }
        this._firstNewElement = this._firstFreeElement;
    };
    ParticleTemplate2D.prototype.renderSubmit = function () {
        if (this.texture && this.texture.getIsReady()) {
            this.update(Laya.timer._delta);
            this.sv.u_CurrentTime = this._currentTime;
            if (this._firstNewElement != this._firstFreeElement) {
                this.addNewParticlesToVertexBuffer();
            }
            this.blend();
            if (this._firstActiveElement != this._firstFreeElement) {
                var gl = WebGL.mainContext;
                this._mesh.useMesh(gl);
                this.sv.u_texture = this.texture._getSource();
                this.sv.upload();
                if (this._firstActiveElement < this._firstFreeElement) {
                    WebGL.mainContext.drawElements(WebGLContext.TRIANGLES, (this._firstFreeElement - this._firstActiveElement) * 6, WebGLContext.UNSIGNED_SHORT, this._firstActiveElement * 6 * 2);
                }
                else {
                    WebGL.mainContext.drawElements(WebGLContext.TRIANGLES, (this.settings.maxPartices - this._firstActiveElement) * 6, WebGLContext.UNSIGNED_SHORT, this._firstActiveElement * 6 * 2);
                    if (this._firstFreeElement > 0)
                        WebGL.mainContext.drawElements(WebGLContext.TRIANGLES, this._firstFreeElement * 6, WebGLContext.UNSIGNED_SHORT, 0);
                }
                !Stat["drawCall"] ? Stat["drawCall"] = 1 : Stat["drawCall"]++;
            }
            this._drawCounter++;
        }
        return 1;
    };
    ParticleTemplate2D.prototype.updateParticleForNative = function () {
        if (this.texture && this.texture.getIsReady()) {
            this.update(Laya.timer._delta);
            this.sv.u_CurrentTime = this._currentTime;
            if (this._firstNewElement != this._firstFreeElement) {
                this._firstNewElement = this._firstFreeElement;
            }
        }
    };
    ParticleTemplate2D.prototype.getMesh = function () {
        return this._mesh;
    };
    ParticleTemplate2D.prototype.getConchMesh = function () {
        return this._conchMesh;
    };
    ParticleTemplate2D.prototype.getFirstNewElement = function () {
        return this._firstNewElement;
    };
    ParticleTemplate2D.prototype.getFirstFreeElement = function () {
        return this._firstFreeElement;
    };
    ParticleTemplate2D.prototype.getFirstActiveElement = function () {
        return this._firstActiveElement;
    };
    ParticleTemplate2D.prototype.getFirstRetiredElement = function () {
        return this._firstRetiredElement;
    };
    ParticleTemplate2D.prototype.setFirstFreeElement = function (_value) {
        this._firstFreeElement = _value;
    };
    ParticleTemplate2D.prototype.setFirstNewElement = function (_value) {
        this._firstNewElement = _value;
    };
    ParticleTemplate2D.prototype.addDrawCounter = function () {
        this._drawCounter++;
    };
    ParticleTemplate2D.prototype.blend = function () {
        if (BlendMode.activeBlendFunction !== this._blendFn) {
            var gl = WebGL.mainContext;
            gl.enable(WebGLContext.BLEND);
            this._blendFn(gl);
            BlendMode.activeBlendFunction = this._blendFn;
        }
    };
    ParticleTemplate2D.prototype.dispose = function () {
        if (!Render.isConchApp) {
            this._mesh.releaseMesh();
        }
    };
    ParticleTemplate2D.activeBlendType = -1;
    return ParticleTemplate2D;
}(ParticleTemplateWebGL_1.default));
exports.default = ParticleTemplate2D;
},{"./ParticleShaderValue":172,"./ParticleTemplateWebGL":175}],174:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ParticleTemplateBase = /** @class */ (function () {
    function ParticleTemplateBase() {
        /**
        *粒子配置数据
        */
        this.settings = null;
        /**
        *粒子贴图
        */
        this.texture = null;
        this.x = 0;
        this.y = 0;
    }
    /**
     *添加一个粒子
     *@param position 粒子位置
     *@param velocity 粒子速度
     *
     */
    ParticleTemplateBase.prototype.addParticleArray = function (position, velocity) {
    };
    ParticleTemplateBase.prototype.reset = function () {
    };
    return ParticleTemplateBase;
}());
exports.default = ParticleTemplateBase;
},{}],175:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Render = Laya.Render;
var MeshParticle2D = Laya.MeshParticle2D;
var ParticleTemplateBase_1 = require("./ParticleTemplateBase");
var ParticleData_1 = require("./ParticleData");
var ParticleTemplateWebGL = /** @class */ (function (_super) {
    __extends(ParticleTemplateWebGL, _super);
    function ParticleTemplateWebGL(setting) {
        var _this = _super.call(this) || this;
        _this._floatCountPerVertex = 29;
        //0~3为CornerTextureCoordinate,
        //4~6为Position,
        //7~9Velocity,
        //10到13为StartColor,
        //14到17为EndColor,
        //18到20位SizeRotation，
        //21到22位Radius,
        //23到26位Radian，
        //27为DurationAddScaleShaderValue,
        //28为Time
        _this._firstActiveElement = 0;
        _this._firstNewElement = 0;
        _this._firstFreeElement = 0;
        _this._firstRetiredElement = 0;
        _this._currentTime = 0;
        _this._drawCounter = 0;
        _this.floatStride = 29;
        _this.offsetX = 0;
        _this.offsetY = 0;
        _this.lastX = null;
        _this.lastY = 0;
        _this.settings = setting;
        return _this;
    }
    ParticleTemplateWebGL.prototype.reUse = function (context, pos) {
        return 0;
    };
    /** 初始化 */
    ParticleTemplateWebGL.prototype.initialize = function () {
        var floatStride = 0;
        if (Render.isConchApp) {
            this._vertices = this._conchMesh._float32Data;
            floatStride = MeshParticle2D.const_stride / 4;
        }
        else {
            this._vertices = this._mesh._vb.getFloat32Array();
            floatStride = this._mesh._stride / 4;
        }
        ;
        this.floatStride = floatStride;
        var bufi = 0;
        var bufStart = 0;
        for (var i = 0; i < this.settings.maxPartices; i++) {
            var random = Math.random();
            var cornerYSegement = this.settings.textureCount ? 1.0 / this.settings.textureCount : 1.0;
            var cornerY = NaN;
            for (cornerY = 0; cornerY < this.settings.textureCount; cornerY += cornerYSegement) {
                if (random < cornerY + cornerYSegement)
                    break;
            }
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = 0;
            this._vertices[bufi++] = cornerY;
            bufi = (bufStart += floatStride);
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = cornerY;
            bufi = bufStart += floatStride;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = cornerY + cornerYSegement;
            bufi = bufStart += floatStride;
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = 0;
            this._vertices[bufi++] = cornerY + cornerYSegement;
            bufi = bufStart += floatStride;
        }
    };
    ParticleTemplateWebGL.prototype.reset = function () {
        var floatStride = 0;
        if (Render.isConchApp) {
            floatStride = MeshParticle2D.const_stride / 4;
        }
        else {
            floatStride = this._mesh._stride / 4;
        }
        ;
        this.floatStride = floatStride;
        var bufi = 0;
        var bufStart = 0;
        for (var i = 0; i < this.settings.maxPartices; i++) {
            var random = Math.random();
            var cornerYSegement = this.settings.textureCount ? 1.0 / this.settings.textureCount : 1.0;
            var cornerY = NaN;
            for (cornerY = 0; cornerY < this.settings.textureCount; cornerY += cornerYSegement) {
                if (random < cornerY + cornerYSegement)
                    break;
            }
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = 0;
            this._vertices[bufi++] = cornerY;
            bufi = (bufStart += floatStride);
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = cornerY;
            bufi = bufStart += floatStride;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = cornerY + cornerYSegement;
            bufi = bufStart += floatStride;
            this._vertices[bufi++] = -1;
            this._vertices[bufi++] = 1;
            this._vertices[bufi++] = 0;
            this._vertices[bufi++] = cornerY + cornerYSegement;
            bufi = bufStart += floatStride;
        }
        this._firstActiveElement = 0;
        this._firstNewElement = 0;
        this._firstFreeElement = 0;
        this._firstRetiredElement = 0;
        this._drawCounter = 0;
        this._currentTime = 0;
    };
    ParticleTemplateWebGL.prototype.update = function (elapsedTime) {
        this._currentTime += elapsedTime / 1000;
        if (this.settings.isLocal) {
            this.updateAllPosition();
        }
        this.retireActiveParticles();
        this.freeRetiredParticles();
        if (this._firstActiveElement == this._firstFreeElement)
            this._currentTime = 0;
        if (this._firstRetiredElement == this._firstActiveElement)
            this._drawCounter = 0;
    };
    /** 注销活动粒子 */
    ParticleTemplateWebGL.prototype.retireActiveParticles = function () {
        var epsilon = 0.0001;
        var particleDuration = this.settings.duration;
        while (this._firstActiveElement != this._firstNewElement) {
            var offset = this._firstActiveElement * this._floatCountPerVertex * 4;
            var index = offset + 28;
            var particleAge = this._currentTime - this._vertices[index];
            particleAge *= (1.0 + this._vertices[offset + 27]);
            if (particleAge + epsilon < particleDuration)
                break;
            this._vertices[index] = this._drawCounter;
            this._firstActiveElement++;
            if (this._firstActiveElement >= this.settings.maxPartices)
                this._firstActiveElement = 0;
        }
    };
    /** 注销自由粒子 */
    ParticleTemplateWebGL.prototype.freeRetiredParticles = function () {
        while (this._firstRetiredElement != this._firstActiveElement) {
            var age = this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * 4 + 28];
            if (age < 3)
                break;
            this._firstRetiredElement++;
            if (this._firstRetiredElement >= this.settings.maxPartices)
                this._firstRetiredElement = 0;
        }
    };
    ParticleTemplateWebGL.prototype.addNewParticlesToVertexBuffer = function () {
    };
    ParticleTemplateWebGL.prototype.updateAllPosition = function () {
        if (this.lastX != null) {
            this.offsetX = this.x - this.lastX;
            this.offsetY = this.y - this.lastY;
            if (this.offsetX < 0.1 && this.offsetY < 0.1)
                return;
            var bufi = 0;
            var bufStart = 0;
            var floatStride = this.floatStride;
            for (var i = 0; i < this.settings.maxPartices; i++) {
                bufStart = (i * 4) * floatStride;
                for (var vi = 0; vi < 4; vi++) {
                    bufi = bufStart + vi * floatStride + 4;
                    this._vertices[bufi++] += this.offsetX;
                    this._vertices[bufi++] += this.offsetY;
                }
            }
        }
        this.lastX = this.x;
        this.lastY = this.y;
    };
    //由于循环队列判断算法，
    //当下一个freeParticle等于retiredParticle时不添加例子，意味循环队列中永远有一个空位。
    //（由于此判断算法快速、简单，所以放弃了使循环队列饱和的复杂算法（需判断freeParticle在retiredParticle前、后两种情况并不同处理））
    ParticleTemplateWebGL.prototype.addParticleArray = function (position, velocity) {
        var nextFreeParticle = this._firstFreeElement + 1;
        if (nextFreeParticle >= this.settings.maxPartices)
            nextFreeParticle = 0;
        if (nextFreeParticle === this._firstRetiredElement)
            return;
        var particleData = ParticleData_1.default.Create(this.settings, position, velocity, this._currentTime);
        var startIndex = this._firstFreeElement * this._floatCountPerVertex * 4;
        for (var i = 0; i < 4; i++) {
            var j = 0, offset = 0;
            for (j = 0, offset = 4; j < 3; j++) {
                this._vertices[startIndex + i * this._floatCountPerVertex + offset + j] = particleData.position[j];
            }
            for (j = 0, offset = 7; j < 3; j++)
                this._vertices[startIndex + i * this._floatCountPerVertex + offset + j] = particleData.velocity[j];
            for (j = 0, offset = 10; j < 4; j++)
                this._vertices[startIndex + i * this._floatCountPerVertex + offset + j] = particleData.startColor[j];
            for (j = 0, offset = 14; j < 4; j++)
                this._vertices[startIndex + i * this._floatCountPerVertex + offset + j] = particleData.endColor[j];
            for (j = 0, offset = 18; j < 3; j++)
                this._vertices[startIndex + i * this._floatCountPerVertex + offset + j] = particleData.sizeRotation[j];
            for (j = 0, offset = 21; j < 2; j++)
                this._vertices[startIndex + i * this._floatCountPerVertex + offset + j] = particleData.radius[j];
            for (j = 0, offset = 23; j < 4; j++)
                this._vertices[startIndex + i * this._floatCountPerVertex + offset + j] = particleData.radian[j];
            this._vertices[startIndex + i * this._floatCountPerVertex + 27] = particleData.durationAddScale;
            this._vertices[startIndex + i * this._floatCountPerVertex + 28] = particleData.time;
        }
        this._firstFreeElement = nextFreeParticle;
    };
    return ParticleTemplateWebGL;
}(ParticleTemplateBase_1.default));
exports.default = ParticleTemplateWebGL;
},{"./ParticleData":169,"./ParticleTemplateBase":174}],176:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FguiHelper_1 = require("../../Libs/Helpers/FguiHelper");
/**
 * 菜单按钮控制器
 */
var MenuButtonCtl = /** @class */ (function () {
    function MenuButtonCtl(button, menuBar) {
        if (menuBar === void 0) { menuBar = null; }
        this.menuBar = menuBar;
        this.button = button;
        if (!isNullOrEmpty(button.data)) {
            console.log("button.data=" + button.data);
            this.menuButtonData = JSON.parse(button.data);
        }
        else {
            this.menuButtonData = { menuId: 0 };
        }
        if (this.button.m_red)
            this.button.m_red.visible = false;
        if (this.button.m_lock)
            this.button.m_lock.visible = false;
        this.button.onClick(this, this.onClickButton);
    }
    Object.defineProperty(MenuButtonCtl.prototype, "menuId", {
        get: function () {
            if (this.menuConfig) {
                return this.menuConfig.menuId;
            }
            else {
                return this.menuButtonData.menuId;
            }
        },
        enumerable: true,
        configurable: true
    });
    MenuButtonCtl.prototype.setMenuConfig = function (config) {
        this.menuConfig = config;
        if (this.button["m_title"])
            this.button["m_title"].text = config.name;
        if (this.button.m_icon && !isNullOrEmpty(config.iconUrl))
            this.button.m_icon.url = config.iconUrl;
    };
    /**
     * 点击按钮事件
     */
    MenuButtonCtl.prototype.onClickButton = function () {
        return __awaiter(this, void 0, void 0, function () {
            var enableOpen;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.menuConfig.openMenu()];
                    case 1:
                        enableOpen = _a.sent();
                        if (enableOpen) {
                            if (this.menuBar)
                                this.menuBar.closeSubmenus();
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * 设置红点
     */
    MenuButtonCtl.prototype.setRed = function (val) {
        if (!this.button.m_red)
            return;
        if (isNumber(val)) {
            this.button.m_red.title = val.toString();
            this.button.m_red.visible = val > 0;
        }
        else {
            this.button.m_red.title = "";
            this.button.m_red.visible = val;
        }
    };
    Object.defineProperty(MenuButtonCtl.prototype, "isUnlock", {
        /**
         * 是否解锁
         */
        get: function () {
            return this.menuConfig.isUnlock;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 刷新解锁
     */
    MenuButtonCtl.prototype.refreshUnlock = function (lockIsHide) {
        if (lockIsHide && !this.menuConfig.lockVisiable) {
            this.button.visible = this.isUnlock;
        }
        if (!this.button.visible || !this.button.parent) {
            return;
        }
        if (this.button.m_lock) {
            this.button.m_lock.visible = !this.isUnlock;
        }
        if (this.isUnlock) {
            FguiHelper_1.default.clearFilters(this.button.m_icon);
            // FguiHelper.clearFilters(this.button.m_title);
            // 系统解锁埋点
            // if (!this.userStaticDic.hasKey(this.menuId))
            // {
            //     this.userStaticDic.add(this.menuId, this.menuId);
            //     Games.Static.Instance.userorbit("sys", this.menuId.toString(), "unlock");
            // }
        }
        else {
            FguiHelper_1.default.halfStaturation(this.button.m_icon);
            // FguiHelper.halfStaturation(this.button.m_title);
        }
    };
    return MenuButtonCtl;
}());
exports.default = MenuButtonCtl;
},{"../../Libs/Helpers/FguiHelper":627}],177:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GuiPackageNames_1 = require("../Generates/GuiPackageNames");
var FxMovieClipKey_1 = require("../FxMovieClipKey");
var MenuLayer_1 = require("../../GameFrame/Menu/MenuLayer");
/** 屏幕点击特效 */
var StageClickFx = /** @class */ (function () {
    function StageClickFx() {
        this._isInstalled = false;
        this._lastTime = 0;
        this.gap = 100;
    }
    /** 启动 */
    StageClickFx.prototype.install = function () {
        if (this._isInstalled)
            return;
        this._isInstalled = true;
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
    };
    /** 卸载 */
    StageClickFx.prototype.uninstall = function () {
        Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
    };
    StageClickFx.prototype.onMouseDown = function (event) {
        if (StageClickFxItem.showCount < 10 && Laya.timer.currTimer - this._lastTime > this.gap) {
            var item = StageClickFxItem.poolGet();
            item.setXY(event.stageX, event.stageY);
            item.show();
            this._lastTime = Laya.timer.currTimer;
        }
    };
    return StageClickFx;
}());
exports.default = StageClickFx;
var StageClickFxItem = /** @class */ (function () {
    function StageClickFxItem() {
        this.halfWidth = 100;
        this.halfHeight = 100;
        this.fx = fairygui.UIPackage.createObject(GuiPackageNames_1.default.CommonFx, FxMovieClipKey_1.default.ClickMovieClip);
        this.fx.displayObject.blendMode = Laya.BlendMode.ADD;
        this.halfWidth = this.fx.width >> 1;
        this.halfHeight = this.fx.height >> 1;
    }
    StageClickFxItem.prototype.show = function () {
        StageClickFxItem.showCount++;
        this.fx.setPlaySettings(0, -1, 1, -1, Laya.Handler.create(this, this.hide, null, true));
        MenuLayer_1.default.floatMsg.addChild(this.fx);
    };
    StageClickFxItem.prototype.hide = function () {
        this.fx.removeFromParent();
        this.poolRecover();
        StageClickFxItem.showCount--;
    };
    StageClickFxItem.prototype.setXY = function (x, y) {
        x -= this.halfWidth;
        y -= this.halfHeight;
        this.fx.setXY(x, y);
    };
    /** 丢回对象池 */
    StageClickFxItem.prototype.poolRecover = function () {
        StageClickFxItem._poolRecover(this);
    };
    /** 从对象池里获取对象 */
    StageClickFxItem.poolGet = function () {
        var item;
        if (StageClickFxItem.pool.length > 0) {
            item = StageClickFxItem.pool.pop();
        }
        else {
            item = new StageClickFxItem();
        }
        return item;
    };
    /** 丢回对象池 */
    StageClickFxItem._poolRecover = function (item) {
        if (this.pool.indexOf(item) == -1)
            this.pool.push(item);
    };
    StageClickFxItem.showCount = 0;
    StageClickFxItem.pool = [];
    return StageClickFxItem;
}());
},{"../../GameFrame/Menu/MenuLayer":572,"../FxMovieClipKey":347,"../Generates/GuiPackageNames":479}],178:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var Typed2Signal_1 = require("../../Libs/signals/Typed2Signal");
var SyncHelper_1 = require("../../Libs/Helpers/SyncHelper");
var TEXT_1 = require("../../Config/Keys/TEXT");
var UserLevelAndExpPlay = /** @class */ (function () {
    function UserLevelAndExpPlay() {
        // arg(expValue, expMaxValue)
        this.sExp = new Typed2Signal_1.default();
        // arg(level, isMaxLevel)
        this.sLevel = new Typed2Signal_1.default();
        this._exp = 0;
        this.levelExpMax = 0;
        this.lastLevel = 0;
    }
    Object.defineProperty(UserLevelAndExpPlay.prototype, "exp", {
        get: function () {
            return this._exp;
        },
        set: function (val) {
            this._exp = val;
            this.sExp.dispatch(val, this.levelExpMax);
        },
        enumerable: true,
        configurable: true
    });
    // 启动监听
    UserLevelAndExpPlay.prototype.startSystemListen = function () {
        if (this.lastLevel <= 0)
            this.lastLevel = Game_1.default.user.level;
        if (this.lastLevel != Game_1.default.user.level) {
            this.systemPlay();
        }
        Game_1.default.net.gamerNotifyExpLevelS2C.on(this.systemPlay, this);
    };
    // 停止监听
    UserLevelAndExpPlay.prototype.stopSystemListen = function () {
        Game_1.default.net.gamerNotifyExpLevelS2C.off(this.systemPlay, this);
    };
    // 延时调用
    UserLevelAndExpPlay.prototype.systemPlay = function () {
        Laya.timer.once(500, this, this.playTo);
    };
    UserLevelAndExpPlay.prototype.playTo = function (targetLevel, targetExp, fromLevel, fromExp) {
        return __awaiter(this, void 0, void 0, function () {
            var duration, level, levelMaxExp, expMax, isLevelMax;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Laya.Tween.clearAll(this);
                        (targetLevel == void 0) && (targetLevel = Game_1.default.user.level);
                        (targetExp == void 0) && (targetExp = Game_1.default.user.exp);
                        (fromLevel == void 0) && (fromLevel = Game_1.default.user.levelSnapshotData.level);
                        (fromExp == void 0) && (fromExp = Game_1.default.user.levelSnapshotData.exp);
                        this.lastLevel = targetLevel;
                        this.exp = fromExp;
                        this.levelExpMax = Game_1.default.user.getMaxExpByLevel(fromLevel);
                        duration = 1000;
                        level = fromLevel;
                        _a.label = 1;
                    case 1:
                        if (!(level <= targetLevel)) return [3 /*break*/, 4];
                        levelMaxExp = Game_1.default.user.getMaxExpByLevel(level);
                        expMax = level == targetLevel ? targetExp : levelMaxExp;
                        this.levelExpMax = levelMaxExp;
                        if (level != fromLevel) {
                            isLevelMax = Game_1.default.user.getIsMaxLevel(level);
                            this.sLevel.dispatch(level, isLevelMax);
                            if (isLevelMax) {
                                Game_1.default.system.toastText(TEXT_1.default.LvUpMax);
                            }
                            else {
                                Game_1.default.system.toastText(TEXT_1.default.LvUpTo.format(level - 1, level));
                            }
                            this.exp = 0;
                        }
                        Laya.Tween.to(this, { exp: expMax }, duration, Laya.Ease.linearNone);
                        return [4 /*yield*/, SyncHelper_1.default.waitTime(duration)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        level++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return UserLevelAndExpPlay;
}());
exports.default = UserLevelAndExpPlay;
},{"../../Config/Keys/TEXT":125,"../../Game":546,"../../Libs/Helpers/SyncHelper":633,"../../Libs/signals/Typed2Signal":641}],179:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorButtonStruct_1 = require("../../Generates/CommonBase/ActorButtonStruct");
var ActorButton = /** @class */ (function (_super) {
    __extends(ActorButton, _super);
    function ActorButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorButton;
}(ActorButtonStruct_1.default));
exports.default = ActorButton;
},{"../../Generates/CommonBase/ActorButtonStruct":348}],180:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorListTabBarStruct_1 = require("../../Generates/CommonBase/ActorListTabBarStruct");
var ActorListTabBar = /** @class */ (function (_super) {
    __extends(ActorListTabBar, _super);
    function ActorListTabBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorListTabBar;
}(ActorListTabBarStruct_1.default));
exports.default = ActorListTabBar;
},{"../../Generates/CommonBase/ActorListTabBarStruct":349}],181:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorPropertyTabBarStruct_1 = require("../../Generates/CommonBase/ActorPropertyTabBarStruct");
var ActorPropertyTabBar = /** @class */ (function (_super) {
    __extends(ActorPropertyTabBar, _super);
    function ActorPropertyTabBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorPropertyTabBar;
}(ActorPropertyTabBarStruct_1.default));
exports.default = ActorPropertyTabBar;
},{"../../Generates/CommonBase/ActorPropertyTabBarStruct":350}],182:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorSelectTabBarStruct_1 = require("../../Generates/CommonBase/ActorSelectTabBarStruct");
var ActorSelectTabBar = /** @class */ (function (_super) {
    __extends(ActorSelectTabBar, _super);
    function ActorSelectTabBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorSelectTabBar;
}(ActorSelectTabBarStruct_1.default));
exports.default = ActorSelectTabBar;
},{"../../Generates/CommonBase/ActorSelectTabBarStruct":351}],183:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AddButtonStruct_1 = require("../../Generates/CommonBase/AddButtonStruct");
var AddButton = /** @class */ (function (_super) {
    __extends(AddButton, _super);
    function AddButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AddButton;
}(AddButtonStruct_1.default));
exports.default = AddButton;
},{"../../Generates/CommonBase/AddButtonStruct":353}],184:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AddButton2Struct_1 = require("../../Generates/CommonBase/AddButton2Struct");
var AddButton2 = /** @class */ (function (_super) {
    __extends(AddButton2, _super);
    function AddButton2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AddButton2;
}(AddButton2Struct_1.default));
exports.default = AddButton2;
},{"../../Generates/CommonBase/AddButton2Struct":352}],185:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagTabBarStruct_1 = require("../../Generates/CommonBase/BagTabBarStruct");
var BagTabBar = /** @class */ (function (_super) {
    __extends(BagTabBar, _super);
    function BagTabBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BagTabBar;
}(BagTabBarStruct_1.default));
exports.default = BagTabBar;
},{"../../Generates/CommonBase/BagTabBarStruct":354}],186:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseFullWindowUIStruct_1 = require("../../Generates/CommonBase/BaseFullWindowUIStruct");
var BaseFullWindowUI = /** @class */ (function (_super) {
    __extends(BaseFullWindowUI, _super);
    function BaseFullWindowUI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseFullWindowUI;
}(BaseFullWindowUIStruct_1.default));
exports.default = BaseFullWindowUI;
},{"../../Generates/CommonBase/BaseFullWindowUIStruct":355}],187:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseProgressBarStruct_1 = require("../../Generates/CommonBase/BaseProgressBarStruct");
var BaseProgressBar = /** @class */ (function (_super) {
    __extends(BaseProgressBar, _super);
    function BaseProgressBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.previousValue = 0;
        _this.targetValue = 0;
        _this.stepLength = 1;
        return _this;
    }
    BaseProgressBar.prototype.updateView = function (value, max) {
    };
    BaseProgressBar.prototype.onWindowHide = function () {
        Laya.timer.clearAll(this);
    };
    /**
     *
     * @param level 等级
     * @param previousValue 经验条变化前的值
     * @param targetValue 经验条变化后的值
     * @param max 经验条长度
     * @param duration 变化持续时间
     * @param delay 变化延迟时间
     */
    BaseProgressBar.prototype.tweenUpdateView = function (level, previousValue, targetValue, max, duration, delay) {
        // this.value = previousValue;
        // this.previousValue = previousValue;
        // this.targetValue = targetValue;
        Laya.timer.once(delay, this, this.onLoop, [level, previousValue, duration, targetValue, max], false);
    };
    BaseProgressBar.prototype.onLoop = function (level, previousValue, duration, targetValue, max) {
        this.m_level2.text = level + "";
        this.value = previousValue;
        this.max = max;
        this.tweenValue(targetValue, duration);
        // Laya.Tween.to(this, {value: targetValue},duration);
        // if(this.previousValue >= this.targetValue) {
        //     Laya.timer.clearAll(this);
        //     return;
        // }
        // this.previousValue += this.stepLength;
        // this.value = this.previousValue;
    };
    // update(newValue: number): void
    // {
    //     console.log(newValue);
    //     // this.value = newValue;
    // }
    BaseProgressBar.prototype.update = function (newValue) {
        _super.prototype.update.call(this, newValue);
        var percent = this.max != 0 ? Math.min(newValue / this.max, 1) : 0;
        this.m_bar1.visible = percent > 0.3;
    };
    return BaseProgressBar;
}(BaseProgressBarStruct_1.default));
exports.default = BaseProgressBar;
},{"../../Generates/CommonBase/BaseProgressBarStruct":356}],188:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BigTabButtonStruct_1 = require("../../Generates/CommonBase/BigTabButtonStruct");
var BigTabButton = /** @class */ (function (_super) {
    __extends(BigTabButton, _super);
    function BigTabButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BigTabButton;
}(BigTabButtonStruct_1.default));
exports.default = BigTabButton;
},{"../../Generates/CommonBase/BigTabButtonStruct":357}],189:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlueButtonStruct_1 = require("../../Generates/CommonBase/BlueButtonStruct");
var BlueButton = /** @class */ (function (_super) {
    __extends(BlueButton, _super);
    function BlueButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlueButton;
}(BlueButtonStruct_1.default));
exports.default = BlueButton;
},{"../../Generates/CommonBase/BlueButtonStruct":359}],190:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlueButtonSmallStruct_1 = require("../../Generates/CommonBase/BlueButtonSmallStruct");
var BlueButtonSmall = /** @class */ (function (_super) {
    __extends(BlueButtonSmall, _super);
    function BlueButtonSmall() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlueButtonSmall;
}(BlueButtonSmallStruct_1.default));
exports.default = BlueButtonSmall;
},{"../../Generates/CommonBase/BlueButtonSmallStruct":358}],191:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlueScaleButtonStruct_1 = require("../../Generates/CommonBase/BlueScaleButtonStruct");
var BlueScaleButton = /** @class */ (function (_super) {
    __extends(BlueScaleButton, _super);
    function BlueScaleButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlueScaleButton;
}(BlueScaleButtonStruct_1.default));
exports.default = BlueScaleButton;
},{"../../Generates/CommonBase/BlueScaleButtonStruct":360}],192:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BubbleTalkSmallStruct_1 = require("../../Generates/CommonBase/BubbleTalkSmallStruct");
var TypedSignal_1 = require("../../../Libs/signals/TypedSignal");
var BubbleTalkSmall = /** @class */ (function (_super) {
    __extends(BubbleTalkSmall, _super);
    function BubbleTalkSmall() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //============================
        // IMapUI
        //----------------------------
        _this.isAbsoluteScale = true;
        _this.maxAbsoluteScale = 1;
        _this.minAbsoluteScale = 1;
        _this.sourceScale = 1;
        _this._relativeScale = 1;
        //============================
        _this.sHide = new TypedSignal_1.default();
        _this.offsetX = 0;
        _this.offsetY = 0;
        return _this;
    }
    Object.defineProperty(BubbleTalkSmall.prototype, "relativeScale", {
        get: function () {
            return this._relativeScale;
        },
        set: function (scale) {
            this._relativeScale = scale;
            this.setScale(scale, scale);
        },
        enumerable: true,
        configurable: true
    });
    BubbleTalkSmall.prototype.setText = function (text) {
        this.m_title.text = text;
    };
    BubbleTalkSmall.prototype.show = function (text, parent, unit, transform, duration) {
        if (duration === void 0) { duration = 3000; }
        this.unit = unit;
        this.transform = transform;
        parent.addChild(this);
        this.setText(text);
        this.refreshPos();
        if (duration > 0) {
            Laya.timer.clearAll(this);
            Laya.timer.once(duration, this, this.hide);
        }
    };
    BubbleTalkSmall.prototype.hide = function () {
        this.removeFromParent();
        Laya.timer.clearAll(this);
        this.sHide.dispatch(this);
    };
    BubbleTalkSmall.prototype.refreshPos = function () {
        if (this.transform) {
            this.setXY(this.transform.position.x + this.offsetX, this.transform.position.y + this.offsetY);
        }
    };
    /** 丢回对象池 */
    BubbleTalkSmall.prototype.poolRecover = function () {
        this.removeFromParent();
        this.sHide.removeAll();
        BubbleTalkSmall._poolRecover(this);
    };
    /** 从对象池里获取对象 */
    BubbleTalkSmall.poolGet = function () {
        var item;
        if (this.pool.length > 0) {
            item = this.pool.pop();
        }
        else {
            item = this.createInstance();
            item.enabled = false;
        }
        return item;
    };
    /** 丢回对象池 */
    BubbleTalkSmall._poolRecover = function (item) {
        if (this.pool.indexOf(item) == -1)
            this.pool.push(item);
    };
    BubbleTalkSmall.pool = [];
    return BubbleTalkSmall;
}(BubbleTalkSmallStruct_1.default));
exports.default = BubbleTalkSmall;
},{"../../../Libs/signals/TypedSignal":643,"../../Generates/CommonBase/BubbleTalkSmallStruct":361}],193:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingPageTabBarStruct_1 = require("../../Generates/CommonBase/BuildingPageTabBarStruct");
var BuildingPageTabBar = /** @class */ (function (_super) {
    __extends(BuildingPageTabBar, _super);
    function BuildingPageTabBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BuildingPageTabBar;
}(BuildingPageTabBarStruct_1.default));
exports.default = BuildingPageTabBar;
},{"../../Generates/CommonBase/BuildingPageTabBarStruct":362}],194:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingProgressBarStruct_1 = require("../../Generates/CommonBase/BuildingProgressBarStruct");
var BuildingProgressBar = /** @class */ (function (_super) {
    __extends(BuildingProgressBar, _super);
    function BuildingProgressBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BuildingProgressBar;
}(BuildingProgressBarStruct_1.default));
exports.default = BuildingProgressBar;
},{"../../Generates/CommonBase/BuildingProgressBarStruct":364}],195:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingProgressBar1Struct_1 = require("../../Generates/CommonBase/BuildingProgressBar1Struct");
var BuildingProgressBar1 = /** @class */ (function (_super) {
    __extends(BuildingProgressBar1, _super);
    function BuildingProgressBar1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BuildingProgressBar1;
}(BuildingProgressBar1Struct_1.default));
exports.default = BuildingProgressBar1;
},{"../../Generates/CommonBase/BuildingProgressBar1Struct":363}],196:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CellphoneButtonStruct_1 = require("../../Generates/CommonBase/CellphoneButtonStruct");
var CellphoneButton = /** @class */ (function (_super) {
    __extends(CellphoneButton, _super);
    function CellphoneButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CellphoneButton;
}(CellphoneButtonStruct_1.default));
exports.default = CellphoneButton;
},{"../../Generates/CommonBase/CellphoneButtonStruct":365}],197:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartBarItemStruct_1 = require("../../Generates/CommonBase/ChartBarItemStruct");
var ChartBarItem = /** @class */ (function (_super) {
    __extends(ChartBarItem, _super);
    function ChartBarItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ChartBarItem;
}(ChartBarItemStruct_1.default));
exports.default = ChartBarItem;
},{"../../Generates/CommonBase/ChartBarItemStruct":366}],198:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartBarViewStruct_1 = require("../../Generates/CommonBase/ChartBarViewStruct");
var ChartBarView = /** @class */ (function (_super) {
    __extends(ChartBarView, _super);
    function ChartBarView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChartBarView.prototype.updateView = function () {
    };
    return ChartBarView;
}(ChartBarViewStruct_1.default));
exports.default = ChartBarView;
},{"../../Generates/CommonBase/ChartBarViewStruct":367}],199:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartPolygonPropertyTextStruct_1 = require("../../Generates/CommonBase/ChartPolygonPropertyTextStruct");
var ChartPolygonPropertyText = /** @class */ (function (_super) {
    __extends(ChartPolygonPropertyText, _super);
    function ChartPolygonPropertyText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChartPolygonPropertyText.prototype.setProp = function (prop) {
        this.m_name.text = prop.name;
        this.m_value.text = Math.ceil(prop.val) + "";
    };
    return ChartPolygonPropertyText;
}(ChartPolygonPropertyTextStruct_1.default));
exports.default = ChartPolygonPropertyText;
},{"../../Generates/CommonBase/ChartPolygonPropertyTextStruct":369}],200:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartPolygonPropertyTextOnlyNameStruct_1 = require("../../Generates/CommonBase/ChartPolygonPropertyTextOnlyNameStruct");
var ChartPolygonPropertyTextOnlyName = /** @class */ (function (_super) {
    __extends(ChartPolygonPropertyTextOnlyName, _super);
    function ChartPolygonPropertyTextOnlyName() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChartPolygonPropertyTextOnlyName.prototype.setProp = function (prop) {
        this.m_name.text = prop.name.substr(0, 1);
    };
    return ChartPolygonPropertyTextOnlyName;
}(ChartPolygonPropertyTextOnlyNameStruct_1.default));
exports.default = ChartPolygonPropertyTextOnlyName;
},{"../../Generates/CommonBase/ChartPolygonPropertyTextOnlyNameStruct":368}],201:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartPolygonPropertyViewStruct_1 = require("../../Generates/CommonBase/ChartPolygonPropertyViewStruct");
var ChartPolygonView_1 = require("../../../Libs/ChartPolygonView/ChartPolygonView");
var ChartPolygonPropertyText_1 = require("./ChartPolygonPropertyText");
var Prop_1 = require("../../../GameFrame/Props/Prop");
var Random_1 = require("../../../Libs/Helpers/Random");
var PropHelper_1 = require("../../../GameFrame/Props/PropHelper");
var ChartPolygonPropertyView = /** @class */ (function (_super) {
    __extends(ChartPolygonPropertyView, _super);
    function ChartPolygonPropertyView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 几边形 */
        _this.polygonNum = -1;
        _this.textItems = [];
        _this.textItemPool = [];
        _this.props = [];
        _this.centerX = 0;
        _this.centerY = 0;
        _this.textRadius = 96;
        _this.testMin = 100;
        _this.testMax = 500;
        return _this;
    }
    ChartPolygonPropertyView.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tmp.removeFromParent();
        // this.test();
    };
    ChartPolygonPropertyView.prototype.init = function (radius, textRadius, angleOffset, textClass) {
        if (radius === void 0) { radius = 96; }
        if (textRadius === void 0) { textRadius = 96; }
        if (angleOffset === void 0) { angleOffset = -15; }
        if (textClass === void 0) { textClass = null; }
        if (!textClass) {
            textClass = ChartPolygonPropertyText_1.default;
        }
        this.textClass = textClass;
        this.textRadius = textRadius;
        this.centerX = this.width >> 1;
        this.centerY = this.width >> 1;
        this.chart = new ChartPolygonView_1.default();
        this.chart.radius = radius;
        this.chart.angleOffset = angleOffset;
        this.chart.x = this.width >> 1;
        this.chart.y = this.height >> 1;
        this.displayObject.addChildAt(this.chart, 0);
        window['aa'] = this;
    };
    ChartPolygonPropertyView.prototype.test = function () {
        this.testData();
        Laya.stage.on(Laya.Event.CLICK, this, this.testData);
    };
    ChartPolygonPropertyView.prototype.testData = function () {
        var propIds = PropHelper_1.default.ActorPropIds;
        var data = [];
        var prop;
        for (var _i = 0, propIds_1 = propIds; _i < propIds_1.length; _i++) {
            var id = propIds_1[_i];
            prop = Prop_1.default.Create(id, Random_1.default.range(this.testMin, this.testMax));
            data.push(prop);
        }
        this.setData(data);
    };
    ChartPolygonPropertyView.prototype.setData = function (props, isTween) {
        if (isTween === void 0) { isTween = true; }
        if (this.polygonNum != props.length) {
            this.polygonNum = props.length;
            this.initTexts();
        }
        this.props = props;
        this.chart.setData(props, isTween);
        Laya.timer.clearAll(this);
        Laya.timer.frameLoop(1, this, this.onRefreshDraw);
    };
    ChartPolygonPropertyView.prototype.initTexts = function () {
        this.chart.polygonNum = this.polygonNum;
        this.chart.calculationPoints(this.chart.radiusTextRate * this.chart.radius);
        for (var _i = 0, _a = this.textItems; _i < _a.length; _i++) {
            var item_1 = _a[_i];
            item_1.removeFromParent();
            this.textItemPool.push(item_1);
        }
        this.textItems.length = 0;
        this.chart.calculationPoints(this.textRadius);
        var item;
        for (var i = 0; i < this.polygonNum; i++) {
            var item_2 = void 0;
            if (i < this.textItemPool.length) {
                item_2 = this.textItemPool[i];
            }
            else {
                item_2 = this.textClass.createInstance();
            }
            this.addChild(item_2);
            this.textItems.push(item_2);
            item_2.x = this.centerX + this.chart.points[i].x;
            item_2.y = this.centerY + this.chart.points[i].y;
        }
    };
    ChartPolygonPropertyView.prototype.onRefreshDraw = function () {
        if (this.chart.isTweenEnd)
            Laya.timer.clearAll(this);
        for (var i = 0; i < this.polygonNum; i++) {
            var item = this.textItems[i];
            item.setProp(this.chart.props[i]);
        }
    };
    return ChartPolygonPropertyView;
}(ChartPolygonPropertyViewStruct_1.default));
exports.default = ChartPolygonPropertyView;
},{"../../../GameFrame/Props/Prop":581,"../../../GameFrame/Props/PropHelper":584,"../../../Libs/ChartPolygonView/ChartPolygonView":624,"../../../Libs/Helpers/Random":631,"../../Generates/CommonBase/ChartPolygonPropertyViewStruct":370,"./ChartPolygonPropertyText":199}],202:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartProgressBarStruct_1 = require("../../Generates/CommonBase/ChartProgressBarStruct");
var ChartProgressBar = /** @class */ (function (_super) {
    __extends(ChartProgressBar, _super);
    function ChartProgressBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.barHeight = 0;
        return _this;
    }
    ChartProgressBar.prototype.updateView = function (height, isTween, delay) {
        if (isTween === void 0) { isTween = false; }
        if (delay === void 0) { delay = 0; }
        height = height * 150;
        this.barHeight = height;
        this.value = 0;
        if (!isTween) {
            this.value = height;
        }
        else {
            Laya.timer.once(delay, this, this.onOnce, null, false);
        }
    };
    ChartProgressBar.prototype.onOnce = function () {
        this.tweenValue(this.barHeight, 2);
    };
    ChartProgressBar.prototype.updateProgressBar = function (value, max) {
        this.m_title.visible = value > 0;
        this.max = max;
        this.value = value;
    };
    return ChartProgressBar;
}(ChartProgressBarStruct_1.default));
exports.default = ChartProgressBar;
},{"../../Generates/CommonBase/ChartProgressBarStruct":371}],203:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CheckBoxStruct_1 = require("../../Generates/CommonBase/CheckBoxStruct");
var CheckBox = /** @class */ (function (_super) {
    __extends(CheckBox, _super);
    function CheckBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CheckBox;
}(CheckBoxStruct_1.default));
exports.default = CheckBox;
},{"../../Generates/CommonBase/CheckBoxStruct":372}],204:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CloseButtonStruct_1 = require("../../Generates/CommonBase/CloseButtonStruct");
var CloseButton = /** @class */ (function (_super) {
    __extends(CloseButton, _super);
    function CloseButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CloseButton;
}(CloseButtonStruct_1.default));
exports.default = CloseButton;
},{"../../Generates/CommonBase/CloseButtonStruct":374}],205:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CloseButton3Struct_1 = require("../../Generates/CommonBase/CloseButton3Struct");
var CloseButton3 = /** @class */ (function (_super) {
    __extends(CloseButton3, _super);
    function CloseButton3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CloseButton3;
}(CloseButton3Struct_1.default));
exports.default = CloseButton3;
},{"../../Generates/CommonBase/CloseButton3Struct":373}],206:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CommonBadgeStruct_1 = require("../../Generates/CommonBase/CommonBadgeStruct");
var CommonBadge = /** @class */ (function (_super) {
    __extends(CommonBadge, _super);
    function CommonBadge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CommonBadge;
}(CommonBadgeStruct_1.default));
exports.default = CommonBadge;
},{"../../Generates/CommonBase/CommonBadgeStruct":375}],207:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var EmptyButtonStruct_1 = require("../../Generates/CommonBase/EmptyButtonStruct");
var EmptyButton = /** @class */ (function (_super) {
    __extends(EmptyButton, _super);
    function EmptyButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EmptyButton;
}(EmptyButtonStruct_1.default));
exports.default = EmptyButton;
},{"../../Generates/CommonBase/EmptyButtonStruct":377}],208:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ExitViewButtonStruct_1 = require("../../Generates/CommonBase/ExitViewButtonStruct");
var ExitViewButton = /** @class */ (function (_super) {
    __extends(ExitViewButton, _super);
    function ExitViewButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ExitViewButton;
}(ExitViewButtonStruct_1.default));
exports.default = ExitViewButton;
},{"../../Generates/CommonBase/ExitViewButtonStruct":378}],209:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var IconButtonStruct_1 = require("../../Generates/CommonBase/IconButtonStruct");
var IconButton = /** @class */ (function (_super) {
    __extends(IconButton, _super);
    function IconButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return IconButton;
}(IconButtonStruct_1.default));
exports.default = IconButton;
},{"../../Generates/CommonBase/IconButtonStruct":379}],210:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationProgressBarStruct_1 = require("../../Generates/CommonBase/InformationProgressBarStruct");
var InformationProgressBar = /** @class */ (function (_super) {
    __extends(InformationProgressBar, _super);
    function InformationProgressBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InformationProgressBar;
}(InformationProgressBarStruct_1.default));
exports.default = InformationProgressBar;
},{"../../Generates/CommonBase/InformationProgressBarStruct":380}],211:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationScrollBarStruct_1 = require("../../Generates/CommonBase/InformationScrollBarStruct");
var InformationScrollBar = /** @class */ (function (_super) {
    __extends(InformationScrollBar, _super);
    function InformationScrollBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InformationScrollBar;
}(InformationScrollBarStruct_1.default));
exports.default = InformationScrollBar;
},{"../../Generates/CommonBase/InformationScrollBarStruct":381}],212:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationScrollBar_gripStruct_1 = require("../../Generates/CommonBase/InformationScrollBar_gripStruct");
var InformationScrollBar_grip = /** @class */ (function (_super) {
    __extends(InformationScrollBar_grip, _super);
    function InformationScrollBar_grip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InformationScrollBar_grip;
}(InformationScrollBar_gripStruct_1.default));
exports.default = InformationScrollBar_grip;
},{"../../Generates/CommonBase/InformationScrollBar_gripStruct":382}],213:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationTabBarStruct_1 = require("../../Generates/CommonBase/InformationTabBarStruct");
var InformationTabBar = /** @class */ (function (_super) {
    __extends(InformationTabBar, _super);
    function InformationTabBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InformationTabBar;
}(InformationTabBarStruct_1.default));
exports.default = InformationTabBar;
},{"../../Generates/CommonBase/InformationTabBarStruct":383}],214:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuButtonStruct_1 = require("../../Generates/CommonBase/MenuButtonStruct");
var MenuButton = /** @class */ (function (_super) {
    __extends(MenuButton, _super);
    function MenuButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuButton.prototype.setData = function (menuConfig) {
        this.menuConfig = menuConfig;
        this.m_icon.url = menuConfig.iconUrl;
        this.m_state.selectedIndex = menuConfig.isUnlock ? 0 : 1;
    };
    return MenuButton;
}(MenuButtonStruct_1.default));
exports.default = MenuButton;
},{"../../Generates/CommonBase/MenuButtonStruct":384}],215:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MyInfoButtonStruct_1 = require("../../Generates/CommonBase/MyInfoButtonStruct");
var MyInfoButton = /** @class */ (function (_super) {
    __extends(MyInfoButton, _super);
    function MyInfoButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MyInfoButton;
}(MyInfoButtonStruct_1.default));
exports.default = MyInfoButton;
},{"../../Generates/CommonBase/MyInfoButtonStruct":385}],216:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var NumberBadgeStruct_1 = require("../../Generates/CommonBase/NumberBadgeStruct");
var NumberBadge = /** @class */ (function (_super) {
    __extends(NumberBadge, _super);
    function NumberBadge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return NumberBadge;
}(NumberBadgeStruct_1.default));
exports.default = NumberBadge;
},{"../../Generates/CommonBase/NumberBadgeStruct":386}],217:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PenButonStruct_1 = require("../../Generates/CommonBase/PenButonStruct");
var PenButon = /** @class */ (function (_super) {
    __extends(PenButon, _super);
    function PenButon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PenButon;
}(PenButonStruct_1.default));
exports.default = PenButon;
},{"../../Generates/CommonBase/PenButonStruct":387}],218:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PinkButtonStruct_1 = require("../../Generates/CommonBase/PinkButtonStruct");
var PinkButton = /** @class */ (function (_super) {
    __extends(PinkButton, _super);
    function PinkButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PinkButton;
}(PinkButtonStruct_1.default));
exports.default = PinkButton;
},{"../../Generates/CommonBase/PinkButtonStruct":388}],219:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PinkTabButtonStruct_1 = require("../../Generates/CommonBase/PinkTabButtonStruct");
var PinkTabButton = /** @class */ (function (_super) {
    __extends(PinkTabButton, _super);
    function PinkTabButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PinkTabButton;
}(PinkTabButtonStruct_1.default));
exports.default = PinkTabButton;
},{"../../Generates/CommonBase/PinkTabButtonStruct":389}],220:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProgressBarBlueStruct_1 = require("../../Generates/CommonBase/ProgressBarBlueStruct");
var TEXT_1 = require("../../../Config/Keys/TEXT");
var ProgressBarBlue = /** @class */ (function (_super) {
    __extends(ProgressBarBlue, _super);
    function ProgressBarBlue() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProgressBarBlue.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    ProgressBarBlue.prototype.updateProgress = function (current, max) {
        // if(current == 0) 
        //     this.value = 1;
        // else
        //     this.value = current;
        this.value = current;
        this.max = max;
        window["_bar"] = this;
        this.m_title.text = TEXT_1.default.Progress.format(current, max);
    };
    return ProgressBarBlue;
}(ProgressBarBlueStruct_1.default));
exports.default = ProgressBarBlue;
},{"../../../Config/Keys/TEXT":125,"../../Generates/CommonBase/ProgressBarBlueStruct":390}],221:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RemoveButtonStruct_1 = require("../../Generates/CommonBase/RemoveButtonStruct");
var RemoveButton = /** @class */ (function (_super) {
    __extends(RemoveButton, _super);
    function RemoveButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RemoveButton;
}(RemoveButtonStruct_1.default));
exports.default = RemoveButton;
},{"../../Generates/CommonBase/RemoveButtonStruct":391}],222:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RenameInputStruct_1 = require("../../Generates/CommonBase/RenameInputStruct");
var RenameInput = /** @class */ (function (_super) {
    __extends(RenameInput, _super);
    function RenameInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RenameInput;
}(RenameInputStruct_1.default));
exports.default = RenameInput;
},{"../../Generates/CommonBase/RenameInputStruct":393}],223:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RenameInput2Struct_1 = require("../../Generates/CommonBase/RenameInput2Struct");
var RenameInput2 = /** @class */ (function (_super) {
    __extends(RenameInput2, _super);
    function RenameInput2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RenameInput2;
}(RenameInput2Struct_1.default));
exports.default = RenameInput2;
},{"../../Generates/CommonBase/RenameInput2Struct":392}],224:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShadowMaskStruct_1 = require("../../Generates/CommonBase/ShadowMaskStruct");
var ShadowMask = /** @class */ (function (_super) {
    __extends(ShadowMask, _super);
    function ShadowMask() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ShadowMask;
}(ShadowMaskStruct_1.default));
exports.default = ShadowMask;
},{"../../Generates/CommonBase/ShadowMaskStruct":394}],225:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShareButtonStruct_1 = require("../../Generates/CommonBase/ShareButtonStruct");
var ShareButton = /** @class */ (function (_super) {
    __extends(ShareButton, _super);
    function ShareButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ShareButton;
}(ShareButtonStruct_1.default));
exports.default = ShareButton;
},{"../../Generates/CommonBase/ShareButtonStruct":396}],226:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShareButtonBarStruct_1 = require("../../Generates/CommonBase/ShareButtonBarStruct");
var ShareButtonBar = /** @class */ (function (_super) {
    __extends(ShareButtonBar, _super);
    function ShareButtonBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ShareButtonBar;
}(ShareButtonBarStruct_1.default));
exports.default = ShareButtonBar;
},{"../../Generates/CommonBase/ShareButtonBarStruct":395}],227:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SliderStruct_1 = require("../../Generates/CommonBase/SliderStruct");
var Slider = /** @class */ (function (_super) {
    __extends(Slider, _super);
    function Slider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Slider;
}(SliderStruct_1.default));
exports.default = Slider;
},{"../../Generates/CommonBase/SliderStruct":397}],228:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Slider_gripStruct_1 = require("../../Generates/CommonBase/Slider_gripStruct");
var Slider_grip = /** @class */ (function (_super) {
    __extends(Slider_grip, _super);
    function Slider_grip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Slider_grip;
}(Slider_gripStruct_1.default));
exports.default = Slider_grip;
},{"../../Generates/CommonBase/Slider_gripStruct":398}],229:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SmallCommonButtonStruct_1 = require("../../Generates/CommonBase/SmallCommonButtonStruct");
var SmallCommonButton = /** @class */ (function (_super) {
    __extends(SmallCommonButton, _super);
    function SmallCommonButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SmallCommonButton;
}(SmallCommonButtonStruct_1.default));
exports.default = SmallCommonButton;
},{"../../Generates/CommonBase/SmallCommonButtonStruct":399}],230:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SmallTabButtonStruct_1 = require("../../Generates/CommonBase/SmallTabButtonStruct");
var SmallTabButton = /** @class */ (function (_super) {
    __extends(SmallTabButton, _super);
    function SmallTabButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SmallTabButton;
}(SmallTabButtonStruct_1.default));
exports.default = SmallTabButton;
},{"../../Generates/CommonBase/SmallTabButtonStruct":400}],231:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryListTabBarStruct_1 = require("../../Generates/CommonBase/StoryListTabBarStruct");
var StoryListTabBar = /** @class */ (function (_super) {
    __extends(StoryListTabBar, _super);
    function StoryListTabBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryListTabBar;
}(StoryListTabBarStruct_1.default));
exports.default = StoryListTabBar;
},{"../../Generates/CommonBase/StoryListTabBarStruct":401}],232:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioAnimatedButtonStruct_1 = require("../../Generates/CommonBase/StudioAnimatedButtonStruct");
var StudioAnimatedButton = /** @class */ (function (_super) {
    __extends(StudioAnimatedButton, _super);
    function StudioAnimatedButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StudioAnimatedButton;
}(StudioAnimatedButtonStruct_1.default));
exports.default = StudioAnimatedButton;
},{"../../Generates/CommonBase/StudioAnimatedButtonStruct":402}],233:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioAnimatedButton_aniStruct_1 = require("../../Generates/CommonBase/StudioAnimatedButton_aniStruct");
var StudioAnimatedButton_ani = /** @class */ (function (_super) {
    __extends(StudioAnimatedButton_ani, _super);
    function StudioAnimatedButton_ani() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StudioAnimatedButton_ani;
}(StudioAnimatedButton_aniStruct_1.default));
exports.default = StudioAnimatedButton_ani;
},{"../../Generates/CommonBase/StudioAnimatedButton_aniStruct":403}],234:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioGetRewardButtonStruct_1 = require("../../Generates/CommonBase/StudioGetRewardButtonStruct");
var StudioGetRewardButton = /** @class */ (function (_super) {
    __extends(StudioGetRewardButton, _super);
    function StudioGetRewardButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StudioGetRewardButton;
}(StudioGetRewardButtonStruct_1.default));
exports.default = StudioGetRewardButton;
},{"../../Generates/CommonBase/StudioGetRewardButtonStruct":404}],235:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioNextButtonStruct_1 = require("../../Generates/CommonBase/StudioNextButtonStruct");
var StudioNextButton = /** @class */ (function (_super) {
    __extends(StudioNextButton, _super);
    function StudioNextButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StudioNextButton;
}(StudioNextButtonStruct_1.default));
exports.default = StudioNextButton;
},{"../../Generates/CommonBase/StudioNextButtonStruct":405}],236:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioRenameButtonStruct_1 = require("../../Generates/CommonBase/StudioRenameButtonStruct");
var StudioRenameButton = /** @class */ (function (_super) {
    __extends(StudioRenameButton, _super);
    function StudioRenameButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StudioRenameButton;
}(StudioRenameButtonStruct_1.default));
exports.default = StudioRenameButton;
},{"../../Generates/CommonBase/StudioRenameButtonStruct":406}],237:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var VerticalButtonStruct_1 = require("../../Generates/CommonBase/VerticalButtonStruct");
var VerticalButton = /** @class */ (function (_super) {
    __extends(VerticalButton, _super);
    function VerticalButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VerticalButton;
}(VerticalButtonStruct_1.default));
exports.default = VerticalButton;
},{"../../Generates/CommonBase/VerticalButtonStruct":407}],238:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ViewCheckButtonStruct_1 = require("../../Generates/CommonBase/ViewCheckButtonStruct");
var ViewCheckButton = /** @class */ (function (_super) {
    __extends(ViewCheckButton, _super);
    function ViewCheckButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ViewCheckButton;
}(ViewCheckButtonStruct_1.default));
exports.default = ViewCheckButton;
},{"../../Generates/CommonBase/ViewCheckButtonStruct":408}],239:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriteButtonStruct_1 = require("../../Generates/CommonBase/WriteButtonStruct");
var WriteButton = /** @class */ (function (_super) {
    __extends(WriteButton, _super);
    function WriteButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriteButton;
}(WriteButtonStruct_1.default));
exports.default = WriteButton;
},{"../../Generates/CommonBase/WriteButtonStruct":409}],240:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Yellow2ButtonStruct_1 = require("../../Generates/CommonBase/Yellow2ButtonStruct");
var Yellow2Button = /** @class */ (function (_super) {
    __extends(Yellow2Button, _super);
    function Yellow2Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Yellow2Button;
}(Yellow2ButtonStruct_1.default));
exports.default = Yellow2Button;
},{"../../Generates/CommonBase/Yellow2ButtonStruct":410}],241:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowBigButtonStruct_1 = require("../../Generates/CommonBase/YellowBigButtonStruct");
var YellowBigButton = /** @class */ (function (_super) {
    __extends(YellowBigButton, _super);
    function YellowBigButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return YellowBigButton;
}(YellowBigButtonStruct_1.default));
exports.default = YellowBigButton;
},{"../../Generates/CommonBase/YellowBigButtonStruct":411}],242:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowButtonStruct_1 = require("../../Generates/CommonBase/YellowButtonStruct");
var YellowButton = /** @class */ (function (_super) {
    __extends(YellowButton, _super);
    function YellowButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return YellowButton;
}(YellowButtonStruct_1.default));
exports.default = YellowButton;
},{"../../Generates/CommonBase/YellowButtonStruct":413}],243:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowButtonSmallStruct_1 = require("../../Generates/CommonBase/YellowButtonSmallStruct");
var YellowButtonSmall = /** @class */ (function (_super) {
    __extends(YellowButtonSmall, _super);
    function YellowButtonSmall() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return YellowButtonSmall;
}(YellowButtonSmallStruct_1.default));
exports.default = YellowButtonSmall;
},{"../../Generates/CommonBase/YellowButtonSmallStruct":412}],244:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowProgressBarStruct_1 = require("../../Generates/CommonBase/YellowProgressBarStruct");
var YellowProgressBar = /** @class */ (function (_super) {
    __extends(YellowProgressBar, _super);
    function YellowProgressBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return YellowProgressBar;
}(YellowProgressBarStruct_1.default));
exports.default = YellowProgressBar;
},{"../../Generates/CommonBase/YellowProgressBarStruct":414}],245:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowSmallButtonStruct_1 = require("../../Generates/CommonBase/YellowSmallButtonStruct");
var YellowSmallButton = /** @class */ (function (_super) {
    __extends(YellowSmallButton, _super);
    function YellowSmallButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return YellowSmallButton;
}(YellowSmallButtonStruct_1.default));
exports.default = YellowSmallButton;
},{"../../Generates/CommonBase/YellowSmallButtonStruct":415}],246:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Beat01Struct_1 = require("../../Generates/CommonFx/Beat01Struct");
var Beat01 = /** @class */ (function (_super) {
    __extends(Beat01, _super);
    function Beat01() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Beat01;
}(Beat01Struct_1.default));
exports.default = Beat01;
},{"../../Generates/CommonFx/Beat01Struct":416}],247:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var EffectBuildingCDStruct_1 = require("../../Generates/CommonFx/EffectBuildingCDStruct");
var EffectBuildingCD = /** @class */ (function (_super) {
    __extends(EffectBuildingCD, _super);
    function EffectBuildingCD() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EffectBuildingCD;
}(EffectBuildingCDStruct_1.default));
exports.default = EffectBuildingCD;
},{"../../Generates/CommonFx/EffectBuildingCDStruct":418}],248:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Effect_story_unlockStruct_1 = require("../../Generates/CommonFx/Effect_story_unlockStruct");
var Effect_story_unlock = /** @class */ (function (_super) {
    __extends(Effect_story_unlock, _super);
    function Effect_story_unlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Effect_story_unlock;
}(Effect_story_unlockStruct_1.default));
exports.default = Effect_story_unlock;
},{"../../Generates/CommonFx/Effect_story_unlockStruct":419}],249:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var FilmMoveShowStruct_1 = require("../../Generates/CommonFx/FilmMoveShowStruct");
var FilmMoveShow = /** @class */ (function (_super) {
    __extends(FilmMoveShow, _super);
    function FilmMoveShow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FilmMoveShow;
}(FilmMoveShowStruct_1.default));
exports.default = FilmMoveShow;
},{"../../Generates/CommonFx/FilmMoveShowStruct":420}],250:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Smoke003Struct_1 = require("../../Generates/CommonFx/Smoke003Struct");
var Smoke003 = /** @class */ (function (_super) {
    __extends(Smoke003, _super);
    function Smoke003() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Smoke003;
}(Smoke003Struct_1.default));
exports.default = Smoke003;
},{"../../Generates/CommonFx/Smoke003Struct":421}],251:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StarflyAnimationStruct_1 = require("../../Generates/CommonFx/StarflyAnimationStruct");
var StarflyAnimation = /** @class */ (function (_super) {
    __extends(StarflyAnimation, _super);
    function StarflyAnimation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StarflyAnimation.prototype.play = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.playBy(1);
                return [2 /*return*/];
            });
        });
    };
    StarflyAnimation.prototype.playBy = function (times, delay) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.m_t1.play(Laya.Handler.create(this, this.OnCompletion), times, delay);
                return [2 /*return*/];
            });
        });
    };
    StarflyAnimation.prototype.OnCompletion = function () {
    };
    return StarflyAnimation;
}(StarflyAnimationStruct_1.default));
exports.default = StarflyAnimation;
},{"../../Generates/CommonFx/StarflyAnimationStruct":422}],252:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AssetItemStruct_1 = require("../../Generates/CommonGame/AssetItemStruct");
var AssetItem = /** @class */ (function (_super) {
    __extends(AssetItem, _super);
    function AssetItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AssetItem;
}(AssetItemStruct_1.default));
exports.default = AssetItem;
},{"../../Generates/CommonGame/AssetItemStruct":423}],253:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CoinIconItemStruct_1 = require("../../Generates/CommonGame/CoinIconItemStruct");
var CoinIconItem = /** @class */ (function (_super) {
    __extends(CoinIconItem, _super);
    function CoinIconItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CoinIconItem;
}(CoinIconItemStruct_1.default));
exports.default = CoinIconItem;
},{"../../Generates/CommonGame/CoinIconItemStruct":424}],254:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CostItemIconStruct_1 = require("../../Generates/CommonGame/CostItemIconStruct");
var CostItemIcon = /** @class */ (function (_super) {
    __extends(CostItemIcon, _super);
    function CostItemIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CostItemIcon.prototype.setData = function (itemData, costNum) {
        this.m_icon.url = itemData.itemIconUrl;
        this.m_itemName.text = itemData.itemName;
        if (costNum && costNum > 0) {
            this.m_num.text = costNum + "/" + itemData.itemNumTxt;
            if (costNum <= itemData.count) {
                this.m_countState.selectedIndex = 0;
            }
            else {
                this.m_countState.selectedIndex = 1;
            }
        }
        else {
            this.m_num.text = itemData.itemNumTxt;
        }
    };
    return CostItemIcon;
}(CostItemIconStruct_1.default));
exports.default = CostItemIcon;
},{"../../Generates/CommonGame/CostItemIconStruct":426}],255:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemCostItemStruct_1 = require("../../Generates/CommonGame/ItemCostItemStruct");
var Game_1 = require("../../../Game");
var ItemData_1 = require("../../../GameModule/DataStructs/ItemData");
var ItemCostItem = /** @class */ (function (_super) {
    __extends(ItemCostItem, _super);
    function ItemCostItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ItemCostItem.prototype.RenderItem = function (data) {
        var allnum = Game_1.default.moduleModel.item.getItemNum(data.itemId);
        var nownum = data.itemNum;
        //图标
        this.m_icon.url = ItemData_1.default.GetIconUrl(data.itemId);
        //所需数量
        this.m_labNum.text = nownum + "/" + allnum;
        this.m_labNum.color = allnum >= nownum ? "#00ff00" : "#ff0000";
        return allnum >= nownum;
    };
    return ItemCostItem;
}(ItemCostItemStruct_1.default));
exports.default = ItemCostItem;
},{"../../../Game":546,"../../../GameModule/DataStructs/ItemData":598,"../../Generates/CommonGame/ItemCostItemStruct":427}],256:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemIconItemStruct_1 = require("../../Generates/CommonGame/ItemIconItemStruct");
var ItemIconItem = /** @class */ (function (_super) {
    __extends(ItemIconItem, _super);
    function ItemIconItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ItemIconItem.prototype.RenderItem = function (data) {
        this.icon = data.itemIconUrl;
        this.title = data.itemNumTxt;
        this.star = data.itemStar;
    };
    Object.defineProperty(ItemIconItem.prototype, "star", {
        set: function (num) {
            this.m_Star.starNum = num;
        },
        enumerable: true,
        configurable: true
    });
    return ItemIconItem;
}(ItemIconItemStruct_1.default));
exports.default = ItemIconItem;
},{"../../Generates/CommonGame/ItemIconItemStruct":428}],257:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemNumItemStruct_1 = require("../../Generates/CommonGame/ItemNumItemStruct");
var ItemNumItem = /** @class */ (function (_super) {
    __extends(ItemNumItem, _super);
    function ItemNumItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ItemNumItem.prototype.RenderItem = function (data) {
        this.itemId = data.id;
        this.dataSource = data;
        this.m_icon.url = data.itemIconUrl;
        this.m_title.text = data.itemNumTxt;
    };
    return ItemNumItem;
}(ItemNumItemStruct_1.default));
exports.default = ItemNumItem;
},{"../../Generates/CommonGame/ItemNumItemStruct":429}],258:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PropIconItemStruct_1 = require("../../Generates/CommonGame/PropIconItemStruct");
var PropIconItem = /** @class */ (function (_super) {
    __extends(PropIconItem, _super);
    function PropIconItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PropIconItem;
}(PropIconItemStruct_1.default));
exports.default = PropIconItem;
},{"../../Generates/CommonGame/PropIconItemStruct":430}],259:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RewardItemStruct_1 = require("../../Generates/CommonGame/RewardItemStruct");
var TEXT_1 = require("../../../Config/Keys/TEXT");
var RewardItem = /** @class */ (function (_super) {
    __extends(RewardItem, _super);
    function RewardItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RewardItem.prototype.updateView = function (data) {
        this.icon = data.itemIconUrl;
        this.m_num.text = TEXT_1.default.RewardItemCount.format(data.count);
        this.m_itemName.text = data.itemName;
    };
    return RewardItem;
}(RewardItemStruct_1.default));
exports.default = RewardItem;
},{"../../../Config/Keys/TEXT":125,"../../Generates/CommonGame/RewardItemStruct":431}],260:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RewardNumItemStruct_1 = require("../../Generates/CommonGame/RewardNumItemStruct");
var TEXT_1 = require("../../../Config/Keys/TEXT");
var RewardNumItem = /** @class */ (function (_super) {
    __extends(RewardNumItem, _super);
    function RewardNumItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RewardNumItem.prototype.updateView = function (data) {
        this.icon = data.itemIconUrl;
        this.m_num.text = TEXT_1.default.RewardItemCount.format(data.count);
    };
    return RewardNumItem;
}(RewardNumItemStruct_1.default));
exports.default = RewardNumItem;
},{"../../../Config/Keys/TEXT":125,"../../Generates/CommonGame/RewardNumItemStruct":432}],261:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SmallIconItemStruct_1 = require("../../Generates/CommonGame/SmallIconItemStruct");
var SmallIconItem = /** @class */ (function (_super) {
    __extends(SmallIconItem, _super);
    function SmallIconItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SmallIconItem.prototype.RenderItem = function (data) {
        this.icon = data.itemIconUrl;
        this.title = data.itemNumTxt;
        this.star = data.itemStar;
    };
    Object.defineProperty(SmallIconItem.prototype, "star", {
        set: function (num) {
            this.m_star.starNum = num;
        },
        enumerable: true,
        configurable: true
    });
    return SmallIconItem;
}(SmallIconItemStruct_1.default));
exports.default = SmallIconItem;
},{"../../Generates/CommonGame/SmallIconItemStruct":433}],262:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StarStruct_1 = require("../../Generates/CommonGame/StarStruct");
var Star = /** @class */ (function (_super) {
    __extends(Star, _super);
    function Star() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(Star.prototype, "starNum", {
        set: function (num) {
            if (num == null) {
                console.log("Error Star Num == null");
                return;
            }
            if (num < 0) {
                num = 0;
            }
            if (num > 6) {
                num = 6;
            }
            this.m_starNum.setSelectedIndex(num);
        },
        enumerable: true,
        configurable: true
    });
    return Star;
}(StarStruct_1.default));
exports.default = Star;
},{"../../Generates/CommonGame/StarStruct":434}],263:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioStarListStruct_1 = require("../../Generates/CommonGame/StudioStarListStruct");
var StudioStarList = /** @class */ (function (_super) {
    __extends(StudioStarList, _super);
    function StudioStarList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StudioStarList;
}(StudioStarListStruct_1.default));
exports.default = StudioStarList;
},{"../../Generates/CommonGame/StudioStarListStruct":435}],264:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TitleBarStruct_1 = require("../../Generates/CommonGame/TitleBarStruct");
var TitleBar = /** @class */ (function (_super) {
    __extends(TitleBar, _super);
    function TitleBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TitleBar;
}(TitleBarStruct_1.default));
exports.default = TitleBar;
},{"../../Generates/CommonGame/TitleBarStruct":436}],265:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var UserHeadIconStruct_1 = require("../../Generates/CommonGame/UserHeadIconStruct");
var UserHeadIcon = /** @class */ (function (_super) {
    __extends(UserHeadIcon, _super);
    function UserHeadIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return UserHeadIcon;
}(UserHeadIconStruct_1.default));
exports.default = UserHeadIcon;
},{"../../Generates/CommonGame/UserHeadIconStruct":437}],266:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMAddItemStruct_1 = require("../../Generates/GameGM/GMAddItemStruct");
var Game_1 = require("../../../Game");
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
var GMAddItem = /** @class */ (function (_super) {
    __extends(GMAddItem, _super);
    function GMAddItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // actorConfig: ActorConfig;
    // storyConfig: StoryConfig;
    // labelConfig: LabelConfig;
    // informationData: InformationData;
    GMAddItem.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button.onClick(this, this.onClickAddButton);
        this.m_num.onClick(this, this.onClickNum);
        this.m_numberInput.value = 10000;
    };
    GMAddItem.prototype.onClickNum = function () {
        this.m_numberInput.value = this.itemData.count * -1;
    };
    GMAddItem.prototype.onClickAddButton = function () {
        var _this = this;
        var cmd;
        var num = this.m_numberInput.value;
        // if(this.type == GMAddType.Actor)
        // {
        // 	cmd = `//addactor ${this.actorConfig.id}`;
        // }
        // else if(this.type == GMAddType.Story)
        // {
        // 	cmd = `//addstory ${this.storyConfig.id}`;
        // }
        // else if(this.type == GMAddType.Information)
        // {
        // 	cmd = `//addinfo ${this.labelConfig.id} ${num}`;
        // }
        // else
        {
            if (num >= 0)
                cmd = "//additem " + this.itemData.id + " " + num;
            else
                cmd = "//subitem " + this.itemData.id + " " + -num;
        }
        Game_1.default.sender.gm.gmCommand(cmd);
        // switch (this.itemData.id)
        // {
        // 	case Proto.SE.EItemId.fans:
        // 		Game.protosender.test.AddFans(this.m_numberInput.value);
        // 		break;
        // 	case 8:
        // 		Game.protosender.test.AddExpect(this.m_numberInput.value);
        // 		break;
        // 	default:
        // 		Game.protosender.test.AddItem(this.itemData.itemId, this.m_numberInput.value);
        // 		break;
        // }
        setTimeout(function () {
            _this.refreshState();
        }, 100);
    };
    // 物品
    GMAddItem.prototype.setItemData = function (itemData) {
        this.itemData = itemData;
        this.m_id.text = itemData.id + "";
        this.m_title.text = itemData.itemName;
        this.m_describe.text = itemData.itemDes;
        this.m_num.text = itemData.count + "";
        this.m_icon.url = itemData.itemIconUrl;
        this.m_numberInput.visible = true;
        this.m_button.visible = true;
    };
    // // 艺人
    // setActor(config: ActorConfig)
    // {
    // 	let actorData = Game.moduleModel.actor.getActor(config.id);
    // 	this.actorConfig = config;
    // 	this.m_icon.url = config.bodyIconUrl;
    // 	this.m_id.text = config.id + "";
    // 	this.m_title.text = config.name;
    // 	this.m_numberInput.visible = false;
    // 	if(actorData)
    // 	{
    // 		this.m_describe.text = actorData.levelTxt;
    // 		this.m_button.visible = false;
    // 	}
    // 	else
    // 	{
    // 		this.m_describe.text = config.tips;
    // 		this.m_button.visible = true;
    // 	}
    // }
    // // 剧本
    // setStory(config: StoryConfig)
    // {
    // 	let data = Game.moduleModel.story.getStorySeriesData(config.id);
    // 	this.storyConfig = config;
    // 	this.m_icon.url = config.iconUrl;
    // 	this.m_id.text = config.id + "";
    // 	this.m_title.text = config.filmName;
    // 	this.m_numberInput.visible = false;
    // 	this.m_describe.text =`${ config.starNumber  }星  ${config.filmType}  ${config.storyTags}`  ;
    // 	if(data)
    // 	{
    // 		this.m_button.visible = false;
    // 	}
    // 	else
    // 	{
    // 		this.m_button.visible = true;
    // 	}
    // }
    // // 情报
    // setInformation(data: LabelConfig)
    // {
    // 	this.labelConfig = data;
    // 	this.informationData = Game.moduleModel.information.getInformationData(data.id);
    // 	this.m_id.text = data.id + "";
    // 	this.m_title.text = data.typeName +  data.name;
    // 	this.m_describe.text = "";
    // 	this.m_num.text = (this.informationData ? this.informationData.count : 0) + "";
    // 	this.m_icon.url = data.iconUrl;
    // 	this.m_numberInput.visible = true;
    // 	this.m_button.visible = true;
    // }
    // 刷新
    GMAddItem.prototype.refreshState = function () {
        // // 艺人
        // if(this.type == GMAddType.Actor)
        // {
        // 	if(this.actorConfig)
        // 	{
        // 		let data = Game.moduleModel.actor.getActor(this.actorConfig.id);
        // 		if(data)
        // 		{
        // 			this.m_describe.text = data.levelTxt;
        // 			this.m_button.visible = false;
        // 		}
        // 		else
        // 		{
        // 			this.m_describe.text = this.actorConfig.tips;
        // 			this.m_button.visible = true;
        // 		}
        // 	}
        // }
        // // 剧本
        // else if(this.type == GMAddType.Story)
        // {
        // 	if(this.storyConfig)
        // 	{
        // 		let data = Game.moduleModel.story.getStorySeriesData(this.storyConfig.id);
        // 		if(data)
        // 		{
        // 			this.m_button.visible = false;
        // 		}
        // 		else
        // 		{
        // 			this.m_button.visible = true;
        // 		}
        // 	}
        // }
        // // 情报
        // else if(this.type == GMAddType.Information)
        // {
        // 	if (this.labelConfig)
        // 	{
        // 		this.setInformation(this.labelConfig);
        // 	}
        // }
        // // 物品
        // else
        {
            if (this.itemData) {
                this.m_num.text = this.itemData.count + "";
            }
        }
    };
    // 该组件所在Tab 显示
    GMAddItem.prototype.onTabShow = function () {
        this.refreshState();
    };
    // 窗口显示
    GMAddItem.prototype.onWindowShow = function () {
        this.refreshState();
    };
    return GMAddItem;
}(GMAddItemStruct_1.default));
exports.default = GMAddItem;
},{"../../../Game":546,"../../Generates/GameGM/GMAddItemStruct":438}],267:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMAddPageStruct_1 = require("../../Generates/GameGM/GMAddPageStruct");
var Game_1 = require("../../../Game");
var GMAddType_1 = require("../../../GM/GMAddType");
var Handler = Laya.Handler;
var GMPopupMenu_1 = require("./GMPopupMenu");
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
var GMAddPage = /** @class */ (function (_super) {
    __extends(GMAddPage, _super);
    function GMAddPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //------------------------------
        // 列表数据		
        _this.listData = [];
        _this.filterData = [];
        _this.useListData = [];
        return _this;
    }
    // 窗口初始化完毕
    GMAddPage.prototype.onWindowInited = function () {
        this.popupMenu = GMPopupMenu_1.default.createInstance();
        this.popupMenu.mainButton = this.m_popupButton;
        this.popupMenu.sOnSelect.add(this.onSelectePopupItem, this);
        this.popupMenu.setListData(GMAddType_1.default.list);
        this.popupMenu.center();
        this.m_popupButton.onClick(this, this.onClickPopupButton);
        this.selectPopupItem(GMAddType_1.default.Item);
        this.m_listTopButton.onClick(this, this.onClickListTopButton);
        this.m_listBottomButton.onClick(this, this.onClickListBottomButton);
        this.m_filterInput.m_title.on(laya.events.Event.INPUT, this, this.onFilterInput);
        this.m_filterCheckbox.onClick(this, this.onClickFilterCheckbox);
    };
    Object.defineProperty(GMAddPage.prototype, "isFilter", {
        get: function () {
            return this.m_filterCheckbox.selected;
        },
        set: function (val) {
            this.m_filterCheckbox.selected = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GMAddPage.prototype, "isUseFilter", {
        get: function () {
            return this.isFilter && isNullOrEmpty(this.m_filterInput.m_title.text.trim());
        },
        enumerable: true,
        configurable: true
    });
    GMAddPage.prototype.onClickFilterCheckbox = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.isUseFilter) {
                _this.onFilterInput();
            }
            else {
                _this.noFilter();
            }
        }, 100);
    };
    // 过滤输入框改变
    GMAddPage.prototype.onFilterInput = function () {
        if (!this.isFilter) {
            return;
        }
        var txt = this.m_filterInput.m_title.text.trim();
        if (isNullOrEmpty(txt)) {
            this.noFilter();
            return;
        }
        var mathList = [];
        if (txt.startsWith("id:")) {
            txt = txt.replace("id:", "");
            var arr = txt.split(/[, ;]/);
            for (var i = 0; i < arr.length; i++) {
                arr[i] = arr[i].trim();
            }
            var items = Game_1.default.config.item.getConfigList();
            for (var i = 0; i < items.length; i++) {
                for (var j = 0; j < arr.length; j++) {
                    if (items[i].id.toString() == arr[j]) {
                        mathList.push(items[i]);
                        break;
                    }
                }
            }
        }
        else if (txt.startsWith("type:")) {
            txt = txt.replace("type:", "");
            var arr = txt.split(/[, ;]/);
            for (var i = 0; i < arr.length; i++) {
                arr[i] = arr[i].trim();
            }
            var items = Game_1.default.config.item.getConfigList();
            for (var i = 0; i < items.length; i++) {
                for (var j = 0; j < arr.length; j++) {
                    if (items[i].type.toString() == arr[j]) {
                        mathList.push(items[i]);
                        break;
                    }
                }
            }
        }
        else {
            var arr = txt.split(/[, ;]/);
            var items = Game_1.default.config.item.getConfigList();
            for (var i = 0; i < items.length; i++) {
                for (var j = 0; j < arr.length; j++) {
                    if (items[i].name.indexOf(arr[j]) != -1 || items[i].id.toString().indexOf(arr[j]) != -1) {
                        mathList.push(items[i]);
                        break;
                    }
                }
            }
        }
        this.setFilterData(mathList);
    };
    GMAddPage.prototype.noFilter = function () {
        this.setListData(this.listData);
    };
    // 点击弹窗菜单按钮		
    GMAddPage.prototype.onClickPopupButton = function () {
        fairygui.GRoot.inst.showPopup(this.popupMenu, this.m_popupButton, true);
    };
    // 选中弹窗菜单
    GMAddPage.prototype.onSelectePopupItem = function (index) {
        console.log("onSelectePopupItem " + index);
        this.currentPopupIndex = index;
        // // 艺人
        // if(this.currentPopupIndex == GMAddType.Actor)
        // {
        // 	let items: ActorConfig[] = Game.config.actor.getConfigList();
        // 	this.setListData(items);
        // }
        // // 剧本
        // else if(this.currentPopupIndex == GMAddType.Story)
        // {
        // 	let items: StoryConfig[] = Game.config.story.getConfigList();
        // 	this.setListData(items);
        // }
        // // 情报
        // else if(this.currentPopupIndex == GMAddType.Information)
        // {
        // 	let items: LabelConfig[] = Game.config.label.imformations;
        // 	this.setListData(items);
        // }
        // // 物品
        // else
        {
            this.setItemPopup();
        }
    };
    // 选中弹窗菜单
    GMAddPage.prototype.selectPopupItem = function (index) {
        this.popupMenu.setSelect(index);
    };
    // 该组件所在Tab 显示
    GMAddPage.prototype.onTabShow = function () {
    };
    // 该组件所在Tab 隐藏
    GMAddPage.prototype.onTabHide = function () {
    };
    //------------------------------
    // 点击列表 Top		
    GMAddPage.prototype.onClickListTopButton = function () {
        this.m_list.scrollPane.scrollTop();
    };
    // 点击列表 Bottom
    GMAddPage.prototype.onClickListBottomButton = function () {
        this.m_list.scrollPane.scrollBottom();
    };
    // get useListData(): any[]
    // {
    // 	if (this.isUseFilter)
    // 	{
    // 		return this.filterData;
    // 	}
    // 	else
    // 	{
    // 		return this.listData;
    // 	}
    // }
    GMAddPage.prototype.getData = function (index) {
        return this.useListData[index];
    };
    // 物品		
    GMAddPage.prototype.setItemPopup = function () {
        var _a;
        var items = [];
        var itemTypes = GMAddType_1.default.getItemTypes(this.currentPopupIndex);
        if (!itemTypes || itemTypes.length == 0) {
            items = Game_1.default.config.item.getConfigList();
        }
        else {
            items = (_a = Game_1.default.config.item).getConfigsByType.apply(_a, itemTypes);
        }
        this.setListData(items);
    };
    // 设置正常数据列表		
    GMAddPage.prototype.setListData = function (items) {
        this.listData = items;
        this.refreshList(items);
    };
    // 设置过滤数据列表		
    GMAddPage.prototype.setFilterData = function (items) {
        this.filterData = items;
        this.refreshList(items);
    };
    // 刷新列表		
    GMAddPage.prototype.refreshList = function (items) {
        this.useListData = items;
        var list = this.m_list;
        list.setVirtual();
        list.setVirtualAndLoop();
        if (!list.itemRenderer)
            list.itemRenderer = Handler.create(this, this.renderListItem, null, false);
        list.numItems = items.length;
    };
    GMAddPage.prototype.renderListItem = function (index, item) {
        item.type = this.currentPopupIndex;
        var data = this.getData(index);
        // let data: ItemConfig | ActorConfig | StoryConfig | LabelConfig = this.getData(index);
        // // 艺人
        // if(this.currentPopupIndex == GMAddType.Actor)
        // {
        // 	item.setActor(<ActorConfig> data);
        // }
        // // 剧本
        // if(this.currentPopupIndex == GMAddType.Story)
        // {
        // 	item.setStory(<StoryConfig> data);
        // }
        // // 情报
        // if(this.currentPopupIndex == GMAddType.Information)
        // {
        // 	item.setInformation(<LabelConfig> data);
        // }
        // // 物品
        // else if(data instanceof ItemConfig)
        {
            var itemData = Game_1.default.moduleModel.item.getItem(data.id);
            item.setItemData(itemData);
        }
    };
    return GMAddPage;
}(GMAddPageStruct_1.default));
exports.default = GMAddPage;
},{"../../../GM/GMAddType":539,"../../../Game":546,"../../Generates/GameGM/GMAddPageStruct":439,"./GMPopupMenu":276}],268:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMCmdItemStruct_1 = require("../../Generates/GameGM/GMCmdItemStruct");
var GM_1 = require("../../../GM/GM");
var GMCmdSubMenuType_1 = require("../../../GM/GMCmdSubMenuType");
var GMCmdItem = /** @class */ (function (_super) {
    __extends(GMCmdItem, _super);
    function GMCmdItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GMCmdItem.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button.onClick(this, this.onClickButton);
    };
    GMCmdItem.prototype.setItemData = function (itemData) {
        this.itemData = itemData;
        this.m_title.text = itemData.datatxt;
        this.m_name.text = itemData.title;
    };
    GMCmdItem.prototype.onClickButton = function () {
        try {
            var json = JSON.parse(this.m_title.text);
            this.itemData.data = json;
            this.itemData.datatxt = this.m_title.text;
        }
        catch (error) {
            console.error(error);
        }
        GM_1.default.sendCmd(this.itemData.name, this.itemData, this.cmdPage.selectSubMenu != GMCmdSubMenuType_1.default.HISTORY);
    };
    return GMCmdItem;
}(GMCmdItemStruct_1.default));
exports.default = GMCmdItem;
},{"../../../GM/GM":538,"../../../GM/GMCmdSubMenuType":542,"../../Generates/GameGM/GMCmdItemStruct":440}],269:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMCmdPageStruct_1 = require("../../Generates/GameGM/GMCmdPageStruct");
var GMCmdSubMenuType_1 = require("../../../GM/GMCmdSubMenuType");
var GM_1 = require("../../../GM/GM");
var Handler = Laya.Handler;
var GameURL_1 = require("../../../Config/Keys/GameURL");
var GMCmdPage = /** @class */ (function (_super) {
    __extends(GMCmdPage, _super);
    function GMCmdPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 数量列表
        _this.dataList = [];
        return _this;
    }
    // 窗口初始化完毕
    GMCmdPage.prototype.onWindowInited = function () {
        this.m_subMenuBar.setListData(GMCmdSubMenuType_1.default.list);
        this.m_subMenuBar.sOnSelect.add(this.onClickSubMenu, this);
        this.m_subMenuBar.select = GMCmdSubMenuType_1.default.Server;
        this.m_sendButton.onClick(this, this.onClickSend);
        this.m_clearButton.onClick(this, this.onClickClear);
        GM_1.default.historCmd.read();
        Laya.loader.load(GameURL_1.default.serverCmdUrl, Handler.create(this, this.onLoadJson, [GameURL_1.default.serverCmdUrl]));
        Laya.loader.load(GameURL_1.default.clientCmdUrl, Handler.create(this, this.onLoadJson, [GameURL_1.default.clientCmdUrl]));
    };
    Object.defineProperty(GMCmdPage.prototype, "inputTxt", {
        get: function () {
            return this.m_input.m_title.text;
        },
        set: function (value) {
            this.m_input.m_title.text = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GMCmdPage.prototype, "selectSubMenu", {
        get: function () {
            return this.m_subMenuBar.select;
        },
        enumerable: true,
        configurable: true
    });
    GMCmdPage.prototype.onLoadJson = function (url) {
        var cmdList = Laya.loader.getRes(url);
        if (!cmdList)
            return;
        cmdList = isString(cmdList) ? JSON.parse(cmdList) : cmdList;
        switch (url) {
            case GameURL_1.default.serverCmdUrl:
                GM_1.default.serverCmd.setList(cmdList, false);
                break;
            case GameURL_1.default.clientCmdUrl:
                GM_1.default.clientCmd.setList(cmdList, true);
                break;
        }
        this.refreshList();
    };
    GMCmdPage.prototype.onClickSubMenu = function (menu) {
        var _this = this;
        this.m_clearButton.visible = menu == GMCmdSubMenuType_1.default.HISTORY;
        setTimeout(function () {
            _this.refreshList();
        }, 10);
    };
    GMCmdPage.prototype.onClickSend = function () {
        var isProto = false;
        var str = this.inputTxt;
        if (str.startsWith("eval")) {
            eval(str.replace("eval", ""));
        }
        var arr = this.inputTxt.split("\n");
        for (var i = 0; i < arr.length; i++) {
            var item = arr[i];
            if (!isNullOrEmpty(item))
                GM_1.default.send(item);
        }
        this.m_subMenuBar.select = GMCmdSubMenuType_1.default.HISTORY;
        // if (!isProto)
        // {
        // 	eval(str);
        // }
    };
    GMCmdPage.prototype.onClickClear = function () {
        GM_1.default.historCmd.clear();
        GM_1.default.clientCmd.clearCache();
        GM_1.default.serverCmd.clearCache();
        this.refreshList();
    };
    GMCmdPage.prototype.refreshList = function () {
        switch (this.selectSubMenu) {
            case GMCmdSubMenuType_1.default.Server:
                this.setList(GM_1.default.serverCmd.list);
                break;
            case GMCmdSubMenuType_1.default.Client:
                this.setList(GM_1.default.clientCmd.list);
                break;
            case GMCmdSubMenuType_1.default.HISTORY:
                this.setList(GM_1.default.historCmd.list);
                break;
        }
    };
    GMCmdPage.prototype.setList = function (items) {
        this.dataList = items;
        var list = this.m_list;
        list.setVirtual();
        list.setVirtualAndLoop();
        if (!list.itemRenderer)
            list.itemRenderer = Handler.create(this, this.renderListItem, null, false);
        list.numItems = items.length;
    };
    GMCmdPage.prototype.renderListItem = function (index, item) {
        var data = this.dataList[index];
        item.cmdPage = this;
        item.setItemData(data);
    };
    return GMCmdPage;
}(GMCmdPageStruct_1.default));
exports.default = GMCmdPage;
},{"../../../Config/Keys/GameURL":120,"../../../GM/GM":538,"../../../GM/GMCmdSubMenuType":542,"../../Generates/GameGM/GMCmdPageStruct":441}],270:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMDebugPageStruct_1 = require("../../Generates/GameGM/GMDebugPageStruct");
var Handler = Laya.Handler;
var GMDeubgMenuType_1 = require("../../../GM/GMDeubgMenuType");
var Log_1 = require("../../../GameFrame/Log/Log");
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
var GMDebugPage = /** @class */ (function (_super) {
    __extends(GMDebugPage, _super);
    function GMDebugPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 数量列表
        _this.dataList = [];
        return _this;
    }
    // 窗口初始化完毕
    GMDebugPage.prototype.onWindowInited = function () {
        this.m_subMenuBar.setListData(GMDeubgMenuType_1.GMDeubgMenuType.list);
        this.m_subMenuBar.sOnSelect.add(this.onClickSubMenu, this);
        this.m_subMenuBar.select = GMDeubgMenuType_1.GMDeubgMenuType.list;
        this.m_clearButton.onClick(this, this.onClickClear);
        this.m_refreshButton.onClick(this, this.refreshList);
    };
    Object.defineProperty(GMDebugPage.prototype, "selectSubMenu", {
        get: function () {
            return this.m_subMenuBar.select;
        },
        enumerable: true,
        configurable: true
    });
    GMDebugPage.prototype.onClickSubMenu = function (menu) {
        var _this = this;
        setTimeout(function () {
            _this.refreshList();
        }, 10);
    };
    GMDebugPage.prototype.onClickClear = function () {
        Log_1.default.clear();
        this.refreshList();
    };
    GMDebugPage.prototype.refreshList = function () {
        var menus = this.selectSubMenu;
        var items = Log_1.default.mineloger.getListByTypes(GMDeubgMenuType_1.GMDeubgMenuType.getLogTypes(menus));
        this.setList(items);
    };
    GMDebugPage.prototype.setList = function (items) {
        this.dataList = items;
        var list = this.m_list;
        list.setVirtual();
        list.setVirtualAndLoop();
        if (!list.itemRenderer)
            list.itemRenderer = Handler.create(this, this.renderListItem, null, false);
        list.numItems = items.length;
        if (list.numItems > 0)
            list.scrollToView(list.numItems - 1);
    };
    GMDebugPage.prototype.renderListItem = function (index, item) {
        var data = this.dataList[index];
        item.setData(data);
    };
    return GMDebugPage;
}(GMDebugPageStruct_1.default));
exports.default = GMDebugPage;
},{"../../../GM/GMDeubgMenuType":543,"../../../GameFrame/Log/Log":565,"../../Generates/GameGM/GMDebugPageStruct":442}],271:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMDisplayTreePageStruct_1 = require("../../Generates/GameGM/GMDisplayTreePageStruct");
var GMDisplayTreePage = /** @class */ (function (_super) {
    __extends(GMDisplayTreePage, _super);
    function GMDisplayTreePage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 窗口初始化完毕
    GMDisplayTreePage.prototype.onWindowInited = function () {
        this.m_refreshButton.onClick(this, this.onClickRefreshButton);
        this.m_showSelectButton.onClick(this, this.onClickShowSelectButton);
        this.m_hideSelectButton.onClick(this, this.onClickHideSelectButton);
        this.m_noSelectButton.onClick(this, this.onClickNoSelectButton);
        this.m_parentLayerButton.onClick(this, this.onClickParentLayerButton);
        this.m_setLayerButton.onClick(this, this.onClickSetLayerButton);
    };
    // 点击按钮--刷新
    GMDisplayTreePage.prototype.onClickRefreshButton = function () {
        this.m_tree.refresh();
    };
    // 点击按钮--显示选中的
    GMDisplayTreePage.prototype.onClickShowSelectButton = function () {
    };
    // 点击按钮--隐藏选中的
    GMDisplayTreePage.prototype.onClickHideSelectButton = function () {
    };
    // 点击按钮--不选
    GMDisplayTreePage.prototype.onClickNoSelectButton = function () {
    };
    // 点击按钮--上级
    GMDisplayTreePage.prototype.onClickParentLayerButton = function () {
    };
    // 点击按钮--塌陷
    GMDisplayTreePage.prototype.onClickSetLayerButton = function () {
    };
    return GMDisplayTreePage;
}(GMDisplayTreePageStruct_1.default));
exports.default = GMDisplayTreePage;
},{"../../Generates/GameGM/GMDisplayTreePageStruct":443}],272:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMLogItemStruct_1 = require("../../Generates/GameGM/GMLogItemStruct");
var Log_1 = require("../../../GameFrame/Log/Log");
var GMLogItem = /** @class */ (function (_super) {
    __extends(GMLogItem, _super);
    function GMLogItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GMLogItem.prototype.setData = function (data) {
        this.data = data;
        try {
            this.title = data.msg;
        }
        catch (e) {
        }
        switch (data.logType) {
            case Log_1.LogLevel.Info:
                this.m_title.color = "#121212";
                break;
            case Log_1.LogLevel.Warn:
                this.m_title.color = "#FFFF00";
                break;
            case Log_1.LogLevel.Error:
                this.m_title.color = "#FF0000";
                break;
        }
    };
    return GMLogItem;
}(GMLogItemStruct_1.default));
exports.default = GMLogItem;
},{"../../../GameFrame/Log/Log":565,"../../Generates/GameGM/GMLogItemStruct":444}],273:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMMainStruct_1 = require("../../Generates/GameGM/GMMainStruct");
var GMMain = /** @class */ (function (_super) {
    __extends(GMMain, _super);
    function GMMain() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 窗口初始化完毕
    GMMain.prototype.onWindowInited = function () {
        this.m_closeButton.onClick(this.moduleWindow, this.moduleWindow.onMenuClose);
    };
    return GMMain;
}(GMMainStruct_1.default));
exports.default = GMMain;
},{"../../Generates/GameGM/GMMainStruct":445}],274:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMMenuBarStruct_1 = require("../../Generates/GameGM/GMMenuBarStruct");
var Handler = Laya.Handler;
var GMMenuType_1 = require("../../../GM/GMMenuType");
var GMMenuBar = /** @class */ (function (_super) {
    __extends(GMMenuBar, _super);
    function GMMenuBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 窗口初始化完毕
    GMMenuBar.prototype.onWindowInited = function () {
        this.m_menuList.setVirtual();
        this.m_menuList.setVirtualAndLoop();
        this.m_menuList.itemRenderer = Handler.create(this, this.renderListItem, null, false);
        this.m_menuList.numItems = GMMenuType_1.default.list.length;
        this.m_menuList.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
    };
    GMMenuBar.prototype.renderListItem = function (index, obj) {
        obj.title = GMMenuType_1.default.list[index];
    };
    GMMenuBar.prototype.onClickItem = function (item) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.moduleWindow.openTab(item.title);
    };
    GMMenuBar.prototype.setSelect = function (menu) {
        var index = GMMenuType_1.default.list.indexOf(menu);
        this.m_menuList.addSelection(index, true);
    };
    return GMMenuBar;
}(GMMenuBarStruct_1.default));
exports.default = GMMenuBar;
},{"../../../GM/GMMenuType":544,"../../Generates/GameGM/GMMenuBarStruct":446}],275:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMPopupButtonStruct_1 = require("../../Generates/GameGM/GMPopupButtonStruct");
var GMPopupButton = /** @class */ (function (_super) {
    __extends(GMPopupButton, _super);
    function GMPopupButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GMPopupButton;
}(GMPopupButtonStruct_1.default));
exports.default = GMPopupButton;
},{"../../Generates/GameGM/GMPopupButtonStruct":447}],276:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMPopupMenuStruct_1 = require("../../Generates/GameGM/GMPopupMenuStruct");
var TypedSignal_1 = require("../../../Libs/signals/TypedSignal");
var GMPopupMenu = /** @class */ (function (_super) {
    __extends(GMPopupMenu, _super);
    function GMPopupMenu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.listData = [];
        _this.sOnSelect = new TypedSignal_1.default();
        return _this;
    }
    GMPopupMenu.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
    };
    GMPopupMenu.prototype.setListData = function (listData) {
        this.listData = listData;
        var list = this.m_list;
        list.removeChildrenToPool();
        for (var i = 0; i < listData.length; i++) {
            var item = list.addItemFromPool();
            item.title = listData[i];
        }
        list.resizeToFit();
    };
    GMPopupMenu.prototype.onClickItem = function (item) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.onselect(item.title);
        this.removeFromParent();
    };
    GMPopupMenu.prototype.onselect = function (value) {
        this.sOnSelect.dispatch(value);
        if (this.mainButton) {
            this.mainButton.title = value;
        }
    };
    GMPopupMenu.prototype.setSelect = function (value) {
        var index = this.listData.indexOf(value);
        this.m_list.addSelection(index, true);
        this.onselect(value);
    };
    return GMPopupMenu;
}(GMPopupMenuStruct_1.default));
exports.default = GMPopupMenu;
},{"../../../Libs/signals/TypedSignal":643,"../../Generates/GameGM/GMPopupMenuStruct":448}],277:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMPopupMenu_itemStruct_1 = require("../../Generates/GameGM/GMPopupMenu_itemStruct");
var GMPopupMenu_item = /** @class */ (function (_super) {
    __extends(GMPopupMenu_item, _super);
    function GMPopupMenu_item() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GMPopupMenu_item;
}(GMPopupMenu_itemStruct_1.default));
exports.default = GMPopupMenu_item;
},{"../../Generates/GameGM/GMPopupMenu_itemStruct":449}],278:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMSelectServerPageStruct_1 = require("../../Generates/GameGM/GMSelectServerPageStruct");
var ChannelManager_1 = require("../../../GameFrame/Channel/ChannelManager");
var Handler = Laya.Handler;
var Game_1 = require("../../../Game");
var TEXT_1 = require("../../../Config/Keys/TEXT");
var GMSelectServerPage = /** @class */ (function (_super) {
    __extends(GMSelectServerPage, _super);
    function GMSelectServerPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 窗口初始化完毕
    GMSelectServerPage.prototype.onWindowInited = function () {
        var _this = this;
        var list = this.m_list;
        list.setVirtual();
        list.setVirtualAndLoop();
        this.channel = ChannelManager_1.default.Instance;
        this.channel.requestServerList(null, 
        // onSucess	
        function () {
            list.on(fairygui.Events.CLICK_ITEM, _this, _this.onClickItem);
            list.itemRenderer = Handler.create(_this, _this.renderListItem, null, false);
            list.numItems = _this.channel.serverList.list.length;
            if (_this.channel.serverIndex >= 0)
                _this.m_list.selectedIndex = _this.channel.serverIndex;
        }, 
        // onFail
        function () {
            list.numItems = 0;
            Game_1.default.system.alertText(TEXT_1.default.ErorRequestServerList);
        });
    };
    // 该组件所在Tab 显示
    GMSelectServerPage.prototype.onTabShow = function () {
        if (this.channel.serverIndex >= 0)
            this.m_list.selectedIndex = this.channel.serverIndex;
    };
    GMSelectServerPage.prototype.renderListItem = function (index, item) {
        var data = this.channel.serverList.list[index];
        item.title = data.name + "  " + data.ip + ":" + data.port;
        item["serverItem"] = data;
    };
    GMSelectServerPage.prototype.onClickItem = function (item) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var data = item["serverItem"];
        if (data) {
            this.channel.serverName = data.name;
            net.config.url = Game_1.default.channel.serverItem.main;
        }
    };
    return GMSelectServerPage;
}(GMSelectServerPageStruct_1.default));
exports.default = GMSelectServerPage;
},{"../../../Config/Keys/TEXT":125,"../../../Game":546,"../../../GameFrame/Channel/ChannelManager":552,"../../Generates/GameGM/GMSelectServerPageStruct":450}],279:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMSubMenuBarStruct_1 = require("../../Generates/GameGM/GMSubMenuBarStruct");
var TypedSignal_1 = require("../../../Libs/signals/TypedSignal");
var Handler = Laya.Handler;
var GMSubMenuBar = /** @class */ (function (_super) {
    __extends(GMSubMenuBar, _super);
    function GMSubMenuBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sOnSelect = new TypedSignal_1.default();
        return _this;
    }
    GMSubMenuBar.prototype.setListData = function (listData) {
        this.listData = listData;
        var list = this.m_subMenu;
        list.setVirtual();
        list.setVirtualAndLoop();
        list.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
        list.itemRenderer = Handler.create(this, this.renderListItem, null, false);
        list.numItems = listData.length;
    };
    Object.defineProperty(GMSubMenuBar.prototype, "select", {
        get: function () {
            var list = this.m_subMenu.getSelection();
            var menus = [];
            for (var i = 0; i < list.length; i++) {
                menus.push(this.listData[list[i]]);
            }
            return menus;
        },
        set: function (menus) {
            this.m_subMenu.clearSelection();
            for (var i = 0; i < this.listData.length; i++) {
                if (menus.indexOf(this.listData[i]) != -1) {
                    this.m_subMenu.addSelection(i);
                }
            }
            this.sOnSelect.dispatch(menus);
        },
        enumerable: true,
        configurable: true
    });
    GMSubMenuBar.prototype.renderListItem = function (index, item) {
        item.title = this.listData[index];
    };
    GMSubMenuBar.prototype.onClickItem = function (item) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.sOnSelect.dispatch(this.select);
    };
    return GMSubMenuBar;
}(GMSubMenuBarStruct_1.default));
exports.default = GMSubMenuBar;
},{"../../../Libs/signals/TypedSignal":643,"../../Generates/GameGM/GMSubMenuBarStruct":451}],280:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMSubMenuRadioBarStruct_1 = require("../../Generates/GameGM/GMSubMenuRadioBarStruct");
var TypedSignal_1 = require("../../../Libs/signals/TypedSignal");
var Handler = Laya.Handler;
var GMSubMenuRadioBar = /** @class */ (function (_super) {
    __extends(GMSubMenuRadioBar, _super);
    function GMSubMenuRadioBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sOnSelect = new TypedSignal_1.default();
        return _this;
    }
    GMSubMenuRadioBar.prototype.setListData = function (listData) {
        this.listData = listData;
        var list = this.m_subMenu;
        list.setVirtual();
        list.setVirtualAndLoop();
        list.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
        list.itemRenderer = Handler.create(this, this.renderListItem, null, false);
        list.numItems = listData.length;
    };
    Object.defineProperty(GMSubMenuRadioBar.prototype, "select", {
        get: function () {
            if (this.m_subMenu.selectedIndex >= 0) {
                return this.listData[this.m_subMenu.selectedIndex];
            }
            return null;
        },
        set: function (menu) {
            this.m_subMenu.selectedIndex = this.listData.indexOf(menu);
            this.sOnSelect.dispatch(menu);
        },
        enumerable: true,
        configurable: true
    });
    GMSubMenuRadioBar.prototype.renderListItem = function (index, item) {
        item.title = this.listData[index];
    };
    GMSubMenuRadioBar.prototype.onClickItem = function (item) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.sOnSelect.dispatch(item.title);
    };
    return GMSubMenuRadioBar;
}(GMSubMenuRadioBarStruct_1.default));
exports.default = GMSubMenuRadioBar;
},{"../../../Libs/signals/TypedSignal":643,"../../Generates/GameGM/GMSubMenuRadioBarStruct":452}],281:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMTestPanelStruct_1 = require("../../Generates/GameGM/GMTestPanelStruct");
var GMTestPanel = /** @class */ (function (_super) {
    __extends(GMTestPanel, _super);
    function GMTestPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GMTestPanel;
}(GMTestPanelStruct_1.default));
exports.default = GMTestPanel;
},{"../../Generates/GameGM/GMTestPanelStruct":454}],282:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMTestPanelContentStruct_1 = require("../../Generates/GameGM/GMTestPanelContentStruct");
var GMTestPanelContent = /** @class */ (function (_super) {
    __extends(GMTestPanelContent, _super);
    function GMTestPanelContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GMTestPanelContent;
}(GMTestPanelContentStruct_1.default));
exports.default = GMTestPanelContent;
},{"../../Generates/GameGM/GMTestPanelContentStruct":453}],283:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMTickPageStruct_1 = require("../../Generates/GameGM/GMTickPageStruct");
var GMTickPage = /** @class */ (function (_super) {
    __extends(GMTickPage, _super);
    function GMTickPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GMTickPage;
}(GMTickPageStruct_1.default));
exports.default = GMTickPage;
},{"../../Generates/GameGM/GMTickPageStruct":455}],284:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMTimeLoopItemStruct_1 = require("../../Generates/GameGM/GMTimeLoopItemStruct");
var GMTimeLoopItem = /** @class */ (function (_super) {
    __extends(GMTimeLoopItem, _super);
    function GMTimeLoopItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GMTimeLoopItem.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_visiable.onClick(this, this.onClickEnableButton);
    };
    GMTimeLoopItem.prototype.setItemData = function (data) {
        this.data = data;
        this.m_visiable.selected = data.enable;
        this.m_title.text = data.toString();
    };
    GMTimeLoopItem.prototype.setTickData = function (data) {
        this.tickData = data;
        this.m_visiable.selected = data.debugEnable;
        this.m_title.text = data.toString();
    };
    GMTimeLoopItem.prototype.onClickEnableButton = function () {
        if (this.data) {
            this.data.enable = !this.data.enable;
        }
        if (this.tickData) {
            this.tickData.debugEnable = !this.tickData.debugEnable;
        }
    };
    return GMTimeLoopItem;
}(GMTimeLoopItemStruct_1.default));
exports.default = GMTimeLoopItem;
},{"../../Generates/GameGM/GMTimeLoopItemStruct":456}],285:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMTimeLoopPageStruct_1 = require("../../Generates/GameGM/GMTimeLoopPageStruct");
var DebugTimerLoopManager_1 = require("../../../GM/DebugTimerLoopManager");
var Handler = Laya.Handler;
var GMTimeLoopSortType;
(function (GMTimeLoopSortType) {
    GMTimeLoopSortType[GMTimeLoopSortType["CostTimeTotal"] = 0] = "CostTimeTotal";
    GMTimeLoopSortType[GMTimeLoopSortType["CostTime"] = 1] = "CostTime";
    GMTimeLoopSortType[GMTimeLoopSortType["CallNum"] = 2] = "CallNum";
    GMTimeLoopSortType[GMTimeLoopSortType["EvaluateCost"] = 3] = "EvaluateCost";
})(GMTimeLoopSortType = exports.GMTimeLoopSortType || (exports.GMTimeLoopSortType = {}));
var GMTimeLoopPage = /** @class */ (function (_super) {
    __extends(GMTimeLoopPage, _super);
    function GMTimeLoopPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dataList = [];
        _this.sortType = GMTimeLoopSortType.EvaluateCost;
        return _this;
    }
    // 窗口初始化完毕
    GMTimeLoopPage.prototype.onWindowInited = function () {
        this.m_clearButton.onClick(this, this.onClickClearButton);
        this.m_refreshButton.onClick(this, this.onClickRefreshButton);
        this.m_sortCostTimeToalButton.onClick(this, this.onClickRefreshButton, [GMTimeLoopSortType.CostTimeTotal]);
        this.m_sorteCostTimeButton.onClick(this, this.onClickRefreshButton, [GMTimeLoopSortType.CostTime]);
        this.m_sorteCallNumButton.onClick(this, this.onClickRefreshButton, [GMTimeLoopSortType.CallNum]);
        this.m_sorteEvaluateButton.onClick(this, this.onClickRefreshButton, [GMTimeLoopSortType.EvaluateCost]);
    };
    GMTimeLoopPage.prototype.onClickClearButton = function () {
        DebugTimerLoopManager_1.default.clear();
    };
    GMTimeLoopPage.prototype.onClickRefreshButton = function (sortType) {
        if (sortType) {
            this.sortType = sortType;
        }
        var list = DebugTimerLoopManager_1.default.Instance.dict.getValues();
        switch (this.sortType) {
            case GMTimeLoopSortType.CostTimeTotal:
                list = list.sort(function (a, b) { return a.costTimeToal - b.costTimeToal; });
                break;
            case GMTimeLoopSortType.CostTime:
                list = list.sort(function (a, b) { return a.costTime - b.costTime; });
                break;
            case GMTimeLoopSortType.CallNum:
                list = list.sort(function (a, b) { return a.callNum - b.callNum; });
                break;
            case GMTimeLoopSortType.EvaluateCost:
                list = list.sort(function (a, b) { return a.evaluateCost - b.evaluateCost; });
                break;
        }
        this.setList(list);
    };
    GMTimeLoopPage.prototype.setList = function (items) {
        this.dataList = items;
        var list = this.m_list;
        list.setVirtual();
        list.setVirtualAndLoop();
        if (!list.itemRenderer)
            list.itemRenderer = Handler.create(this, this.renderListItem, null, false);
        list.numItems = items.length;
    };
    GMTimeLoopPage.prototype.renderListItem = function (index, item) {
        var data = this.dataList[index];
        item.setItemData(data);
    };
    return GMTimeLoopPage;
}(GMTimeLoopPageStruct_1.default));
exports.default = GMTimeLoopPage;
},{"../../../GM/DebugTimerLoopManager":537,"../../Generates/GameGM/GMTimeLoopPageStruct":457}],286:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NumberInputStruct_1 = require("../../Generates/GameGM/NumberInputStruct");
var NumberInput = /** @class */ (function (_super) {
    __extends(NumberInput, _super);
    function NumberInput() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.downTimeoutHandler = -1;
        _this.downIntervalHandler = -1;
        _this.upTimeoutHandler = -1;
        _this.isDowning = false;
        return _this;
    }
    NumberInput.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_upButton.onClick(this, this.onClickUpButton);
        this.m_downButton.onClick(this, this.onClickDownButton);
        this.m_upButton.on(laya.events.Event.MOUSE_DOWN, this, this.onMouseDownUpButton);
        this.m_downButton.on(laya.events.Event.MOUSE_DOWN, this, this.onMouseDownDownButton);
        this.m_upButton.on(laya.events.Event.MOUSE_UP, this, this.onMouseUP);
        this.m_downButton.on(laya.events.Event.MOUSE_UP, this, this.onMouseUP);
        this.m_upButton.on(laya.events.Event.MOUSE_OUT, this, this.onMouseUP);
        this.m_downButton.on(laya.events.Event.MOUSE_OUT, this, this.onMouseUP);
    };
    NumberInput.prototype.onClickUpButton = function () {
        if (!this.isDowning) {
            this.value += this.onceValue;
        }
        this.isDowning = false;
    };
    NumberInput.prototype.onClickDownButton = function () {
        if (!this.isDowning) {
            this.value -= this.onceValue;
        }
        this.isDowning = false;
    };
    NumberInput.prototype.onMouseDownUpButton = function () {
        var _this = this;
        if (this.upTimeoutHandler != -1) {
            clearTimeout(this.upTimeoutHandler);
            this.upTimeoutHandler = -1;
        }
        this.downTimeoutHandler = setTimeout(function () {
            _this.isDowning = true;
            _this.downIntervalHandler = setInterval(function () {
                _this.value += _this.onceValue;
            }, 10);
        }, 200);
    };
    NumberInput.prototype.onMouseDownDownButton = function () {
        var _this = this;
        if (this.upTimeoutHandler != -1) {
            clearTimeout(this.upTimeoutHandler);
            this.upTimeoutHandler = -1;
        }
        this.downTimeoutHandler = setTimeout(function () {
            _this.isDowning = true;
            _this.downIntervalHandler = setInterval(function () {
                _this.value -= _this.onceValue;
            }, 10);
        }, 200);
    };
    NumberInput.prototype.onMouseUP = function () {
        var _this = this;
        if (this.downTimeoutHandler != -1) {
            clearTimeout(this.downTimeoutHandler);
            this.downTimeoutHandler = -1;
        }
        if (this.downIntervalHandler != -1) {
            clearInterval(this.downIntervalHandler);
            this.downIntervalHandler = -1;
        }
        if (this.isDowning) {
            this.upTimeoutHandler = setTimeout(function () {
                _this.isDowning = false;
            }, 200);
        }
    };
    Object.defineProperty(NumberInput.prototype, "onceValue", {
        get: function () {
            var length = Math.abs(this.value).toString().length - 1;
            var v = 1;
            for (var i = 1; i < length; i++) {
                v *= 10;
            }
            return v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberInput.prototype, "value", {
        get: function () {
            if (isNullOrEmpty(this.m_title.text)) {
                return 0;
            }
            return toInt(this.m_title.text);
        },
        set: function (val) {
            this.m_title.text = val.toString();
        },
        enumerable: true,
        configurable: true
    });
    return NumberInput;
}(NumberInputStruct_1.default));
exports.default = NumberInput;
},{"../../Generates/GameGM/NumberInputStruct":459}],287:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TextAreaStruct_1 = require("../../Generates/GameGM/TextAreaStruct");
var TextArea = /** @class */ (function (_super) {
    __extends(TextArea, _super);
    function TextArea() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TextArea;
}(TextAreaStruct_1.default));
exports.default = TextArea;
},{"../../Generates/GameGM/TextAreaStruct":460}],288:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TextInputStruct_1 = require("../../Generates/GameGM/TextInputStruct");
var TextInput = /** @class */ (function (_super) {
    __extends(TextInput, _super);
    function TextInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TextInput;
}(TextInputStruct_1.default));
exports.default = TextInput;
},{"../../Generates/GameGM/TextInputStruct":461}],289:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TreeStruct_1 = require("../../Generates/GameGM/TreeStruct");
var TreeItem_1 = require("./TreeItem");
var Tree = /** @class */ (function (_super) {
    __extends(Tree, _super);
    function Tree() {
        var _this = _super.call(this) || this;
        _this.layerLevelInitPaddingLeft = 60;
        _this.layerLevelPaddingLeft = 50;
        _this.itemPool = new fairygui.GObjectPool();
        return _this;
    }
    Tree.prototype.refresh = function () {
        if (this.data)
            this.setDataRoot(this.data);
        else
            this.setDataRoot(fairygui.GRoot.inst);
    };
    Tree.prototype.setDataRoot = function (dataRoot) {
        this.data = dataRoot;
        var item;
        if (this.itemRoot) {
            item = this.itemRoot;
        }
        else {
            item = this.itemPool.getObject(TreeItem_1.default.URL);
            item.treeParent = this;
            item.treeRoot = this;
            this.addChild(item);
        }
        item.setData(dataRoot);
        this.itemRoot = item;
        this.updateLayout();
    };
    Tree.prototype.updateLayout = function () {
        this.itemRoot.updateLayout();
    };
    return Tree;
}(TreeStruct_1.default));
exports.default = Tree;
},{"../../Generates/GameGM/TreeStruct":466,"./TreeItem":290}],290:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TreeItemStruct_1 = require("../../Generates/GameGM/TreeItemStruct");
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var TreeItem = /** @class */ (function (_super) {
    __extends(TreeItem, _super);
    function TreeItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.layerLevel = 0;
        return _this;
    }
    TreeItem.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_visiable.onClick(this, this.onClickVisiableButton);
        this.m_openClose.onClick(this, this.onClickOpencloseButton);
    };
    TreeItem.prototype.onClickVisiableButton = function () {
        this.data.visible = !this.data.visible;
    };
    TreeItem.prototype.onClickOpencloseButton = function () {
        this.m_list.visible = !this.m_list.visible;
        this.treeRoot.updateLayout();
    };
    TreeItem.prototype.setData = function (data, layerLevel) {
        if (layerLevel === void 0) { layerLevel = 0; }
        var otherText = "";
        if (data instanceof fairygui.GTextField) {
            otherText = data.font + " " + data.fontSize;
        }
        this.data = data;
        this.m_title.text = data.name + "(" + getClassName(data) + ") w=" + data.width + ", h=" + data.height + ", sxy=" + data.scaleX + " " + data.scaleY + " " + otherText;
        this.m_visiable.selected = data.visible;
        this.m_openClose.selected = true;
        this.m_list.visible = true;
        this.width = this.treeParent.width;
        this.m_title.x = this.treeRoot.layerLevelInitPaddingLeft + this.treeRoot.layerLevelPaddingLeft * layerLevel;
        this.m_title.width = this.width - this.m_title.x;
        this.m_list.width = this.treeParent.width;
        for (var i = this.m_list.numChildren - 1; i >= 0; i--) {
            var item = this.m_list.getChildAt(i);
            item.removeFromParent();
            this.treeRoot.itemPool.returnObject(item);
        }
        this.m_openClose.visible = false;
        if (data instanceof fairygui.GComponent || data instanceof laya.display.Sprite) {
            this.m_openClose.visible = true;
            if (data == MenuLayer_1.default.gm) {
                return;
            }
            // for (let i = 0; i < data.numChildren; i++)
            // {
            // 	let item: TreeItem = <TreeItem>this.treeRoot.itemPool.getObject(TreeItem.URL);
            // 	item.treeParent = this;
            // 	item.treeRoot = this.treeRoot;
            // 	item.y = i * item.sourceHeight;
            // 	item.width = this.m_list.width;
            // 	this.m_list.addChild(item);
            // 	if (data instanceof laya.display.Sprite)
            // 	{
            // 		item.setData(<laya.display.Sprite>data.getChildAt(i), layerLevel + 1);
            // 	}
            // 	else
            // 	{
            // 		item.setData(data.getChildAt(i), layerLevel + 1);
            // 	}
            // }
            var container = data;
            if (data instanceof fairygui.GComponent) {
                container = data.displayObject;
            }
            for (var i = 0; i < container.numChildren; i++) {
                var display = container.getChildAt(i);
                if (display["$owner"])
                    display = display["$owner"];
                var item = this.treeRoot.itemPool.getObject(TreeItem.URL);
                item.treeParent = this;
                item.treeRoot = this.treeRoot;
                item.y = i * item.sourceHeight;
                item.width = this.m_list.width;
                this.m_list.addChild(item);
                item.setData(display, layerLevel + 1);
            }
        }
    };
    TreeItem.prototype.updateLayout = function () {
        var y = 0;
        if (this.m_list.visible) {
            for (var i = 0; i < this.m_list.numChildren; i++) {
                var item = this.m_list.getChildAt(i);
                item.updateLayout();
                item.y = y;
                y += item.height;
            }
        }
        this.m_list.height = y;
        this.height = this.sourceHeight + y;
    };
    return TreeItem;
}(TreeItemStruct_1.default));
exports.default = TreeItem;
},{"../../../GameFrame/Menu/MenuLayer":572,"../../Generates/GameGM/TreeItemStruct":464}],291:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TreeItemCheckboxStruct_1 = require("../../Generates/GameGM/TreeItemCheckboxStruct");
var TreeItemCheckbox = /** @class */ (function (_super) {
    __extends(TreeItemCheckbox, _super);
    function TreeItemCheckbox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TreeItemCheckbox;
}(TreeItemCheckboxStruct_1.default));
exports.default = TreeItemCheckbox;
},{"../../Generates/GameGM/TreeItemCheckboxStruct":462}],292:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TreeItemOpenCheckboxStruct_1 = require("../../Generates/GameGM/TreeItemOpenCheckboxStruct");
var TreeItemOpenCheckbox = /** @class */ (function (_super) {
    __extends(TreeItemOpenCheckbox, _super);
    function TreeItemOpenCheckbox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TreeItemOpenCheckbox;
}(TreeItemOpenCheckboxStruct_1.default));
exports.default = TreeItemOpenCheckbox;
},{"../../Generates/GameGM/TreeItemOpenCheckboxStruct":463}],293:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TreeListStruct_1 = require("../../Generates/GameGM/TreeListStruct");
var TreeList = /** @class */ (function (_super) {
    __extends(TreeList, _super);
    function TreeList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TreeList;
}(TreeListStruct_1.default));
exports.default = TreeList;
},{"../../Generates/GameGM/TreeListStruct":465}],294:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BGModelStruct_1 = require("../../Generates/GameLaunch/BGModelStruct");
var BGModel = /** @class */ (function (_super) {
    __extends(BGModel, _super);
    function BGModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BGModel;
}(BGModelStruct_1.default));
exports.default = BGModel;
},{"../../Generates/GameLaunch/BGModelStruct":467}],295:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DialogCloseWindowStruct_1 = require("../../Generates/GameLaunch/DialogCloseWindowStruct");
var DialogCloseWindow = /** @class */ (function (_super) {
    __extends(DialogCloseWindow, _super);
    function DialogCloseWindow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DialogCloseWindow;
}(DialogCloseWindowStruct_1.default));
exports.default = DialogCloseWindow;
},{"../../Generates/GameLaunch/DialogCloseWindowStruct":468}],296:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMButtonStruct_1 = require("../../Generates/GameLaunch/GMButtonStruct");
var Game_1 = require("../../../Game");
var GM_1 = require("../../../GM/GM");
var GMButton = /** @class */ (function (_super) {
    __extends(GMButton, _super);
    function GMButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isDraging = false;
        return _this;
    }
    GMButton.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.onClick(this, this.onClickButton);
        this.on(fairygui.Events.DRAG_MOVE, this, this.onDragMove);
        this.on(fairygui.Events.DRAG_END, this, this.onDragEnd);
        this.x = Game_1.default.localStorage.gmX;
        this.y = Game_1.default.localStorage.gmY;
    };
    GMButton.prototype.onDragMove = function () {
        this.isDraging = true;
    };
    GMButton.prototype.onDragEnd = function () {
        var _this = this;
        setTimeout(function () {
            _this.isDraging = false;
        }, 100);
        Game_1.default.localStorage.gmX = this.x;
        Game_1.default.localStorage.gmY = this.y;
    };
    GMButton.prototype.onClickButton = function () {
        if (!this.isDraging) {
            GM_1.default.visiable = !GM_1.default.visiable;
        }
    };
    return GMButton;
}(GMButtonStruct_1.default));
exports.default = GMButton;
},{"../../../GM/GM":538,"../../../Game":546,"../../Generates/GameLaunch/GMButtonStruct":469}],297:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalModalWaitingStruct_1 = require("../../Generates/GameLaunch/GlobalModalWaitingStruct");
var GlobalModalWaiting = /** @class */ (function (_super) {
    __extends(GlobalModalWaiting, _super);
    function GlobalModalWaiting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GlobalModalWaiting;
}(GlobalModalWaitingStruct_1.default));
exports.default = GlobalModalWaiting;
},{"../../Generates/GameLaunch/GlobalModalWaitingStruct":471}],298:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LaunchLoaderPanelStruct_1 = require("../../Generates/GameLaunch/LaunchLoaderPanelStruct");
var Res_1 = require("../../../Config/Keys/Res");
var R_1 = require("../../../Config/Keys/R");
var LaunchLoaderPanel = /** @class */ (function (_super) {
    __extends(LaunchLoaderPanel, _super);
    function LaunchLoaderPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LaunchLoaderPanel.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_screenBG.m_icon.url = Res_1.default.getSpritePathHasExt(R_1.default.sprite.Launch_launch);
        this.m_screenBG.setScreenSize();
    };
    return LaunchLoaderPanel;
}(LaunchLoaderPanelStruct_1.default));
exports.default = LaunchLoaderPanel;
},{"../../../Config/Keys/R":123,"../../../Config/Keys/Res":124,"../../Generates/GameLaunch/LaunchLoaderPanelStruct":472}],299:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ScreenBGStruct_1 = require("../../Generates/GameLaunch/ScreenBGStruct");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var ScreenBG = /** @class */ (function (_super) {
    __extends(ScreenBG, _super);
    function ScreenBG() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ScreenBG.prototype.onWindowShow = function () {
        this.setScreenSize();
        Laya.stage.on(laya.events.Event.RESIZE, this, this.setScreenSize);
    };
    ScreenBG.prototype.onWindowHide = function () {
        Laya.stage.off(laya.events.Event.RESIZE, this, this.setScreenSize);
    };
    ScreenBG.prototype.setScreenSize = function () {
        FguiHelper_1.default.autoScreenSize(this, Laya.Stage.ALIGN_CENTER, Laya.Stage.ALIGN_MIDDLE);
    };
    return ScreenBG;
}(ScreenBGStruct_1.default));
exports.default = ScreenBG;
},{"../../../Libs/Helpers/FguiHelper":627,"../../Generates/GameLaunch/ScreenBGStruct":473}],300:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemAlertMessageStruct_1 = require("../../Generates/GameLaunch/SystemAlertMessageStruct");
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var Ease = Laya.Ease;
var Tween = Laya.Tween;
var Handler = Laya.Handler;
var Game_1 = require("../../../Game");
var SystemAlertMessage = /** @class */ (function (_super) {
    __extends(SystemAlertMessage, _super);
    function SystemAlertMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SystemAlertMessage.prototype, "closeButton", {
        get: function () {
            return this.m_dialog.m_closeButton;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 对话框消息,一个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param yesObj 点击yes按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param buttonEnable 按钮是否可以点击
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemAlertMessage.prototype.open = function (txt, title, yesObj, yesFun, yesTxt, closeButtonVisiable, buttonEnable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (yesObj === void 0) { yesObj = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (buttonEnable === void 0) { buttonEnable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(title)) {
            title = "";
        }
        this.yesFun = yesFun;
        this.yesObj = yesObj;
        this.isClickButtonAutoClose = isClickButtonAutoClose;
        this.m_content.text = txt;
        this.m_title.text = title;
        this.m_okBtn.title = yesTxt;
        this.m_okBtn.enabled = buttonEnable;
        this.closeButton.enabled = buttonEnable;
        this.closeButton.visible = closeButtonVisiable;
        this.m_okBtn.onClick(this, this.onClickYes);
        this.closeButton.onClick(this, this.close);
        MenuLayer_1.default.showDialogModel();
        FguiHelper_1.default.centerScreen(this);
        this.scaleX = 0;
        this.scaleY = 0;
        this.x = Game_1.default.screenSetting.screenWidth >> 1;
        this.y = Game_1.default.screenSetting.screenHeight >> 1;
        this.alpha = 0;
        Tween.to(this, { scaleX: 1, scaleY: 1, alpha: 1 }, 250, Ease.backInOut);
        MenuLayer_1.default.floatMsg.addChild(this);
    };
    SystemAlertMessage.prototype.close = function () {
        MenuLayer_1.default.hideDialogModel();
        Tween.to(this, { scaleX: 0, scaleY: 0, alpha: 0 }, 250, Ease.quadInOut, Handler.create(this, this.onHide));
    };
    SystemAlertMessage.prototype.onHide = function () {
        this.removeFromParent();
    };
    SystemAlertMessage.prototype.onClickYes = function () {
        if (this.isClickButtonAutoClose) {
            this.close();
        }
        if (this.yesFun) {
            if (this.yesObj) {
                this.yesFun.apply(this.yesObj);
            }
            else {
                this.yesFun();
            }
        }
    };
    return SystemAlertMessage;
}(SystemAlertMessageStruct_1.default));
exports.default = SystemAlertMessage;
},{"../../../Game":546,"../../../GameFrame/Menu/MenuLayer":572,"../../../Libs/Helpers/FguiHelper":627,"../../Generates/GameLaunch/SystemAlertMessageStruct":474}],301:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemConfirmMessageStruct_1 = require("../../Generates/GameLaunch/SystemConfirmMessageStruct");
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var Ease = Laya.Ease;
var Tween = Laya.Tween;
var Handler = Laya.Handler;
var Game_1 = require("../../../Game");
var SystemConfirmMessage = /** @class */ (function (_super) {
    __extends(SystemConfirmMessage, _super);
    function SystemConfirmMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SystemConfirmMessage.prototype, "closeButton", {
        get: function () {
            return this.m_dialog.m_closeButton;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 对话框消息,一个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param caller 点击按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param yesObj 点击yes按钮回调对象
     * @param noFun 点击no按钮回调函数
     * @param noFun 点击no按钮回调对象
     * @param yesTxt yes按钮 文本
     * @param noTxt no按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemConfirmMessage.prototype.open = function (txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (caller === void 0) { caller = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (noFun === void 0) { noFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (noTxt === void 0) { noTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(title)) {
            title = "";
        }
        this.caller = caller;
        this.yesFun = yesFun;
        this.noFun = noFun;
        this.isClickButtonAutoClose = isClickButtonAutoClose;
        this.m_content.text = txt;
        this.m_title.text = title;
        this.m_okBtn.title = yesTxt;
        this.m_cancleBtn.title = noTxt;
        this.closeButton.visible = closeButtonVisiable;
        this.m_okBtn.onClick(this, this.onClickYes);
        this.m_cancleBtn.onClick(this, this.onClickNo);
        this.closeButton.onClick(this, this.onClickClose);
        MenuLayer_1.default.showDialogModel();
        FguiHelper_1.default.centerScreen(this);
        Tween.clearAll(this);
        this.scaleX = 0;
        this.scaleY = 0;
        this.x = Game_1.default.screenSetting.screenWidth >> 1;
        this.y = Game_1.default.screenSetting.screenHeight >> 1;
        this.alpha = 0;
        Tween.to(this, { scaleX: 1, scaleY: 1, alpha: 1 }, 250, Ease.backInOut);
        MenuLayer_1.default.floatMsg.addChild(this);
    };
    SystemConfirmMessage.prototype.close = function () {
        MenuLayer_1.default.hideDialogModel();
        Tween.to(this, { scaleX: 0, scaleY: 0, alpha: 0 }, 250, Ease.quadInOut, Handler.create(this, this.onHide));
    };
    SystemConfirmMessage.prototype.onHide = function () {
        this.removeFromParent();
    };
    SystemConfirmMessage.prototype.onClickYes = function () {
        if (this.isClickButtonAutoClose) {
            this.close();
        }
        if (this.yesFun) {
            if (this.caller) {
                this.yesFun.apply(this.caller);
            }
            else {
                this.yesFun();
            }
        }
    };
    SystemConfirmMessage.prototype.onClickNo = function () {
        if (this.isClickButtonAutoClose) {
            this.close();
        }
        if (this.noFun) {
            if (this.caller) {
                this.noFun.apply(this.caller);
            }
            else {
                this.noFun();
            }
        }
    };
    SystemConfirmMessage.prototype.onClickClose = function () {
        this.close();
    };
    return SystemConfirmMessage;
}(SystemConfirmMessageStruct_1.default));
exports.default = SystemConfirmMessage;
},{"../../../Game":546,"../../../GameFrame/Menu/MenuLayer":572,"../../../Libs/Helpers/FguiHelper":627,"../../Generates/GameLaunch/SystemConfirmMessageStruct":475}],302:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemToastMessageStruct_1 = require("../../Generates/GameLaunch/SystemToastMessageStruct");
var Ease = Laya.Ease;
var Tween = Laya.Tween;
var Handler = Laya.Handler;
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var SystemToastMessage = /** @class */ (function (_super) {
    __extends(SystemToastMessage, _super);
    function SystemToastMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemToastMessage.prototype.play = function (txt, onComplete) {
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        this._onCompleteHandler = onComplete;
        // if(this.m_title.div) this.m_title.div.style.lineHeight = this.height;
        this.m_title.text = txt;
        Tween.clearAll(this);
        MenuLayer_1.default.floatMsg.addChild(this);
        FguiHelper_1.default.centerScreen(this);
        this.alpha = 0;
        Tween.to(this, { y: this.y - 100, alpha: 1 }, 500, Ease.quadInOut);
        Tween.to(this, { y: this.y - 200, alpha: 0 }, 500, Ease.quadInOut, Handler.create(this, this.onComplete), 1000);
    };
    SystemToastMessage.prototype.onComplete = function () {
        this.removeFromParent();
        if (this._onCompleteHandler) {
            this._onCompleteHandler.runWith(this);
            this._onCompleteHandler.recover();
            this._onCompleteHandler = null;
        }
    };
    return SystemToastMessage;
}(SystemToastMessageStruct_1.default));
exports.default = SystemToastMessage;
},{"../../../GameFrame/Menu/MenuLayer":572,"../../../Libs/Helpers/FguiHelper":627,"../../Generates/GameLaunch/SystemToastMessageStruct":476}],303:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WindowModalWaitingStruct_1 = require("../../Generates/GameLaunch/WindowModalWaitingStruct");
var WindowModalWaiting = /** @class */ (function (_super) {
    __extends(WindowModalWaiting, _super);
    function WindowModalWaiting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WindowModalWaiting;
}(WindowModalWaitingStruct_1.default));
exports.default = WindowModalWaiting;
},{"../../Generates/GameLaunch/WindowModalWaitingStruct":477}],304:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagActorItemStruct_1 = require("../../Generates/ModuleBag/BagActorItemStruct");
var BagActorItem = /** @class */ (function (_super) {
    __extends(BagActorItem, _super);
    function BagActorItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BagActorItem.prototype.RenderItem = function (data) {
        this.icon = data.itemIconUrl;
        this.text = data.itemNumTxt; // Math.min(data.itemNum, 9999).toString();
        this.star = data.itemStar;
        var actorId = data.itemConfig.actor_id;
        var actorNum = data.itemConfig.actor_num;
        // let actor = Game.moduleModel.getActor(actorId);
        // if (actor)
        // {
        //     this.m_state.setSelectedIndex(1);
        // } else
        // {
        //     if (actorNum <= data.itemNum)
        //     {
        //         this.m_state.setSelectedIndex(2);
        //     } else
        //     {
        //         this.m_state.setSelectedIndex(0);
        //     }
        // }
    };
    Object.defineProperty(BagActorItem.prototype, "star", {
        set: function (num) {
            // this.m_item.m_star.starNum = num;
        },
        enumerable: true,
        configurable: true
    });
    return BagActorItem;
}(BagActorItemStruct_1.default));
exports.default = BagActorItem;
},{"../../Generates/ModuleBag/BagActorItemStruct":480}],305:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagInfoIconItemStruct_1 = require("../../Generates/ModuleBag/BagInfoIconItemStruct");
var Game_1 = require("../../../Game");
var BagInfoIconItem = /** @class */ (function (_super) {
    __extends(BagInfoIconItem, _super);
    function BagInfoIconItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.GetItems = [];
        return _this;
    }
    BagInfoIconItem.prototype.UpdateView = function (id) {
        this.itemData = Game_1.default.moduleModel.item.getItem(id);
        if (this.itemData.itemType == 7) {
        }
        else {
            this.m_item.RenderItem(this.itemData);
            this.m_itemName.text = this.itemData.itemName;
            this.m_itemContent.text = this.itemData.itemDes;
        }
    };
    return BagInfoIconItem;
}(BagInfoIconItemStruct_1.default));
exports.default = BagInfoIconItem;
},{"../../../Game":546,"../../Generates/ModuleBag/BagInfoIconItemStruct":481}],306:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagItemStruct_1 = require("../../Generates/ModuleBag/BagItemStruct");
var BagItem = /** @class */ (function (_super) {
    __extends(BagItem, _super);
    function BagItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BagItem.prototype.RenderItem = function (data) {
        this.icon = data.itemIconUrl;
        this.text = data.itemNumTxt;
        this.star = data.itemStar;
    };
    Object.defineProperty(BagItem.prototype, "star", {
        set: function (num) {
            this.m_item.m_Star.starNum = num;
        },
        enumerable: true,
        configurable: true
    });
    return BagItem;
}(BagItemStruct_1.default));
exports.default = BagItem;
},{"../../Generates/ModuleBag/BagItemStruct":482}],307:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagWindowUIStruct_1 = require("../../Generates/ModuleBag/BagWindowUIStruct");
var Game_1 = require("../../../Game");
var BagActorItem_1 = require("./BagActorItem");
var ItemIconItem_1 = require("../CommonGame/ItemIconItem");
var BagWindowUI = /** @class */ (function (_super) {
    __extends(BagWindowUI, _super);
    function BagWindowUI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BagWindowUI.prototype, "tabBarCtrl", {
        get: function () {
            return this.m_tabBar.m_select;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BagWindowUI.prototype, "selectIndex", {
        get: function () {
            return this.m_itemList.selectedIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BagWindowUI.prototype, "selectedItemData", {
        get: function () {
            return this.datalist[this.m_itemList.selectedIndex];
        },
        enumerable: true,
        configurable: true
    });
    BagWindowUI.prototype.onWindowInited = function () {
        this.m_itemList.itemRenderer = Laya.Handler.create(this, this.RenderItem, null, false);
        this.m_itemList.setVirtual();
        this.m_itemList.itemProvider = Laya.Handler.create(this, this.ItemProvider, null, false);
    };
    BagWindowUI.prototype.onWindowShow = function () {
        Game_1.default.net.gamerGetBackpackS2C.on(this.updateView, this);
        Game_1.default.net.gamerNotifyItemS2C.on(this.updateView, this);
        this.tabBarCtrl.on(fairygui.Events.STATE_CHANGED, this, this.tabBarOnClick);
        this.m_itemList.on(fairygui.Events.CLICK_ITEM, this, this.OnItemClick);
        this.m_useBtn.onClick(this, this.OnUseClick);
        this.m_splitBtn.onClick(this, this.OnSplitClick);
        this.m_compoundBtn.onClick(this, this.OnCompoundClick);
        this.m_saleBtn.onClick(this, this.OnSaleClick);
        this.updateView();
    };
    BagWindowUI.prototype.onWindowHide = function () {
        this.tabBarCtrl.off(fairygui.Events.STATE_CHANGED, this, this.tabBarOnClick);
        this.m_itemList.off(fairygui.Events.CLICK_ITEM, this, this.OnItemClick);
        Game_1.default.net.gamerGetBackpackS2C.off(this.updateView, this);
        Game_1.default.net.gamerNotifyItemS2C.off(this.updateView, this);
        this.m_useBtn.offClick(this, this.OnUseClick);
        this.m_splitBtn.offClick(this, this.OnSplitClick);
        this.m_compoundBtn.offClick(this, this.OnCompoundClick);
        this.m_saleBtn.offClick(this, this.OnSaleClick);
    };
    BagWindowUI.prototype.updateView = function () {
        this.m_showInfoDialog.setSelectedPage('no');
        this.refreshItemList();
    };
    BagWindowUI.prototype.refreshItemList = function () {
        this.datalist = Game_1.default.moduleModel.item.GetItemListByType(this.tabBarCtrl.selectedIndex);
        this.m_itemList.numItems = this.datalist.length;
    };
    BagWindowUI.prototype.refreshItemInfo = function () {
        var itemData = this.datalist[this.m_itemList.selectedIndex];
        this.m_showItemInfo.setSelectedPage('yes');
        this.refreshButtonState(itemData);
        this.m_bagInfo.UpdateView(itemData.id);
    };
    BagWindowUI.prototype.refreshButtonState = function (data) {
        this.m_useBtn.visible = data.canUse;
        this.m_saleBtn.visible = data.canSell;
        this.m_compoundBtn.visible = data.canCompound;
        this.m_splitBtn.visible = data.canSplit;
    };
    BagWindowUI.prototype.RenderItem = function (index, item) {
        var data = this.datalist[index];
        item.RenderItem(data);
    };
    //** 物品类型 */
    BagWindowUI.prototype.ItemProvider = function (index) {
        if (this.tabBarCtrl.selectedIndex == 2)
            return BagActorItem_1.default.URL;
        else
            return ItemIconItem_1.default.URL;
    };
    BagWindowUI.prototype.tabBarOnClick = function () {
        this.m_showItemInfo.setSelectedPage("no");
        this.refreshItemList();
    };
    /** 点击物品 */
    BagWindowUI.prototype.OnItemClick = function () {
        this.refreshItemInfo();
    };
    BagWindowUI.prototype.OnSplitClick = function () {
        return __awaiter(this, void 0, void 0, function () {
            var splitCnt, item;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.m_showItemInfo.setSelectedPage('no');
                        console.log("OnSplitClick");
                        return [4 /*yield*/, Game_1.default.system.itemSplit(this.selectedItemData.count, 1)];
                    case 1:
                        splitCnt = _a.sent();
                        item = this.selectedItemData;
                        return [4 /*yield*/, Game_1.default.sender.item.splitItem(item.uid, item.id, splitCnt)];
                    case 2:
                        _a.sent();
                        this.refreshItemList();
                        return [2 /*return*/];
                }
            });
        });
    };
    BagWindowUI.prototype.OnCompoundClick = function () {
        return __awaiter(this, void 0, void 0, function () {
            var config, maxCompound, compoundCnt, item;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.m_showItemInfo.setSelectedPage('no');
                        console.log("OnCompoundClick");
                        config = Game_1.default.config.compound.getConfig(this.selectedItemData.id);
                        maxCompound = Math.floor(this.selectedItemData.count / config.num_req);
                        if (!(maxCompound > 0)) return [3 /*break*/, 3];
                        return [4 /*yield*/, Game_1.default.system.itemCompound(maxCompound, 1)];
                    case 1:
                        compoundCnt = _a.sent();
                        item = this.selectedItemData;
                        return [4 /*yield*/, Game_1.default.sender.item.compoundItem(item.uid, item.id, compoundCnt)];
                    case 2:
                        _a.sent();
                        this.refreshItemList();
                        return [3 /*break*/, 4];
                    case 3:
                        Game_1.default.system.toastItemNotEnough(this.selectedItemData.id);
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    BagWindowUI.prototype.OnSaleClick = function () {
        return __awaiter(this, void 0, void 0, function () {
            var saleCnt, item;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.m_showItemInfo.setSelectedPage('no');
                        console.log("OnSellClick");
                        return [4 /*yield*/, Game_1.default.system.itemSale(this.selectedItemData.count, 1)];
                    case 1:
                        saleCnt = _a.sent();
                        item = this.selectedItemData;
                        return [4 /*yield*/, Game_1.default.sender.item.sellItem(item.uid, item.id, saleCnt)];
                    case 2:
                        _a.sent();
                        this.refreshItemList();
                        return [2 /*return*/];
                }
            });
        });
    };
    BagWindowUI.prototype.OnUseClick = function () {
        return __awaiter(this, void 0, void 0, function () {
            var useCnt, item, isInformation, items;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.m_showItemInfo.setSelectedPage('no');
                        console.log("OnUseClick");
                        return [4 /*yield*/, Game_1.default.system.itemUse(this.selectedItemData.count, 1)];
                    case 1:
                        useCnt = _a.sent();
                        item = this.selectedItemData;
                        isInformation = item.itemType == 30;
                        return [4 /*yield*/, Game_1.default.sender.item.useItem(item.uid, item.id, useCnt)];
                    case 2:
                        items = _a.sent();
                        if (items && items.length > 0 && isInformation) {
                            this.m_showInfoDialog.setSelectedPage('yes');
                            // this.m_infoDialog.updateView(items);
                        }
                        this.refreshItemList();
                        return [2 /*return*/];
                }
            });
        });
    };
    return BagWindowUI;
}(BagWindowUIStruct_1.default));
exports.default = BagWindowUI;
},{"../../../Game":546,"../../Generates/ModuleBag/BagWindowUIStruct":483,"../CommonGame/ItemIconItem":256,"./BagActorItem":304}],308:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GetInformationDialogStruct_1 = require("../../Generates/ModuleBag/GetInformationDialogStruct");
var GetInformationDialog = /** @class */ (function (_super) {
    __extends(GetInformationDialog, _super);
    function GetInformationDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GetInformationDialog;
}(GetInformationDialogStruct_1.default));
exports.default = GetInformationDialog;
},{"../../Generates/ModuleBag/GetInformationDialogStruct":484}],309:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailItemStruct_1 = require("../../Generates/ModuleEmail/MailItemStruct");
var Game_1 = require("../../../Game");
var TimeHelper_1 = require("../../../GameHelpers/TimeHelper");
var MailItem = /** @class */ (function (_super) {
    __extends(MailItem, _super);
    function MailItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MailItem.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_reward.onClick(this, this.showInfo);
    };
    MailItem.prototype.showInfo = function (event) {
        event.stopPropagation();
        Game_1.default.system.itemInfoShow(this.m_reward.dataSource);
    };
    MailItem.prototype.RenderItem = function (data) {
        //---出现问题？？？？ this.dataSource跟随data进行变化
        // if (this.dataSource == data) return;
        this.dataSource = data;
        this.m_title.text = data.theme;
        this.m_time.text = TimeHelper_1.default.GetYMD(Number(data.time));
        this.m_read.selectedIndex = data.state == 0 ? 0 : 1;
        if (data.attachments && data.attachments.length > 0) {
            //有物品，显示第一个物品
            this.m_reward.visible = true;
            this.m_reward.RenderItem(data.attachments[0]);
            this.star = data.attachments[0].itemStar;
        }
        else {
            this.m_reward.visible = false;
        }
    };
    Object.defineProperty(MailItem.prototype, "star", {
        set: function (num) {
            this.m_reward.m_Star.starNum = num;
        },
        enumerable: true,
        configurable: true
    });
    return MailItem;
}(MailItemStruct_1.default));
exports.default = MailItem;
},{"../../../Game":546,"../../../GameHelpers/TimeHelper":590,"../../Generates/ModuleEmail/MailItemStruct":486}],310:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailLoaderStruct_1 = require("../../Generates/ModuleEmail/MailLoaderStruct");
var MailLoader = /** @class */ (function (_super) {
    __extends(MailLoader, _super);
    function MailLoader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MailLoader;
}(MailLoaderStruct_1.default));
exports.default = MailLoader;
},{"../../Generates/ModuleEmail/MailLoaderStruct":487}],311:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailWindowUIStruct_1 = require("../../Generates/ModuleEmail/MailWindowUIStruct");
var Game_1 = require("../../../Game");
var MsgKey_1 = require("../../../Config/Keys/MsgKey");
var GameEventKey_1 = require("../../../GameEventKey");
var MailWindowUI = /** @class */ (function (_super) {
    __extends(MailWindowUI, _super);
    function MailWindowUI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    //窗口初始化完毕
    MailWindowUI.prototype.onWindowInited = function () {
        this.m_btnDelect.onClick(this, this.delectMail);
        this.m_btnReward.onClick(this, this.rewardMail);
        this.m_list.itemRenderer = Laya.Handler.create(this, this.renderListItem, null, false);
        this.m_list.on(fairygui.Events.CLICK_ITEM, this, this.clickListItem);
        this.m_list.on(fairygui.Events.PULL_UP_RELEASE, this, this.pullUpToRefresh);
        //虚拟列表
        this.m_list.setVirtual();
    };
    //List刷新回调
    MailWindowUI.prototype.renderListItem = function (index, item) {
        item.RenderItem(this.mailDataList[index]);
    };
    //List点击回调
    MailWindowUI.prototype.clickListItem = function (target, event) {
        var data = target.dataSource;
        Game_1.default.system.mailRead(data);
        if (data.state == 0)
            Game_1.default.sender.mail.changeStateMail(data.id, 1);
    };
    //下一页邮件回调
    MailWindowUI.prototype.pullUpToRefresh = function (event) {
        var footer = this.m_list.scrollPane.footer.asCom;
        this.m_list.scrollPane.lockFooter(footer.sourceHeight);
        Game_1.default.sender.mail.getMailDatas();
        Laya.timer.once(500, this, function () {
            this.m_list.scrollPane.lockFooter(0);
        });
    };
    //删除已读邮件
    MailWindowUI.prototype.delectMail = function () {
        var read = Game_1.default.moduleModel.mail.getReadMail();
        if (read) {
            Game_1.default.sender.mail.delHaveReadMail();
        }
        else {
            Game_1.default.system.toastMsg(MsgKey_1.default.non_deletable_mail);
        }
    };
    //领取附件奖励
    MailWindowUI.prototype.rewardMail = function () {
        var reward = Game_1.default.moduleModel.mail.getrewardMail();
        if (reward) {
            Game_1.default.sender.mail.oneKeyRcvMail();
        }
        else {
            Game_1.default.system.toastMsg(MsgKey_1.default.non_can_receive_mail);
        }
    };
    //刷新邮箱窗口
    MailWindowUI.prototype.updateView = function (id) {
        if (id === void 0) { id = null; }
        if (id) {
            //播放动画
        }
        this.mailDataList = Game_1.default.moduleModel.mail.getMailList();
        var len = this.mailDataList.length;
        if (len > 0) {
            this.m_NoMail.visible = false;
            this.m_list.numItems = len;
        }
        else {
            this.m_NoMail.visible = true;
            this.m_list.numItems = 0;
            Game_1.default.system.toastMsg(MsgKey_1.default.non_mail);
        }
    };
    //主窗口显示时将被调
    MailWindowUI.prototype.onWindowShow = function () {
        this.updateView();
        //更新view
        Game_1.default.event.add(GameEventKey_1.default.Mail_Update, this.updateView, this);
    };
    //主窗口关闭时将被调
    MailWindowUI.prototype.onWindowHide = function () {
        Game_1.default.event.remove(GameEventKey_1.default.Mail_Update, this.updateView, this);
    };
    return MailWindowUI;
}(MailWindowUIStruct_1.default));
exports.default = MailWindowUI;
},{"../../../Config/Keys/MsgKey":122,"../../../Game":546,"../../../GameEventKey":548,"../../Generates/ModuleEmail/MailWindowUIStruct":488}],312:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AccountInputStruct_1 = require("../../Generates/ModuleLogin/AccountInputStruct");
var AccountInput = /** @class */ (function (_super) {
    __extends(AccountInput, _super);
    function AccountInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AccountInput;
}(AccountInputStruct_1.default));
exports.default = AccountInput;
},{"../../Generates/ModuleLogin/AccountInputStruct":490}],313:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuestPanelStruct_1 = require("../../Generates/ModuleLogin/GuestPanelStruct");
var GuestPanel = /** @class */ (function (_super) {
    __extends(GuestPanel, _super);
    function GuestPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GuestPanel;
}(GuestPanelStruct_1.default));
exports.default = GuestPanel;
},{"../../Generates/ModuleLogin/GuestPanelStruct":491}],314:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginPanelStruct_1 = require("../../Generates/ModuleLogin/LoginPanelStruct");
var LoginWindow_1 = require("../../../GameModule/ViewWindows/LoginWindow");
var Game_1 = require("../../../Game");
var AntFrame_1 = require("../../../AntFrame/AntFrame");
var AntWX_1 = require("../../../AntFrame/Platform/AntWX");
var TEXT_1 = require("../../../Config/Keys/TEXT");
var LoginPanel = /** @class */ (function (_super) {
    __extends(LoginPanel, _super);
    function LoginPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 窗口初始化完毕
    LoginPanel.prototype.onWindowInited = function () {
        console.log('LoginPanel onWindowInited');
        this.m_btn_login.onClick(this, this.onClickLogin);
        this.m_btn_register.onClick(this, this.onClickRegister);
    };
    Object.defineProperty(LoginPanel.prototype, "account", {
        // 账号
        get: function () {
            return this.m_accountInput.m_txt_account.text.trim();
        },
        set: function (value) {
            this.m_accountInput.m_txt_account.text = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LoginPanel.prototype, "password", {
        // 密码
        get: function () {
            return this.m_passwordInput.m_txt_password.text;
        },
        set: function (value) {
            this.m_passwordInput.m_txt_password.text = value;
        },
        enumerable: true,
        configurable: true
    });
    // 点击按钮--登录
    LoginPanel.prototype.onClickLogin = function () {
        Game_1.default.sender.login.login(this.account, this.password);
        // Game.menu.open(32);
        // Game.menu.close(101);
    };
    LoginPanel.prototype.onClickRegister = function () {
        this.moduleWindow.openTab(LoginWindow_1.LoginTabType.Register);
    };
    // 如果组件代码里添加该代码，当设该该对象的Tab显示时，将被调用。 需要注意多次连续打开同一个Tab，那边这里也将被多次调用。监听事件需注意
    LoginPanel.prototype.onTabShow = function () {
        console.log('LoginPanel onTabShow');
        if (isNullOrEmpty(this.account)) {
            this.account = Game_1.default.localStorage.username;
        }
        if (isNullOrEmpty(this.password)) {
            this.password = Game_1.default.localStorage.password;
        }
    };
    // 窗口显示
    LoginPanel.prototype.onWindowShow = function () {
        console.log('LoginPanel onWindowShow');
        // this.onTabShow();
        if (Game_1.default.browserSetting.isWeixinMinigame) {
            this.getAuth();
        }
    };
    LoginPanel.prototype.getAuth = function () {
        return __awaiter(this, void 0, void 0, function () {
            var antWx, result, userInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(AntFrame_1.default.platform instanceof AntWX_1.AntPlatformWX)) return [3 /*break*/, 4];
                        antWx = AntFrame_1.default.platform;
                        return [4 /*yield*/, antWx.WXGetSdkAuthSetting()];
                    case 1:
                        result = _a.sent();
                        if (!!result) return [3 /*break*/, 3];
                        this.setModel(true);
                        return [4 /*yield*/, antWx.WXAuth()];
                    case 2:
                        userInfo = _a.sent();
                        if (userInfo) {
                            this.setModel(false);
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        this.setModel(false);
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    LoginPanel.prototype.setModel = function (isAuth) {
        this.m_btn_login.title = isAuth ? TEXT_1.default.Auth : TEXT_1.default.Login;
    };
    // 窗口销毁
    LoginPanel.prototype.onWindowDestory = function () {
        console.log('LoginPanel onWindowDestory');
        return false;
    };
    // 窗口隐藏
    LoginPanel.prototype.onWindowHide = function () {
        console.log('LoginPanel onWindowHide');
    };
    // 该组件所在Tab 隐藏
    LoginPanel.prototype.onTabHide = function () {
        console.log('LoginPanel onTabHide');
    };
    return LoginPanel;
}(LoginPanelStruct_1.default));
exports.default = LoginPanel;
},{"../../../AntFrame/AntFrame":1,"../../../AntFrame/Platform/AntWX":53,"../../../Config/Keys/TEXT":125,"../../../Game":546,"../../../GameModule/ViewWindows/LoginWindow":614,"../../Generates/ModuleLogin/LoginPanelStruct":492}],315:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginWindowUIStruct_1 = require("../../Generates/ModuleLogin/LoginWindowUIStruct");
var Res_1 = require("../../../Config/Keys/Res");
var R_1 = require("../../../Config/Keys/R");
var Game_1 = require("../../../Game");
var LoginWindowUI = /** @class */ (function (_super) {
    __extends(LoginWindowUI, _super);
    function LoginWindowUI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LoginWindowUI.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_screenBG.m_icon.url = Res_1.default.getSpritePathHasExt(R_1.default.sprite.Launch_launch);
        window["aa"] = this;
        this.test();
    };
    // 如果定义了该方法，主窗口显示时将被调
    LoginWindowUI.prototype.onWindowShow = function () {
        this.m_txt_gamever.text = "GameVersion:" + Game_1.default.version.localAppVersionData.toString();
        this.m_txt_resVer.text = "ResVersion:" + Game_1.default.version.localResVersionData.toString();
    };
    // 如果定义了该方法,主窗口关闭时将被调
    LoginWindowUI.prototype.onWindowHide = function () {
    };
    LoginWindowUI.prototype.test = function () {
        this.m_testBtn.onClick(this, this.onClickTestButton);
        // this.m_testBtn.visible = true;
    };
    LoginWindowUI.prototype.onClickTestButton = function () {
    };
    return LoginWindowUI;
}(LoginWindowUIStruct_1.default));
exports.default = LoginWindowUI;
},{"../../../Config/Keys/R":123,"../../../Config/Keys/Res":124,"../../../Game":546,"../../Generates/ModuleLogin/LoginWindowUIStruct":493}],316:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PasswordInputStruct_1 = require("../../Generates/ModuleLogin/PasswordInputStruct");
var PasswordInput = /** @class */ (function (_super) {
    __extends(PasswordInput, _super);
    function PasswordInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PasswordInput;
}(PasswordInputStruct_1.default));
exports.default = PasswordInput;
},{"../../Generates/ModuleLogin/PasswordInputStruct":495}],317:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RegisterPanelStruct_1 = require("../../Generates/ModuleLogin/RegisterPanelStruct");
var RegisterPanel = /** @class */ (function (_super) {
    __extends(RegisterPanel, _super);
    function RegisterPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 窗口初始化完毕
    RegisterPanel.prototype.onWindowInited = function () {
        console.log('RegisterPanel onWindowInited');
        this.m_btn_registerback.onClick(this, this.onClickBack);
    };
    // 窗口销毁
    RegisterPanel.prototype.onWindowDestory = function () {
        console.log('RegisterPanel onWindowDestory');
        return false;
    };
    // 窗口显示
    RegisterPanel.prototype.onWindowShow = function () {
        console.log('RegisterPanel onWindowShow');
    };
    // 窗口隐藏
    RegisterPanel.prototype.onWindowHide = function () {
        console.log('RegisterPanel onWindowHide');
    };
    // 该组件所在Tab 显示
    RegisterPanel.prototype.onTabShow = function () {
        console.log('RegisterPanel onTabShow');
    };
    // 该组件所在Tab 隐藏
    RegisterPanel.prototype.onTabHide = function () {
        console.log('RegisterPanel onTabHide');
    };
    RegisterPanel.prototype.onClickBack = function () {
        this.moduleWindow.backTab();
    };
    return RegisterPanel;
}(RegisterPanelStruct_1.default));
exports.default = RegisterPanel;
},{"../../Generates/ModuleLogin/RegisterPanelStruct":496}],318:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AlertDialogBackgroundStruct_1 = require("../../Generates/SystemModuleDialog/AlertDialogBackgroundStruct");
var AlertDialogBackground = /** @class */ (function (_super) {
    __extends(AlertDialogBackground, _super);
    function AlertDialogBackground() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AlertDialogBackground;
}(AlertDialogBackgroundStruct_1.default));
exports.default = AlertDialogBackground;
},{"../../Generates/SystemModuleDialog/AlertDialogBackgroundStruct":500}],319:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AlertDialogBackground2Struct_1 = require("../../Generates/SystemModuleDialog/AlertDialogBackground2Struct");
var AlertDialogBackground2 = /** @class */ (function (_super) {
    __extends(AlertDialogBackground2, _super);
    function AlertDialogBackground2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AlertDialogBackground2;
}(AlertDialogBackground2Struct_1.default));
exports.default = AlertDialogBackground2;
},{"../../Generates/SystemModuleDialog/AlertDialogBackground2Struct":499}],320:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseAlertDialogStruct_1 = require("../../Generates/SystemModuleDialog/BaseAlertDialogStruct");
var BaseAlertDialog = /** @class */ (function (_super) {
    __extends(BaseAlertDialog, _super);
    function BaseAlertDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseAlertDialog;
}(BaseAlertDialogStruct_1.default));
exports.default = BaseAlertDialog;
},{"../../Generates/SystemModuleDialog/BaseAlertDialogStruct":501}],321:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GetRewardDialogStruct_1 = require("../../Generates/SystemModuleDialog/GetRewardDialogStruct");
var DialogCtrl_1 = require("../../../GameFrame/Module/DialogCtrl");
var ItemData_1 = require("../../../GameModule/DataStructs/ItemData");
var GetRewardDialogType;
(function (GetRewardDialogType) {
    GetRewardDialogType[GetRewardDialogType["Item"] = 0] = "Item";
    GetRewardDialogType[GetRewardDialogType["Information"] = 1] = "Information";
    GetRewardDialogType[GetRewardDialogType["actor"] = 2] = "actor";
})(GetRewardDialogType = exports.GetRewardDialogType || (exports.GetRewardDialogType = {}));
var GetRewardDialog = /** @class */ (function (_super) {
    __extends(GetRewardDialog, _super);
    function GetRewardDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.itemDataList = [];
        _this.type = GetRewardDialogType.Item;
        return _this;
    }
    GetRewardDialog.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.dialogCtrl = new DialogCtrl_1.default().init(this);
        this.m_list.itemRenderer = Laya.Handler.create(this, this.RenderItem, null, false);
    };
    GetRewardDialog.prototype.open = function (items) {
        return __awaiter(this, void 0, void 0, function () {
            var selectedIndex;
            var _this = this;
            return __generator(this, function (_a) {
                this.itemDataList = [];
                this.setupDatasource(items);
                selectedIndex = items.length > 3 ? 1 : 0;
                this.m_boxHeightCtrl.setSelectedIndex(selectedIndex);
                this.m_list.numItems = items.length;
                this.dialogCtrl.open();
                return [2 /*return*/, new Promise(function (resolve) {
                        var onclick = function () {
                            _this.m_confirmBtn.offClick(_this, onclick);
                            resolve();
                            _this.close();
                        };
                        _this.m_confirmBtn.onClick(_this, onclick);
                    })];
            });
        });
    };
    GetRewardDialog.prototype.setupDatasource = function (items) {
        var _this = this;
        items.forEach(function (item) {
            _this.itemDataList.push(ItemData_1.default.Create(item.id, item.count));
        });
    };
    GetRewardDialog.prototype.close = function () {
        this.removeFromParent();
    };
    GetRewardDialog.prototype.RenderItem = function (index, obj) {
        var data = this.itemDataList[index];
        obj.updateView(data);
    };
    return GetRewardDialog;
}(GetRewardDialogStruct_1.default));
exports.default = GetRewardDialog;
},{"../../../GameFrame/Module/DialogCtrl":576,"../../../GameModule/DataStructs/ItemData":598,"../../Generates/SystemModuleDialog/GetRewardDialogStruct":502}],322:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemGetRewardDialogContentStruct_1 = require("../../Generates/SystemModuleDialog/ItemGetRewardDialogContentStruct");
var ItemGetRewardDialogContent = /** @class */ (function (_super) {
    __extends(ItemGetRewardDialogContent, _super);
    function ItemGetRewardDialogContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ItemGetRewardDialogContent;
}(ItemGetRewardDialogContentStruct_1.default));
exports.default = ItemGetRewardDialogContent;
},{"../../Generates/SystemModuleDialog/ItemGetRewardDialogContentStruct":503}],323:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemGetWayDialogStruct_1 = require("../../Generates/SystemModuleDialog/ItemGetWayDialogStruct");
var Game_1 = require("../../../Game");
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var Handler = Laya.Handler;
var ItemGetWayDialog = /** @class */ (function (_super) {
    __extends(ItemGetWayDialog, _super);
    function ItemGetWayDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.mMenuConfigs = [];
        return _this;
    }
    /**
     * 打开物品获取对话框
     * @param itemId 物品ID
     * @param costNum 物品需求数量
     */
    ItemGetWayDialog.prototype.open = function (itemId, costNum) {
        var item = Game_1.default.moduleModel.item.getItem(itemId);
        if (!item) {
            console.warn("ItemGetWayDialog open: \u6CA1\u6709\u8BE5\u7269\u54C1 " + itemId);
            return;
        }
        // 前往的菜单列表
        var menuConfigs = item.itemConfig.getWayMenus;
        this.mMenuConfigs = menuConfigs;
        this.m_content.m_closeButton.onClick(this, this.close);
        this.m_content.m_menuList.itemRenderer = Laya.Handler.create(this, this.renderListItem, null, false);
        this.m_content.m_menuList.on(fairygui.Events.CLICK_ITEM, this, this.onClickMenuButton);
        this.m_content.m_menuList.numItems = menuConfigs.length;
        this.m_content.m_itemIcon.setData(item, costNum);
        MenuLayer_1.default.showDialogModel();
        FguiHelper_1.default.centerScreen(this);
        this.m_content.scaleX = 0;
        this.m_content.scaleY = 0;
        Tween.to(this.m_content, { scaleX: 1, scaleY: 1 }, 500, Ease.backInOut);
        MenuLayer_1.default.floatMsg.addChild(this);
    };
    ItemGetWayDialog.prototype.renderListItem = function (index, item) {
        item.setData(this.mMenuConfigs[index]);
    };
    ItemGetWayDialog.prototype.close = function () {
        MenuLayer_1.default.hideDialogModel();
        Tween.to(this.m_content, { scaleX: 0, scaleY: 0 }, 500, Ease.quadInOut, Handler.create(this, this.onHide));
    };
    ItemGetWayDialog.prototype.onHide = function () {
        this.removeFromParent();
    };
    ItemGetWayDialog.prototype.onClickMenuButton = function (menuButton) {
        this.close();
        Game_1.default.menu.open(menuButton.menuConfig.menuId);
    };
    return ItemGetWayDialog;
}(ItemGetWayDialogStruct_1.default));
exports.default = ItemGetWayDialog;
},{"../../../Game":546,"../../../GameFrame/Menu/MenuLayer":572,"../../../Libs/Helpers/FguiHelper":627,"../../Generates/SystemModuleDialog/ItemGetWayDialogStruct":504}],324:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemInfoDialogStruct_1 = require("../../Generates/SystemModuleDialog/ItemInfoDialogStruct");
var DialogCtrl_1 = require("../../../GameFrame/Module/DialogCtrl");
var ItemInfoDialog = /** @class */ (function (_super) {
    __extends(ItemInfoDialog, _super);
    function ItemInfoDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ItemInfoDialog.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.dialogCtrl = new DialogCtrl_1.default().init(this);
        this.m_closeBtn.onClick(this, this.close);
    };
    //弹窗显示
    ItemInfoDialog.prototype.open = function (datasource) {
        this.m_item.RenderItem(datasource);
        this.m_itemName.text = datasource.itemName;
        this.m_itemContent.text = datasource.itemDes;
        this.dialogCtrl.open();
    };
    //弹窗关闭
    ItemInfoDialog.prototype.close = function () {
        this.dialogCtrl.close();
    };
    return ItemInfoDialog;
}(ItemInfoDialogStruct_1.default));
exports.default = ItemInfoDialog;
},{"../../../GameFrame/Module/DialogCtrl":576,"../../Generates/SystemModuleDialog/ItemInfoDialogStruct":505}],325:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailContentDialogStruct_1 = require("../../Generates/SystemModuleDialog/MailContentDialogStruct");
var DialogCtrl_1 = require("../../../GameFrame/Module/DialogCtrl");
var Game_1 = require("../../../Game");
var TEXT_1 = require("../../../Config/Keys/TEXT");
var GameEventKey_1 = require("../../../GameEventKey");
var TimeHelper_1 = require("../../../GameHelpers/TimeHelper");
var MailContentDialog = /** @class */ (function (_super) {
    __extends(MailContentDialog, _super);
    function MailContentDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MailContentDialog.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.dialogCtrl = new DialogCtrl_1.default().init(this);
        this.m_closeBtn.onClick(this, this.close);
        this.m_btnClose.onClick(this, this.close);
        this.m_btnDelect.onClick(this, this.delectMail);
        this.m_btnReward.onClick(this, this.rewardMail);
        //注册List刷新回调
        this.m_listReward.itemRenderer = Laya.Handler.create(this, this.renderListItem, null, false);
        //注册List点击回调
        this.m_listReward.on(fairygui.Events.CLICK_ITEM, this, this.clickListItem);
        //虚拟列表
        this.m_listReward.setVirtual();
    };
    //List刷新回调
    MailContentDialog.prototype.renderListItem = function (index, item) {
        item.RenderItem(this.rewardDataList[index]);
    };
    //List点击回调
    MailContentDialog.prototype.clickListItem = function (target, event) {
        //弹出物品信息框
        event.stopPropagation();
        Game_1.default.system.itemInfoShow(target.dataSource);
    };
    //删除单条邮件
    MailContentDialog.prototype.delectMail = function () {
        Game_1.default.sender.mail.delMail(this.mailID);
    };
    //领取单条奖励
    MailContentDialog.prototype.rewardMail = function () {
        Game_1.default.sender.mail.changeStateMail(this.mailID, 2);
    };
    //领取奖励
    MailContentDialog.prototype.rcvMail = function (state) {
        if (this.rewardDataList)
            this.m_reward.selectedIndex = state == 2 ? 1 : 2;
    };
    //弹窗显示
    MailContentDialog.prototype.open = function (datasource) {
        this.m_Msg1.text = TEXT_1.default.ToReader;
        this.m_Msg2.text = TEXT_1.default.ReawrdMsg;
        this.m_title.text = datasource.theme;
        this.m_content.text = datasource.msg;
        this.m_time.text = TimeHelper_1.default.GetYMD(Number(datasource.time));
        if (datasource.attachments) {
            this.rewardDataList = datasource.attachments;
            this.m_listReward.numItems = datasource.attachments.length;
            this.m_reward.selectedIndex = datasource.state == 2 ? 1 : 2;
        }
        else {
            this.rewardDataList = null;
            this.m_listReward.numItems = 0;
            this.m_reward.selectedIndex = 0;
        }
        this.mailID = datasource.id;
        Game_1.default.event.add(GameEventKey_1.default.Mail_Change, this.rcvMail, this);
        Game_1.default.event.add(GameEventKey_1.default.Mail_DelOne, this.close, this);
        this.dialogCtrl.open();
    };
    //弹窗关闭
    MailContentDialog.prototype.close = function () {
        Game_1.default.event.remove(GameEventKey_1.default.Mail_Change, this.rcvMail, this);
        Game_1.default.event.remove(GameEventKey_1.default.Mail_DelOne, this.close, this);
        this.dialogCtrl.close();
    };
    return MailContentDialog;
}(MailContentDialogStruct_1.default));
exports.default = MailContentDialog;
},{"../../../Config/Keys/TEXT":125,"../../../Game":546,"../../../GameEventKey":548,"../../../GameFrame/Module/DialogCtrl":576,"../../../GameHelpers/TimeHelper":590,"../../Generates/SystemModuleDialog/MailContentDialogStruct":506}],326:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SelectRecipientDialogStruct_1 = require("../../Generates/SystemModuleDialog/SelectRecipientDialogStruct");
var SelectRecipientDialog = /** @class */ (function (_super) {
    __extends(SelectRecipientDialog, _super);
    function SelectRecipientDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SelectRecipientDialog;
}(SelectRecipientDialogStruct_1.default));
exports.default = SelectRecipientDialog;
},{"../../Generates/SystemModuleDialog/SelectRecipientDialogStruct":507}],327:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SetNumberDialogStruct_1 = require("../../Generates/SystemModuleDialog/SetNumberDialogStruct");
var DialogCtrl_1 = require("../../../GameFrame/Module/DialogCtrl");
var SetNumberDialog = /** @class */ (function (_super) {
    __extends(SetNumberDialog, _super);
    function SetNumberDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SetNumberDialog.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.dialogCtrl = new DialogCtrl_1.default().init(this);
        this.dialogCtrl.setCloseBtnEvent();
    };
    SetNumberDialog.prototype.open = function (max, value) {
        if (value === void 0) { value = 1; }
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                this.m_slider.max = max;
                this.m_slider.value = value;
                this.dialogCtrl.open();
                return [2 /*return*/, new Promise(function (resolve) {
                        var onclick = function () {
                            _this.m_yesBtn.offClick(_this, onclick);
                            resolve(_this.m_slider.value);
                            _this.close();
                        };
                        _this.m_yesBtn.onClick(_this, onclick);
                    })];
            });
        });
    };
    SetNumberDialog.prototype.OnResult = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    SetNumberDialog.prototype.close = function () {
        this.dialogCtrl.close();
    };
    return SetNumberDialog;
}(SetNumberDialogStruct_1.default));
exports.default = SetNumberDialog;
},{"../../../GameFrame/Module/DialogCtrl":576,"../../Generates/SystemModuleDialog/SetNumberDialogStruct":508}],328:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TextScrollStruct_1 = require("../../Generates/SystemModuleDialog/TextScrollStruct");
var TextScroll = /** @class */ (function (_super) {
    __extends(TextScroll, _super);
    function TextScroll() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TextScroll;
}(TextScrollStruct_1.default));
exports.default = TextScroll;
},{"../../Generates/SystemModuleDialog/TextScrollStruct":510}],329:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var HomeWindowUIStruct_1 = require("../../Generates/SystemModuleHome/HomeWindowUIStruct");
var Game_1 = require("../../../Game");
var Dictionary_1 = require("../../../Libs/Helpers/Dictionary");
var MenuId_1 = require("../../../GameModule/MenuId");
var MenuButtonCtrl_1 = require("../../Customs/MenuButtonCtrl");
var GameEventKey_1 = require("../../../GameEventKey");
var HomeWindowUI = /** @class */ (function (_super) {
    __extends(HomeWindowUI, _super);
    function HomeWindowUI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 特殊菜单按钮 */
        _this.specialMenuCtrlList = [];
        _this.specialMenuCtrlDict = new Dictionary_1.default();
        _this.isSceneZoomBuildingEnter = false;
        _this.lastSceneZoomRate = 0;
        _this._tweenRate = 100;
        _this._tweenVisiable = true;
        _this._tweenVisiable2 = true;
        _this._tweenViews = [];
        _this._tweenViews2 = [];
        return _this;
    }
    /** 添加 特殊菜单按钮 */
    HomeWindowUI.prototype.addSpecialMenu = function (menuId, button) {
        var menuConfig = Game_1.default.config.menu.getConfig(menuId);
        var ctl = new MenuButtonCtrl_1.default(button);
        ctl.setMenuConfig(menuConfig);
        this.specialMenuCtrlList.push(ctl);
        this.specialMenuCtrlDict.add(ctl.menuId, ctl);
    };
    // 窗口初始化完毕
    HomeWindowUI.prototype.onWindowInited = function () {
        this.addSpecialMenu(MenuId_1.MenuId.ActorFans, this.m_menuAppointmentButton);
        this.addSpecialMenu(MenuId_1.MenuId.Rank, this.m_topMainBar.m_street);
        this.addSpecialMenu(MenuId_1.MenuId.PlayerInfo, this.m_topMainBar.m_headInfo);
        window['homeWindowUI'] = this;
    };
    // 窗口显示
    HomeWindowUI.prototype.onWindowShow = function () {
        Game_1.default.system.userLevelAndExpPlay.startSystemListen();
        Game_1.default.event.add(GameEventKey_1.default.Home_SceneZoomChange, this.onSceneZoomChange, this);
        Game_1.default.event.add(GameEventKey_1.default.Home_SceneZoomEnd, this.onSceneZoomEnd, this);
        Game_1.default.event.add(GameEventKey_1.default.Home_SceneZoomBuildingEnter, this.onHomeSceneZoomBuildingEnter, this);
        Game_1.default.event.add(GameEventKey_1.default.Home_SceneZoomBuildingExit, this.onHomeSceneZoomBuildingExit, this);
        this.initTweenView();
    };
    // 窗口隐藏
    HomeWindowUI.prototype.onWindowHide = function () {
        Game_1.default.system.userLevelAndExpPlay.stopSystemListen();
        Game_1.default.event.remove(GameEventKey_1.default.Home_SceneZoomChange, this.onSceneZoomChange, this);
        Game_1.default.event.remove(GameEventKey_1.default.Home_SceneZoomEnd, this.onSceneZoomEnd, this);
        Game_1.default.event.remove(GameEventKey_1.default.Home_SceneZoomBuildingEnter, this.onHomeSceneZoomBuildingEnter, this);
        Game_1.default.event.remove(GameEventKey_1.default.Home_SceneZoomBuildingExit, this.onHomeSceneZoomBuildingExit, this);
    };
    HomeWindowUI.prototype.onClickExitViewButton = function () {
    };
    HomeWindowUI.prototype.onRefreshUnlock = function () {
        for (var _i = 0, _a = this.specialMenuCtrlList; _i < _a.length; _i++) {
            var item = _a[_i];
            item.refreshUnlock(true);
        }
    };
    HomeWindowUI.prototype.onHomeSceneZoomBuildingEnter = function () {
        this.isSceneZoomBuildingEnter = true;
        this.tweenHide();
    };
    HomeWindowUI.prototype.onHomeSceneZoomBuildingExit = function () {
        this.isSceneZoomBuildingEnter = false;
        this.tweenShow();
    };
    Object.defineProperty(HomeWindowUI.prototype, "tweenZoomBegin", {
        get: function () {
            return 0.5;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HomeWindowUI.prototype, "tweenZoomEnd", {
        get: function () {
            return 1;
        },
        enumerable: true,
        configurable: true
    });
    HomeWindowUI.prototype.zoomRate2TweenRate = function (zoomRate) {
        zoomRate = Math.max(zoomRate, this.tweenZoomBegin);
        zoomRate = Math.min(zoomRate, this.tweenZoomEnd);
        zoomRate = (zoomRate - this.tweenZoomBegin) / (this.tweenZoomEnd - this.tweenZoomBegin);
        return (1 - zoomRate) * this.tweenRateLength;
    };
    HomeWindowUI.prototype.onSceneZoomChange = function (zoomRate) {
        if (this.isSceneZoomBuildingEnter)
            return;
        this.lastSceneZoomRate = zoomRate;
        var tweenRate = this.zoomRate2TweenRate(zoomRate);
        Laya.Tween.to(this, { tweenRate: tweenRate }, 100, Laya.Ease.linearNone, null, 0, true);
    };
    HomeWindowUI.prototype.onSceneZoomEnd = function (zoomRate) {
        if (this.isSceneZoomBuildingEnter)
            return;
        this.lastSceneZoomRate = zoomRate;
        if (zoomRate >= this.tweenZoomEnd) {
            this.tweenHide();
        }
        else {
            this.tweenShow();
        }
    };
    HomeWindowUI.prototype.tweenShow = function () {
        Laya.Tween.clearTween(this);
        Laya.Tween.to(this, { tweenRate: HomeWindowUI.TWEEN_RATE_SHOW }, 200, Laya.Ease.linearIn);
    };
    HomeWindowUI.prototype.tweenHide = function () {
        Laya.Tween.clearTween(this);
        Laya.Tween.to(this, { tweenRate: HomeWindowUI.TWEEN_RATE_HIDE }, 200, Laya.Ease.linearIn);
    };
    Object.defineProperty(HomeWindowUI.prototype, "tweenRateLength", {
        get: function () {
            return HomeWindowUI.TWEEN_RATE_SHOW - HomeWindowUI.TWEEN_RATE_HIDE;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HomeWindowUI.prototype, "tweenRate", {
        get: function () {
            return this._tweenRate;
        },
        set: function (val) {
            this._tweenRate = val;
            var r = val / (this.tweenRateLength);
            var v;
            for (var _i = 0, _a = this._tweenViews; _i < _a.length; _i++) {
                var view = _a[_i];
                v = view;
                v.x = Laya.MathUtil.lerp(view.hideX, view.initX, r);
                v.y = Laya.MathUtil.lerp(view.hideY, view.initY, r);
            }
            for (var _b = 0, _c = this._tweenViews2; _b < _c.length; _b++) {
                var view = _c[_b];
                v = view;
                v.x = Laya.MathUtil.lerp(view.hideX, view.initX, r);
                v.y = Laya.MathUtil.lerp(view.hideY, view.initY, r);
            }
            this.tweenVisiable = r > 0;
            this.tweenVisiable2 = !this.isSceneZoomBuildingEnter && r < 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HomeWindowUI.prototype, "tweenVisiable", {
        get: function () {
            return this._tweenVisiable;
        },
        set: function (val) {
            if (this._tweenVisiable == val)
                return;
            this._tweenVisiable = val;
            var v;
            for (var _i = 0, _a = this._tweenViews; _i < _a.length; _i++) {
                var view = _a[_i];
                v = view;
                v.visible = val;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HomeWindowUI.prototype, "tweenVisiable2", {
        get: function () {
            return this._tweenVisiable2;
        },
        set: function (val) {
            if (this._tweenVisiable2 == val)
                return;
            this._tweenVisiable2 = val;
            var v;
            for (var _i = 0, _a = this._tweenViews2; _i < _a.length; _i++) {
                var view = _a[_i];
                v = view;
                v.visible = val;
            }
        },
        enumerable: true,
        configurable: true
    });
    HomeWindowUI.prototype.initTweenView = function () {
        if (this._tweenViews.length > 0)
            return;
        var views = this._tweenViews;
        var views2 = this._tweenViews2;
        var view;
        var v;
        // down
        view = this.m_mainMenuBar;
        v = view;
        view.layout = TweenViewLayout.Buttom;
        view.isHide = true;
        view.initX = v.x;
        view.initY = v.y;
        view.hideX = v.x;
        view.hideY = v.y + 200;
        views.push(view);
        // down
        view = this.m_bgBottom;
        v = view;
        view.layout = TweenViewLayout.Buttom;
        view.isHide = true;
        view.initX = v.x;
        view.initY = v.y;
        view.hideX = v.x;
        view.hideY = v.y + 200;
        views.push(view);
        // top
        view = this.m_topMainBar;
        v = view;
        view.layout = TweenViewLayout.Top;
        view.isHide = true;
        view.initX = v.x;
        view.initY = v.y;
        view.hideX = v.x;
        view.hideY = v.y - 250;
        views.push(view);
        // top
        view = this.m_bgTop;
        v = view;
        view.layout = TweenViewLayout.Top;
        view.isHide = true;
        view.initX = v.x;
        view.initY = v.y;
        view.hideX = v.x;
        view.hideY = v.y - 250;
        views.push(view);
        // right
        view = this.m_rightBottomMenuBar;
        v = view;
        view.layout = TweenViewLayout.Right;
        view.isHide = true;
        view.initX = v.x;
        view.initY = v.y;
        view.hideX = v.x + 250;
        view.hideY = v.y;
        views.push(view);
        view = this.m_rightTopMenuBar;
        v = view;
        view.layout = TweenViewLayout.Right;
        view.isHide = true;
        view.initX = v.x;
        view.initY = v.y;
        view.hideX = v.x + 400;
        view.hideY = v.y;
        views.push(view);
        view = this.m_menuAppointmentButton;
        v = view;
        view.layout = TweenViewLayout.Right;
        view.isHide = true;
        view.initX = v.x;
        view.initY = v.y;
        view.hideX = v.x + 400;
        view.hideY = v.y;
        views.push(view);
    };
    HomeWindowUI.TWEEN_RATE_SHOW = 100;
    HomeWindowUI.TWEEN_RATE_HIDE = 0;
    return HomeWindowUI;
}(HomeWindowUIStruct_1.default));
exports.default = HomeWindowUI;
var TweenViewLayout;
(function (TweenViewLayout) {
    TweenViewLayout[TweenViewLayout["Top"] = 0] = "Top";
    TweenViewLayout[TweenViewLayout["Buttom"] = 1] = "Buttom";
    TweenViewLayout[TweenViewLayout["Let"] = 2] = "Let";
    TweenViewLayout[TweenViewLayout["Right"] = 3] = "Right";
})(TweenViewLayout || (TweenViewLayout = {}));
},{"../../../Game":546,"../../../GameEventKey":548,"../../../GameModule/MenuId":603,"../../../Libs/Helpers/Dictionary":626,"../../Customs/MenuButtonCtrl":176,"../../Generates/SystemModuleHome/HomeWindowUIStruct":511}],330:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuAppointmentButtonStruct_1 = require("../../Generates/SystemModuleMenu/MenuAppointmentButtonStruct");
var MenuAppointmentButton = /** @class */ (function (_super) {
    __extends(MenuAppointmentButton, _super);
    function MenuAppointmentButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuAppointmentButton;
}(MenuAppointmentButtonStruct_1.default));
exports.default = MenuAppointmentButton;
},{"../../Generates/SystemModuleMenu/MenuAppointmentButtonStruct":513}],331:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBButtonStruct_1 = require("../../Generates/SystemModuleMenu/MenuBButtonStruct");
var MenuBButton = /** @class */ (function (_super) {
    __extends(MenuBButton, _super);
    function MenuBButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuBButton;
}(MenuBButtonStruct_1.default));
exports.default = MenuBButton;
},{"../../Generates/SystemModuleMenu/MenuBButtonStruct":514}],332:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBMainButtonStruct_1 = require("../../Generates/SystemModuleMenu/MenuBMainButtonStruct");
var Random_1 = require("../../../Libs/Helpers/Random");
var Mathf_1 = require("../../../Libs/Mathf");
var MenuBMainButton = /** @class */ (function (_super) {
    __extends(MenuBMainButton, _super);
    function MenuBMainButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.butterFxInitX = 0;
        _this.butterFxInitY = 0;
        _this.tm = 10;
        return _this;
    }
    MenuBMainButton.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.butterFxInitX = this.m_butterflyFx.x;
        this.butterFxInitY = this.m_butterflyFx.y;
        window['menuMainButton'] = this;
    };
    // 窗口显示
    MenuBMainButton.prototype.onWindowShow = function () {
        this.startMoveButterflyFx();
    };
    // 窗口隐藏
    MenuBMainButton.prototype.onWindowHide = function () {
        this.stopMoveButterflyFx();
        Laya.Tween.clearAll(this.m_butterflyFx);
        Laya.timer.clearAll(this);
        this.m_t0.stop();
    };
    MenuBMainButton.prototype.startMoveButterflyFx = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this.m_butterflyFx);
        this.m_t0.stop();
        this.m_butterflyFx.playing = true;
        this.m_butterflyFx.timeScale = 1;
        var x = this.butterFxInitX - 70;
        var y = this.butterFxInitY - 70;
        var t = Mathf_1.default.distanceangle(x, y, this.butterFxInitX, this.butterFxInitY) * this.tm;
        this.m_butterflyFx.x = x;
        this.m_butterflyFx.y = y;
        // Laya.Tween.to(this.m_butterflyFx, {x: x, y: y}, Random.range(1000, 5000), null, Laya.Handler.create(this, this.startMoveButterflyFx, null, true));
        Laya.Tween.to(this.m_butterflyFx, { x: this.butterFxInitX, y: this.butterFxInitY }, t, null, Laya.Handler.create(this, this.flyStop, null, true));
    };
    MenuBMainButton.prototype.flyStop = function () {
        if (!this.m_t0.playing) {
            this.m_t0._timeScale = 0.5;
            this.m_t0.play(null, -1, 0);
        }
        this.m_butterflyFx.timeScale = 0.5;
        // Laya.timer.once(Random.range(1000, 5000), this, this.flyStart);
    };
    MenuBMainButton.prototype.flyStart = function () {
        this.m_butterflyFx.timeScale = 1;
        var x = this.butterFxInitX - Random_1.default.range(20, 50);
        var y = this.butterFxInitY - Random_1.default.range(10, 50);
        var t = Random_1.default.range(1000, 5000);
        Laya.Tween.to(this.m_butterflyFx, { x: x, y: y }, t, null, null);
        Laya.Tween.to(this.m_butterflyFx, { x: this.butterFxInitX, y: this.butterFxInitY }, Random_1.default.range(1000, 5000), null, Laya.Handler.create(this, this.flyStop, null, true), t);
        // Laya.timer.once(Random.range(1000, 5000), this, this.flyStop);
    };
    MenuBMainButton.prototype.stopMoveButterflyFx = function () {
        this.m_butterflyFx.playing = false;
        Laya.Tween.clearAll(this.m_butterflyFx);
    };
    return MenuBMainButton;
}(MenuBMainButtonStruct_1.default));
exports.default = MenuBMainButton;
},{"../../../Libs/Helpers/Random":631,"../../../Libs/Mathf":635,"../../Generates/SystemModuleMenu/MenuBMainButtonStruct":515}],333:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBarMainStruct_1 = require("../../Generates/SystemModuleMenu/MenuBarMainStruct");
var Dictionary_1 = require("../../../Libs/Helpers/Dictionary");
var Game_1 = require("../../../Game");
var MenuBarType_1 = require("../../../GameFrame/Menu/MenuBarType");
var MenuButtonCtrl_1 = require("../../Customs/MenuButtonCtrl");
var MenuBarMain = /** @class */ (function (_super) {
    __extends(MenuBarMain, _super);
    function MenuBarMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.menuButtons = [];
        _this.posDict = new Dictionary_1.default();
        return _this;
    }
    // 窗口初始化完毕
    MenuBarMain.prototype.onWindowInited = function () {
        for (var i = 0; i < this.numChildren; i++) {
            var item = this.getChildAt(i);
            if (item.name.startsWith("btn_")) {
                var ctl = new MenuButtonCtrl_1.default(item, this);
                this.posDict.add(ctl.menuButtonData.pos, ctl);
                this.menuButtons.push(ctl);
            }
        }
        var list = Game_1.default.config.menu.getBarMenus(MenuBarType_1.MenuBarType.Bottom);
        for (var i = 0; i < list.length; i++) {
            var config = list[i];
            var ctl = this.posDict.getValue(config.barIndex);
            if (ctl) {
                ctl.setMenuConfig(config);
            }
        }
        //cache bitmap
        // this.displayObject.cacheAs = "bitmap";
        // this.displayObject.staticCache = true;
    };
    MenuBarMain.prototype.onRefreshUnlock = function () {
        for (var _i = 0, _a = this.menuButtons; _i < _a.length; _i++) {
            var item = _a[_i];
            item.refreshUnlock();
        }
        //repaint
        // this.displayObject.reCache();
    };
    MenuBarMain.prototype.closeSubmenus = function () {
    };
    return MenuBarMain;
}(MenuBarMainStruct_1.default));
exports.default = MenuBarMain;
},{"../../../Game":546,"../../../GameFrame/Menu/MenuBarType":568,"../../../Libs/Helpers/Dictionary":626,"../../Customs/MenuButtonCtrl":176,"../../Generates/SystemModuleMenu/MenuBarMainStruct":516}],334:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBarRightBottomStruct_1 = require("../../Generates/SystemModuleMenu/MenuBarRightBottomStruct");
var Game_1 = require("../../../Game");
var MenuBarType_1 = require("../../../GameFrame/Menu/MenuBarType");
var MenuWindows_1 = require("../../../GameModule/MenuWindows");
var MenuRButton_1 = require("./MenuRButton");
var MenuButtonCtrl_1 = require("../../Customs/MenuButtonCtrl");
var MenuBarRightBottom = /** @class */ (function (_super) {
    __extends(MenuBarRightBottom, _super);
    function MenuBarRightBottom() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.menuButtons = [];
        return _this;
    }
    // 窗口初始化完毕
    MenuBarRightBottom.prototype.onWindowInited = function () {
        for (var i = this.numChildren - 1; i >= 0; i--) {
            this.removeChildAt(i);
        }
        var list = Game_1.default.config.menu.getBarMenus(MenuBarType_1.MenuBarType.Right_Bottom);
        list.sort(function (a, b) { return a.barIndex - b.barIndex; });
        var y = 0;
        for (var i = 0; i < list.length; i++) {
            var config = list[i];
            if (!MenuWindows_1.default.get(config.menuId)) {
                continue;
            }
            var button = MenuRButton_1.default.createInstance();
            button.y = y;
            y += button.height;
            this.addChild(button);
            var ctl = new MenuButtonCtrl_1.default(button);
            ctl.setMenuConfig(config);
            this.menuButtons.push(ctl);
        }
        this.height = y;
    };
    MenuBarRightBottom.prototype.layoutButtom = function () {
        var y = 0;
        for (var i = 0; i < this.menuButtons.length; i++) {
            var ctl = this.menuButtons[i];
            if (!ctl.button.visible)
                continue;
            ctl.button.y = y;
            y += ctl.button.height;
        }
    };
    MenuBarRightBottom.prototype.onRefreshUnlock = function () {
        for (var _i = 0, _a = this.menuButtons; _i < _a.length; _i++) {
            var item = _a[_i];
            item.refreshUnlock(true);
        }
        this.layoutButtom();
    };
    return MenuBarRightBottom;
}(MenuBarRightBottomStruct_1.default));
exports.default = MenuBarRightBottom;
},{"../../../Game":546,"../../../GameFrame/Menu/MenuBarType":568,"../../../GameModule/MenuWindows":609,"../../Customs/MenuButtonCtrl":176,"../../Generates/SystemModuleMenu/MenuBarRightBottomStruct":517,"./MenuRButton":336}],335:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBarRightTopStruct_1 = require("../../Generates/SystemModuleMenu/MenuBarRightTopStruct");
var Game_1 = require("../../../Game");
var MenuBarType_1 = require("../../../GameFrame/Menu/MenuBarType");
var MenuButtonCtrl_1 = require("../../Customs/MenuButtonCtrl");
var MenuWindows_1 = require("../../../GameModule/MenuWindows");
var MenuRButton_1 = require("./MenuRButton");
var MenuBarRightTop = /** @class */ (function (_super) {
    __extends(MenuBarRightTop, _super);
    function MenuBarRightTop() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.menuButtons = [];
        _this.itemWidth = 94;
        _this.itemHeight = 94;
        _this.itemGapH = 15;
        _this.itemGapV = 20;
        _this.itemHCount = 3;
        return _this;
    }
    // 窗口初始化完毕
    MenuBarRightTop.prototype.onWindowInited = function () {
        for (var i = this.numChildren - 1; i >= 0; i--) {
            this.removeChildAt(i);
        }
        var list = Game_1.default.config.menu.getBarMenus(MenuBarType_1.MenuBarType.Right_Top);
        list.sort(function (a, b) { return a.barIndex - b.barIndex; });
        for (var i = 0; i < list.length; i++) {
            var config = list[i];
            if (!MenuWindows_1.default.get(config.menuId)) {
                continue;
            }
            var button = MenuRButton_1.default.createInstance();
            this.addChild(button);
            var ctl = new MenuButtonCtrl_1.default(button);
            ctl.setMenuConfig(config);
            this.menuButtons.push(ctl);
        }
        this.layoutButtom();
    };
    MenuBarRightTop.prototype.layoutButtom = function () {
        var x = 0;
        var y = 0;
        var xi = 0;
        var yi = 0;
        var ii = 0;
        for (var i = 0; i < this.menuButtons.length; i++) {
            var ctl = this.menuButtons[i];
            if (!ctl.button.visible)
                continue;
            xi = ii % this.itemHCount;
            yi = Math.floor(ii / this.itemHCount);
            x = this.width - (ctl.button.width + this.itemGapH) * xi - ctl.button.width;
            y = (this.itemHeight + this.itemGapV) * yi;
            ii++;
            ctl.button.x = x;
            ctl.button.y = y;
        }
    };
    MenuBarRightTop.prototype.onRefreshUnlock = function () {
        for (var _i = 0, _a = this.menuButtons; _i < _a.length; _i++) {
            var item = _a[_i];
            item.refreshUnlock(true);
        }
        this.layoutButtom();
    };
    return MenuBarRightTop;
}(MenuBarRightTopStruct_1.default));
exports.default = MenuBarRightTop;
},{"../../../Game":546,"../../../GameFrame/Menu/MenuBarType":568,"../../../GameModule/MenuWindows":609,"../../Customs/MenuButtonCtrl":176,"../../Generates/SystemModuleMenu/MenuBarRightTopStruct":518,"./MenuRButton":336}],336:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuRButtonStruct_1 = require("../../Generates/SystemModuleMenu/MenuRButtonStruct");
var MenuRButton = /** @class */ (function (_super) {
    __extends(MenuRButton, _super);
    function MenuRButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuRButton;
}(MenuRButtonStruct_1.default));
exports.default = MenuRButton;
},{"../../Generates/SystemModuleMenu/MenuRButtonStruct":519}],337:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuTimeStruct_1 = require("../../Generates/SystemModuleMenu/MenuTimeStruct");
var MenuTime = /** @class */ (function (_super) {
    __extends(MenuTime, _super);
    function MenuTime() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuTime;
}(MenuTimeStruct_1.default));
exports.default = MenuTime;
},{"../../Generates/SystemModuleMenu/MenuTimeStruct":521}],338:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuTimeButtonStruct_1 = require("../../Generates/SystemModuleMenu/MenuTimeButtonStruct");
var MenuTimeButton = /** @class */ (function (_super) {
    __extends(MenuTimeButton, _super);
    function MenuTimeButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuTimeButton;
}(MenuTimeButtonStruct_1.default));
exports.default = MenuTimeButton;
},{"../../Generates/SystemModuleMenu/MenuTimeButtonStruct":520}],339:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopHeadIconStruct_1 = require("../../Generates/SystemModuleMenu/TopHeadIconStruct");
var TopHeadIcon = /** @class */ (function (_super) {
    __extends(TopHeadIcon, _super);
    function TopHeadIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TopHeadIcon;
}(TopHeadIconStruct_1.default));
exports.default = TopHeadIcon;
},{"../../Generates/SystemModuleMenu/TopHeadIconStruct":524}],340:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopHeadIconMaskStruct_1 = require("../../Generates/SystemModuleMenu/TopHeadIconMaskStruct");
var TopHeadIconMask = /** @class */ (function (_super) {
    __extends(TopHeadIconMask, _super);
    function TopHeadIconMask() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TopHeadIconMask;
}(TopHeadIconMaskStruct_1.default));
exports.default = TopHeadIconMask;
},{"../../Generates/SystemModuleMenu/TopHeadIconMaskStruct":523}],341:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopHeadInfoStruct_1 = require("../../Generates/SystemModuleMenu/TopHeadInfoStruct");
var TopHeadInfo = /** @class */ (function (_super) {
    __extends(TopHeadInfo, _super);
    function TopHeadInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TopHeadInfo;
}(TopHeadInfoStruct_1.default));
exports.default = TopHeadInfo;
},{"../../Generates/SystemModuleMenu/TopHeadInfoStruct":525}],342:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopMainBarStruct_1 = require("../../Generates/SystemModuleMenu/TopMainBarStruct");
var Game_1 = require("../../../Game");
var MenuId_1 = require("../../../GameModule/MenuId");
var MenuValidateOpening_1 = require("../../../GameModule/MenuValidateOpening");
var MenuValidateUnlock_1 = require("../../../GameModule/MenuValidateUnlock");
var TEXT_1 = require("../../../Config/Keys/TEXT");
var TopMainBar = /** @class */ (function (_super) {
    __extends(TopMainBar, _super);
    function TopMainBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 窗口初始化完毕
    TopMainBar.prototype.onWindowInited = function () {
        this.m_headInfo.onClick(this, this.onClickHeadIcon);
        this.m_street.onClick(this, this.onClickStreet);
    };
    // 窗口显示
    TopMainBar.prototype.onWindowShow = function () {
        // 刷新数据
        this.refreshData();
        Game_1.default.net.gamerNotifyExpLevelS2C.on(this.refreshData, this);
    };
    // 窗口隐藏
    TopMainBar.prototype.onWindowHide = function () {
        Game_1.default.net.gamerNotifyExpLevelS2C.off(this.refreshData, this);
    };
    // 点击玩家头像	
    TopMainBar.prototype.onClickHeadIcon = function () {
        Game_1.default.menu.open(MenuId_1.MenuId.PlayerInfo);
    };
    // 点击排行
    TopMainBar.prototype.onClickRank = function () {
        Game_1.default.menu.open(MenuId_1.MenuId.Rank);
    };
    // 点击街区
    TopMainBar.prototype.onClickStreet = function () {
        Game_1.default.menu.open(MenuId_1.MenuId.Rank);
    };
    TopMainBar.prototype.OnRankSelfListResponse = function () {
        // this.m_server.m_serverName.text = Game.moduleModel.rank.ServerName;
        // this.m_server.m_serverRank.text = Games.TEXT.RankText.format(Game.moduleModel.rank.SelfServerRank);
        // this.m_street.m_streetId.text = Game.moduleModel.street.GetStreetNameTips(Game.moduleModel.street.streetCurrentId);
        // this.m_street.m_streetRank.text = Games.TEXT.RankText.format(Game.moduleModel.rank.SelfGroupRank);
        // this.m_street.m_blockIcon.url = Game.config.blockLevel.getBlockIconUrl(User.info.stall)
    };
    TopMainBar.prototype.onServerRename = function () {
        // 角色名称
        // this.m_street.m_roleName.text = User.info.name;
    };
    // 刷新数据
    TopMainBar.prototype.refreshData = function () {
        ///------------- 头像--------------
        var user = Game_1.default.user;
        // 头像
        this.m_headInfo.m_icon.icon = user.headIconUrl;
        // 经验条
        this.m_headInfo.m_expBar.max = user.upgradeFans;
        this.m_headInfo.m_expBar.value = user.exp;
        // VIP
        // this.m_headInfo.m_vip.text = `Star ${user.vipLevel}`;
        // Heart
        this.m_headInfo.m_level.text = format(TEXT_1.default.LVDot, user.level);
        ///------------- 街区--------------
        // 角色名称
        // this.m_street.m_roleName.text = user.name;
        // 排行数据刷新
        this.OnRankSelfListResponse();
        // this.refreshRankUnlock();
    };
    //验证是否解锁排行榜
    TopMainBar.prototype.refreshRankUnlock = function () {
        // 验证功能是否解锁
        if (MenuValidateOpening_1.default.getInstance().validate(MenuId_1.MenuId.Rank) && MenuValidateUnlock_1.default.getInstance().validate(MenuId_1.MenuId.Rank)) {
            this.m_street.visible = true;
        }
        else {
            this.m_street.visible = false;
        }
    };
    TopMainBar.prototype.onRefreshUnlock = function () {
        this.refreshRankUnlock();
    };
    TopMainBar.prototype.onRefreshRed = function () {
        // this.m_street.m_red.visible = Game.moduleModel.street.RedNum;
        // this.m_server.m_red.visible = Game.moduleModel.rank.RedNum;
        this.m_street.m_red.visible = false;
    };
    return TopMainBar;
}(TopMainBarStruct_1.default));
exports.default = TopMainBar;
},{"../../../Config/Keys/TEXT":125,"../../../Game":546,"../../../GameModule/MenuId":603,"../../../GameModule/MenuValidateOpening":607,"../../../GameModule/MenuValidateUnlock":608,"../../Generates/SystemModuleMenu/TopMainBarStruct":526}],343:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopMoneyItemStruct_1 = require("../../Generates/SystemModuleMenu/TopMoneyItemStruct");
var Game_1 = require("../../../Game");
var MenuId_1 = require("../../../GameModule/MenuId");
var TopMoneyItem = /** @class */ (function (_super) {
    __extends(TopMoneyItem, _super);
    function TopMoneyItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._itemId = -1;
        return _this;
    }
    Object.defineProperty(TopMoneyItem.prototype, "itemId", {
        get: function () {
            if (this._itemId == -1) {
                if (!isNullOrEmpty(this.data)) {
                    var info = JSON.parse(this.data);
                    this._itemId = info["itemId"];
                }
            }
            return this._itemId;
        },
        set: function (val) {
            this._itemId = val;
        },
        enumerable: true,
        configurable: true
    });
    // 窗口初始化完毕
    TopMoneyItem.prototype.onWindowInited = function () {
        this.m_addButton.onClick(this, this.onClickAdd);
    };
    // 窗口显示
    TopMoneyItem.prototype.onWindowShow = function () {
        // 刷新数据
        this.refreshData();
    };
    TopMoneyItem.prototype.onClickAdd = function () {
        Game_1.default.menu.open(MenuId_1.MenuId.Recharge);
    };
    // 刷新数据
    TopMoneyItem.prototype.refreshData = function () {
        if (this.itemId != -1)
            this.m_title.text = Game_1.default.moduleModel.item.getItemNumTxt(this.itemId);
    };
    return TopMoneyItem;
}(TopMoneyItemStruct_1.default));
exports.default = TopMoneyItem;
},{"../../../Game":546,"../../../GameModule/MenuId":603,"../../Generates/SystemModuleMenu/TopMoneyItemStruct":527}],344:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopMoneyMainBarStruct_1 = require("../../Generates/SystemModuleMenu/TopMoneyMainBarStruct");
var TopMoneyMainBar = /** @class */ (function (_super) {
    __extends(TopMoneyMainBar, _super);
    function TopMoneyMainBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TopMoneyMainBar;
}(TopMoneyMainBarStruct_1.default));
exports.default = TopMoneyMainBar;
},{"../../Generates/SystemModuleMenu/TopMoneyMainBarStruct":528}],345:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopStreetStruct_1 = require("../../Generates/SystemModuleMenu/TopStreetStruct");
var TopStreet = /** @class */ (function (_super) {
    __extends(TopStreet, _super);
    function TopStreet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TopStreet;
}(TopStreetStruct_1.default));
exports.default = TopStreet;
},{"../../Generates/SystemModuleMenu/TopStreetStruct":529}],346:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Game_1 = require("../Game");
var FGLoader = /** @class */ (function (_super) {
    __extends(FGLoader, _super);
    function FGLoader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FGLoader, "freeList", {
        get: function () {
            if (FGLoader._freeList.length > 0) {
                FGLoader._freeList.length = 0;
            }
            var dict = FGLoader.freeDictForNum.__getDict();
            for (var url in dict) {
                // console.log(FGLoader.freeDictForNum.getValue(url) + " " + url);
                if (FGLoader.freeDictForNum.getValue(url) <= 0) {
                    FGLoader._freeList.push(url);
                }
            }
            return FGLoader._freeList;
        },
        enumerable: true,
        configurable: true
    });
    FGLoader.setUse = function (url) {
        var num = FGLoader.freeDictForNum.hasKey(url) ? FGLoader.freeDictForNum.getValue(url) + 1 : 1;
        FGLoader.freeDictForNum.add(url, num);
    };
    FGLoader.setFree = function (url) {
        if (url.indexOf("/MenuIcon/") != -1)
            return;
        FGLoader.freeDictForTime.add(url, Game_1.default.time.localTime);
        var num = FGLoader.freeDictForNum.hasKey(url) ? FGLoader.freeDictForNum.getValue(url) - 1 : 0;
        if (num < 0)
            num = 0;
        FGLoader.freeDictForNum.add(url, num);
    };
    FGLoader.removeFree = function (url) {
        FGLoader.freeDictForTime.remove(url);
        FGLoader.freeDictForNum.remove(url);
    };
    /**
     * 清理所有没有使用的
     */
    FGLoader.clearAllFree = function (list) {
        if (!list)
            list = FGLoader.freeList;
        while (list.length > 0) {
            var url = list.pop();
            // console.log("--ClearRes:" + url);
            FGLoader.removeFree(url);
            Laya.loader.clearRes(url);
        }
    };
    /**
     * 清理长时间没有使用的
     */
    FGLoader.clearFreeLong = function () {
        if (FGLoader.freeDictForNum.count <= Game_1.default.deviceSetting.fguiLoaderCacheNum)
            return;
        FGLoader._freeLongList.length = 0;
        var dict = FGLoader.freeDictForNum.__getDict();
        for (var url in dict) {
            // console.log(FGLoader.freeDictForNum.getValue(url) + " " + url);
            if (FGLoader.freeDictForNum.getValue(url) <= 0) {
                var time = Game_1.default.time.localTime - FGLoader.freeDictForTime.getValueOrDefault(url, 0);
                if (time > Game_1.default.deviceSetting.fguiLoaderCacheTime)
                    FGLoader._freeLongList.push(url);
            }
        }
        FGLoader.clearAllFree(FGLoader._freeLongList);
    };
    FGLoader.prototype.loadContent = function () {
        _super.prototype.loadContent.call(this);
    };
    FGLoader.prototype.getPackagenameByUrl = function (url) {
        return url.replace("ui://", "").split("/")[0];
    };
    FGLoader.prototype.loadFromPackage = function (itemURL) {
        // console.log("loadFromPackage:" + itemURL);
        var packageItem = fairygui.UIPackage.getItemByURL(itemURL);
        if (packageItem) {
            _super.prototype.loadFromPackage.call(this, itemURL);
        }
        else {
            var packagename = this.getPackagenameByUrl(itemURL);
            var config = Game_1.default.spriteRes.getconfig(packagename);
            if (!config) {
                config = Game_1.default.guiRes.getconfig(packagename);
            }
            if (config) {
                Game_1.default.asset.loadFgui(config, this, this.onLoadPackage);
            }
        }
    };
    FGLoader.prototype.onLoadPackage = function () {
        // console.log("onLoadPackage:" + this.url);
        _super.prototype.loadFromPackage.call(this, this.url);
    };
    FGLoader.prototype.loadExternal = function () {
        /*
        开始外部载入，地址在url属性
        载入完成后调用OnExternalLoadSuccess
        载入失败调用OnExternalLoadFailed
        注意：如果是外部载入，在载入结束后，调用OnExternalLoadSuccess或OnExternalLoadFailed前，
        比较严谨的做法是先检查url属性是否已经和这个载入的内容不相符。
        如果不相符，表示loader已经被修改了。
        这种情况下应该放弃调用OnExternalLoadSuccess或OnExternalLoadFailed。
        */
        // console.log("loadExternal:" + this.url);
        FGLoader.setUse(this.url);
        _super.prototype.loadExternal.call(this);
    };
    //释放外部载入的资源
    FGLoader.prototype.freeExternal = function (texture) {
        // console.log("freeExternal:" + this.url + "  " + texture.url);
        _super.prototype.freeExternal.call(this, texture);
        if (!isNullOrEmpty(texture.url)) {
            FGLoader.setFree(texture.url);
            texture.url = "";
        }
        // Laya.loader.clearRes(texture.url);
    };
    // 载入完成后调用
    FGLoader.prototype.onExternalLoadSuccess = function (texture) {
        // console.log("onExternalLoadSuccess:" + this.url);
        _super.prototype.onExternalLoadSuccess.call(this, texture);
    };
    // 载入失败调用
    FGLoader.prototype.onExternalLoadFailed = function () {
        _super.prototype.onExternalLoadFailed.call(this);
    };
    // 最后一次没有设置引用的时间
    FGLoader.freeDictForTime = new Dictionary_1.default();
    // 引用次数
    FGLoader.freeDictForNum = new Dictionary_1.default();
    FGLoader._freeList = [];
    FGLoader._freeLongList = [];
    return FGLoader;
}(fairygui.GLoader));
exports.default = FGLoader;
},{"../Game":546,"../Libs/Helpers/Dictionary":626}],347:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FxMovieClipKey = /** @class */ (function () {
    function FxMovieClipKey() {
    }
    /** 屏幕点击 */
    FxMovieClipKey.ClickMovieClip = "ClickMovieClip1";
    /** 蝴蝶飞舞 */
    FxMovieClipKey.ButterflyMovieClip = "ButterflyMovieClip";
    return FxMovieClipKey;
}());
exports.default = FxMovieClipKey;
},{}],348:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorButtonStruct = /** @class */ (function (_super) {
    __extends(ActorButtonStruct, _super);
    function ActorButtonStruct() {
        return _super.call(this) || this;
    }
    ActorButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ActorButton"));
    };
    ActorButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
    };
    ActorButtonStruct.URL = "ui://jaoapdicwprdvu";
    ActorButtonStruct.DependPackages = ["CommonBase"];
    return ActorButtonStruct;
}(fairygui.GButton));
exports.default = ActorButtonStruct;
},{}],349:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorListTabBarStruct = /** @class */ (function (_super) {
    __extends(ActorListTabBarStruct, _super);
    function ActorListTabBarStruct() {
        return _super.call(this) || this;
    }
    ActorListTabBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ActorListTabBar"));
    };
    ActorListTabBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tab = this.getController("tab");
    };
    ActorListTabBarStruct.URL = "ui://jaoapdici3pqvr";
    ActorListTabBarStruct.DependPackages = ["CommonBase"];
    return ActorListTabBarStruct;
}(fairygui.GComponent));
exports.default = ActorListTabBarStruct;
},{}],350:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorPropertyTabBarStruct = /** @class */ (function (_super) {
    __extends(ActorPropertyTabBarStruct, _super);
    function ActorPropertyTabBarStruct() {
        return _super.call(this) || this;
    }
    ActorPropertyTabBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ActorPropertyTabBar"));
    };
    ActorPropertyTabBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tab = this.getController("tab");
    };
    ActorPropertyTabBarStruct.URL = "ui://jaoapdicf65hvw";
    ActorPropertyTabBarStruct.DependPackages = ["CommonBase"];
    return ActorPropertyTabBarStruct;
}(fairygui.GComponent));
exports.default = ActorPropertyTabBarStruct;
},{}],351:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorSelectTabBarStruct = /** @class */ (function (_super) {
    __extends(ActorSelectTabBarStruct, _super);
    function ActorSelectTabBarStruct() {
        return _super.call(this) || this;
    }
    ActorSelectTabBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ActorSelectTabBar"));
    };
    ActorSelectTabBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tab = this.getController("tab");
    };
    ActorSelectTabBarStruct.URL = "ui://jaoapdiclcu2vk";
    ActorSelectTabBarStruct.DependPackages = ["CommonBase"];
    return ActorSelectTabBarStruct;
}(fairygui.GComponent));
exports.default = ActorSelectTabBarStruct;
},{}],352:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AddButton2Struct = /** @class */ (function (_super) {
    __extends(AddButton2Struct, _super);
    function AddButton2Struct() {
        return _super.call(this) || this;
    }
    AddButton2Struct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "AddButton2"));
    };
    AddButton2Struct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    AddButton2Struct.URL = "ui://jaoapdicl44gwb";
    AddButton2Struct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return AddButton2Struct;
}(fairygui.GButton));
exports.default = AddButton2Struct;
},{}],353:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AddButtonStruct = /** @class */ (function (_super) {
    __extends(AddButtonStruct, _super);
    function AddButtonStruct() {
        return _super.call(this) || this;
    }
    AddButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "AddButton"));
    };
    AddButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    AddButtonStruct.URL = "ui://jaoapdicszhv1h";
    AddButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return AddButtonStruct;
}(fairygui.GButton));
exports.default = AddButtonStruct;
},{}],354:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagTabBarStruct = /** @class */ (function (_super) {
    __extends(BagTabBarStruct, _super);
    function BagTabBarStruct() {
        return _super.call(this) || this;
    }
    BagTabBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BagTabBar"));
    };
    BagTabBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_select = this.getController("select");
    };
    BagTabBarStruct.URL = "ui://jaoapdicncg9k";
    BagTabBarStruct.DependPackages = ["CommonBase"];
    return BagTabBarStruct;
}(fairygui.GComponent));
exports.default = BagTabBarStruct;
},{}],355:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseFullWindowUIStruct = /** @class */ (function (_super) {
    __extends(BaseFullWindowUIStruct, _super);
    function BaseFullWindowUIStruct() {
        return _super.call(this) || this;
    }
    BaseFullWindowUIStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BaseFullWindowUI"));
    };
    BaseFullWindowUIStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChild("icon"));
        this.m_closeBtn = (this.getChild("closeBtn"));
    };
    BaseFullWindowUIStruct.URL = "ui://jaoapdiceftvc";
    BaseFullWindowUIStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BaseFullWindowUIStruct;
}(fairygui.GLabel));
exports.default = BaseFullWindowUIStruct;
},{}],356:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseProgressBarStruct = /** @class */ (function (_super) {
    __extends(BaseProgressBarStruct, _super);
    function BaseProgressBarStruct() {
        return _super.call(this) || this;
    }
    BaseProgressBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BaseProgressBar"));
    };
    BaseProgressBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar = (this.getChild("bar"));
        this.m_title = (this.getChild("title"));
        this.m_level = (this.getChild("level"));
        this.m_bar1 = (this.getChild("bar1"));
        this.m_bar2 = (this.getChild("bar2"));
        this.m_level2 = (this.getChild("level2"));
    };
    BaseProgressBarStruct.URL = "ui://jaoapdicncg9o";
    BaseProgressBarStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BaseProgressBarStruct;
}(fairygui.GProgressBar));
exports.default = BaseProgressBarStruct;
},{}],357:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BigTabButtonStruct = /** @class */ (function (_super) {
    __extends(BigTabButtonStruct, _super);
    function BigTabButtonStruct() {
        return _super.call(this) || this;
    }
    BigTabButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BigTabButton"));
    };
    BigTabButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    BigTabButtonStruct.URL = "ui://jaoapdicpz3xvj";
    BigTabButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BigTabButtonStruct;
}(fairygui.GButton));
exports.default = BigTabButtonStruct;
},{}],358:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlueButtonSmallStruct = /** @class */ (function (_super) {
    __extends(BlueButtonSmallStruct, _super);
    function BlueButtonSmallStruct() {
        return _super.call(this) || this;
    }
    BlueButtonSmallStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BlueButtonSmall"));
    };
    BlueButtonSmallStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    BlueButtonSmallStruct.URL = "ui://jaoapdickzdyt";
    BlueButtonSmallStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BlueButtonSmallStruct;
}(fairygui.GButton));
exports.default = BlueButtonSmallStruct;
},{}],359:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlueButtonStruct = /** @class */ (function (_super) {
    __extends(BlueButtonStruct, _super);
    function BlueButtonStruct() {
        return _super.call(this) || this;
    }
    BlueButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BlueButton"));
    };
    BlueButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    BlueButtonStruct.URL = "ui://jaoapdict3as2";
    BlueButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BlueButtonStruct;
}(fairygui.GButton));
exports.default = BlueButtonStruct;
},{}],360:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlueScaleButtonStruct = /** @class */ (function (_super) {
    __extends(BlueScaleButtonStruct, _super);
    function BlueScaleButtonStruct() {
        return _super.call(this) || this;
    }
    BlueScaleButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BlueScaleButton"));
    };
    BlueScaleButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    BlueScaleButtonStruct.URL = "ui://jaoapdiciq08vy";
    BlueScaleButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BlueScaleButtonStruct;
}(fairygui.GButton));
exports.default = BlueScaleButtonStruct;
},{}],361:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BubbleTalkSmallStruct = /** @class */ (function (_super) {
    __extends(BubbleTalkSmallStruct, _super);
    function BubbleTalkSmallStruct() {
        return _super.call(this) || this;
    }
    BubbleTalkSmallStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BubbleTalkSmall"));
    };
    BubbleTalkSmallStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bg = (this.getChild("bg"));
        this.m_title = (this.getChild("title"));
    };
    BubbleTalkSmallStruct.URL = "ui://jaoapdicp9erw6";
    BubbleTalkSmallStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BubbleTalkSmallStruct;
}(fairygui.GLabel));
exports.default = BubbleTalkSmallStruct;
},{}],362:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingPageTabBarStruct = /** @class */ (function (_super) {
    __extends(BuildingPageTabBarStruct, _super);
    function BuildingPageTabBarStruct() {
        return _super.call(this) || this;
    }
    BuildingPageTabBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BuildingPageTabBar"));
    };
    BuildingPageTabBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tab = this.getController("tab");
    };
    BuildingPageTabBarStruct.URL = "ui://jaoapdicq74ivk";
    BuildingPageTabBarStruct.DependPackages = ["CommonBase"];
    return BuildingPageTabBarStruct;
}(fairygui.GComponent));
exports.default = BuildingPageTabBarStruct;
},{}],363:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingProgressBar1Struct = /** @class */ (function (_super) {
    __extends(BuildingProgressBar1Struct, _super);
    function BuildingProgressBar1Struct() {
        return _super.call(this) || this;
    }
    BuildingProgressBar1Struct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BuildingProgressBar1"));
    };
    BuildingProgressBar1Struct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_Fill = this.getController("Fill");
        this.m_bar = (this.getChild("bar"));
    };
    BuildingProgressBar1Struct.URL = "ui://jaoapdict8drwe";
    BuildingProgressBar1Struct.DependPackages = ["CommonBase", "_ResImageUI"];
    return BuildingProgressBar1Struct;
}(fairygui.GProgressBar));
exports.default = BuildingProgressBar1Struct;
},{}],364:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingProgressBarStruct = /** @class */ (function (_super) {
    __extends(BuildingProgressBarStruct, _super);
    function BuildingProgressBarStruct() {
        return _super.call(this) || this;
    }
    BuildingProgressBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "BuildingProgressBar"));
    };
    BuildingProgressBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar = (this.getChild("bar"));
    };
    BuildingProgressBarStruct.URL = "ui://jaoapdicm5zox4";
    BuildingProgressBarStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return BuildingProgressBarStruct;
}(fairygui.GProgressBar));
exports.default = BuildingProgressBarStruct;
},{}],365:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CellphoneButtonStruct = /** @class */ (function (_super) {
    __extends(CellphoneButtonStruct, _super);
    function CellphoneButtonStruct() {
        return _super.call(this) || this;
    }
    CellphoneButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "CellphoneButton"));
    };
    CellphoneButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    CellphoneButtonStruct.URL = "ui://jaoapdict5vjvd";
    CellphoneButtonStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return CellphoneButtonStruct;
}(fairygui.GButton));
exports.default = CellphoneButtonStruct;
},{}],366:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartBarItemStruct = /** @class */ (function (_super) {
    __extends(ChartBarItemStruct, _super);
    function ChartBarItemStruct() {
        return _super.call(this) || this;
    }
    ChartBarItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ChartBarItem"));
    };
    ChartBarItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    ChartBarItemStruct.URL = "ui://jaoapdicoa5kvq";
    ChartBarItemStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return ChartBarItemStruct;
}(fairygui.GComponent));
exports.default = ChartBarItemStruct;
},{}],367:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartBarViewStruct = /** @class */ (function (_super) {
    __extends(ChartBarViewStruct, _super);
    function ChartBarViewStruct() {
        return _super.call(this) || this;
    }
    ChartBarViewStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ChartBarView"));
    };
    ChartBarViewStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    ChartBarViewStruct.URL = "ui://jaoapdicoa5kvr";
    ChartBarViewStruct.DependPackages = ["CommonBase"];
    return ChartBarViewStruct;
}(fairygui.GComponent));
exports.default = ChartBarViewStruct;
},{}],368:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartPolygonPropertyTextOnlyNameStruct = /** @class */ (function (_super) {
    __extends(ChartPolygonPropertyTextOnlyNameStruct, _super);
    function ChartPolygonPropertyTextOnlyNameStruct() {
        return _super.call(this) || this;
    }
    ChartPolygonPropertyTextOnlyNameStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ChartPolygonPropertyTextOnlyName"));
    };
    ChartPolygonPropertyTextOnlyNameStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_name = (this.getChild("name"));
    };
    ChartPolygonPropertyTextOnlyNameStruct.URL = "ui://jaoapdicmfspx6";
    ChartPolygonPropertyTextOnlyNameStruct.DependPackages = ["CommonBase"];
    return ChartPolygonPropertyTextOnlyNameStruct;
}(fairygui.GComponent));
exports.default = ChartPolygonPropertyTextOnlyNameStruct;
},{}],369:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartPolygonPropertyTextStruct = /** @class */ (function (_super) {
    __extends(ChartPolygonPropertyTextStruct, _super);
    function ChartPolygonPropertyTextStruct() {
        return _super.call(this) || this;
    }
    ChartPolygonPropertyTextStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ChartPolygonPropertyText"));
    };
    ChartPolygonPropertyTextStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_name = (this.getChild("name"));
        this.m_value = (this.getChild("value"));
    };
    ChartPolygonPropertyTextStruct.URL = "ui://jaoapdicl291vo";
    ChartPolygonPropertyTextStruct.DependPackages = ["CommonBase"];
    return ChartPolygonPropertyTextStruct;
}(fairygui.GComponent));
exports.default = ChartPolygonPropertyTextStruct;
},{}],370:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartPolygonPropertyViewStruct = /** @class */ (function (_super) {
    __extends(ChartPolygonPropertyViewStruct, _super);
    function ChartPolygonPropertyViewStruct() {
        return _super.call(this) || this;
    }
    ChartPolygonPropertyViewStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ChartPolygonPropertyView"));
    };
    ChartPolygonPropertyViewStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tmp = (this.getChild("tmp"));
    };
    ChartPolygonPropertyViewStruct.URL = "ui://jaoapdicl291vj";
    ChartPolygonPropertyViewStruct.DependPackages = ["CommonBase", "__ResImageTmp"];
    return ChartPolygonPropertyViewStruct;
}(fairygui.GComponent));
exports.default = ChartPolygonPropertyViewStruct;
},{}],371:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ChartProgressBarStruct = /** @class */ (function (_super) {
    __extends(ChartProgressBarStruct, _super);
    function ChartProgressBarStruct() {
        return _super.call(this) || this;
    }
    ChartProgressBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ChartProgressBar"));
    };
    ChartProgressBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar_v = (this.getChild("bar_v"));
        this.m_title = (this.getChild("title"));
    };
    ChartProgressBarStruct.URL = "ui://jaoapdicvjljx7";
    ChartProgressBarStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return ChartProgressBarStruct;
}(fairygui.GProgressBar));
exports.default = ChartProgressBarStruct;
},{}],372:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CheckBoxStruct = /** @class */ (function (_super) {
    __extends(CheckBoxStruct, _super);
    function CheckBoxStruct() {
        return _super.call(this) || this;
    }
    CheckBoxStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "CheckBox"));
    };
    CheckBoxStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    CheckBoxStruct.URL = "ui://jaoapdict3as9";
    CheckBoxStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return CheckBoxStruct;
}(fairygui.GButton));
exports.default = CheckBoxStruct;
},{}],373:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CloseButton3Struct = /** @class */ (function (_super) {
    __extends(CloseButton3Struct, _super);
    function CloseButton3Struct() {
        return _super.call(this) || this;
    }
    CloseButton3Struct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "CloseButton3"));
    };
    CloseButton3Struct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    CloseButton3Struct.URL = "ui://jaoapdicm5zowr";
    CloseButton3Struct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return CloseButton3Struct;
}(fairygui.GButton));
exports.default = CloseButton3Struct;
},{}],374:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CloseButtonStruct = /** @class */ (function (_super) {
    __extends(CloseButtonStruct, _super);
    function CloseButtonStruct() {
        return _super.call(this) || this;
    }
    CloseButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "CloseButton"));
    };
    CloseButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    CloseButtonStruct.URL = "ui://jaoapdice12kwe";
    CloseButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return CloseButtonStruct;
}(fairygui.GButton));
exports.default = CloseButtonStruct;
},{}],375:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CommonBadgeStruct = /** @class */ (function (_super) {
    __extends(CommonBadgeStruct, _super);
    function CommonBadgeStruct() {
        return _super.call(this) || this;
    }
    CommonBadgeStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "CommonBadge"));
    };
    CommonBadgeStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    CommonBadgeStruct.URL = "ui://jaoapdicncg9i";
    CommonBadgeStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return CommonBadgeStruct;
}(fairygui.GComponent));
exports.default = CommonBadgeStruct;
},{}],376:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowButton_1 = require("../../Extends/CommonBase/YellowButton");
var BlueButton_1 = require("../../Extends/CommonBase/BlueButton");
var CheckBox_1 = require("../../Extends/CommonBase/CheckBox");
var BaseFullWindowUI_1 = require("../../Extends/CommonBase/BaseFullWindowUI");
var CommonBadge_1 = require("../../Extends/CommonBase/CommonBadge");
var NumberBadge_1 = require("../../Extends/CommonBase/NumberBadge");
var BagTabBar_1 = require("../../Extends/CommonBase/BagTabBar");
var BaseProgressBar_1 = require("../../Extends/CommonBase/BaseProgressBar");
var Slider_grip_1 = require("../../Extends/CommonBase/Slider_grip");
var Slider_1 = require("../../Extends/CommonBase/Slider");
var YellowBigButton_1 = require("../../Extends/CommonBase/YellowBigButton");
var YellowSmallButton_1 = require("../../Extends/CommonBase/YellowSmallButton");
var BlueButtonSmall_1 = require("../../Extends/CommonBase/BlueButtonSmall");
var YellowButtonSmall_1 = require("../../Extends/CommonBase/YellowButtonSmall");
var YellowProgressBar_1 = require("../../Extends/CommonBase/YellowProgressBar");
var AddButton_1 = require("../../Extends/CommonBase/AddButton");
var Yellow2Button_1 = require("../../Extends/CommonBase/Yellow2Button");
var EmptyButton_1 = require("../../Extends/CommonBase/EmptyButton");
var ProgressBarBlue_1 = require("../../Extends/CommonBase/ProgressBarBlue");
var RenameInput_1 = require("../../Extends/CommonBase/RenameInput");
var IconButton_1 = require("../../Extends/CommonBase/IconButton");
var CellphoneButton_1 = require("../../Extends/CommonBase/CellphoneButton");
var ActorSelectTabBar_1 = require("../../Extends/CommonBase/ActorSelectTabBar");
var ChartBarItem_1 = require("../../Extends/CommonBase/ChartBarItem");
var ChartBarView_1 = require("../../Extends/CommonBase/ChartBarView");
var StudioNextButton_1 = require("../../Extends/CommonBase/StudioNextButton");
var StudioGetRewardButton_1 = require("../../Extends/CommonBase/StudioGetRewardButton");
var BigTabButton_1 = require("../../Extends/CommonBase/BigTabButton");
var BuildingPageTabBar_1 = require("../../Extends/CommonBase/BuildingPageTabBar");
var SmallCommonButton_1 = require("../../Extends/CommonBase/SmallCommonButton");
var SmallTabButton_1 = require("../../Extends/CommonBase/SmallTabButton");
var ActorListTabBar_1 = require("../../Extends/CommonBase/ActorListTabBar");
var ActorButton_1 = require("../../Extends/CommonBase/ActorButton");
var VerticalButton_1 = require("../../Extends/CommonBase/VerticalButton");
var ActorPropertyTabBar_1 = require("../../Extends/CommonBase/ActorPropertyTabBar");
var ChartPolygonPropertyView_1 = require("../../Extends/CommonBase/ChartPolygonPropertyView");
var ChartPolygonPropertyText_1 = require("../../Extends/CommonBase/ChartPolygonPropertyText");
var StoryListTabBar_1 = require("../../Extends/CommonBase/StoryListTabBar");
var BlueScaleButton_1 = require("../../Extends/CommonBase/BlueScaleButton");
var WriteButton_1 = require("../../Extends/CommonBase/WriteButton");
var ShadowMask_1 = require("../../Extends/CommonBase/ShadowMask");
var RenameInput2_1 = require("../../Extends/CommonBase/RenameInput2");
var StudioRenameButton_1 = require("../../Extends/CommonBase/StudioRenameButton");
var PenButon_1 = require("../../Extends/CommonBase/PenButon");
var BubbleTalkSmall_1 = require("../../Extends/CommonBase/BubbleTalkSmall");
var ShareButton_1 = require("../../Extends/CommonBase/ShareButton");
var ShareButtonBar_1 = require("../../Extends/CommonBase/ShareButtonBar");
var InformationProgressBar_1 = require("../../Extends/CommonBase/InformationProgressBar");
var InformationTabBar_1 = require("../../Extends/CommonBase/InformationTabBar");
var PinkTabButton_1 = require("../../Extends/CommonBase/PinkTabButton");
var AddButton2_1 = require("../../Extends/CommonBase/AddButton2");
var RemoveButton_1 = require("../../Extends/CommonBase/RemoveButton");
var ExitViewButton_1 = require("../../Extends/CommonBase/ExitViewButton");
var BuildingProgressBar1_1 = require("../../Extends/CommonBase/BuildingProgressBar1");
var CloseButton_1 = require("../../Extends/CommonBase/CloseButton");
var ViewCheckButton_1 = require("../../Extends/CommonBase/ViewCheckButton");
var CloseButton3_1 = require("../../Extends/CommonBase/CloseButton3");
var BuildingProgressBar_1 = require("../../Extends/CommonBase/BuildingProgressBar");
var ChartPolygonPropertyTextOnlyName_1 = require("../../Extends/CommonBase/ChartPolygonPropertyTextOnlyName");
var ChartProgressBar_1 = require("../../Extends/CommonBase/ChartProgressBar");
var StudioAnimatedButton_1 = require("../../Extends/CommonBase/StudioAnimatedButton");
var StudioAnimatedButton_ani_1 = require("../../Extends/CommonBase/StudioAnimatedButton_ani");
var MyInfoButton_1 = require("../../Extends/CommonBase/MyInfoButton");
var InformationScrollBar_grip_1 = require("../../Extends/CommonBase/InformationScrollBar_grip");
var InformationScrollBar_1 = require("../../Extends/CommonBase/InformationScrollBar");
var MenuButton_1 = require("../../Extends/CommonBase/MenuButton");
var PinkButton_1 = require("../../Extends/CommonBase/PinkButton");
var CommonBaseBinder = /** @class */ (function () {
    function CommonBaseBinder() {
    }
    CommonBaseBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(YellowButton_1.default.URL, YellowButton_1.default);
        bind(BlueButton_1.default.URL, BlueButton_1.default);
        bind(CheckBox_1.default.URL, CheckBox_1.default);
        bind(BaseFullWindowUI_1.default.URL, BaseFullWindowUI_1.default);
        bind(CommonBadge_1.default.URL, CommonBadge_1.default);
        bind(NumberBadge_1.default.URL, NumberBadge_1.default);
        bind(BagTabBar_1.default.URL, BagTabBar_1.default);
        bind(BaseProgressBar_1.default.URL, BaseProgressBar_1.default);
        bind(Slider_grip_1.default.URL, Slider_grip_1.default);
        bind(Slider_1.default.URL, Slider_1.default);
        bind(YellowBigButton_1.default.URL, YellowBigButton_1.default);
        bind(YellowSmallButton_1.default.URL, YellowSmallButton_1.default);
        bind(BlueButtonSmall_1.default.URL, BlueButtonSmall_1.default);
        bind(YellowButtonSmall_1.default.URL, YellowButtonSmall_1.default);
        bind(YellowProgressBar_1.default.URL, YellowProgressBar_1.default);
        bind(AddButton_1.default.URL, AddButton_1.default);
        bind(Yellow2Button_1.default.URL, Yellow2Button_1.default);
        bind(EmptyButton_1.default.URL, EmptyButton_1.default);
        bind(ProgressBarBlue_1.default.URL, ProgressBarBlue_1.default);
        bind(RenameInput_1.default.URL, RenameInput_1.default);
        bind(IconButton_1.default.URL, IconButton_1.default);
        bind(CellphoneButton_1.default.URL, CellphoneButton_1.default);
        bind(ActorSelectTabBar_1.default.URL, ActorSelectTabBar_1.default);
        bind(ChartBarItem_1.default.URL, ChartBarItem_1.default);
        bind(ChartBarView_1.default.URL, ChartBarView_1.default);
        bind(StudioNextButton_1.default.URL, StudioNextButton_1.default);
        bind(StudioGetRewardButton_1.default.URL, StudioGetRewardButton_1.default);
        bind(BigTabButton_1.default.URL, BigTabButton_1.default);
        bind(BuildingPageTabBar_1.default.URL, BuildingPageTabBar_1.default);
        bind(SmallCommonButton_1.default.URL, SmallCommonButton_1.default);
        bind(SmallTabButton_1.default.URL, SmallTabButton_1.default);
        bind(ActorListTabBar_1.default.URL, ActorListTabBar_1.default);
        bind(ActorButton_1.default.URL, ActorButton_1.default);
        bind(VerticalButton_1.default.URL, VerticalButton_1.default);
        bind(ActorPropertyTabBar_1.default.URL, ActorPropertyTabBar_1.default);
        bind(ChartPolygonPropertyView_1.default.URL, ChartPolygonPropertyView_1.default);
        bind(ChartPolygonPropertyText_1.default.URL, ChartPolygonPropertyText_1.default);
        bind(StoryListTabBar_1.default.URL, StoryListTabBar_1.default);
        bind(BlueScaleButton_1.default.URL, BlueScaleButton_1.default);
        bind(WriteButton_1.default.URL, WriteButton_1.default);
        bind(ShadowMask_1.default.URL, ShadowMask_1.default);
        bind(RenameInput2_1.default.URL, RenameInput2_1.default);
        bind(StudioRenameButton_1.default.URL, StudioRenameButton_1.default);
        bind(PenButon_1.default.URL, PenButon_1.default);
        bind(BubbleTalkSmall_1.default.URL, BubbleTalkSmall_1.default);
        bind(ShareButton_1.default.URL, ShareButton_1.default);
        bind(ShareButtonBar_1.default.URL, ShareButtonBar_1.default);
        bind(InformationProgressBar_1.default.URL, InformationProgressBar_1.default);
        bind(InformationTabBar_1.default.URL, InformationTabBar_1.default);
        bind(PinkTabButton_1.default.URL, PinkTabButton_1.default);
        bind(AddButton2_1.default.URL, AddButton2_1.default);
        bind(RemoveButton_1.default.URL, RemoveButton_1.default);
        bind(ExitViewButton_1.default.URL, ExitViewButton_1.default);
        bind(BuildingProgressBar1_1.default.URL, BuildingProgressBar1_1.default);
        bind(CloseButton_1.default.URL, CloseButton_1.default);
        bind(ViewCheckButton_1.default.URL, ViewCheckButton_1.default);
        bind(CloseButton3_1.default.URL, CloseButton3_1.default);
        bind(BuildingProgressBar_1.default.URL, BuildingProgressBar_1.default);
        bind(ChartPolygonPropertyTextOnlyName_1.default.URL, ChartPolygonPropertyTextOnlyName_1.default);
        bind(ChartProgressBar_1.default.URL, ChartProgressBar_1.default);
        bind(StudioAnimatedButton_1.default.URL, StudioAnimatedButton_1.default);
        bind(StudioAnimatedButton_ani_1.default.URL, StudioAnimatedButton_ani_1.default);
        bind(MyInfoButton_1.default.URL, MyInfoButton_1.default);
        bind(InformationScrollBar_grip_1.default.URL, InformationScrollBar_grip_1.default);
        bind(InformationScrollBar_1.default.URL, InformationScrollBar_1.default);
        bind(MenuButton_1.default.URL, MenuButton_1.default);
        bind(PinkButton_1.default.URL, PinkButton_1.default);
    };
    return CommonBaseBinder;
}());
exports.default = CommonBaseBinder;
},{"../../Extends/CommonBase/ActorButton":179,"../../Extends/CommonBase/ActorListTabBar":180,"../../Extends/CommonBase/ActorPropertyTabBar":181,"../../Extends/CommonBase/ActorSelectTabBar":182,"../../Extends/CommonBase/AddButton":183,"../../Extends/CommonBase/AddButton2":184,"../../Extends/CommonBase/BagTabBar":185,"../../Extends/CommonBase/BaseFullWindowUI":186,"../../Extends/CommonBase/BaseProgressBar":187,"../../Extends/CommonBase/BigTabButton":188,"../../Extends/CommonBase/BlueButton":189,"../../Extends/CommonBase/BlueButtonSmall":190,"../../Extends/CommonBase/BlueScaleButton":191,"../../Extends/CommonBase/BubbleTalkSmall":192,"../../Extends/CommonBase/BuildingPageTabBar":193,"../../Extends/CommonBase/BuildingProgressBar":194,"../../Extends/CommonBase/BuildingProgressBar1":195,"../../Extends/CommonBase/CellphoneButton":196,"../../Extends/CommonBase/ChartBarItem":197,"../../Extends/CommonBase/ChartBarView":198,"../../Extends/CommonBase/ChartPolygonPropertyText":199,"../../Extends/CommonBase/ChartPolygonPropertyTextOnlyName":200,"../../Extends/CommonBase/ChartPolygonPropertyView":201,"../../Extends/CommonBase/ChartProgressBar":202,"../../Extends/CommonBase/CheckBox":203,"../../Extends/CommonBase/CloseButton":204,"../../Extends/CommonBase/CloseButton3":205,"../../Extends/CommonBase/CommonBadge":206,"../../Extends/CommonBase/EmptyButton":207,"../../Extends/CommonBase/ExitViewButton":208,"../../Extends/CommonBase/IconButton":209,"../../Extends/CommonBase/InformationProgressBar":210,"../../Extends/CommonBase/InformationScrollBar":211,"../../Extends/CommonBase/InformationScrollBar_grip":212,"../../Extends/CommonBase/InformationTabBar":213,"../../Extends/CommonBase/MenuButton":214,"../../Extends/CommonBase/MyInfoButton":215,"../../Extends/CommonBase/NumberBadge":216,"../../Extends/CommonBase/PenButon":217,"../../Extends/CommonBase/PinkButton":218,"../../Extends/CommonBase/PinkTabButton":219,"../../Extends/CommonBase/ProgressBarBlue":220,"../../Extends/CommonBase/RemoveButton":221,"../../Extends/CommonBase/RenameInput":222,"../../Extends/CommonBase/RenameInput2":223,"../../Extends/CommonBase/ShadowMask":224,"../../Extends/CommonBase/ShareButton":225,"../../Extends/CommonBase/ShareButtonBar":226,"../../Extends/CommonBase/Slider":227,"../../Extends/CommonBase/Slider_grip":228,"../../Extends/CommonBase/SmallCommonButton":229,"../../Extends/CommonBase/SmallTabButton":230,"../../Extends/CommonBase/StoryListTabBar":231,"../../Extends/CommonBase/StudioAnimatedButton":232,"../../Extends/CommonBase/StudioAnimatedButton_ani":233,"../../Extends/CommonBase/StudioGetRewardButton":234,"../../Extends/CommonBase/StudioNextButton":235,"../../Extends/CommonBase/StudioRenameButton":236,"../../Extends/CommonBase/VerticalButton":237,"../../Extends/CommonBase/ViewCheckButton":238,"../../Extends/CommonBase/WriteButton":239,"../../Extends/CommonBase/Yellow2Button":240,"../../Extends/CommonBase/YellowBigButton":241,"../../Extends/CommonBase/YellowButton":242,"../../Extends/CommonBase/YellowButtonSmall":243,"../../Extends/CommonBase/YellowProgressBar":244,"../../Extends/CommonBase/YellowSmallButton":245}],377:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var EmptyButtonStruct = /** @class */ (function (_super) {
    __extends(EmptyButtonStruct, _super);
    function EmptyButtonStruct() {
        return _super.call(this) || this;
    }
    EmptyButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "EmptyButton"));
    };
    EmptyButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
    };
    EmptyButtonStruct.URL = "ui://jaoapdice5hk1m";
    EmptyButtonStruct.DependPackages = ["CommonBase"];
    return EmptyButtonStruct;
}(fairygui.GButton));
exports.default = EmptyButtonStruct;
},{}],378:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ExitViewButtonStruct = /** @class */ (function (_super) {
    __extends(ExitViewButtonStruct, _super);
    function ExitViewButtonStruct() {
        return _super.call(this) || this;
    }
    ExitViewButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ExitViewButton"));
    };
    ExitViewButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    ExitViewButtonStruct.URL = "ui://jaoapdicn6y7w8";
    ExitViewButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return ExitViewButtonStruct;
}(fairygui.GButton));
exports.default = ExitViewButtonStruct;
},{}],379:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var IconButtonStruct = /** @class */ (function (_super) {
    __extends(IconButtonStruct, _super);
    function IconButtonStruct() {
        return _super.call(this) || this;
    }
    IconButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "IconButton"));
    };
    IconButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
        this.m_title = (this.getChild("title"));
    };
    IconButtonStruct.URL = "ui://jaoapdict5vjvc";
    IconButtonStruct.DependPackages = ["CommonBase"];
    return IconButtonStruct;
}(fairygui.GButton));
exports.default = IconButtonStruct;
},{}],380:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationProgressBarStruct = /** @class */ (function (_super) {
    __extends(InformationProgressBarStruct, _super);
    function InformationProgressBarStruct() {
        return _super.call(this) || this;
    }
    InformationProgressBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "InformationProgressBar"));
    };
    InformationProgressBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar = (this.getChild("bar"));
    };
    InformationProgressBarStruct.URL = "ui://jaoapdicl44gw8";
    InformationProgressBarStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return InformationProgressBarStruct;
}(fairygui.GProgressBar));
exports.default = InformationProgressBarStruct;
},{}],381:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationScrollBarStruct = /** @class */ (function (_super) {
    __extends(InformationScrollBarStruct, _super);
    function InformationScrollBarStruct() {
        return _super.call(this) || this;
    }
    InformationScrollBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "InformationScrollBar"));
    };
    InformationScrollBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar = (this.getChild("bar"));
        this.m_grip = (this.getChild("grip"));
    };
    InformationScrollBarStruct.URL = "ui://jaoapdicmaamxj";
    InformationScrollBarStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return InformationScrollBarStruct;
}(fairygui.GScrollBar));
exports.default = InformationScrollBarStruct;
},{}],382:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationScrollBar_gripStruct = /** @class */ (function (_super) {
    __extends(InformationScrollBar_gripStruct, _super);
    function InformationScrollBar_gripStruct() {
        return _super.call(this) || this;
    }
    InformationScrollBar_gripStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "InformationScrollBar_grip"));
    };
    InformationScrollBar_gripStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    InformationScrollBar_gripStruct.URL = "ui://jaoapdicmaamxi";
    InformationScrollBar_gripStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return InformationScrollBar_gripStruct;
}(fairygui.GButton));
exports.default = InformationScrollBar_gripStruct;
},{}],383:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InformationTabBarStruct = /** @class */ (function (_super) {
    __extends(InformationTabBarStruct, _super);
    function InformationTabBarStruct() {
        return _super.call(this) || this;
    }
    InformationTabBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "InformationTabBar"));
    };
    InformationTabBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tab = this.getController("tab");
    };
    InformationTabBarStruct.URL = "ui://jaoapdicl44gw9";
    InformationTabBarStruct.DependPackages = ["CommonBase"];
    return InformationTabBarStruct;
}(fairygui.GComponent));
exports.default = InformationTabBarStruct;
},{}],384:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuButtonStruct = /** @class */ (function (_super) {
    __extends(MenuButtonStruct, _super);
    function MenuButtonStruct() {
        return _super.call(this) || this;
    }
    MenuButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "MenuButton"));
    };
    MenuButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_state = this.getController("state");
        this.m_icon = (this.getChild("icon"));
        this.m_lock = (this.getChild("lock"));
    };
    MenuButtonStruct.URL = "ui://jaoapdicma8exc";
    MenuButtonStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return MenuButtonStruct;
}(fairygui.GButton));
exports.default = MenuButtonStruct;
},{}],385:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MyInfoButtonStruct = /** @class */ (function (_super) {
    __extends(MyInfoButtonStruct, _super);
    function MyInfoButtonStruct() {
        return _super.call(this) || this;
    }
    MyInfoButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "MyInfoButton"));
    };
    MyInfoButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    MyInfoButtonStruct.URL = "ui://jaoapdict52gxb";
    MyInfoButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return MyInfoButtonStruct;
}(fairygui.GButton));
exports.default = MyInfoButtonStruct;
},{}],386:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var NumberBadgeStruct = /** @class */ (function (_super) {
    __extends(NumberBadgeStruct, _super);
    function NumberBadgeStruct() {
        return _super.call(this) || this;
    }
    NumberBadgeStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "NumberBadge"));
    };
    NumberBadgeStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    NumberBadgeStruct.URL = "ui://jaoapdicncg9j";
    NumberBadgeStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return NumberBadgeStruct;
}(fairygui.GLabel));
exports.default = NumberBadgeStruct;
},{}],387:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PenButonStruct = /** @class */ (function (_super) {
    __extends(PenButonStruct, _super);
    function PenButonStruct() {
        return _super.call(this) || this;
    }
    PenButonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "PenButon"));
    };
    PenButonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
    };
    PenButonStruct.URL = "ui://jaoapdice2wxw5";
    PenButonStruct.DependPackages = ["CommonBase"];
    return PenButonStruct;
}(fairygui.GButton));
exports.default = PenButonStruct;
},{}],388:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PinkButtonStruct = /** @class */ (function (_super) {
    __extends(PinkButtonStruct, _super);
    function PinkButtonStruct() {
        return _super.call(this) || this;
    }
    PinkButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "PinkButton"));
    };
    PinkButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    PinkButtonStruct.URL = "ui://jaoapdicldd9xl";
    PinkButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return PinkButtonStruct;
}(fairygui.GButton));
exports.default = PinkButtonStruct;
},{}],389:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PinkTabButtonStruct = /** @class */ (function (_super) {
    __extends(PinkTabButtonStruct, _super);
    function PinkTabButtonStruct() {
        return _super.call(this) || this;
    }
    PinkTabButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "PinkTabButton"));
    };
    PinkTabButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    PinkTabButtonStruct.URL = "ui://jaoapdicl44gwa";
    PinkTabButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return PinkTabButtonStruct;
}(fairygui.GButton));
exports.default = PinkTabButtonStruct;
},{}],390:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProgressBarBlueStruct = /** @class */ (function (_super) {
    __extends(ProgressBarBlueStruct, _super);
    function ProgressBarBlueStruct() {
        return _super.call(this) || this;
    }
    ProgressBarBlueStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ProgressBarBlue"));
    };
    ProgressBarBlueStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar = (this.getChild("bar"));
        this.m_light = (this.getChild("light"));
        this.m_title = (this.getChild("title"));
    };
    ProgressBarBlueStruct.URL = "ui://jaoapdicnnuxv9";
    ProgressBarBlueStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return ProgressBarBlueStruct;
}(fairygui.GProgressBar));
exports.default = ProgressBarBlueStruct;
},{}],391:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RemoveButtonStruct = /** @class */ (function (_super) {
    __extends(RemoveButtonStruct, _super);
    function RemoveButtonStruct() {
        return _super.call(this) || this;
    }
    RemoveButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "RemoveButton"));
    };
    RemoveButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    RemoveButtonStruct.URL = "ui://jaoapdicl44gwc";
    RemoveButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return RemoveButtonStruct;
}(fairygui.GButton));
exports.default = RemoveButtonStruct;
},{}],392:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RenameInput2Struct = /** @class */ (function (_super) {
    __extends(RenameInput2Struct, _super);
    function RenameInput2Struct() {
        return _super.call(this) || this;
    }
    RenameInput2Struct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "RenameInput2"));
    };
    RenameInput2Struct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_randomBtn = (this.getChild("randomBtn"));
    };
    RenameInput2Struct.URL = "ui://jaoapdicwpxmw2";
    RenameInput2Struct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return RenameInput2Struct;
}(fairygui.GLabel));
exports.default = RenameInput2Struct;
},{}],393:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RenameInputStruct = /** @class */ (function (_super) {
    __extends(RenameInputStruct, _super);
    function RenameInputStruct() {
        return _super.call(this) || this;
    }
    RenameInputStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "RenameInput"));
    };
    RenameInputStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    RenameInputStruct.URL = "ui://jaoapdicu6goi";
    RenameInputStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return RenameInputStruct;
}(fairygui.GLabel));
exports.default = RenameInputStruct;
},{}],394:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShadowMaskStruct = /** @class */ (function (_super) {
    __extends(ShadowMaskStruct, _super);
    function ShadowMaskStruct() {
        return _super.call(this) || this;
    }
    ShadowMaskStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ShadowMask"));
    };
    ShadowMaskStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    ShadowMaskStruct.URL = "ui://jaoapdich9411n";
    ShadowMaskStruct.DependPackages = ["CommonBase"];
    return ShadowMaskStruct;
}(fairygui.GComponent));
exports.default = ShadowMaskStruct;
},{}],395:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShareButtonBarStruct = /** @class */ (function (_super) {
    __extends(ShareButtonBarStruct, _super);
    function ShareButtonBarStruct() {
        return _super.call(this) || this;
    }
    ShareButtonBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ShareButtonBar"));
    };
    ShareButtonBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_shareWeiXinButton = (this.getChild("shareWeiXinButton"));
        this.m_shareSinaButton = (this.getChild("shareSinaButton"));
    };
    ShareButtonBarStruct.URL = "ui://jaoapdicla1j1q";
    ShareButtonBarStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return ShareButtonBarStruct;
}(fairygui.GComponent));
exports.default = ShareButtonBarStruct;
},{}],396:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShareButtonStruct = /** @class */ (function (_super) {
    __extends(ShareButtonStruct, _super);
    function ShareButtonStruct() {
        return _super.call(this) || this;
    }
    ShareButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ShareButton"));
    };
    ShareButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
    };
    ShareButtonStruct.URL = "ui://jaoapdicla1jw7";
    ShareButtonStruct.DependPackages = ["CommonBase"];
    return ShareButtonStruct;
}(fairygui.GButton));
exports.default = ShareButtonStruct;
},{}],397:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SliderStruct = /** @class */ (function (_super) {
    __extends(SliderStruct, _super);
    function SliderStruct() {
        return _super.call(this) || this;
    }
    SliderStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "Slider"));
    };
    SliderStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar = (this.getChild("bar"));
        this.m_title = (this.getChild("title"));
        this.m_grip = (this.getChild("grip"));
    };
    SliderStruct.URL = "ui://jaoapdicncg9s";
    SliderStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return SliderStruct;
}(fairygui.GSlider));
exports.default = SliderStruct;
},{}],398:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Slider_gripStruct = /** @class */ (function (_super) {
    __extends(Slider_gripStruct, _super);
    function Slider_gripStruct() {
        return _super.call(this) || this;
    }
    Slider_gripStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "Slider_grip"));
    };
    Slider_gripStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    Slider_gripStruct.URL = "ui://jaoapdicncg9r";
    Slider_gripStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return Slider_gripStruct;
}(fairygui.GButton));
exports.default = Slider_gripStruct;
},{}],399:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SmallCommonButtonStruct = /** @class */ (function (_super) {
    __extends(SmallCommonButtonStruct, _super);
    function SmallCommonButtonStruct() {
        return _super.call(this) || this;
    }
    SmallCommonButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "SmallCommonButton"));
    };
    SmallCommonButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    SmallCommonButtonStruct.URL = "ui://jaoapdici3pqvo";
    SmallCommonButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return SmallCommonButtonStruct;
}(fairygui.GButton));
exports.default = SmallCommonButtonStruct;
},{}],400:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SmallTabButtonStruct = /** @class */ (function (_super) {
    __extends(SmallTabButtonStruct, _super);
    function SmallTabButtonStruct() {
        return _super.call(this) || this;
    }
    SmallTabButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "SmallTabButton"));
    };
    SmallTabButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
        this.m_badge = (this.getChild("badge"));
    };
    SmallTabButtonStruct.URL = "ui://jaoapdici3pqvq";
    SmallTabButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return SmallTabButtonStruct;
}(fairygui.GButton));
exports.default = SmallTabButtonStruct;
},{}],401:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryListTabBarStruct = /** @class */ (function (_super) {
    __extends(StoryListTabBarStruct, _super);
    function StoryListTabBarStruct() {
        return _super.call(this) || this;
    }
    StoryListTabBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "StoryListTabBar"));
    };
    StoryListTabBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tab = this.getController("tab");
    };
    StoryListTabBarStruct.URL = "ui://jaoapdicol35vx";
    StoryListTabBarStruct.DependPackages = ["CommonBase"];
    return StoryListTabBarStruct;
}(fairygui.GComponent));
exports.default = StoryListTabBarStruct;
},{}],402:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioAnimatedButtonStruct = /** @class */ (function (_super) {
    __extends(StudioAnimatedButtonStruct, _super);
    function StudioAnimatedButtonStruct() {
        return _super.call(this) || this;
    }
    StudioAnimatedButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "StudioAnimatedButton"));
    };
    StudioAnimatedButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_isPlay = this.getController("isPlay");
        this.m_icon = (this.getChild("icon"));
        this.m_t0 = this.getTransition("t0");
    };
    StudioAnimatedButtonStruct.URL = "ui://jaoapdicdt43x8";
    StudioAnimatedButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return StudioAnimatedButtonStruct;
}(fairygui.GButton));
exports.default = StudioAnimatedButtonStruct;
},{}],403:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioAnimatedButton_aniStruct = /** @class */ (function (_super) {
    __extends(StudioAnimatedButton_aniStruct, _super);
    function StudioAnimatedButton_aniStruct() {
        return _super.call(this) || this;
    }
    StudioAnimatedButton_aniStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "StudioAnimatedButton_ani"));
    };
    StudioAnimatedButton_aniStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getController("c1");
        this.m_t0 = this.getTransition("t0");
        this.m_t1 = this.getTransition("t1");
    };
    StudioAnimatedButton_aniStruct.URL = "ui://jaoapdicdt43x9";
    StudioAnimatedButton_aniStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return StudioAnimatedButton_aniStruct;
}(fairygui.GComponent));
exports.default = StudioAnimatedButton_aniStruct;
},{}],404:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioGetRewardButtonStruct = /** @class */ (function (_super) {
    __extends(StudioGetRewardButtonStruct, _super);
    function StudioGetRewardButtonStruct() {
        return _super.call(this) || this;
    }
    StudioGetRewardButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "StudioGetRewardButton"));
    };
    StudioGetRewardButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    StudioGetRewardButtonStruct.URL = "ui://jaoapdicu6m7w0";
    StudioGetRewardButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return StudioGetRewardButtonStruct;
}(fairygui.GButton));
exports.default = StudioGetRewardButtonStruct;
},{}],405:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioNextButtonStruct = /** @class */ (function (_super) {
    __extends(StudioNextButtonStruct, _super);
    function StudioNextButtonStruct() {
        return _super.call(this) || this;
    }
    StudioNextButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "StudioNextButton"));
    };
    StudioNextButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
    };
    StudioNextButtonStruct.URL = "ui://jaoapdicoh5ivv";
    StudioNextButtonStruct.DependPackages = ["CommonBase"];
    return StudioNextButtonStruct;
}(fairygui.GButton));
exports.default = StudioNextButtonStruct;
},{}],406:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioRenameButtonStruct = /** @class */ (function (_super) {
    __extends(StudioRenameButtonStruct, _super);
    function StudioRenameButtonStruct() {
        return _super.call(this) || this;
    }
    StudioRenameButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "StudioRenameButton"));
    };
    StudioRenameButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    StudioRenameButtonStruct.URL = "ui://jaoapdicwpxmw3";
    StudioRenameButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return StudioRenameButtonStruct;
}(fairygui.GButton));
exports.default = StudioRenameButtonStruct;
},{}],407:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var VerticalButtonStruct = /** @class */ (function (_super) {
    __extends(VerticalButtonStruct, _super);
    function VerticalButtonStruct() {
        return _super.call(this) || this;
    }
    VerticalButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "VerticalButton"));
    };
    VerticalButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
        this.m_title = (this.getChild("title"));
    };
    VerticalButtonStruct.URL = "ui://jaoapdicf65hvv";
    VerticalButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return VerticalButtonStruct;
}(fairygui.GButton));
exports.default = VerticalButtonStruct;
},{}],408:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ViewCheckButtonStruct = /** @class */ (function (_super) {
    __extends(ViewCheckButtonStruct, _super);
    function ViewCheckButtonStruct() {
        return _super.call(this) || this;
    }
    ViewCheckButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "ViewCheckButton"));
    };
    ViewCheckButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    ViewCheckButtonStruct.URL = "ui://jaoapdicm5zowq";
    ViewCheckButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return ViewCheckButtonStruct;
}(fairygui.GButton));
exports.default = ViewCheckButtonStruct;
},{}],409:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriteButtonStruct = /** @class */ (function (_super) {
    __extends(WriteButtonStruct, _super);
    function WriteButtonStruct() {
        return _super.call(this) || this;
    }
    WriteButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "WriteButton"));
    };
    WriteButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    WriteButtonStruct.URL = "ui://jaoapdiciq08vz";
    WriteButtonStruct.DependPackages = ["CommonBase", "_ResImageUIV1"];
    return WriteButtonStruct;
}(fairygui.GButton));
exports.default = WriteButtonStruct;
},{}],410:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Yellow2ButtonStruct = /** @class */ (function (_super) {
    __extends(Yellow2ButtonStruct, _super);
    function Yellow2ButtonStruct() {
        return _super.call(this) || this;
    }
    Yellow2ButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "Yellow2Button"));
    };
    Yellow2ButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
        this.m_icon = (this.getChild("icon"));
        this.m_number = (this.getChild("number"));
        this.m_badge = (this.getChild("badge"));
    };
    Yellow2ButtonStruct.URL = "ui://jaoapdice5hk1j";
    Yellow2ButtonStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return Yellow2ButtonStruct;
}(fairygui.GButton));
exports.default = Yellow2ButtonStruct;
},{}],411:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowBigButtonStruct = /** @class */ (function (_super) {
    __extends(YellowBigButtonStruct, _super);
    function YellowBigButtonStruct() {
        return _super.call(this) || this;
    }
    YellowBigButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "YellowBigButton"));
    };
    YellowBigButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    YellowBigButtonStruct.URL = "ui://jaoapdicj3nbu";
    YellowBigButtonStruct.DependPackages = ["CommonBase"];
    return YellowBigButtonStruct;
}(fairygui.GButton));
exports.default = YellowBigButtonStruct;
},{}],412:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowButtonSmallStruct = /** @class */ (function (_super) {
    __extends(YellowButtonSmallStruct, _super);
    function YellowButtonSmallStruct() {
        return _super.call(this) || this;
    }
    YellowButtonSmallStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "YellowButtonSmall"));
    };
    YellowButtonSmallStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    YellowButtonSmallStruct.URL = "ui://jaoapdickzdyv";
    YellowButtonSmallStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return YellowButtonSmallStruct;
}(fairygui.GButton));
exports.default = YellowButtonSmallStruct;
},{}],413:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowButtonStruct = /** @class */ (function (_super) {
    __extends(YellowButtonStruct, _super);
    function YellowButtonStruct() {
        return _super.call(this) || this;
    }
    YellowButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "YellowButton"));
    };
    YellowButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    YellowButtonStruct.URL = "ui://jaoapdico3xj0";
    YellowButtonStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return YellowButtonStruct;
}(fairygui.GButton));
exports.default = YellowButtonStruct;
},{}],414:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowProgressBarStruct = /** @class */ (function (_super) {
    __extends(YellowProgressBarStruct, _super);
    function YellowProgressBarStruct() {
        return _super.call(this) || this;
    }
    YellowProgressBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "YellowProgressBar"));
    };
    YellowProgressBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bar = (this.getChild("bar"));
    };
    YellowProgressBarStruct.URL = "ui://jaoapdicszhv12";
    YellowProgressBarStruct.DependPackages = ["CommonBase", "_ResImageUI"];
    return YellowProgressBarStruct;
}(fairygui.GProgressBar));
exports.default = YellowProgressBarStruct;
},{}],415:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var YellowSmallButtonStruct = /** @class */ (function (_super) {
    __extends(YellowSmallButtonStruct, _super);
    function YellowSmallButtonStruct() {
        return _super.call(this) || this;
    }
    YellowSmallButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonBase", "YellowSmallButton"));
    };
    YellowSmallButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    YellowSmallButtonStruct.URL = "ui://jaoapdicj3nbv1";
    YellowSmallButtonStruct.DependPackages = ["CommonBase"];
    return YellowSmallButtonStruct;
}(fairygui.GButton));
exports.default = YellowSmallButtonStruct;
},{}],416:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Beat01Struct = /** @class */ (function (_super) {
    __extends(Beat01Struct, _super);
    function Beat01Struct() {
        return _super.call(this) || this;
    }
    Beat01Struct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonFx", "beat01"));
    };
    Beat01Struct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_smoke_n9 = (this.getChild("smoke_n9"));
        this.m_smoke_n8 = (this.getChild("smoke_n8"));
        this.m_smoke_n3 = (this.getChild("smoke_n3"));
        this.m_smoke_n2 = (this.getChild("smoke_n2"));
        this.m_smoke_n5 = (this.getChild("smoke_n5"));
        this.m_smoke_n6 = (this.getChild("smoke_n6"));
        this.m_smoke_n10 = (this.getChild("smoke_n10"));
        this.m_smoke_n11 = (this.getChild("smoke_n11"));
        this.m_smoke_n12 = (this.getChild("smoke_n12"));
        this.m_smoke_n16 = (this.getChild("smoke_n16"));
        this.m_smoke_n13 = (this.getChild("smoke_n13"));
        this.m_smoke_n4 = (this.getChild("smoke_n4"));
        this.m_smoke_n14 = (this.getChild("smoke_n14"));
        this.m_smoke_n15 = (this.getChild("smoke_n15"));
        this.m_smoke_n17 = (this.getChild("smoke_n17"));
        this.m_smoke_n18 = (this.getChild("smoke_n18"));
        this.m_smoke_n19 = (this.getChild("smoke_n19"));
        this.m_smoke_n20 = (this.getChild("smoke_n20"));
        this.m_smoke_n21 = (this.getChild("smoke_n21"));
        this.m_n2323133d = (this.getChild("n2323133d"));
        this.m_smoke_a001 = this.getTransition("smoke_a001");
    };
    Beat01Struct.URL = "ui://4ykhynlrh96rq";
    Beat01Struct.DependPackages = ["CommonFx"];
    return Beat01Struct;
}(fairygui.GComponent));
exports.default = Beat01Struct;
},{}],417:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Effect_story_unlock_1 = require("../../Extends/CommonFx/Effect_story_unlock");
var FilmMoveShow_1 = require("../../Extends/CommonFx/FilmMoveShow");
var EffectBuildingCD_1 = require("../../Extends/CommonFx/EffectBuildingCD");
var Smoke003_1 = require("../../Extends/CommonFx/Smoke003");
var Beat01_1 = require("../../Extends/CommonFx/Beat01");
var StarflyAnimation_1 = require("../../Extends/CommonFx/StarflyAnimation");
var CommonFxBinder = /** @class */ (function () {
    function CommonFxBinder() {
    }
    CommonFxBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(Effect_story_unlock_1.default.URL, Effect_story_unlock_1.default);
        bind(FilmMoveShow_1.default.URL, FilmMoveShow_1.default);
        bind(EffectBuildingCD_1.default.URL, EffectBuildingCD_1.default);
        bind(Smoke003_1.default.URL, Smoke003_1.default);
        bind(Beat01_1.default.URL, Beat01_1.default);
        bind(StarflyAnimation_1.default.URL, StarflyAnimation_1.default);
    };
    return CommonFxBinder;
}());
exports.default = CommonFxBinder;
},{"../../Extends/CommonFx/Beat01":246,"../../Extends/CommonFx/EffectBuildingCD":247,"../../Extends/CommonFx/Effect_story_unlock":248,"../../Extends/CommonFx/FilmMoveShow":249,"../../Extends/CommonFx/Smoke003":250,"../../Extends/CommonFx/StarflyAnimation":251}],418:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var EffectBuildingCDStruct = /** @class */ (function (_super) {
    __extends(EffectBuildingCDStruct, _super);
    function EffectBuildingCDStruct() {
        return _super.call(this) || this;
    }
    EffectBuildingCDStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonFx", "EffectBuildingCD"));
    };
    EffectBuildingCDStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_t000 = this.getTransition("t000");
    };
    EffectBuildingCDStruct.URL = "ui://4ykhynlrh96rm";
    EffectBuildingCDStruct.DependPackages = ["CommonFx"];
    return EffectBuildingCDStruct;
}(fairygui.GComponent));
exports.default = EffectBuildingCDStruct;
},{}],419:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Effect_story_unlockStruct = /** @class */ (function (_super) {
    __extends(Effect_story_unlockStruct, _super);
    function Effect_story_unlockStruct() {
        return _super.call(this) || this;
    }
    Effect_story_unlockStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonFx", "Effect_story_unlock"));
    };
    Effect_story_unlockStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bg = (this.getChild("bg"));
        this.m_t0 = this.getTransition("t0");
    };
    Effect_story_unlockStruct.URL = "ui://4ykhynlre5hk0";
    Effect_story_unlockStruct.DependPackages = ["CommonFx", "_ResImageUI"];
    return Effect_story_unlockStruct;
}(fairygui.GComponent));
exports.default = Effect_story_unlockStruct;
},{}],420:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var FilmMoveShowStruct = /** @class */ (function (_super) {
    __extends(FilmMoveShowStruct, _super);
    function FilmMoveShowStruct() {
        return _super.call(this) || this;
    }
    FilmMoveShowStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonFx", "FilmMoveShow"));
    };
    FilmMoveShowStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChild("icon"));
        this.m_1 = (this.getChild("1"));
        this.m_2 = (this.getChild("2"));
        this.m_3 = (this.getChild("3"));
        this.m_4 = (this.getChild("4"));
        this.m_5 = (this.getChild("5"));
        this.m_mask = (this.getChild("mask"));
        this.m_moveShow = this.getTransition("moveShow");
    };
    FilmMoveShowStruct.URL = "ui://4ykhynlrh69fl";
    FilmMoveShowStruct.DependPackages = ["CommonFx"];
    return FilmMoveShowStruct;
}(fairygui.GButton));
exports.default = FilmMoveShowStruct;
},{}],421:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Smoke003Struct = /** @class */ (function (_super) {
    __extends(Smoke003Struct, _super);
    function Smoke003Struct() {
        return _super.call(this) || this;
    }
    Smoke003Struct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonFx", "smoke003"));
    };
    Smoke003Struct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_t0 = this.getTransition("t0");
    };
    Smoke003Struct.URL = "ui://4ykhynlrh96ro";
    Smoke003Struct.DependPackages = ["CommonFx"];
    return Smoke003Struct;
}(fairygui.GComponent));
exports.default = Smoke003Struct;
},{}],422:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StarflyAnimationStruct = /** @class */ (function (_super) {
    __extends(StarflyAnimationStruct, _super);
    function StarflyAnimationStruct() {
        return _super.call(this) || this;
    }
    StarflyAnimationStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonFx", "starflyAnimation"));
    };
    StarflyAnimationStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_t1 = this.getTransition("t1");
    };
    StarflyAnimationStruct.URL = "ui://4ykhynlrg2r5m";
    StarflyAnimationStruct.DependPackages = ["CommonFx", "_ResImageUI"];
    return StarflyAnimationStruct;
}(fairygui.GComponent));
exports.default = StarflyAnimationStruct;
},{}],423:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AssetItemStruct = /** @class */ (function (_super) {
    __extends(AssetItemStruct, _super);
    function AssetItemStruct() {
        return _super.call(this) || this;
    }
    AssetItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "AssetItem"));
    };
    AssetItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_showBg = this.getController("showBg");
        this.m_assetLoader = (this.getChild("assetLoader"));
        this.m_title = (this.getChild("title"));
    };
    AssetItemStruct.URL = "ui://4snov4n9e5hkg";
    AssetItemStruct.DependPackages = ["CommonGame", "_ResImageUI"];
    return AssetItemStruct;
}(fairygui.GLabel));
exports.default = AssetItemStruct;
},{}],424:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CoinIconItemStruct = /** @class */ (function (_super) {
    __extends(CoinIconItemStruct, _super);
    function CoinIconItemStruct() {
        return _super.call(this) || this;
    }
    CoinIconItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "coinIconItem"));
    };
    CoinIconItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    CoinIconItemStruct.URL = "ui://4snov4n9ncg97";
    CoinIconItemStruct.DependPackages = ["CommonGame", "_ResImageUI"];
    return CoinIconItemStruct;
}(fairygui.GComponent));
exports.default = CoinIconItemStruct;
},{}],425:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemIconItem_1 = require("../../Extends/CommonGame/ItemIconItem");
var Star_1 = require("../../Extends/CommonGame/Star");
var CoinIconItem_1 = require("../../Extends/CommonGame/CoinIconItem");
var ItemNumItem_1 = require("../../Extends/CommonGame/ItemNumItem");
var SmallIconItem_1 = require("../../Extends/CommonGame/SmallIconItem");
var AssetItem_1 = require("../../Extends/CommonGame/AssetItem");
var StudioStarList_1 = require("../../Extends/CommonGame/StudioStarList");
var UserHeadIcon_1 = require("../../Extends/CommonGame/UserHeadIcon");
var RewardItem_1 = require("../../Extends/CommonGame/RewardItem");
var PropIconItem_1 = require("../../Extends/CommonGame/PropIconItem");
var ItemCostItem_1 = require("../../Extends/CommonGame/ItemCostItem");
var TitleBar_1 = require("../../Extends/CommonGame/TitleBar");
var RewardNumItem_1 = require("../../Extends/CommonGame/RewardNumItem");
var CostItemIcon_1 = require("../../Extends/CommonGame/CostItemIcon");
var CommonGameBinder = /** @class */ (function () {
    function CommonGameBinder() {
    }
    CommonGameBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(ItemIconItem_1.default.URL, ItemIconItem_1.default);
        bind(Star_1.default.URL, Star_1.default);
        bind(CoinIconItem_1.default.URL, CoinIconItem_1.default);
        bind(ItemNumItem_1.default.URL, ItemNumItem_1.default);
        bind(SmallIconItem_1.default.URL, SmallIconItem_1.default);
        bind(AssetItem_1.default.URL, AssetItem_1.default);
        bind(StudioStarList_1.default.URL, StudioStarList_1.default);
        bind(UserHeadIcon_1.default.URL, UserHeadIcon_1.default);
        bind(RewardItem_1.default.URL, RewardItem_1.default);
        bind(PropIconItem_1.default.URL, PropIconItem_1.default);
        bind(ItemCostItem_1.default.URL, ItemCostItem_1.default);
        bind(TitleBar_1.default.URL, TitleBar_1.default);
        bind(RewardNumItem_1.default.URL, RewardNumItem_1.default);
        bind(CostItemIcon_1.default.URL, CostItemIcon_1.default);
    };
    return CommonGameBinder;
}());
exports.default = CommonGameBinder;
},{"../../Extends/CommonGame/AssetItem":252,"../../Extends/CommonGame/CoinIconItem":253,"../../Extends/CommonGame/CostItemIcon":254,"../../Extends/CommonGame/ItemCostItem":255,"../../Extends/CommonGame/ItemIconItem":256,"../../Extends/CommonGame/ItemNumItem":257,"../../Extends/CommonGame/PropIconItem":258,"../../Extends/CommonGame/RewardItem":259,"../../Extends/CommonGame/RewardNumItem":260,"../../Extends/CommonGame/SmallIconItem":261,"../../Extends/CommonGame/Star":262,"../../Extends/CommonGame/StudioStarList":263,"../../Extends/CommonGame/TitleBar":264,"../../Extends/CommonGame/UserHeadIcon":265}],426:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CostItemIconStruct = /** @class */ (function (_super) {
    __extends(CostItemIconStruct, _super);
    function CostItemIconStruct() {
        return _super.call(this) || this;
    }
    CostItemIconStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "CostItemIcon"));
    };
    CostItemIconStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_countState = this.getController("countState");
        this.m_icon = (this.getChild("icon"));
        this.m_num = (this.getChild("num"));
        this.m_itemName = (this.getChild("itemName"));
    };
    CostItemIconStruct.URL = "ui://4snov4n9ma8e2e";
    CostItemIconStruct.DependPackages = ["CommonGame", "_ResImageUIV1"];
    return CostItemIconStruct;
}(fairygui.GButton));
exports.default = CostItemIconStruct;
},{}],427:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemCostItemStruct = /** @class */ (function (_super) {
    __extends(ItemCostItemStruct, _super);
    function ItemCostItemStruct() {
        return _super.call(this) || this;
    }
    ItemCostItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "ItemCostItem"));
    };
    ItemCostItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_c_show_bg = this.getController("c_show_bg");
        this.m_icon = (this.getChild("icon"));
        this.m_labNum = (this.getChild("labNum"));
    };
    ItemCostItemStruct.URL = "ui://4snov4n9qror1d";
    ItemCostItemStruct.DependPackages = ["CommonGame", "_ResImageUI"];
    return ItemCostItemStruct;
}(fairygui.GButton));
exports.default = ItemCostItemStruct;
},{}],428:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemIconItemStruct = /** @class */ (function (_super) {
    __extends(ItemIconItemStruct, _super);
    function ItemIconItemStruct() {
        return _super.call(this) || this;
    }
    ItemIconItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "ItemIconItem"));
    };
    ItemIconItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_type = this.getController("type");
        this.m_icon = (this.getChild("icon"));
        this.m_title = (this.getChild("title"));
        this.m_Star = (this.getChild("Star"));
    };
    ItemIconItemStruct.URL = "ui://4snov4n9ncg93";
    ItemIconItemStruct.DependPackages = ["CommonGame", "_ResImageUI"];
    return ItemIconItemStruct;
}(fairygui.GButton));
exports.default = ItemIconItemStruct;
},{}],429:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemNumItemStruct = /** @class */ (function (_super) {
    __extends(ItemNumItemStruct, _super);
    function ItemNumItemStruct() {
        return _super.call(this) || this;
    }
    ItemNumItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "ItemNumItem"));
    };
    ItemNumItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_c_show_bg = this.getController("c_show_bg");
        this.m_icon = (this.getChild("icon"));
        this.m_title = (this.getChild("title"));
        this.m_Star = (this.getChild("Star"));
    };
    ItemNumItemStruct.URL = "ui://4snov4n9j3nbj";
    ItemNumItemStruct.DependPackages = ["CommonGame", "_ResImageUI"];
    return ItemNumItemStruct;
}(fairygui.GButton));
exports.default = ItemNumItemStruct;
},{}],430:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PropIconItemStruct = /** @class */ (function (_super) {
    __extends(PropIconItemStruct, _super);
    function PropIconItemStruct() {
        return _super.call(this) || this;
    }
    PropIconItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "PropIconItem"));
    };
    PropIconItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_prop = this.getController("prop");
        this.m_icon = (this.getChild("icon"));
    };
    PropIconItemStruct.URL = "ui://4snov4n9g2f52d";
    PropIconItemStruct.DependPackages = ["CommonGame"];
    return PropIconItemStruct;
}(fairygui.GLabel));
exports.default = PropIconItemStruct;
},{}],431:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RewardItemStruct = /** @class */ (function (_super) {
    __extends(RewardItemStruct, _super);
    function RewardItemStruct() {
        return _super.call(this) || this;
    }
    RewardItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "RewardItem"));
    };
    RewardItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
        this.m_num = (this.getChild("num"));
        this.m_itemName = (this.getChild("itemName"));
        this.m_t0 = this.getTransition("t0");
    };
    RewardItemStruct.URL = "ui://4snov4n9u6m71a";
    RewardItemStruct.DependPackages = ["CommonGame", "_ResImageUIV1"];
    return RewardItemStruct;
}(fairygui.GButton));
exports.default = RewardItemStruct;
},{}],432:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RewardNumItemStruct = /** @class */ (function (_super) {
    __extends(RewardNumItemStruct, _super);
    function RewardNumItemStruct() {
        return _super.call(this) || this;
    }
    RewardNumItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "RewardNumItem"));
    };
    RewardNumItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
        this.m_num = (this.getChild("num"));
        this.m_t0 = this.getTransition("t0");
    };
    RewardNumItemStruct.URL = "ui://4snov4n9pf6a2f";
    RewardNumItemStruct.DependPackages = ["CommonGame", "_ResImageUIV1"];
    return RewardNumItemStruct;
}(fairygui.GButton));
exports.default = RewardNumItemStruct;
},{}],433:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SmallIconItemStruct = /** @class */ (function (_super) {
    __extends(SmallIconItemStruct, _super);
    function SmallIconItemStruct() {
        return _super.call(this) || this;
    }
    SmallIconItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "SmallIconItem"));
    };
    SmallIconItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c_show_bg = this.getController("c_show_bg");
        this.m_icon = (this.getChild("icon"));
        this.m_title = (this.getChild("title"));
        this.m_star = (this.getChild("star"));
    };
    SmallIconItemStruct.URL = "ui://4snov4n9e5hkf";
    SmallIconItemStruct.DependPackages = ["CommonGame", "_ResImageUI"];
    return SmallIconItemStruct;
}(fairygui.GButton));
exports.default = SmallIconItemStruct;
},{}],434:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StarStruct = /** @class */ (function (_super) {
    __extends(StarStruct, _super);
    function StarStruct() {
        return _super.call(this) || this;
    }
    StarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "Star"));
    };
    StarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_starNum = this.getController("starNum");
        this.m_s1 = (this.getChild("s1"));
        this.m_s2 = (this.getChild("s2"));
        this.m_s3 = (this.getChild("s3"));
        this.m_s4 = (this.getChild("s4"));
        this.m_s5 = (this.getChild("s5"));
        this.m_s6 = (this.getChild("s6"));
    };
    StarStruct.URL = "ui://4snov4n9ncg95";
    StarStruct.DependPackages = ["CommonGame"];
    return StarStruct;
}(fairygui.GComponent));
exports.default = StarStruct;
},{}],435:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StudioStarListStruct = /** @class */ (function (_super) {
    __extends(StudioStarListStruct, _super);
    function StudioStarListStruct() {
        return _super.call(this) || this;
    }
    StudioStarListStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "StudioStarList"));
    };
    StudioStarListStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_starNum = this.getController("starNum");
        this.m_s1 = (this.getChild("s1"));
        this.m_s2 = (this.getChild("s2"));
        this.m_s3 = (this.getChild("s3"));
        this.m_s4 = (this.getChild("s4"));
        this.m_s5 = (this.getChild("s5"));
    };
    StudioStarListStruct.URL = "ui://4snov4n9wljjt";
    StudioStarListStruct.DependPackages = ["CommonGame"];
    return StudioStarListStruct;
}(fairygui.GComponent));
exports.default = StudioStarListStruct;
},{}],436:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TitleBarStruct = /** @class */ (function (_super) {
    __extends(TitleBarStruct, _super);
    function TitleBarStruct() {
        return _super.call(this) || this;
    }
    TitleBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "TitleBar"));
    };
    TitleBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    TitleBarStruct.URL = "ui://4snov4n9kchl2e";
    TitleBarStruct.DependPackages = ["CommonGame", "_ResImageUIV1"];
    return TitleBarStruct;
}(fairygui.GLabel));
exports.default = TitleBarStruct;
},{}],437:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var UserHeadIconStruct = /** @class */ (function (_super) {
    __extends(UserHeadIconStruct, _super);
    function UserHeadIconStruct() {
        return _super.call(this) || this;
    }
    UserHeadIconStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("CommonGame", "UserHeadIcon"));
    };
    UserHeadIconStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChild("icon"));
    };
    UserHeadIconStruct.URL = "ui://4snov4n9u6m719";
    UserHeadIconStruct.DependPackages = ["CommonGame"];
    return UserHeadIconStruct;
}(fairygui.GComponent));
exports.default = UserHeadIconStruct;
},{}],438:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMAddItemStruct = /** @class */ (function (_super) {
    __extends(GMAddItemStruct, _super);
    function GMAddItemStruct() {
        return _super.call(this) || this;
    }
    GMAddItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMAddItem"));
    };
    GMAddItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_id = (this.getChild("id"));
        this.m_title = (this.getChild("title"));
        this.m_describe = (this.getChild("describe"));
        this.m_icon = (this.getChild("icon"));
        this.m_num = (this.getChild("num"));
        this.m_button = (this.getChild("button"));
        this.m_numberInput = (this.getChild("numberInput"));
    };
    GMAddItemStruct.URL = "ui://46xcitpdfv0tc";
    GMAddItemStruct.DependPackages = ["GameGM"];
    return GMAddItemStruct;
}(fairygui.GComponent));
exports.default = GMAddItemStruct;
},{}],439:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMAddPageStruct = /** @class */ (function (_super) {
    __extends(GMAddPageStruct, _super);
    function GMAddPageStruct() {
        return _super.call(this) || this;
    }
    GMAddPageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMAddPage"));
    };
    GMAddPageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
        this.m_popupButton = (this.getChild("popupButton"));
        this.m_filterInput = (this.getChild("filterInput"));
        this.m_filterCheckbox = (this.getChild("filterCheckbox"));
        this.m_listTopButton = (this.getChild("listTopButton"));
        this.m_listBottomButton = (this.getChild("listBottomButton"));
    };
    GMAddPageStruct.URL = "ui://46xcitpdfbyi9";
    GMAddPageStruct.DependPackages = ["GameGM"];
    return GMAddPageStruct;
}(fairygui.GComponent));
exports.default = GMAddPageStruct;
},{}],440:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMCmdItemStruct = /** @class */ (function (_super) {
    __extends(GMCmdItemStruct, _super);
    function GMCmdItemStruct() {
        return _super.call(this) || this;
    }
    GMCmdItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMCmdItem"));
    };
    GMCmdItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_name = (this.getChild("name"));
        this.m_button = (this.getChild("button"));
    };
    GMCmdItemStruct.URL = "ui://46xcitpdket7n";
    GMCmdItemStruct.DependPackages = ["GameGM"];
    return GMCmdItemStruct;
}(fairygui.GComponent));
exports.default = GMCmdItemStruct;
},{}],441:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMCmdPageStruct = /** @class */ (function (_super) {
    __extends(GMCmdPageStruct, _super);
    function GMCmdPageStruct() {
        return _super.call(this) || this;
    }
    GMCmdPageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMCmdPage"));
    };
    GMCmdPageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
        this.m_subMenuBar = (this.getChild("subMenuBar"));
        this.m_input = (this.getChild("input"));
        this.m_sendButton = (this.getChild("sendButton"));
        this.m_clearButton = (this.getChild("clearButton"));
    };
    GMCmdPageStruct.URL = "ui://46xcitpdket7k";
    GMCmdPageStruct.DependPackages = ["GameGM"];
    return GMCmdPageStruct;
}(fairygui.GComponent));
exports.default = GMCmdPageStruct;
},{}],442:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMDebugPageStruct = /** @class */ (function (_super) {
    __extends(GMDebugPageStruct, _super);
    function GMDebugPageStruct() {
        return _super.call(this) || this;
    }
    GMDebugPageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMDebugPage"));
    };
    GMDebugPageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
        this.m_subMenuBar = (this.getChild("subMenuBar"));
        this.m_clearButton = (this.getChild("clearButton"));
        this.m_refreshButton = (this.getChild("refreshButton"));
    };
    GMDebugPageStruct.URL = "ui://46xcitpdfbyi8";
    GMDebugPageStruct.DependPackages = ["GameGM"];
    return GMDebugPageStruct;
}(fairygui.GComponent));
exports.default = GMDebugPageStruct;
},{}],443:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMDisplayTreePageStruct = /** @class */ (function (_super) {
    __extends(GMDisplayTreePageStruct, _super);
    function GMDisplayTreePageStruct() {
        return _super.call(this) || this;
    }
    GMDisplayTreePageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMDisplayTreePage"));
    };
    GMDisplayTreePageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_tree = (this.getChild("tree"));
        this.m_refreshButton = (this.getChild("refreshButton"));
        this.m_showSelectButton = (this.getChild("showSelectButton"));
        this.m_hideSelectButton = (this.getChild("hideSelectButton"));
        this.m_noSelectButton = (this.getChild("noSelectButton"));
        this.m_parentLayerButton = (this.getChild("parentLayerButton"));
        this.m_setLayerButton = (this.getChild("setLayerButton"));
    };
    GMDisplayTreePageStruct.URL = "ui://46xcitpdx6hov";
    GMDisplayTreePageStruct.DependPackages = ["GameGM"];
    return GMDisplayTreePageStruct;
}(fairygui.GComponent));
exports.default = GMDisplayTreePageStruct;
},{}],444:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMLogItemStruct = /** @class */ (function (_super) {
    __extends(GMLogItemStruct, _super);
    function GMLogItemStruct() {
        return _super.call(this) || this;
    }
    GMLogItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMLogItem"));
    };
    GMLogItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    GMLogItemStruct.URL = "ui://46xcitpdsy3ro";
    GMLogItemStruct.DependPackages = ["GameGM"];
    return GMLogItemStruct;
}(fairygui.GLabel));
exports.default = GMLogItemStruct;
},{}],445:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMMainStruct = /** @class */ (function (_super) {
    __extends(GMMainStruct, _super);
    function GMMainStruct() {
        return _super.call(this) || this;
    }
    GMMainStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMMain"));
    };
    GMMainStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_mainMenu = (this.getChild("mainMenu"));
        this.m_debugPage = (this.getChild("debugPage"));
        this.m_addPage = (this.getChild("addPage"));
        this.m_selectServerPage = (this.getChild("selectServerPage"));
        this.m_closeButton = (this.getChild("closeButton"));
        this.m_cmdPage = (this.getChild("cmdPage"));
        this.m_displayTreePage = (this.getChild("displayTreePage"));
        this.m_timeLoopPage = (this.getChild("timeLoopPage"));
        this.m_tickPage = (this.getChild("tickPage"));
    };
    GMMainStruct.URL = "ui://46xcitpd9nrl0";
    GMMainStruct.DependPackages = ["GameGM"];
    return GMMainStruct;
}(fairygui.GComponent));
exports.default = GMMainStruct;
},{}],446:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMMenuBarStruct = /** @class */ (function (_super) {
    __extends(GMMenuBarStruct, _super);
    function GMMenuBarStruct() {
        return _super.call(this) || this;
    }
    GMMenuBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMMenuBar"));
    };
    GMMenuBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_menuBar = (this.getChild("menuBar"));
        this.m_menuList = (this.getChild("menuList"));
    };
    GMMenuBarStruct.URL = "ui://46xcitpdwl2t1";
    GMMenuBarStruct.DependPackages = ["GameGM"];
    return GMMenuBarStruct;
}(fairygui.GComponent));
exports.default = GMMenuBarStruct;
},{}],447:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMPopupButtonStruct = /** @class */ (function (_super) {
    __extends(GMPopupButtonStruct, _super);
    function GMPopupButtonStruct() {
        return _super.call(this) || this;
    }
    GMPopupButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMPopupButton"));
    };
    GMPopupButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
    };
    GMPopupButtonStruct.URL = "ui://46xcitpdm23g5";
    GMPopupButtonStruct.DependPackages = ["GameGM"];
    return GMPopupButtonStruct;
}(fairygui.GButton));
exports.default = GMPopupButtonStruct;
},{}],448:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMPopupMenuStruct = /** @class */ (function (_super) {
    __extends(GMPopupMenuStruct, _super);
    function GMPopupMenuStruct() {
        return _super.call(this) || this;
    }
    GMPopupMenuStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMPopupMenu"));
    };
    GMPopupMenuStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
    };
    GMPopupMenuStruct.URL = "ui://46xcitpdm23g4";
    GMPopupMenuStruct.DependPackages = ["GameGM"];
    return GMPopupMenuStruct;
}(fairygui.GComponent));
exports.default = GMPopupMenuStruct;
},{}],449:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMPopupMenu_itemStruct = /** @class */ (function (_super) {
    __extends(GMPopupMenu_itemStruct, _super);
    function GMPopupMenu_itemStruct() {
        return _super.call(this) || this;
    }
    GMPopupMenu_itemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMPopupMenu_item"));
    };
    GMPopupMenu_itemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_checked = this.getController("checked");
        this.m_title = (this.getChild("title"));
    };
    GMPopupMenu_itemStruct.URL = "ui://46xcitpdm23g3";
    GMPopupMenu_itemStruct.DependPackages = ["GameGM"];
    return GMPopupMenu_itemStruct;
}(fairygui.GButton));
exports.default = GMPopupMenu_itemStruct;
},{}],450:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMSelectServerPageStruct = /** @class */ (function (_super) {
    __extends(GMSelectServerPageStruct, _super);
    function GMSelectServerPageStruct() {
        return _super.call(this) || this;
    }
    GMSelectServerPageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMSelectServerPage"));
    };
    GMSelectServerPageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
    };
    GMSelectServerPageStruct.URL = "ui://46xcitpdket7j";
    GMSelectServerPageStruct.DependPackages = ["GameGM"];
    return GMSelectServerPageStruct;
}(fairygui.GComponent));
exports.default = GMSelectServerPageStruct;
},{}],451:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMSubMenuBarStruct = /** @class */ (function (_super) {
    __extends(GMSubMenuBarStruct, _super);
    function GMSubMenuBarStruct() {
        return _super.call(this) || this;
    }
    GMSubMenuBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMSubMenuBar"));
    };
    GMSubMenuBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_menuBar = (this.getChild("menuBar"));
        this.m_subMenu = (this.getChild("subMenu"));
    };
    GMSubMenuBarStruct.URL = "ui://46xcitpdfbyi6";
    GMSubMenuBarStruct.DependPackages = ["GameGM"];
    return GMSubMenuBarStruct;
}(fairygui.GComponent));
exports.default = GMSubMenuBarStruct;
},{}],452:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMSubMenuRadioBarStruct = /** @class */ (function (_super) {
    __extends(GMSubMenuRadioBarStruct, _super);
    function GMSubMenuRadioBarStruct() {
        return _super.call(this) || this;
    }
    GMSubMenuRadioBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMSubMenuRadioBar"));
    };
    GMSubMenuRadioBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_menuBar = (this.getChild("menuBar"));
        this.m_subMenu = (this.getChild("subMenu"));
    };
    GMSubMenuRadioBarStruct.URL = "ui://46xcitpdket7l";
    GMSubMenuRadioBarStruct.DependPackages = ["GameGM"];
    return GMSubMenuRadioBarStruct;
}(fairygui.GComponent));
exports.default = GMSubMenuRadioBarStruct;
},{}],453:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMTestPanelContentStruct = /** @class */ (function (_super) {
    __extends(GMTestPanelContentStruct, _super);
    function GMTestPanelContentStruct() {
        return _super.call(this) || this;
    }
    GMTestPanelContentStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMTestPanelContent"));
    };
    GMTestPanelContentStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    GMTestPanelContentStruct.URL = "ui://46xcitpdqfds14";
    GMTestPanelContentStruct.DependPackages = ["GameGM"];
    return GMTestPanelContentStruct;
}(fairygui.GComponent));
exports.default = GMTestPanelContentStruct;
},{}],454:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMTestPanelStruct = /** @class */ (function (_super) {
    __extends(GMTestPanelStruct, _super);
    function GMTestPanelStruct() {
        return _super.call(this) || this;
    }
    GMTestPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMTestPanel"));
    };
    GMTestPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_content = (this.getChild("content"));
    };
    GMTestPanelStruct.URL = "ui://46xcitpdqfds13";
    GMTestPanelStruct.DependPackages = ["GameGM", "_ResImageUIV1"];
    return GMTestPanelStruct;
}(fairygui.GComponent));
exports.default = GMTestPanelStruct;
},{}],455:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMTickPageStruct = /** @class */ (function (_super) {
    __extends(GMTickPageStruct, _super);
    function GMTickPageStruct() {
        return _super.call(this) || this;
    }
    GMTickPageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMTickPage"));
    };
    GMTickPageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
        this.m_refreshButton = (this.getChild("refreshButton"));
        this.m_clearButton = (this.getChild("clearButton"));
        this.m_sortCostTimeToalButton = (this.getChild("sortCostTimeToalButton"));
        this.m_sorteEvaluateButton = (this.getChild("sorteEvaluateButton"));
        this.m_sorteCallNumButton = (this.getChild("sorteCallNumButton"));
        this.m_sorteCostTimeButton = (this.getChild("sorteCostTimeButton"));
    };
    GMTickPageStruct.URL = "ui://46xcitpd7h8s12";
    GMTickPageStruct.DependPackages = ["GameGM"];
    return GMTickPageStruct;
}(fairygui.GComponent));
exports.default = GMTickPageStruct;
},{}],456:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMTimeLoopItemStruct = /** @class */ (function (_super) {
    __extends(GMTimeLoopItemStruct, _super);
    function GMTimeLoopItemStruct() {
        return _super.call(this) || this;
    }
    GMTimeLoopItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMTimeLoopItem"));
    };
    GMTimeLoopItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_visiable = (this.getChild("visiable"));
    };
    GMTimeLoopItemStruct.URL = "ui://46xcitpd7h8s11";
    GMTimeLoopItemStruct.DependPackages = ["GameGM"];
    return GMTimeLoopItemStruct;
}(fairygui.GComponent));
exports.default = GMTimeLoopItemStruct;
},{}],457:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMTimeLoopPageStruct = /** @class */ (function (_super) {
    __extends(GMTimeLoopPageStruct, _super);
    function GMTimeLoopPageStruct() {
        return _super.call(this) || this;
    }
    GMTimeLoopPageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "GMTimeLoopPage"));
    };
    GMTimeLoopPageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
        this.m_refreshButton = (this.getChild("refreshButton"));
        this.m_clearButton = (this.getChild("clearButton"));
        this.m_sortCostTimeToalButton = (this.getChild("sortCostTimeToalButton"));
        this.m_sorteEvaluateButton = (this.getChild("sorteEvaluateButton"));
        this.m_sorteCallNumButton = (this.getChild("sorteCallNumButton"));
        this.m_sorteCostTimeButton = (this.getChild("sorteCostTimeButton"));
    };
    GMTimeLoopPageStruct.URL = "ui://46xcitpd7h8s10";
    GMTimeLoopPageStruct.DependPackages = ["GameGM"];
    return GMTimeLoopPageStruct;
}(fairygui.GComponent));
exports.default = GMTimeLoopPageStruct;
},{}],458:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMMain_1 = require("../../Extends/GameGM/GMMain");
var GMMenuBar_1 = require("../../Extends/GameGM/GMMenuBar");
var GMPopupMenu_item_1 = require("../../Extends/GameGM/GMPopupMenu_item");
var GMPopupMenu_1 = require("../../Extends/GameGM/GMPopupMenu");
var GMPopupButton_1 = require("../../Extends/GameGM/GMPopupButton");
var GMSubMenuBar_1 = require("../../Extends/GameGM/GMSubMenuBar");
var GMDebugPage_1 = require("../../Extends/GameGM/GMDebugPage");
var GMAddPage_1 = require("../../Extends/GameGM/GMAddPage");
var TextInput_1 = require("../../Extends/GameGM/TextInput");
var GMAddItem_1 = require("../../Extends/GameGM/GMAddItem");
var NumberInput_1 = require("../../Extends/GameGM/NumberInput");
var GMSelectServerPage_1 = require("../../Extends/GameGM/GMSelectServerPage");
var GMCmdPage_1 = require("../../Extends/GameGM/GMCmdPage");
var GMSubMenuRadioBar_1 = require("../../Extends/GameGM/GMSubMenuRadioBar");
var TextArea_1 = require("../../Extends/GameGM/TextArea");
var GMCmdItem_1 = require("../../Extends/GameGM/GMCmdItem");
var GMLogItem_1 = require("../../Extends/GameGM/GMLogItem");
var Tree_1 = require("../../Extends/GameGM/Tree");
var TreeItem_1 = require("../../Extends/GameGM/TreeItem");
var TreeItemCheckbox_1 = require("../../Extends/GameGM/TreeItemCheckbox");
var GMDisplayTreePage_1 = require("../../Extends/GameGM/GMDisplayTreePage");
var TreeItemOpenCheckbox_1 = require("../../Extends/GameGM/TreeItemOpenCheckbox");
var TreeList_1 = require("../../Extends/GameGM/TreeList");
var GMTimeLoopPage_1 = require("../../Extends/GameGM/GMTimeLoopPage");
var GMTimeLoopItem_1 = require("../../Extends/GameGM/GMTimeLoopItem");
var GMTickPage_1 = require("../../Extends/GameGM/GMTickPage");
var GMTestPanel_1 = require("../../Extends/GameGM/GMTestPanel");
var GMTestPanelContent_1 = require("../../Extends/GameGM/GMTestPanelContent");
var GameGMBinder = /** @class */ (function () {
    function GameGMBinder() {
    }
    GameGMBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(GMMain_1.default.URL, GMMain_1.default);
        bind(GMMenuBar_1.default.URL, GMMenuBar_1.default);
        bind(GMPopupMenu_item_1.default.URL, GMPopupMenu_item_1.default);
        bind(GMPopupMenu_1.default.URL, GMPopupMenu_1.default);
        bind(GMPopupButton_1.default.URL, GMPopupButton_1.default);
        bind(GMSubMenuBar_1.default.URL, GMSubMenuBar_1.default);
        bind(GMDebugPage_1.default.URL, GMDebugPage_1.default);
        bind(GMAddPage_1.default.URL, GMAddPage_1.default);
        bind(TextInput_1.default.URL, TextInput_1.default);
        bind(GMAddItem_1.default.URL, GMAddItem_1.default);
        bind(NumberInput_1.default.URL, NumberInput_1.default);
        bind(GMSelectServerPage_1.default.URL, GMSelectServerPage_1.default);
        bind(GMCmdPage_1.default.URL, GMCmdPage_1.default);
        bind(GMSubMenuRadioBar_1.default.URL, GMSubMenuRadioBar_1.default);
        bind(TextArea_1.default.URL, TextArea_1.default);
        bind(GMCmdItem_1.default.URL, GMCmdItem_1.default);
        bind(GMLogItem_1.default.URL, GMLogItem_1.default);
        bind(Tree_1.default.URL, Tree_1.default);
        bind(TreeItem_1.default.URL, TreeItem_1.default);
        bind(TreeItemCheckbox_1.default.URL, TreeItemCheckbox_1.default);
        bind(GMDisplayTreePage_1.default.URL, GMDisplayTreePage_1.default);
        bind(TreeItemOpenCheckbox_1.default.URL, TreeItemOpenCheckbox_1.default);
        bind(TreeList_1.default.URL, TreeList_1.default);
        bind(GMTimeLoopPage_1.default.URL, GMTimeLoopPage_1.default);
        bind(GMTimeLoopItem_1.default.URL, GMTimeLoopItem_1.default);
        bind(GMTickPage_1.default.URL, GMTickPage_1.default);
        bind(GMTestPanel_1.default.URL, GMTestPanel_1.default);
        bind(GMTestPanelContent_1.default.URL, GMTestPanelContent_1.default);
    };
    return GameGMBinder;
}());
exports.default = GameGMBinder;
},{"../../Extends/GameGM/GMAddItem":266,"../../Extends/GameGM/GMAddPage":267,"../../Extends/GameGM/GMCmdItem":268,"../../Extends/GameGM/GMCmdPage":269,"../../Extends/GameGM/GMDebugPage":270,"../../Extends/GameGM/GMDisplayTreePage":271,"../../Extends/GameGM/GMLogItem":272,"../../Extends/GameGM/GMMain":273,"../../Extends/GameGM/GMMenuBar":274,"../../Extends/GameGM/GMPopupButton":275,"../../Extends/GameGM/GMPopupMenu":276,"../../Extends/GameGM/GMPopupMenu_item":277,"../../Extends/GameGM/GMSelectServerPage":278,"../../Extends/GameGM/GMSubMenuBar":279,"../../Extends/GameGM/GMSubMenuRadioBar":280,"../../Extends/GameGM/GMTestPanel":281,"../../Extends/GameGM/GMTestPanelContent":282,"../../Extends/GameGM/GMTickPage":283,"../../Extends/GameGM/GMTimeLoopItem":284,"../../Extends/GameGM/GMTimeLoopPage":285,"../../Extends/GameGM/NumberInput":286,"../../Extends/GameGM/TextArea":287,"../../Extends/GameGM/TextInput":288,"../../Extends/GameGM/Tree":289,"../../Extends/GameGM/TreeItem":290,"../../Extends/GameGM/TreeItemCheckbox":291,"../../Extends/GameGM/TreeItemOpenCheckbox":292,"../../Extends/GameGM/TreeList":293}],459:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var NumberInputStruct = /** @class */ (function (_super) {
    __extends(NumberInputStruct, _super);
    function NumberInputStruct() {
        return _super.call(this) || this;
    }
    NumberInputStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "NumberInput"));
    };
    NumberInputStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_downButton = (this.getChild("downButton"));
        this.m_upButton = (this.getChild("upButton"));
    };
    NumberInputStruct.URL = "ui://46xcitpdfv0tf";
    NumberInputStruct.DependPackages = ["GameGM"];
    return NumberInputStruct;
}(fairygui.GComponent));
exports.default = NumberInputStruct;
},{}],460:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TextAreaStruct = /** @class */ (function (_super) {
    __extends(TextAreaStruct, _super);
    function TextAreaStruct() {
        return _super.call(this) || this;
    }
    TextAreaStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "TextArea"));
    };
    TextAreaStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    TextAreaStruct.URL = "ui://46xcitpdket7m";
    TextAreaStruct.DependPackages = ["GameGM"];
    return TextAreaStruct;
}(fairygui.GButton));
exports.default = TextAreaStruct;
},{}],461:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TextInputStruct = /** @class */ (function (_super) {
    __extends(TextInputStruct, _super);
    function TextInputStruct() {
        return _super.call(this) || this;
    }
    TextInputStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "TextInput"));
    };
    TextInputStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    TextInputStruct.URL = "ui://46xcitpdfv0tb";
    TextInputStruct.DependPackages = ["GameGM"];
    return TextInputStruct;
}(fairygui.GButton));
exports.default = TextInputStruct;
},{}],462:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TreeItemCheckboxStruct = /** @class */ (function (_super) {
    __extends(TreeItemCheckboxStruct, _super);
    function TreeItemCheckboxStruct() {
        return _super.call(this) || this;
    }
    TreeItemCheckboxStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "TreeItemCheckbox"));
    };
    TreeItemCheckboxStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
    };
    TreeItemCheckboxStruct.URL = "ui://46xcitpdx6hou";
    TreeItemCheckboxStruct.DependPackages = ["GameGM"];
    return TreeItemCheckboxStruct;
}(fairygui.GButton));
exports.default = TreeItemCheckboxStruct;
},{}],463:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TreeItemOpenCheckboxStruct = /** @class */ (function (_super) {
    __extends(TreeItemOpenCheckboxStruct, _super);
    function TreeItemOpenCheckboxStruct() {
        return _super.call(this) || this;
    }
    TreeItemOpenCheckboxStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "TreeItemOpenCheckbox"));
    };
    TreeItemOpenCheckboxStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_close = (this.getChild("close"));
        this.m_open = (this.getChild("open"));
    };
    TreeItemOpenCheckboxStruct.URL = "ui://46xcitpdx6how";
    TreeItemOpenCheckboxStruct.DependPackages = ["GameGM"];
    return TreeItemOpenCheckboxStruct;
}(fairygui.GButton));
exports.default = TreeItemOpenCheckboxStruct;
},{}],464:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TreeItemStruct = /** @class */ (function (_super) {
    __extends(TreeItemStruct, _super);
    function TreeItemStruct() {
        return _super.call(this) || this;
    }
    TreeItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "TreeItem"));
    };
    TreeItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_title = (this.getChild("title"));
        this.m_visiable = (this.getChild("visiable"));
        this.m_openClose = (this.getChild("openClose"));
        this.m_list = (this.getChild("list"));
    };
    TreeItemStruct.URL = "ui://46xcitpdx6hot";
    TreeItemStruct.DependPackages = ["GameGM"];
    return TreeItemStruct;
}(fairygui.GButton));
exports.default = TreeItemStruct;
},{}],465:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TreeListStruct = /** @class */ (function (_super) {
    __extends(TreeListStruct, _super);
    function TreeListStruct() {
        return _super.call(this) || this;
    }
    TreeListStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "TreeList"));
    };
    TreeListStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    TreeListStruct.URL = "ui://46xcitpdx6hoz";
    TreeListStruct.DependPackages = ["GameGM"];
    return TreeListStruct;
}(fairygui.GComponent));
exports.default = TreeListStruct;
},{}],466:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TreeStruct = /** @class */ (function (_super) {
    __extends(TreeStruct, _super);
    function TreeStruct() {
        return _super.call(this) || this;
    }
    TreeStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameGM", "Tree"));
    };
    TreeStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    TreeStruct.URL = "ui://46xcitpdx6hop";
    TreeStruct.DependPackages = ["GameGM"];
    return TreeStruct;
}(fairygui.GComponent));
exports.default = TreeStruct;
},{}],467:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BGModelStruct = /** @class */ (function (_super) {
    __extends(BGModelStruct, _super);
    function BGModelStruct() {
        return _super.call(this) || this;
    }
    BGModelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "BGModel"));
    };
    BGModelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bg = (this.getChild("bg"));
    };
    BGModelStruct.URL = "ui://47qsdr42f84so";
    BGModelStruct.DependPackages = ["GameLaunch"];
    return BGModelStruct;
}(fairygui.GComponent));
exports.default = BGModelStruct;
},{}],468:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DialogCloseWindowStruct = /** @class */ (function (_super) {
    __extends(DialogCloseWindowStruct, _super);
    function DialogCloseWindowStruct() {
        return _super.call(this) || this;
    }
    DialogCloseWindowStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "DialogCloseWindow"));
    };
    DialogCloseWindowStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_closeButton = (this.getChild("closeButton"));
    };
    DialogCloseWindowStruct.URL = "ui://47qsdr42f84sg";
    DialogCloseWindowStruct.DependPackages = ["GameLaunch"];
    return DialogCloseWindowStruct;
}(fairygui.GComponent));
exports.default = DialogCloseWindowStruct;
},{}],469:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GMButtonStruct = /** @class */ (function (_super) {
    __extends(GMButtonStruct, _super);
    function GMButtonStruct() {
        return _super.call(this) || this;
    }
    GMButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "GMButton"));
    };
    GMButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    GMButtonStruct.URL = "ui://47qsdr42uohx13";
    GMButtonStruct.DependPackages = ["GameLaunch"];
    return GMButtonStruct;
}(fairygui.GButton));
exports.default = GMButtonStruct;
},{}],470:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LaunchLoaderPanel_1 = require("../../Extends/GameLaunch/LaunchLoaderPanel");
var ScreenBG_1 = require("../../Extends/GameLaunch/ScreenBG");
var DialogCloseWindow_1 = require("../../Extends/GameLaunch/DialogCloseWindow");
var BGModel_1 = require("../../Extends/GameLaunch/BGModel");
var GlobalModalWaiting_1 = require("../../Extends/GameLaunch/GlobalModalWaiting");
var SystemAlertMessage_1 = require("../../Extends/GameLaunch/SystemAlertMessage");
var SystemConfirmMessage_1 = require("../../Extends/GameLaunch/SystemConfirmMessage");
var SystemToastMessage_1 = require("../../Extends/GameLaunch/SystemToastMessage");
var WindowModalWaiting_1 = require("../../Extends/GameLaunch/WindowModalWaiting");
var GMButton_1 = require("../../Extends/GameLaunch/GMButton");
var GameLaunchBinder = /** @class */ (function () {
    function GameLaunchBinder() {
    }
    GameLaunchBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(LaunchLoaderPanel_1.default.URL, LaunchLoaderPanel_1.default);
        bind(ScreenBG_1.default.URL, ScreenBG_1.default);
        bind(DialogCloseWindow_1.default.URL, DialogCloseWindow_1.default);
        bind(BGModel_1.default.URL, BGModel_1.default);
        bind(GlobalModalWaiting_1.default.URL, GlobalModalWaiting_1.default);
        bind(SystemAlertMessage_1.default.URL, SystemAlertMessage_1.default);
        bind(SystemConfirmMessage_1.default.URL, SystemConfirmMessage_1.default);
        bind(SystemToastMessage_1.default.URL, SystemToastMessage_1.default);
        bind(WindowModalWaiting_1.default.URL, WindowModalWaiting_1.default);
        bind(GMButton_1.default.URL, GMButton_1.default);
    };
    return GameLaunchBinder;
}());
exports.default = GameLaunchBinder;
},{"../../Extends/GameLaunch/BGModel":294,"../../Extends/GameLaunch/DialogCloseWindow":295,"../../Extends/GameLaunch/GMButton":296,"../../Extends/GameLaunch/GlobalModalWaiting":297,"../../Extends/GameLaunch/LaunchLoaderPanel":298,"../../Extends/GameLaunch/ScreenBG":299,"../../Extends/GameLaunch/SystemAlertMessage":300,"../../Extends/GameLaunch/SystemConfirmMessage":301,"../../Extends/GameLaunch/SystemToastMessage":302,"../../Extends/GameLaunch/WindowModalWaiting":303}],471:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalModalWaitingStruct = /** @class */ (function (_super) {
    __extends(GlobalModalWaitingStruct, _super);
    function GlobalModalWaitingStruct() {
        return _super.call(this) || this;
    }
    GlobalModalWaitingStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "GlobalModalWaiting"));
    };
    GlobalModalWaitingStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_circle = (this.getChild("circle"));
        this.m_rotation = this.getTransition("rotation");
    };
    GlobalModalWaitingStruct.URL = "ui://47qsdr42nk8t0";
    GlobalModalWaitingStruct.DependPackages = ["GameLaunch"];
    return GlobalModalWaitingStruct;
}(fairygui.GComponent));
exports.default = GlobalModalWaitingStruct;
},{}],472:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LaunchLoaderPanelStruct = /** @class */ (function (_super) {
    __extends(LaunchLoaderPanelStruct, _super);
    function LaunchLoaderPanelStruct() {
        return _super.call(this) || this;
    }
    LaunchLoaderPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "LaunchLoaderPanel"));
    };
    LaunchLoaderPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_help = (this.getChild("help"));
        this.m_txt_resVer = (this.getChild("txt_resVer"));
        this.m_txt_gamever = (this.getChild("txt_gamever"));
        this.m_screenBG = (this.getChild("screenBG"));
        this.m_progressBar = (this.getChild("progressBar"));
    };
    LaunchLoaderPanelStruct.URL = "ui://47qsdr42f84s0";
    LaunchLoaderPanelStruct.DependPackages = ["GameLaunch"];
    return LaunchLoaderPanelStruct;
}(fairygui.GComponent));
exports.default = LaunchLoaderPanelStruct;
},{}],473:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ScreenBGStruct = /** @class */ (function (_super) {
    __extends(ScreenBGStruct, _super);
    function ScreenBGStruct() {
        return _super.call(this) || this;
    }
    ScreenBGStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "ScreenBG"));
    };
    ScreenBGStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChild("icon"));
    };
    ScreenBGStruct.URL = "ui://47qsdr42f84s1";
    ScreenBGStruct.DependPackages = ["GameLaunch"];
    return ScreenBGStruct;
}(fairygui.GLabel));
exports.default = ScreenBGStruct;
},{}],474:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemAlertMessageStruct = /** @class */ (function (_super) {
    __extends(SystemAlertMessageStruct, _super);
    function SystemAlertMessageStruct() {
        return _super.call(this) || this;
    }
    SystemAlertMessageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "SystemAlertMessage"));
    };
    SystemAlertMessageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_content = (this.getChild("content"));
        this.m_title = (this.getChild("title"));
        this.m_dialog = (this.getChild("dialog"));
        this.m_okBtn = (this.getChild("okBtn"));
    };
    SystemAlertMessageStruct.URL = "ui://47qsdr42nk8t1";
    SystemAlertMessageStruct.DependPackages = ["GameLaunch"];
    return SystemAlertMessageStruct;
}(fairygui.GComponent));
exports.default = SystemAlertMessageStruct;
},{}],475:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemConfirmMessageStruct = /** @class */ (function (_super) {
    __extends(SystemConfirmMessageStruct, _super);
    function SystemConfirmMessageStruct() {
        return _super.call(this) || this;
    }
    SystemConfirmMessageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "SystemConfirmMessage"));
    };
    SystemConfirmMessageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_content = (this.getChild("content"));
        this.m_title = (this.getChild("title"));
        this.m_dialog = (this.getChild("dialog"));
        this.m_okBtn = (this.getChild("okBtn"));
        this.m_cancleBtn = (this.getChild("cancleBtn"));
    };
    SystemConfirmMessageStruct.URL = "ui://47qsdr42nk8t2";
    SystemConfirmMessageStruct.DependPackages = ["GameLaunch"];
    return SystemConfirmMessageStruct;
}(fairygui.GComponent));
exports.default = SystemConfirmMessageStruct;
},{}],476:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemToastMessageStruct = /** @class */ (function (_super) {
    __extends(SystemToastMessageStruct, _super);
    function SystemToastMessageStruct() {
        return _super.call(this) || this;
    }
    SystemToastMessageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "SystemToastMessage"));
    };
    SystemToastMessageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    SystemToastMessageStruct.URL = "ui://47qsdr42nk8t3";
    SystemToastMessageStruct.DependPackages = ["GameLaunch", "_ResImageUIV1"];
    return SystemToastMessageStruct;
}(fairygui.GComponent));
exports.default = SystemToastMessageStruct;
},{}],477:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WindowModalWaitingStruct = /** @class */ (function (_super) {
    __extends(WindowModalWaitingStruct, _super);
    function WindowModalWaitingStruct() {
        return _super.call(this) || this;
    }
    WindowModalWaitingStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "WindowModalWaiting"));
    };
    WindowModalWaitingStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_circle = (this.getChild("circle"));
        this.m_rotation = this.getTransition("rotation");
    };
    WindowModalWaitingStruct.URL = "ui://47qsdr42f84sp";
    WindowModalWaitingStruct.DependPackages = ["GameLaunch"];
    return WindowModalWaitingStruct;
}(fairygui.GComponent));
exports.default = WindowModalWaitingStruct;
},{}],478:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CommonBaseBinder_1 = require("./CommonBase/CommonBaseBinder");
var CommonFxBinder_1 = require("./CommonFx/CommonFxBinder");
var CommonGameBinder_1 = require("./CommonGame/CommonGameBinder");
var GameGMBinder_1 = require("./GameGM/GameGMBinder");
var GameLaunchBinder_1 = require("./GameLaunch/GameLaunchBinder");
var ModuleBagBinder_1 = require("./ModuleBag/ModuleBagBinder");
var ModuleEmailBinder_1 = require("./ModuleEmail/ModuleEmailBinder");
var ModuleLoginBinder_1 = require("./ModuleLogin/ModuleLoginBinder");
var SoundBinder_1 = require("./Sound/SoundBinder");
var SystemModuleDialogBinder_1 = require("./SystemModuleDialog/SystemModuleDialogBinder");
var SystemModuleHomeBinder_1 = require("./SystemModuleHome/SystemModuleHomeBinder");
var SystemModuleMenuBinder_1 = require("./SystemModuleMenu/SystemModuleMenuBinder");
var SystemModulePlotBinder_1 = require("./SystemModulePlot/SystemModulePlotBinder");
var __ResImageTmpBinder_1 = require("./__ResImageTmp/__ResImageTmpBinder");
var GuiBinderList = /** @class */ (function () {
    function GuiBinderList() {
    }
    GuiBinderList.fguiBinderAll = function () {
        CommonBaseBinder_1.default.bindAll();
        CommonFxBinder_1.default.bindAll();
        CommonGameBinder_1.default.bindAll();
        GameGMBinder_1.default.bindAll();
        GameLaunchBinder_1.default.bindAll();
        ModuleBagBinder_1.default.bindAll();
        ModuleEmailBinder_1.default.bindAll();
        ModuleLoginBinder_1.default.bindAll();
        SoundBinder_1.default.bindAll();
        SystemModuleDialogBinder_1.default.bindAll();
        SystemModuleHomeBinder_1.default.bindAll();
        SystemModuleMenuBinder_1.default.bindAll();
        SystemModulePlotBinder_1.default.bindAll();
        __ResImageTmpBinder_1.default.bindAll();
    };
    return GuiBinderList;
}());
exports.default = GuiBinderList;
},{"./CommonBase/CommonBaseBinder":376,"./CommonFx/CommonFxBinder":417,"./CommonGame/CommonGameBinder":425,"./GameGM/GameGMBinder":458,"./GameLaunch/GameLaunchBinder":470,"./ModuleBag/ModuleBagBinder":485,"./ModuleEmail/ModuleEmailBinder":489,"./ModuleLogin/ModuleLoginBinder":494,"./Sound/SoundBinder":498,"./SystemModuleDialog/SystemModuleDialogBinder":509,"./SystemModuleHome/SystemModuleHomeBinder":512,"./SystemModuleMenu/SystemModuleMenuBinder":522,"./SystemModulePlot/SystemModulePlotBinder":530,"./__ResImageTmp/__ResImageTmpBinder":531}],479:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
// =====================
// fgui 包名称
// ---------------------
var GuiPackageNames = /** @class */ (function () {
    function GuiPackageNames() {
    }
    GuiPackageNames.CommonBase = "CommonBase";
    GuiPackageNames.CommonFx = "CommonFx";
    GuiPackageNames.CommonGame = "CommonGame";
    GuiPackageNames.GameGM = "GameGM";
    GuiPackageNames.GameLaunch = "GameLaunch";
    GuiPackageNames.Lang = "Lang";
    GuiPackageNames.Lang_en = "Lang_en";
    GuiPackageNames.Lang_zh_cn = "Lang_zh-cn";
    GuiPackageNames.Lang_zh_tw = "Lang_zh_tw";
    GuiPackageNames.ModuleBag = "ModuleBag";
    GuiPackageNames.ModuleEmail = "ModuleEmail";
    GuiPackageNames.ModuleLogin = "ModuleLogin";
    GuiPackageNames.ModuleRank = "ModuleRank";
    GuiPackageNames.ModuleSetting = "ModuleSetting";
    GuiPackageNames.ModuleShop = "ModuleShop";
    GuiPackageNames.Sound = "Sound";
    GuiPackageNames.SystemModuleDialog = "SystemModuleDialog";
    GuiPackageNames.SystemModuleGuide = "SystemModuleGuide";
    GuiPackageNames.SystemModuleHome = "SystemModuleHome";
    GuiPackageNames.SystemModuleMenu = "SystemModuleMenu";
    GuiPackageNames.SystemModulePlot = "SystemModulePlot";
    GuiPackageNames.SystemModuleTask = "SystemModuleTask";
    GuiPackageNames._ResFont = "_ResFont";
    GuiPackageNames._ResImagePic = "_ResImagePic";
    GuiPackageNames._ResImageUI = "_ResImageUI";
    GuiPackageNames._ResImageUIV1 = "_ResImageUIV1";
    GuiPackageNames.__ResImageTmp = "__ResImageTmp";
    GuiPackageNames.__Style = "__Style";
    return GuiPackageNames;
}());
exports.default = GuiPackageNames;
},{}],480:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagActorItemStruct = /** @class */ (function (_super) {
    __extends(BagActorItemStruct, _super);
    function BagActorItemStruct() {
        return _super.call(this) || this;
    }
    BagActorItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleBag", "BagActorItem"));
    };
    BagActorItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_item = (this.getChild("item"));
    };
    BagActorItemStruct.URL = "ui://4mjxxvpqncg94";
    BagActorItemStruct.DependPackages = ["ModuleBag"];
    return BagActorItemStruct;
}(fairygui.GComponent));
exports.default = BagActorItemStruct;
},{}],481:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagInfoIconItemStruct = /** @class */ (function (_super) {
    __extends(BagInfoIconItemStruct, _super);
    function BagInfoIconItemStruct() {
        return _super.call(this) || this;
    }
    BagInfoIconItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleBag", "BagInfoIconItem"));
    };
    BagInfoIconItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_itemName = (this.getChild("itemName"));
        this.m_itemContent = (this.getChild("itemContent"));
        this.m_item = (this.getChild("item"));
        this.m_saleBtn = (this.getChild("saleBtn"));
        this.m_useBtn = (this.getChild("useBtn"));
        this.m_giveBtn = (this.getChild("giveBtn"));
        this.m_splitBtn = (this.getChild("splitBtn"));
    };
    BagInfoIconItemStruct.URL = "ui://4mjxxvpqncg96";
    BagInfoIconItemStruct.DependPackages = ["ModuleBag", "CommonGame", "CommonBase", "_ResImageUI"];
    return BagInfoIconItemStruct;
}(fairygui.GComponent));
exports.default = BagInfoIconItemStruct;
},{}],482:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagItemStruct = /** @class */ (function (_super) {
    __extends(BagItemStruct, _super);
    function BagItemStruct() {
        return _super.call(this) || this;
    }
    BagItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleBag", "BagItem"));
    };
    BagItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_item = (this.getChild("item"));
    };
    BagItemStruct.URL = "ui://4mjxxvpqncg92";
    BagItemStruct.DependPackages = ["ModuleBag", "CommonGame"];
    return BagItemStruct;
}(fairygui.GComponent));
exports.default = BagItemStruct;
},{}],483:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagWindowUIStruct = /** @class */ (function (_super) {
    __extends(BagWindowUIStruct, _super);
    function BagWindowUIStruct() {
        return _super.call(this) || this;
    }
    BagWindowUIStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleBag", "BagWindowUI"));
    };
    BagWindowUIStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_showItemInfo = this.getController("showItemInfo");
        this.m_showInfoDialog = this.getController("showInfoDialog");
        this.m_itemList = (this.getChild("itemList"));
        this.m_frame = (this.getChild("frame"));
        this.m_tabBar = (this.getChild("tabBar"));
        this.m_bagInfo = (this.getChild("bagInfo"));
        this.m_splitBtn = (this.getChild("splitBtn"));
        this.m_compoundBtn = (this.getChild("compoundBtn"));
        this.m_useBtn = (this.getChild("useBtn"));
        this.m_saleBtn = (this.getChild("saleBtn"));
        this.m_infoDialog = (this.getChild("infoDialog"));
    };
    BagWindowUIStruct.URL = "ui://4mjxxvpqeftv0";
    BagWindowUIStruct.DependPackages = ["ModuleBag", "CommonBase", "CommonGame"];
    return BagWindowUIStruct;
}(fairygui.GComponent));
exports.default = BagWindowUIStruct;
},{}],484:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GetInformationDialogStruct = /** @class */ (function (_super) {
    __extends(GetInformationDialogStruct, _super);
    function GetInformationDialogStruct() {
        return _super.call(this) || this;
    }
    GetInformationDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleBag", "GetInformationDialog"));
    };
    GetInformationDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_boxHeightCtrl = this.getController("boxHeightCtrl");
        this.m_bg = (this.getChild("bg"));
        this.m_list = (this.getChild("list"));
        this.m_confirmBtn = (this.getChild("confirmBtn"));
    };
    GetInformationDialogStruct.URL = "ui://4mjxxvpqlg7x16";
    GetInformationDialogStruct.DependPackages = ["ModuleBag", "CommonBase", "_ResImageUIV1"];
    return GetInformationDialogStruct;
}(fairygui.GComponent));
exports.default = GetInformationDialogStruct;
},{}],485:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BagWindowUI_1 = require("../../Extends/ModuleBag/BagWindowUI");
var BagInfoIconItem_1 = require("../../Extends/ModuleBag/BagInfoIconItem");
var BagItem_1 = require("../../Extends/ModuleBag/BagItem");
var BagActorItem_1 = require("../../Extends/ModuleBag/BagActorItem");
var GetInformationDialog_1 = require("../../Extends/ModuleBag/GetInformationDialog");
var ModuleBagBinder = /** @class */ (function () {
    function ModuleBagBinder() {
    }
    ModuleBagBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(BagWindowUI_1.default.URL, BagWindowUI_1.default);
        bind(BagInfoIconItem_1.default.URL, BagInfoIconItem_1.default);
        bind(BagItem_1.default.URL, BagItem_1.default);
        bind(BagActorItem_1.default.URL, BagActorItem_1.default);
        bind(GetInformationDialog_1.default.URL, GetInformationDialog_1.default);
    };
    return ModuleBagBinder;
}());
exports.default = ModuleBagBinder;
},{"../../Extends/ModuleBag/BagActorItem":304,"../../Extends/ModuleBag/BagInfoIconItem":305,"../../Extends/ModuleBag/BagItem":306,"../../Extends/ModuleBag/BagWindowUI":307,"../../Extends/ModuleBag/GetInformationDialog":308}],486:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailItemStruct = /** @class */ (function (_super) {
    __extends(MailItemStruct, _super);
    function MailItemStruct() {
        return _super.call(this) || this;
    }
    MailItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleEmail", "MailItem"));
    };
    MailItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_read = this.getController("read");
        this.m_title = (this.getChild("title"));
        this.m_time = (this.getChild("time"));
        this.m_reward = (this.getChild("reward"));
    };
    MailItemStruct.URL = "ui://41exsi4sj3nb3";
    MailItemStruct.DependPackages = ["ModuleEmail", "CommonGame", "_ResImageUI"];
    return MailItemStruct;
}(fairygui.GButton));
exports.default = MailItemStruct;
},{}],487:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailLoaderStruct = /** @class */ (function (_super) {
    __extends(MailLoaderStruct, _super);
    function MailLoaderStruct() {
        return _super.call(this) || this;
    }
    MailLoaderStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleEmail", "MailLoader"));
    };
    MailLoaderStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    MailLoaderStruct.URL = "ui://41exsi4svqq04";
    MailLoaderStruct.DependPackages = ["ModuleEmail"];
    return MailLoaderStruct;
}(fairygui.GComponent));
exports.default = MailLoaderStruct;
},{}],488:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailWindowUIStruct = /** @class */ (function (_super) {
    __extends(MailWindowUIStruct, _super);
    function MailWindowUIStruct() {
        return _super.call(this) || this;
    }
    MailWindowUIStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleEmail", "MailWindowUI"));
    };
    MailWindowUIStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChild("list"));
        this.m_tip = (this.getChild("tip"));
        this.m_NoMail = (this.getChild("NoMail"));
        this.m_frame = (this.getChild("frame"));
        this.m_btnReward = (this.getChild("btnReward"));
        this.m_btnDelect = (this.getChild("btnDelect"));
    };
    MailWindowUIStruct.URL = "ui://41exsi4sszhv0";
    MailWindowUIStruct.DependPackages = ["ModuleEmail", "CommonBase", "_ResImageUI"];
    return MailWindowUIStruct;
}(fairygui.GComponent));
exports.default = MailWindowUIStruct;
},{}],489:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailWindowUI_1 = require("../../Extends/ModuleEmail/MailWindowUI");
var MailItem_1 = require("../../Extends/ModuleEmail/MailItem");
var MailLoader_1 = require("../../Extends/ModuleEmail/MailLoader");
var ModuleEmailBinder = /** @class */ (function () {
    function ModuleEmailBinder() {
    }
    ModuleEmailBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(MailWindowUI_1.default.URL, MailWindowUI_1.default);
        bind(MailItem_1.default.URL, MailItem_1.default);
        bind(MailLoader_1.default.URL, MailLoader_1.default);
    };
    return ModuleEmailBinder;
}());
exports.default = ModuleEmailBinder;
},{"../../Extends/ModuleEmail/MailItem":309,"../../Extends/ModuleEmail/MailLoader":310,"../../Extends/ModuleEmail/MailWindowUI":311}],490:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AccountInputStruct = /** @class */ (function (_super) {
    __extends(AccountInputStruct, _super);
    function AccountInputStruct() {
        return _super.call(this) || this;
    }
    AccountInputStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "AccountInput"));
    };
    AccountInputStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_txt_account = (this.getChild("txt_account"));
        this.m_accountComboBox = (this.getChild("accountComboBox"));
        this.m_button = (this.getChild("button"));
    };
    AccountInputStruct.URL = "ui://4698ugpknz0c1h";
    AccountInputStruct.DependPackages = ["ModuleLogin"];
    return AccountInputStruct;
}(fairygui.GComponent));
exports.default = AccountInputStruct;
},{}],491:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuestPanelStruct = /** @class */ (function (_super) {
    __extends(GuestPanelStruct, _super);
    function GuestPanelStruct() {
        return _super.call(this) || this;
    }
    GuestPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "GuestPanel"));
    };
    GuestPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_g_guestlogin = (this.getChild("g_guestlogin"));
        this.m_btn_guestlogin = (this.getChild("btn_guestlogin"));
        this.m_btn_linkaccount = (this.getChild("btn_linkaccount"));
        this.m_btn_back = (this.getChild("btn_back"));
    };
    GuestPanelStruct.URL = "ui://4698ugpknz0c24";
    GuestPanelStruct.DependPackages = ["ModuleLogin"];
    return GuestPanelStruct;
}(fairygui.GComponent));
exports.default = GuestPanelStruct;
},{}],492:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginPanelStruct = /** @class */ (function (_super) {
    __extends(LoginPanelStruct, _super);
    function LoginPanelStruct() {
        return _super.call(this) || this;
    }
    LoginPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "LoginPanel"));
    };
    LoginPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getController("c1");
        this.m_accountInput = (this.getChild("accountInput"));
        this.m_passwordInput = (this.getChild("passwordInput"));
        this.m_btn_forgot = (this.getChild("btn_forgot"));
        this.m_btn_security = (this.getChild("btn_security"));
        this.m_btn_login = (this.getChild("btn_login"));
        this.m_btn_register = (this.getChild("btn_register"));
        this.m_btn_guest = (this.getChild("btn_guest"));
    };
    LoginPanelStruct.URL = "ui://4698ugpknz0c1g";
    LoginPanelStruct.DependPackages = ["ModuleLogin"];
    return LoginPanelStruct;
}(fairygui.GComponent));
exports.default = LoginPanelStruct;
},{}],493:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginWindowUIStruct = /** @class */ (function (_super) {
    __extends(LoginWindowUIStruct, _super);
    function LoginWindowUIStruct() {
        return _super.call(this) || this;
    }
    LoginWindowUIStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "LoginWindowUI"));
    };
    LoginWindowUIStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_TabCtrl = this.getController("TabCtrl");
        this.m_txt_resVer = (this.getChild("txt_resVer"));
        this.m_txt_gamever = (this.getChild("txt_gamever"));
        this.m_screenBG = (this.getChild("screenBG"));
        this.m_loginPanel = (this.getChild("loginPanel"));
        this.m_guestPanel = (this.getChild("guestPanel"));
        this.m_registerPanel = (this.getChild("registerPanel"));
        this.m_testBtn = (this.getChild("testBtn"));
    };
    LoginWindowUIStruct.URL = "ui://4698ugpknz0c0";
    LoginWindowUIStruct.DependPackages = ["ModuleLogin", "GameLaunch"];
    return LoginWindowUIStruct;
}(fairygui.GComponent));
exports.default = LoginWindowUIStruct;
},{}],494:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginWindowUI_1 = require("../../Extends/ModuleLogin/LoginWindowUI");
var LoginPanel_1 = require("../../Extends/ModuleLogin/LoginPanel");
var AccountInput_1 = require("../../Extends/ModuleLogin/AccountInput");
var PasswordInput_1 = require("../../Extends/ModuleLogin/PasswordInput");
var RegisterPanel_1 = require("../../Extends/ModuleLogin/RegisterPanel");
var GuestPanel_1 = require("../../Extends/ModuleLogin/GuestPanel");
var ModuleLoginBinder = /** @class */ (function () {
    function ModuleLoginBinder() {
    }
    ModuleLoginBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(LoginWindowUI_1.default.URL, LoginWindowUI_1.default);
        bind(LoginPanel_1.default.URL, LoginPanel_1.default);
        bind(AccountInput_1.default.URL, AccountInput_1.default);
        bind(PasswordInput_1.default.URL, PasswordInput_1.default);
        bind(RegisterPanel_1.default.URL, RegisterPanel_1.default);
        bind(GuestPanel_1.default.URL, GuestPanel_1.default);
    };
    return ModuleLoginBinder;
}());
exports.default = ModuleLoginBinder;
},{"../../Extends/ModuleLogin/AccountInput":312,"../../Extends/ModuleLogin/GuestPanel":313,"../../Extends/ModuleLogin/LoginPanel":314,"../../Extends/ModuleLogin/LoginWindowUI":315,"../../Extends/ModuleLogin/PasswordInput":316,"../../Extends/ModuleLogin/RegisterPanel":317}],495:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PasswordInputStruct = /** @class */ (function (_super) {
    __extends(PasswordInputStruct, _super);
    function PasswordInputStruct() {
        return _super.call(this) || this;
    }
    PasswordInputStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "passwordInput"));
    };
    PasswordInputStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_txt_password = (this.getChild("txt_password"));
        this.m_btn_pwdeye = (this.getChild("btn_pwdeye"));
    };
    PasswordInputStruct.URL = "ui://4698ugpknz0c1n";
    PasswordInputStruct.DependPackages = ["ModuleLogin"];
    return PasswordInputStruct;
}(fairygui.GComponent));
exports.default = PasswordInputStruct;
},{}],496:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RegisterPanelStruct = /** @class */ (function (_super) {
    __extends(RegisterPanelStruct, _super);
    function RegisterPanelStruct() {
        return _super.call(this) || this;
    }
    RegisterPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "RegisterPanel"));
    };
    RegisterPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_accountInput = (this.getChild("accountInput"));
        this.m_passwordInput = (this.getChild("passwordInput"));
        this.m_btn_onRegister = (this.getChild("btn_onRegister"));
        this.m_btn_registerback = (this.getChild("btn_registerback"));
    };
    RegisterPanelStruct.URL = "ui://4698ugpknz0c1z";
    RegisterPanelStruct.DependPackages = ["ModuleLogin"];
    return RegisterPanelStruct;
}(fairygui.GComponent));
exports.default = RegisterPanelStruct;
},{}],497:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var GuiSetting_1 = require("../GuiSetting");
var SoundKey = /** @class */ (function () {
    function SoundKey() {
    }
    Object.defineProperty(SoundKey, "idDict", {
        get: function () {
            if (!SoundKey._idDict) {
                SoundKey.init();
            }
            return SoundKey._idDict;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SoundKey, "extDict", {
        get: function () {
            if (!SoundKey._extDict) {
                SoundKey.init();
            }
            return SoundKey._extDict;
        },
        enumerable: true,
        configurable: true
    });
    SoundKey.getId = function (key) {
        if (!SoundKey.idDict.hasKey(key)) {
            console.error("SoundKey 不存在 key=" + key);
            return "";
        }
        return SoundKey.idDict.getValue(key);
    };
    SoundKey.getUrl = function (key) {
        return "ui://" + SoundKey.SoundPackageId + SoundKey.getId(key);
    };
    SoundKey.getPath = function (key) {
        return GuiSetting_1.default.getResPath(SoundKey.SoundPackageName + "_" + SoundKey.getId(key) + SoundKey.extDict.getValue(key), "fgui");
    };
    SoundKey.init = function () {
        var dict = SoundKey._idDict = new Dictionary_1.default();
        dict.add("MM_BGM_Award.mp3", "i7ne2w");
        dict.add("MM_BGM_01.mp3", "tys94p");
        dict.add("MM01_Button.wav", "tys94s");
        dict.add("MM02_Popup.wav", "tys94t");
        dict.add("MM04_Lose.wav", "tys94v");
        dict.add("MM05_Upgrade.wav", "tys94w");
        var exts = SoundKey._extDict = new Dictionary_1.default();
        exts.add("MM_BGM_Award.mp3", ".mp3");
        exts.add("MM_BGM_01.mp3", ".mp3");
        exts.add("MM01_Button.wav", ".wav");
        exts.add("MM02_Popup.wav", ".wav");
        exts.add("MM04_Lose.wav", ".wav");
        exts.add("MM05_Upgrade.wav", ".wav");
    };
    SoundKey.SoundPackageName = "Sound";
    SoundKey.SoundPackageId = "44whq70o";
    SoundKey.MM_BGM_Award = "MM_BGM_Award.mp3";
    SoundKey.MM_BGM_01 = "MM_BGM_01.mp3";
    SoundKey.MM01_Button = "MM01_Button.wav";
    SoundKey.MM02_Popup = "MM02_Popup.wav";
    SoundKey.MM04_Lose = "MM04_Lose.wav";
    SoundKey.MM05_Upgrade = "MM05_Upgrade.wav";
    return SoundKey;
}());
exports.default = SoundKey;
},{"../../Libs/Helpers/Dictionary":626,"../GuiSetting":534}],498:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SoundBinder = /** @class */ (function () {
    function SoundBinder() {
    }
    SoundBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
    };
    return SoundBinder;
}());
exports.default = SoundBinder;
},{}],499:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AlertDialogBackground2Struct = /** @class */ (function (_super) {
    __extends(AlertDialogBackground2Struct, _super);
    function AlertDialogBackground2Struct() {
        return _super.call(this) || this;
    }
    AlertDialogBackground2Struct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "AlertDialogBackground2"));
    };
    AlertDialogBackground2Struct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_closeBtn = (this.getChild("closeBtn"));
    };
    AlertDialogBackground2Struct.URL = "ui://q5yddivte3wc13";
    AlertDialogBackground2Struct.DependPackages = ["SystemModuleDialog", "CommonBase", "_ResImageUIV1"];
    return AlertDialogBackground2Struct;
}(fairygui.GComponent));
exports.default = AlertDialogBackground2Struct;
},{}],500:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AlertDialogBackgroundStruct = /** @class */ (function (_super) {
    __extends(AlertDialogBackgroundStruct, _super);
    function AlertDialogBackgroundStruct() {
        return _super.call(this) || this;
    }
    AlertDialogBackgroundStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "AlertDialogBackground"));
    };
    AlertDialogBackgroundStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_closeBtn = (this.getChild("closeBtn"));
    };
    AlertDialogBackgroundStruct.URL = "ui://q5yddivtncg9m";
    AlertDialogBackgroundStruct.DependPackages = ["SystemModuleDialog", "CommonBase", "_ResImageUIV1"];
    return AlertDialogBackgroundStruct;
}(fairygui.GComponent));
exports.default = AlertDialogBackgroundStruct;
},{}],501:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseAlertDialogStruct = /** @class */ (function (_super) {
    __extends(BaseAlertDialogStruct, _super);
    function BaseAlertDialogStruct() {
        return _super.call(this) || this;
    }
    BaseAlertDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "BaseAlertDialog"));
    };
    BaseAlertDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_closeBtn = (this.getChild("closeBtn"));
    };
    BaseAlertDialogStruct.URL = "ui://q5yddivtncg91";
    BaseAlertDialogStruct.DependPackages = ["SystemModuleDialog", "_ResImageUI"];
    return BaseAlertDialogStruct;
}(fairygui.GLabel));
exports.default = BaseAlertDialogStruct;
},{}],502:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GetRewardDialogStruct = /** @class */ (function (_super) {
    __extends(GetRewardDialogStruct, _super);
    function GetRewardDialogStruct() {
        return _super.call(this) || this;
    }
    GetRewardDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "GetRewardDialog"));
    };
    GetRewardDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_boxHeightCtrl = this.getController("boxHeightCtrl");
        this.m_bg = (this.getChild("bg"));
        this.m_list = (this.getChild("list"));
        this.m_confirmBtn = (this.getChild("confirmBtn"));
    };
    GetRewardDialogStruct.URL = "ui://q5yddivte5hko";
    GetRewardDialogStruct.DependPackages = ["SystemModuleDialog", "CommonBase", "_ResImageUIV1"];
    return GetRewardDialogStruct;
}(fairygui.GComponent));
exports.default = GetRewardDialogStruct;
},{}],503:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemGetRewardDialogContentStruct = /** @class */ (function (_super) {
    __extends(ItemGetRewardDialogContentStruct, _super);
    function ItemGetRewardDialogContentStruct() {
        return _super.call(this) || this;
    }
    ItemGetRewardDialogContentStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "ItemGetRewardDialogContent"));
    };
    ItemGetRewardDialogContentStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_menuList = (this.getChild("menuList"));
        this.m_closeButton = (this.getChild("closeButton"));
        this.m_itemIcon = (this.getChild("itemIcon"));
    };
    ItemGetRewardDialogContentStruct.URL = "ui://q5yddivtma8e15";
    ItemGetRewardDialogContentStruct.DependPackages = ["SystemModuleDialog", "_ResImageUIV1", "CommonBase", "CommonGame"];
    return ItemGetRewardDialogContentStruct;
}(fairygui.GComponent));
exports.default = ItemGetRewardDialogContentStruct;
},{}],504:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemGetWayDialogStruct = /** @class */ (function (_super) {
    __extends(ItemGetWayDialogStruct, _super);
    function ItemGetWayDialogStruct() {
        return _super.call(this) || this;
    }
    ItemGetWayDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "ItemGetWayDialog"));
    };
    ItemGetWayDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_content = (this.getChild("content"));
    };
    ItemGetWayDialogStruct.URL = "ui://q5yddivtma8e14";
    ItemGetWayDialogStruct.DependPackages = ["SystemModuleDialog", "_ResImageUIV1", "CommonBase", "CommonGame"];
    return ItemGetWayDialogStruct;
}(fairygui.GComponent));
exports.default = ItemGetWayDialogStruct;
},{}],505:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemInfoDialogStruct = /** @class */ (function (_super) {
    __extends(ItemInfoDialogStruct, _super);
    function ItemInfoDialogStruct() {
        return _super.call(this) || this;
    }
    ItemInfoDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "ItemInfoDialog"));
    };
    ItemInfoDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_itemName = (this.getChild("itemName"));
        this.m_itemContent = (this.getChild("itemContent"));
        this.m_closeBtn = (this.getChild("closeBtn"));
        this.m_item = (this.getChild("item"));
    };
    ItemInfoDialogStruct.URL = "ui://q5yddivtnetkp";
    ItemInfoDialogStruct.DependPackages = ["SystemModuleDialog", "CommonBase", "CommonGame", "_ResImageUI"];
    return ItemInfoDialogStruct;
}(fairygui.GComponent));
exports.default = ItemInfoDialogStruct;
},{}],506:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailContentDialogStruct = /** @class */ (function (_super) {
    __extends(MailContentDialogStruct, _super);
    function MailContentDialogStruct() {
        return _super.call(this) || this;
    }
    MailContentDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "MailContentDialog"));
    };
    MailContentDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_reward = this.getController("reward");
        this.m_time = (this.getChild("time"));
        this.m_listReward = (this.getChild("listReward"));
        this.m_tipHasReward = (this.getChild("tipHasReward"));
        this.m_title = (this.getChild("title"));
        this.m_Msg1 = (this.getChild("Msg1"));
        this.m_Msg2 = (this.getChild("Msg2"));
        this.m_closeBtn = (this.getChild("closeBtn"));
        this.m_content = (this.getChild("content"));
        this.m_btnClose = (this.getChild("btnClose"));
        this.m_btnDelect = (this.getChild("btnDelect"));
        this.m_btnReward = (this.getChild("btnReward"));
    };
    MailContentDialogStruct.URL = "ui://q5yddivtxa7oo";
    MailContentDialogStruct.DependPackages = ["SystemModuleDialog", "CommonBase", "_ResImageUI"];
    return MailContentDialogStruct;
}(fairygui.GComponent));
exports.default = MailContentDialogStruct;
},{}],507:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SelectRecipientDialogStruct = /** @class */ (function (_super) {
    __extends(SelectRecipientDialogStruct, _super);
    function SelectRecipientDialogStruct() {
        return _super.call(this) || this;
    }
    SelectRecipientDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "SelectRecipientDialog"));
    };
    SelectRecipientDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
    };
    SelectRecipientDialogStruct.URL = "ui://q5yddivtncg93";
    SelectRecipientDialogStruct.DependPackages = ["SystemModuleDialog", "CommonBase"];
    return SelectRecipientDialogStruct;
}(fairygui.GComponent));
exports.default = SelectRecipientDialogStruct;
},{}],508:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SetNumberDialogStruct = /** @class */ (function (_super) {
    __extends(SetNumberDialogStruct, _super);
    function SetNumberDialogStruct() {
        return _super.call(this) || this;
    }
    SetNumberDialogStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "SetNumberDialog"));
    };
    SetNumberDialogStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_content = (this.getChild("content"));
        this.m_contentGroup = (this.getChild("contentGroup"));
        this.m_frame = (this.getChild("frame"));
        this.m_yesBtn = (this.getChild("yesBtn"));
        this.m_slider = (this.getChild("slider"));
    };
    SetNumberDialogStruct.URL = "ui://q5yddivtncg90";
    SetNumberDialogStruct.DependPackages = ["SystemModuleDialog", "CommonBase"];
    return SetNumberDialogStruct;
}(fairygui.GLabel));
exports.default = SetNumberDialogStruct;
},{}],509:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AlertDialogBackground_1 = require("../../Extends/SystemModuleDialog/AlertDialogBackground");
var SetNumberDialog_1 = require("../../Extends/SystemModuleDialog/SetNumberDialog");
var BaseAlertDialog_1 = require("../../Extends/SystemModuleDialog/BaseAlertDialog");
var SelectRecipientDialog_1 = require("../../Extends/SystemModuleDialog/SelectRecipientDialog");
var TextScroll_1 = require("../../Extends/SystemModuleDialog/TextScroll");
var MailContentDialog_1 = require("../../Extends/SystemModuleDialog/MailContentDialog");
var GetRewardDialog_1 = require("../../Extends/SystemModuleDialog/GetRewardDialog");
var ItemInfoDialog_1 = require("../../Extends/SystemModuleDialog/ItemInfoDialog");
var AlertDialogBackground2_1 = require("../../Extends/SystemModuleDialog/AlertDialogBackground2");
var ItemGetWayDialog_1 = require("../../Extends/SystemModuleDialog/ItemGetWayDialog");
var ItemGetRewardDialogContent_1 = require("../../Extends/SystemModuleDialog/ItemGetRewardDialogContent");
var SystemModuleDialogBinder = /** @class */ (function () {
    function SystemModuleDialogBinder() {
    }
    SystemModuleDialogBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(AlertDialogBackground_1.default.URL, AlertDialogBackground_1.default);
        bind(SetNumberDialog_1.default.URL, SetNumberDialog_1.default);
        bind(BaseAlertDialog_1.default.URL, BaseAlertDialog_1.default);
        bind(SelectRecipientDialog_1.default.URL, SelectRecipientDialog_1.default);
        bind(TextScroll_1.default.URL, TextScroll_1.default);
        bind(MailContentDialog_1.default.URL, MailContentDialog_1.default);
        bind(GetRewardDialog_1.default.URL, GetRewardDialog_1.default);
        bind(ItemInfoDialog_1.default.URL, ItemInfoDialog_1.default);
        bind(AlertDialogBackground2_1.default.URL, AlertDialogBackground2_1.default);
        bind(ItemGetWayDialog_1.default.URL, ItemGetWayDialog_1.default);
        bind(ItemGetRewardDialogContent_1.default.URL, ItemGetRewardDialogContent_1.default);
    };
    return SystemModuleDialogBinder;
}());
exports.default = SystemModuleDialogBinder;
},{"../../Extends/SystemModuleDialog/AlertDialogBackground":318,"../../Extends/SystemModuleDialog/AlertDialogBackground2":319,"../../Extends/SystemModuleDialog/BaseAlertDialog":320,"../../Extends/SystemModuleDialog/GetRewardDialog":321,"../../Extends/SystemModuleDialog/ItemGetRewardDialogContent":322,"../../Extends/SystemModuleDialog/ItemGetWayDialog":323,"../../Extends/SystemModuleDialog/ItemInfoDialog":324,"../../Extends/SystemModuleDialog/MailContentDialog":325,"../../Extends/SystemModuleDialog/SelectRecipientDialog":326,"../../Extends/SystemModuleDialog/SetNumberDialog":327,"../../Extends/SystemModuleDialog/TextScroll":328}],510:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TextScrollStruct = /** @class */ (function (_super) {
    __extends(TextScrollStruct, _super);
    function TextScrollStruct() {
        return _super.call(this) || this;
    }
    TextScrollStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleDialog", "TextScroll"));
    };
    TextScrollStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    TextScrollStruct.URL = "ui://q5yddivtxa7on";
    TextScrollStruct.DependPackages = ["SystemModuleDialog"];
    return TextScrollStruct;
}(fairygui.GLabel));
exports.default = TextScrollStruct;
},{}],511:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var HomeWindowUIStruct = /** @class */ (function (_super) {
    __extends(HomeWindowUIStruct, _super);
    function HomeWindowUIStruct() {
        return _super.call(this) || this;
    }
    HomeWindowUIStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleHome", "HomeWindowUI"));
    };
    HomeWindowUIStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bgBottom = (this.getChild("bgBottom"));
        this.m_bgTop = (this.getChild("bgTop"));
        this.m_mainMenuBar = (this.getChild("mainMenuBar"));
        this.m_rightBottomMenuBar = (this.getChild("rightBottomMenuBar"));
        this.m_topMainBar = (this.getChild("topMainBar"));
        this.m_rightTopMenuBar = (this.getChild("rightTopMenuBar"));
        this.m_menuAppointmentButton = (this.getChild("menuAppointmentButton"));
    };
    HomeWindowUIStruct.URL = "ui://4sapkhzuntfm0";
    HomeWindowUIStruct.DependPackages = ["SystemModuleHome", "SystemModuleMenu", "CommonBase", "_ResImagePic", "_ResImageUIV1"];
    return HomeWindowUIStruct;
}(fairygui.GComponent));
exports.default = HomeWindowUIStruct;
},{}],512:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var HomeWindowUI_1 = require("../../Extends/SystemModuleHome/HomeWindowUI");
var SystemModuleHomeBinder = /** @class */ (function () {
    function SystemModuleHomeBinder() {
    }
    SystemModuleHomeBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(HomeWindowUI_1.default.URL, HomeWindowUI_1.default);
    };
    return SystemModuleHomeBinder;
}());
exports.default = SystemModuleHomeBinder;
},{"../../Extends/SystemModuleHome/HomeWindowUI":329}],513:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuAppointmentButtonStruct = /** @class */ (function (_super) {
    __extends(MenuAppointmentButtonStruct, _super);
    function MenuAppointmentButtonStruct() {
        return _super.call(this) || this;
    }
    MenuAppointmentButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuAppointmentButton"));
    };
    MenuAppointmentButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_c_visible_new = this.getController("c_visible_new");
        this.m_fx = (this.getChild("fx"));
        this.m_lock = (this.getChild("lock"));
        this.m_new = (this.getChild("new"));
        this.m_red = (this.getChild("red"));
    };
    MenuAppointmentButtonStruct.URL = "ui://4rsi5gesl2911i";
    MenuAppointmentButtonStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUI"];
    return MenuAppointmentButtonStruct;
}(fairygui.GButton));
exports.default = MenuAppointmentButtonStruct;
},{}],514:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBButtonStruct = /** @class */ (function (_super) {
    __extends(MenuBButtonStruct, _super);
    function MenuBButtonStruct() {
        return _super.call(this) || this;
    }
    MenuBButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuBButton"));
    };
    MenuBButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_c_visible_new = this.getController("c_visible_new");
        this.m_icon = (this.getChild("icon"));
        this.m_lock = (this.getChild("lock"));
        this.m_new = (this.getChild("new"));
        this.m_red = (this.getChild("red"));
    };
    MenuBButtonStruct.URL = "ui://4rsi5gesszhvf";
    MenuBButtonStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUI"];
    return MenuBButtonStruct;
}(fairygui.GButton));
exports.default = MenuBButtonStruct;
},{}],515:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBMainButtonStruct = /** @class */ (function (_super) {
    __extends(MenuBMainButtonStruct, _super);
    function MenuBMainButtonStruct() {
        return _super.call(this) || this;
    }
    MenuBMainButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuBMainButton"));
    };
    MenuBMainButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_c_visible_new = this.getController("c_visible_new");
        this.m_icon = (this.getChild("icon"));
        this.m_lock = (this.getChild("lock"));
        this.m_new = (this.getChild("new"));
        this.m_butterflyFx = (this.getChild("butterflyFx"));
        this.m_red = (this.getChild("red"));
        this.m_t0 = this.getTransition("t0");
    };
    MenuBMainButtonStruct.URL = "ui://4rsi5gesszhv3";
    MenuBMainButtonStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUIV1", "_ResImageUI"];
    return MenuBMainButtonStruct;
}(fairygui.GButton));
exports.default = MenuBMainButtonStruct;
},{}],516:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBarMainStruct = /** @class */ (function (_super) {
    __extends(MenuBarMainStruct, _super);
    function MenuBarMainStruct() {
        return _super.call(this) || this;
    }
    MenuBarMainStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuBarMain"));
    };
    MenuBarMainStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_btn_0 = (this.getChild("btn_0"));
        this.m_btn_1 = (this.getChild("btn_1"));
        this.m_btn_2 = (this.getChild("btn_2"));
        this.m_btn_3 = (this.getChild("btn_3"));
        this.m_btn_4 = (this.getChild("btn_4"));
    };
    MenuBarMainStruct.URL = "ui://4rsi5gesszhv0";
    MenuBarMainStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUIV1"];
    return MenuBarMainStruct;
}(fairygui.GComponent));
exports.default = MenuBarMainStruct;
},{}],517:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBarRightBottomStruct = /** @class */ (function (_super) {
    __extends(MenuBarRightBottomStruct, _super);
    function MenuBarRightBottomStruct() {
        return _super.call(this) || this;
    }
    MenuBarRightBottomStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuBarRightBottom"));
    };
    MenuBarRightBottomStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_setting = (this.getChild("setting"));
    };
    MenuBarRightBottomStruct.URL = "ui://4rsi5gesszhvo";
    MenuBarRightBottomStruct.DependPackages = ["SystemModuleMenu", "CommonBase"];
    return MenuBarRightBottomStruct;
}(fairygui.GComponent));
exports.default = MenuBarRightBottomStruct;
},{}],518:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBarRightTopStruct = /** @class */ (function (_super) {
    __extends(MenuBarRightTopStruct, _super);
    function MenuBarRightTopStruct() {
        return _super.call(this) || this;
    }
    MenuBarRightTopStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuBarRightTop"));
    };
    MenuBarRightTopStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_mail = (this.getChild("mail"));
    };
    MenuBarRightTopStruct.URL = "ui://4rsi5geskrdk1h";
    MenuBarRightTopStruct.DependPackages = ["SystemModuleMenu", "CommonBase"];
    return MenuBarRightTopStruct;
}(fairygui.GComponent));
exports.default = MenuBarRightTopStruct;
},{}],519:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuRButtonStruct = /** @class */ (function (_super) {
    __extends(MenuRButtonStruct, _super);
    function MenuRButtonStruct() {
        return _super.call(this) || this;
    }
    MenuRButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuRButton"));
    };
    MenuRButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_c_visible_new = this.getController("c_visible_new");
        this.m_icon = (this.getChild("icon"));
        this.m_lock = (this.getChild("lock"));
        this.m_new = (this.getChild("new"));
        this.m_red = (this.getChild("red"));
    };
    MenuRButtonStruct.URL = "ui://4rsi5gesszhvt";
    MenuRButtonStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUI"];
    return MenuRButtonStruct;
}(fairygui.GButton));
exports.default = MenuRButtonStruct;
},{}],520:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuTimeButtonStruct = /** @class */ (function (_super) {
    __extends(MenuTimeButtonStruct, _super);
    function MenuTimeButtonStruct() {
        return _super.call(this) || this;
    }
    MenuTimeButtonStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuTimeButton"));
    };
    MenuTimeButtonStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_visiableTitle = this.getController("visiableTitle");
        this.m_c_visible_new = this.getController("c_visible_new");
        this.m_icon = (this.getChild("icon"));
        this.m_title = (this.getChild("title"));
        this.m_lock = (this.getChild("lock"));
        this.m_new = (this.getChild("new"));
        this.m_buttonTime = (this.getChild("buttonTime"));
        this.m_red = (this.getChild("red"));
    };
    MenuTimeButtonStruct.URL = "ui://4rsi5gesszhvj";
    MenuTimeButtonStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUI"];
    return MenuTimeButtonStruct;
}(fairygui.GButton));
exports.default = MenuTimeButtonStruct;
},{}],521:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuTimeStruct = /** @class */ (function (_super) {
    __extends(MenuTimeStruct, _super);
    function MenuTimeStruct() {
        return _super.call(this) || this;
    }
    MenuTimeStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "MenuTime"));
    };
    MenuTimeStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_time = (this.getChild("time"));
    };
    MenuTimeStruct.URL = "ui://4rsi5gesszhvl";
    MenuTimeStruct.DependPackages = ["SystemModuleMenu", "_ResImageUI"];
    return MenuTimeStruct;
}(fairygui.GLabel));
exports.default = MenuTimeStruct;
},{}],522:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuBarMain_1 = require("../../Extends/SystemModuleMenu/MenuBarMain");
var MenuBMainButton_1 = require("../../Extends/SystemModuleMenu/MenuBMainButton");
var MenuBButton_1 = require("../../Extends/SystemModuleMenu/MenuBButton");
var MenuTimeButton_1 = require("../../Extends/SystemModuleMenu/MenuTimeButton");
var MenuTime_1 = require("../../Extends/SystemModuleMenu/MenuTime");
var MenuBarRightBottom_1 = require("../../Extends/SystemModuleMenu/MenuBarRightBottom");
var MenuRButton_1 = require("../../Extends/SystemModuleMenu/MenuRButton");
var TopMainBar_1 = require("../../Extends/SystemModuleMenu/TopMainBar");
var TopHeadInfo_1 = require("../../Extends/SystemModuleMenu/TopHeadInfo");
var TopHeadIcon_1 = require("../../Extends/SystemModuleMenu/TopHeadIcon");
var TopHeadIconMask_1 = require("../../Extends/SystemModuleMenu/TopHeadIconMask");
var TopStreet_1 = require("../../Extends/SystemModuleMenu/TopStreet");
var TopMoneyMainBar_1 = require("../../Extends/SystemModuleMenu/TopMoneyMainBar");
var TopMoneyItem_1 = require("../../Extends/SystemModuleMenu/TopMoneyItem");
var MenuBarRightTop_1 = require("../../Extends/SystemModuleMenu/MenuBarRightTop");
var MenuAppointmentButton_1 = require("../../Extends/SystemModuleMenu/MenuAppointmentButton");
var SystemModuleMenuBinder = /** @class */ (function () {
    function SystemModuleMenuBinder() {
    }
    SystemModuleMenuBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(MenuBarMain_1.default.URL, MenuBarMain_1.default);
        bind(MenuBMainButton_1.default.URL, MenuBMainButton_1.default);
        bind(MenuBButton_1.default.URL, MenuBButton_1.default);
        bind(MenuTimeButton_1.default.URL, MenuTimeButton_1.default);
        bind(MenuTime_1.default.URL, MenuTime_1.default);
        bind(MenuBarRightBottom_1.default.URL, MenuBarRightBottom_1.default);
        bind(MenuRButton_1.default.URL, MenuRButton_1.default);
        bind(TopMainBar_1.default.URL, TopMainBar_1.default);
        bind(TopHeadInfo_1.default.URL, TopHeadInfo_1.default);
        bind(TopHeadIcon_1.default.URL, TopHeadIcon_1.default);
        bind(TopHeadIconMask_1.default.URL, TopHeadIconMask_1.default);
        bind(TopStreet_1.default.URL, TopStreet_1.default);
        bind(TopMoneyMainBar_1.default.URL, TopMoneyMainBar_1.default);
        bind(TopMoneyItem_1.default.URL, TopMoneyItem_1.default);
        bind(MenuBarRightTop_1.default.URL, MenuBarRightTop_1.default);
        bind(MenuAppointmentButton_1.default.URL, MenuAppointmentButton_1.default);
    };
    return SystemModuleMenuBinder;
}());
exports.default = SystemModuleMenuBinder;
},{"../../Extends/SystemModuleMenu/MenuAppointmentButton":330,"../../Extends/SystemModuleMenu/MenuBButton":331,"../../Extends/SystemModuleMenu/MenuBMainButton":332,"../../Extends/SystemModuleMenu/MenuBarMain":333,"../../Extends/SystemModuleMenu/MenuBarRightBottom":334,"../../Extends/SystemModuleMenu/MenuBarRightTop":335,"../../Extends/SystemModuleMenu/MenuRButton":336,"../../Extends/SystemModuleMenu/MenuTime":337,"../../Extends/SystemModuleMenu/MenuTimeButton":338,"../../Extends/SystemModuleMenu/TopHeadIcon":339,"../../Extends/SystemModuleMenu/TopHeadIconMask":340,"../../Extends/SystemModuleMenu/TopHeadInfo":341,"../../Extends/SystemModuleMenu/TopMainBar":342,"../../Extends/SystemModuleMenu/TopMoneyItem":343,"../../Extends/SystemModuleMenu/TopMoneyMainBar":344,"../../Extends/SystemModuleMenu/TopStreet":345}],523:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopHeadIconMaskStruct = /** @class */ (function (_super) {
    __extends(TopHeadIconMaskStruct, _super);
    function TopHeadIconMaskStruct() {
        return _super.call(this) || this;
    }
    TopHeadIconMaskStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "TopHeadIconMask"));
    };
    TopHeadIconMaskStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChild("icon"));
    };
    TopHeadIconMaskStruct.URL = "ui://4rsi5gesszhv10";
    TopHeadIconMaskStruct.DependPackages = ["SystemModuleMenu"];
    return TopHeadIconMaskStruct;
}(fairygui.GButton));
exports.default = TopHeadIconMaskStruct;
},{}],524:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopHeadIconStruct = /** @class */ (function (_super) {
    __extends(TopHeadIconStruct, _super);
    function TopHeadIconStruct() {
        return _super.call(this) || this;
    }
    TopHeadIconStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "TopHeadIcon"));
    };
    TopHeadIconStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_button = this.getController("button");
        this.m_icon = (this.getChild("icon"));
    };
    TopHeadIconStruct.URL = "ui://4rsi5gesszhvy";
    TopHeadIconStruct.DependPackages = ["SystemModuleMenu", "_ResImageUI"];
    return TopHeadIconStruct;
}(fairygui.GButton));
exports.default = TopHeadIconStruct;
},{}],525:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopHeadInfoStruct = /** @class */ (function (_super) {
    __extends(TopHeadInfoStruct, _super);
    function TopHeadInfoStruct() {
        return _super.call(this) || this;
    }
    TopHeadInfoStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "TopHeadInfo"));
    };
    TopHeadInfoStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChild("icon"));
        this.m_level = (this.getChild("level"));
        this.m_expBar = (this.getChild("expBar"));
    };
    TopHeadInfoStruct.URL = "ui://4rsi5gesszhvx";
    TopHeadInfoStruct.DependPackages = ["SystemModuleMenu", "_ResImageUIV1"];
    return TopHeadInfoStruct;
}(fairygui.GButton));
exports.default = TopHeadInfoStruct;
},{}],526:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopMainBarStruct = /** @class */ (function (_super) {
    __extends(TopMainBarStruct, _super);
    function TopMainBarStruct() {
        return _super.call(this) || this;
    }
    TopMainBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "TopMainBar"));
    };
    TopMainBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_headInfo = (this.getChild("headInfo"));
        this.m_street = (this.getChild("street"));
        this.m_moneyBar = (this.getChild("moneyBar"));
    };
    TopMainBarStruct.URL = "ui://4rsi5gesszhvv";
    TopMainBarStruct.DependPackages = ["SystemModuleMenu", "CommonBase"];
    return TopMainBarStruct;
}(fairygui.GComponent));
exports.default = TopMainBarStruct;
},{}],527:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopMoneyItemStruct = /** @class */ (function (_super) {
    __extends(TopMoneyItemStruct, _super);
    function TopMoneyItemStruct() {
        return _super.call(this) || this;
    }
    TopMoneyItemStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "TopMoneyItem"));
    };
    TopMoneyItemStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_icon = (this.getChild("icon"));
        this.m_addButton = (this.getChild("addButton"));
    };
    TopMoneyItemStruct.URL = "ui://4rsi5gesszhv1e";
    TopMoneyItemStruct.DependPackages = ["SystemModuleMenu", "CommonBase"];
    return TopMoneyItemStruct;
}(fairygui.GLabel));
exports.default = TopMoneyItemStruct;
},{}],528:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopMoneyMainBarStruct = /** @class */ (function (_super) {
    __extends(TopMoneyMainBarStruct, _super);
    function TopMoneyMainBarStruct() {
        return _super.call(this) || this;
    }
    TopMoneyMainBarStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "TopMoneyMainBar"));
    };
    TopMoneyMainBarStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_artistPhysical = (this.getChild("artistPhysical"));
        this.m_gold = (this.getChild("gold"));
        this.m_diamond = (this.getChild("diamond"));
    };
    TopMoneyMainBarStruct.URL = "ui://4rsi5gesszhv1d";
    TopMoneyMainBarStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUIV1"];
    return TopMoneyMainBarStruct;
}(fairygui.GComponent));
exports.default = TopMoneyMainBarStruct;
},{}],529:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TopStreetStruct = /** @class */ (function (_super) {
    __extends(TopStreetStruct, _super);
    function TopStreetStruct() {
        return _super.call(this) || this;
    }
    TopStreetStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("SystemModuleMenu", "TopStreet"));
    };
    TopStreetStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_streetRank = (this.getChild("streetRank"));
        this.m_streetName = (this.getChild("streetName"));
        this.m_red = (this.getChild("red"));
        this.m_t0 = this.getTransition("t0");
    };
    TopStreetStruct.URL = "ui://4rsi5gesszhv15";
    TopStreetStruct.DependPackages = ["SystemModuleMenu", "CommonBase", "_ResImageUIV1"];
    return TopStreetStruct;
}(fairygui.GButton));
exports.default = TopStreetStruct;
},{}],530:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemModulePlotBinder = /** @class */ (function () {
    function SystemModulePlotBinder() {
    }
    SystemModulePlotBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
    };
    return SystemModulePlotBinder;
}());
exports.default = SystemModulePlotBinder;
},{}],531:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var __ResImageTmpBinder = /** @class */ (function () {
    function __ResImageTmpBinder() {
    }
    __ResImageTmpBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
    };
    return __ResImageTmpBinder;
}());
exports.default = __ResImageTmpBinder;
},{}],532:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Loader = Laya.Loader;
var GuiSetting_1 = require("./GuiSetting");
// =====================
// fgui包资源配置
// ---------------------
var GuiResPackageConfig = /** @class */ (function () {
    function GuiResPackageConfig() {
        // xxx@atlasX.png
        this.resAtlas = [];
        // 声音
        this.sounds = [];
    }
    Object.defineProperty(GuiResPackageConfig.prototype, "loadList", {
        // 获取加载列表
        get: function () {
            if (!this._loadList) {
                var list = [];
                list.push({ url: GuiSetting_1.default.getResPath(this.resBin, this.resDir), type: Loader.BUFFER });
                if (this.resAtlas) {
                    for (var i = 0; i < this.resAtlas.length; i++) {
                        list.push({ url: GuiSetting_1.default.getResPath(this.resAtlas[i], this.resDir), type: Loader.IMAGE });
                    }
                }
                if (this.sounds) {
                    for (var i = 0; i < this.sounds.length; i++) {
                        list.push({ url: GuiSetting_1.default.getResPath(this.sounds[i], this.resDir), type: Loader.SOUND });
                    }
                }
                this._loadList = list;
            }
            return this._loadList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GuiResPackageConfig.prototype, "packagePath", {
        get: function () {
            return GuiSetting_1.default.getResPackagePath(this.packageName, this.resDir);
        },
        enumerable: true,
        configurable: true
    });
    return GuiResPackageConfig;
}());
exports.default = GuiResPackageConfig;
},{"./GuiSetting":534}],533:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.GenerateFguiResPackageConfig生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var GuiResPackageConfig_1 = require("./GuiResPackageConfig");
// =====================
// fgui包资源配置列表
// ---------------------
var GuiResPackageConfigReader = /** @class */ (function () {
    function GuiResPackageConfigReader() {
        // 字典
        this.dict = new Dictionary_1.default();
    }
    // 添加配置
    GuiResPackageConfigReader.prototype.addconfig = function (config) {
        this.dict.add(config.packageName, config);
    };
    // 获取配置
    GuiResPackageConfigReader.prototype.getconfig = function (packageName) {
        return this.dict.getValue(packageName);
    };
    // 初始化
    GuiResPackageConfigReader.prototype.install = function () {
        var config;
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "CommonBase";
        config.resBin = "CommonBase.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "CommonFx";
        config.resBin = "CommonFx.bin";
        config.resAtlas.push("CommonFx_atlas0.png");
        config.resAtlas.push("CommonFx_atlas5.png");
        config.resAtlas.push("CommonFx_atlas7.png");
        config.resAtlas.push("CommonFx_atlas8.png");
        config.resAtlas.push("CommonFx_atlas9.png");
        config.resAtlas.push("CommonFx_atlas_h96rx.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "CommonGame";
        config.resBin = "CommonGame.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "GameGM";
        config.resBin = "GameGM.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "GameLaunch";
        config.resBin = "GameLaunch.bin";
        config.resAtlas.push("GameLaunch_atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "Lang";
        config.resBin = "Lang.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "Lang_en";
        config.resBin = "Lang_en.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "Lang_zh-cn";
        config.resBin = "Lang_zh-cn.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "Lang_zh_tw";
        config.resBin = "Lang_zh_tw.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "ModuleBag";
        config.resBin = "ModuleBag.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "ModuleEmail";
        config.resBin = "ModuleEmail.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "ModuleLogin";
        config.resBin = "ModuleLogin.bin";
        config.resAtlas.push("ModuleLogin_atlas0.png");
        config.resAtlas.push("ModuleLogin_atlas_nz0c1.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "ModuleRank";
        config.resBin = "ModuleRank.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "ModuleSetting";
        config.resBin = "ModuleSetting.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "ModuleShop";
        config.resBin = "ModuleShop.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "Sound";
        config.resBin = "Sound.bin";
        config.sounds.push("Sound_i7ne2w.mp3");
        config.sounds.push("Sound_tys94p.mp3");
        config.sounds.push("Sound_tys94s.wav");
        config.sounds.push("Sound_tys94t.wav");
        config.sounds.push("Sound_tys94v.wav");
        config.sounds.push("Sound_tys94w.wav");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "SystemModuleDialog";
        config.resBin = "SystemModuleDialog.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "SystemModuleGuide";
        config.resBin = "SystemModuleGuide.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "SystemModuleHome";
        config.resBin = "SystemModuleHome.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "SystemModuleMenu";
        config.resBin = "SystemModuleMenu.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "SystemModulePlot";
        config.resBin = "SystemModulePlot.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "SystemModuleTask";
        config.resBin = "SystemModuleTask.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "_ResFont";
        config.resBin = "_ResFont.bin";
        config.resAtlas.push("_ResFont_atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "_ResImagePic";
        config.resBin = "_ResImagePic.bin";
        config.resAtlas.push("_ResImagePic_atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "_ResImageUI";
        config.resBin = "_ResImageUI.bin";
        config.resAtlas.push("_ResImageUI_atlas0.png");
        config.resAtlas.push("_ResImageUI_atlas2.png");
        config.resAtlas.push("_ResImageUI_atlas_f84s2.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "_ResImageUIV1";
        config.resBin = "_ResImageUIV1.bin";
        config.resAtlas.push("_ResImageUIV1_atlas0.png");
        config.resAtlas.push("_ResImageUIV1_atlas0_1.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "__ResImageTmp";
        config.resBin = "__ResImageTmp.bin";
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "__Style";
        config.resBin = "__Style.bin";
        this.addconfig(config);
    };
    return GuiResPackageConfigReader;
}());
exports.default = GuiResPackageConfigReader;
},{"../Libs/Helpers/Dictionary":626,"./GuiResPackageConfig":532}],534:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
// =====================
// fgui 设置
// ---------------------
var GuiSetting = /** @class */ (function () {
    function GuiSetting() {
    }
    GuiSetting.getResPackagePath = function (packageName, dir) {
        if (isNullOrEmpty(dir)) {
            return "" + GuiSetting.resRoot + packageName;
        }
        else {
            return "" + GuiSetting.resRoot + dir + "/" + packageName;
        }
    };
    GuiSetting.getResPath = function (filename, dir) {
        if (isNullOrEmpty(dir)) {
            return "" + GuiSetting.resRoot + filename;
        }
        else {
            return "" + GuiSetting.resRoot + dir + "/" + filename;
        }
    };
    // 地图
    GuiSetting.getMapPath = function (filename) {
        return this.getResPath(filename, "map");
    };
    GuiSetting.addPackage = function (resKey, packageConfig) {
        if (GuiSetting._uiPackageDict.hasKey(resKey)) {
            return GuiSetting._uiPackageDict.getValue(resKey);
        }
        else {
            var pkg = fairygui.UIPackage.addPackage(resKey);
            GuiSetting._uiPackageDict.add(resKey, pkg);
            return pkg;
        }
    };
    GuiSetting.removePackage = function (resKey, packageConfig) {
        var pkg = GuiSetting._uiPackageDict.getValue(resKey);
        if (pkg) {
            fairygui.UIPackage.removePackage(resKey);
            pkg.dispose();
            GuiSetting._uiPackageDict.remove(resKey);
        }
        GuiSetting._uiPackageDictForReferenceNum.remove(resKey);
    };
    GuiSetting.hasLoadPackage = function (resKey) {
        return GuiSetting._uiPackageDict.hasKey(resKey);
    };
    GuiSetting.addPackageReferenceNum = function (resKey) {
        var num = GuiSetting.getPackageReferenceNum(resKey) + 1;
        if (num == 0) {
            num = 1;
        }
        console.log("~~addPackageReferenceNum:  " + num + "  " + resKey);
        GuiSetting._uiPackageDictForReferenceNum.add(resKey, num);
        return num;
    };
    GuiSetting.removePackageReferenceNum = function (resKey) {
        var num = GuiSetting.getPackageReferenceNum(resKey) - 1;
        if (num < 0) {
            num = 0;
        }
        console.log("~~removePackageReferenceNum:  " + num + "  " + resKey);
        GuiSetting._uiPackageDictForReferenceNum.add(resKey, num);
        return num;
    };
    GuiSetting.getPackageReferenceNum = function (resKey) {
        return GuiSetting._uiPackageDictForReferenceNum.hasKey(resKey) ? GuiSetting._uiPackageDictForReferenceNum.getValue(resKey) : 0;
    };
    // 资源根目录
    GuiSetting.resRoot = "res/";
    // 后缀
    GuiSetting.packageFileExtension = "bin";
    // 包        
    GuiSetting._uiPackageDict = new Dictionary_1.default();
    // 包 引用次数
    GuiSetting._uiPackageDictForReferenceNum = new Dictionary_1.default();
    return GuiSetting;
}());
exports.default = GuiSetting;
},{"../Libs/Helpers/Dictionary":626}],535:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var GuiResPackageConfig_1 = require("./GuiResPackageConfig");
/////////////////////////////////////
// ihaiu.GenerateFguiResPackageConfig生成
// http://blog.ihaiu.com
/////////////////////////////////////
// =====================
// fgui包资源配置列表
// ---------------------
var SpriteResPackageConfigReader = /** @class */ (function () {
    function SpriteResPackageConfigReader() {
        // 字典
        this.dict = new Dictionary_1.default();
    }
    // 添加配置
    SpriteResPackageConfigReader.prototype.addconfig = function (config) {
        this.dict.add(config.packageName, config);
    };
    // 获取配置
    SpriteResPackageConfigReader.prototype.getconfig = function (packageName) {
        return this.dict.getValue(packageName);
    };
    // 初始化
    SpriteResPackageConfigReader.prototype.install = function () {
        var config;
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ActivityIcon";
        config.resBin = "ActivityIcon.bin";
        config.resAtlas.push("ActivityIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ActorBodyIcon";
        config.resBin = "ActorBodyIcon.bin";
        config.resAtlas.push("ActorBodyIcon@atlas0.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_1.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_2.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_3.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_4.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_5.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "BlockIcon";
        config.resBin = "BlockIcon.bin";
        config.resAtlas.push("BlockIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "Building";
        config.resBin = "Building.bin";
        config.resAtlas.push("Building@atlas0.png");
        config.resAtlas.push("Building@atlas0_1.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "CinemaIcon";
        config.resBin = "CinemaIcon.bin";
        config.resAtlas.push("CinemaIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "Icon_En";
        config.resBin = "Icon_En.bin";
        config.resAtlas.push("Icon_En@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "Icon_ZH_CN";
        config.resBin = "Icon_ZH_CN.bin";
        config.resAtlas.push("Icon_ZH_CN@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ItemIcon";
        config.resBin = "ItemIcon.bin";
        config.resAtlas.push("ItemIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "MeetingIcon";
        config.resBin = "MeetingIcon.bin";
        config.resAtlas.push("MeetingIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "MenuIcon";
        config.resBin = "MenuIcon.bin";
        config.resAtlas.push("MenuIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "NPCHeadIcon";
        config.resBin = "NPCHeadIcon.bin";
        config.resAtlas.push("NPCHeadIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "PlayerBodyIcon";
        config.resBin = "PlayerBodyIcon.bin";
        config.resAtlas.push("PlayerBodyIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "PlayerHeadIcon";
        config.resBin = "PlayerHeadIcon.bin";
        config.resAtlas.push("PlayerHeadIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "SettingIcon";
        config.resBin = "SettingIcon.bin";
        config.resAtlas.push("SettingIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ShootIcon";
        config.resBin = "ShootIcon.bin";
        config.resAtlas.push("ShootIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "SkillIcon";
        config.resBin = "SkillIcon.bin";
        config.resAtlas.push("SkillIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "StoryIcon";
        config.resBin = "StoryIcon.bin";
        config.resAtlas.push("StoryIcon@atlas0.png");
        config.resAtlas.push("StoryIcon@atlas0_1.png");
        config.resAtlas.push("StoryIcon@atlas0_2.png");
        config.resAtlas.push("StoryIcon@atlas0_3.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "StoryStackIcon";
        config.resBin = "StoryStackIcon.bin";
        config.resAtlas.push("StoryStackIcon@atlas0.png");
        this.addconfig(config);
    };
    return SpriteResPackageConfigReader;
}());
exports.default = SpriteResPackageConfigReader;
},{"../Libs/Helpers/Dictionary":626,"./GuiResPackageConfig":532}],536:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DebugTimerLoop = /** @class */ (function () {
    function DebugTimerLoop() {
        this.enable = true;
        this.callNum = 0;
        this.costTime = 0;
        this.costTimeToal = 0;
    }
    Object.defineProperty(DebugTimerLoop.prototype, "evaluateCost", {
        get: function () {
            if (this.callNum > 0) {
                return Math.round(this.costTimeToal / this.callNum);
            }
            return this.costTime;
        },
        enumerable: true,
        configurable: true
    });
    DebugTimerLoop.prototype.toString = function () {
        return this.key + "  callTime:" + this.callTime + " callNum:" + this.callNum + "  costTime:" + this.costTime + "  costTimeToal:" + this.costTimeToal + "  evaluateCost:" + this.evaluateCost;
    };
    return DebugTimerLoop;
}());
exports.default = DebugTimerLoop;
},{}],537:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DebugTimerLoop_1 = require("./DebugTimerLoop");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Game_1 = require("../Game");
var DebugTimerLoopManager = /** @class */ (function () {
    function DebugTimerLoopManager() {
        this.dict = new Dictionary_1.default();
    }
    Object.defineProperty(DebugTimerLoopManager, "Instance", {
        /**
         * 获取单例实例
         */
        get: function () {
            if (!DebugTimerLoopManager._Instance) {
                DebugTimerLoopManager._Instance = new DebugTimerLoopManager();
            }
            return DebugTimerLoopManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    DebugTimerLoopManager.onCallerRun = function (caller, method) {
        return DebugTimerLoopManager.Instance.addCaller(caller, method);
    };
    DebugTimerLoopManager.setCallerCost = function (caller, method, cost) {
        return DebugTimerLoopManager.Instance.addCost(caller, method, cost);
    };
    DebugTimerLoopManager.onCall = function (key) {
        return DebugTimerLoopManager.Instance.add(key);
    };
    DebugTimerLoopManager.clear = function () {
        DebugTimerLoopManager.Instance.dict.clear();
    };
    DebugTimerLoopManager.prototype.add = function (key) {
        var item = this.dict.getValue(key);
        if (!item) {
            item = new DebugTimerLoop_1.default();
            item.key = key;
            item.beginTime = Game_1.default.time.localTime;
            this.dict.add(item.key, item);
        }
        item.callTime = Game_1.default.time.localTime;
        return item.enable;
    };
    DebugTimerLoopManager.prototype.addCaller = function (caller, method) {
        var key = caller ? getClassName(caller) + "." + getFunctionName(method) : getFunctionName(method);
        var item = this.dict.getValue(key);
        if (!item) {
            item = new DebugTimerLoop_1.default();
            item.caller = caller;
            item.method = method;
            item.key = key;
            item.beginTime = new Date().getTime();
            this.dict.add(item.key, item);
        }
        item.callTime = new Date().getTime();
        return item.enable;
    };
    DebugTimerLoopManager.prototype.addCost = function (caller, method, cost) {
        var key = caller ? getClassName(caller) + "." + getFunctionName(method) : getFunctionName(method);
        var item = this.dict.getValue(key);
        if (item) {
            item.costTime = cost;
            item.costTimeToal += cost;
            item.callNum++;
        }
    };
    DebugTimerLoopManager.enable = false;
    return DebugTimerLoopManager;
}());
exports.default = DebugTimerLoopManager;
},{"../Game":546,"../Libs/Helpers/Dictionary":626,"./DebugTimerLoop":536}],538:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMButton_1 = require("../FGUI/Extends/GameLaunch/GMButton");
var MenuLayer_1 = require("../GameFrame/Menu/MenuLayer");
var GMWindow_1 = require("./GMWindow");
var GMCmdList_1 = require("./GMCmdList");
var Game_1 = require("../Game");
var GMClientHandler_1 = require("./GMClientHandler");
var GM = /** @class */ (function () {
    function GM() {
    }
    /** 初始化GM按钮 */
    GM.installGMButton = function () {
        var gm = this.gmButton = GMButton_1.default.createInstance();
        gm.draggable = true;
        gm.dragBounds = new laya.maths.Rectangle(-50, -50, Laya.stage.width + 100, Laya.stage.height + 100);
        gm.visible = true;
        window["gmButton"] = gm;
        MenuLayer_1.default.floatMsg.addChild(gm);
    };
    Object.defineProperty(GM, "window", {
        get: function () {
            if (!GM._window) {
                GM._window = new GMWindow_1.default();
            }
            return GM._window;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GM, "visiable", {
        get: function () {
            if (GM._window) {
                if (GM._window.parent) {
                    return true;
                }
                else {
                    return false;
                }
            }
            return GM._visiable;
        },
        set: function (value) {
            if (value) {
                GM.window.show();
            }
            else {
                if (GM._window) {
                    GM.window.hide();
                }
            }
            GM._visiable = value;
        },
        enumerable: true,
        configurable: true
    });
    GM.sendCmd = function (cmdName, cmdData, isAddHostor) {
        if (isAddHostor === void 0) { isAddHostor = false; }
        var cmdItem;
        if (isString(cmdData)) {
            cmdItem = { cnname: "", name: cmdName, data: JSON.parse(cmdData), datatxt: cmdData, isClient: false };
            cmdItem.isClient = cmdItem.data["isClient"] == true;
            cmdItem.cnname = cmdItem.data["cnname"] ? cmdItem.data["cnname"] : "";
            var cmdList = cmdItem.isClient ? GM.clientCmd : GM.serverCmd;
            var cmdSetting = cmdList.dict.getValue(cmdName);
            if (cmdSetting) {
                cmdItem.cnname = cmdSetting.cnname;
                cmdItem.title = cmdSetting.title;
            }
            else {
                cmdItem.title = cmdItem.cnname ? cmdItem.name + " (" + cmdItem.cnname + ")" : cmdItem.name;
            }
        }
        else {
            cmdItem = cmdData;
            if (cmdItem.isClient) {
                GM.clientCmd.save();
            }
            else {
                GM.serverCmd.save();
            }
        }
        if (isAddHostor) {
            GM.historCmd.add(cmdItem);
            GM.historCmd.save();
        }
        if (cmdItem.isClient) {
            var fun = GM.clientHandler[cmdName];
            fun.apply(cmdItem.data);
        }
        else {
            cmdItem.cmd = "//" + cmdItem.name + " ";
            if (cmdItem.data) {
                for (var key in cmdItem.data) {
                    cmdItem.cmd += cmdItem.data[key] + " ";
                }
            }
            Game_1.default.sender.gm.gmCommand(cmdItem.cmd);
        }
    };
    GM.send = function (cmd) {
        Game_1.default.sender.gm.gmCommand(cmd);
    };
    GM.clientHandler = new GMClientHandler_1.default();
    GM.serverCmd = new GMCmdList_1.default("ServerCmd");
    GM.clientCmd = new GMCmdList_1.default("ClientCmd");
    GM.historCmd = new GMCmdList_1.default("HistorCmd");
    return GM;
}());
exports.default = GM;
window["GM"] = GM;
window["gmSend"] = GM.send;
},{"../FGUI/Extends/GameLaunch/GMButton":296,"../Game":546,"../GameFrame/Menu/MenuLayer":572,"./GMClientHandler":540,"./GMCmdList":541,"./GMWindow":545}],539:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EItemCategory = proto.ItemType;
/** 添加下拉菜单 */
var GMAddType = /** @class */ (function () {
    function GMAddType() {
    }
    GMAddType.getItemTypes = function (itemAddType) {
        var types = [];
        switch (itemAddType) {
            case GMAddType.Item_Money:
                types.push(EItemCategory.diamond);
                types.push(EItemCategory.gold);
                types.push(EItemCategory.dollar);
                types.push(10); // 许可证
                types.push(11); // 粉丝
                types.push(12); // 点赞
                types.push(13); // 期待
                break;
            case GMAddType.Item_Other:
                types.push(EItemCategory.product);
                break;
            case GMAddType.Item_Normal:
                types.push(EItemCategory.Item);
                break;
            case GMAddType.Item_Asset:
                types.push(EItemCategory.property);
                break;
            case GMAddType.Item_Contract:
                types.push(EItemCategory.artistContract);
                break;
            case GMAddType.Item_Giftbag:
                types.push(EItemCategory.gift);
                break;
            case GMAddType.Item_Build:
                types.push(9);
                break;
        }
        return types;
    };
    GMAddType.Actor = "艺人";
    GMAddType.Story = "剧本";
    GMAddType.Information = "情报";
    GMAddType.Item = "物品--所有";
    GMAddType.Item_Money = "物品--货币";
    GMAddType.Item_Other = "物品--周边产品";
    GMAddType.Item_Normal = "物品--普通道具";
    GMAddType.Item_Asset = "物品--资产";
    GMAddType.Item_Contract = "物品--合同";
    GMAddType.Item_Giftbag = "物品--礼包";
    GMAddType.Item_Build = "物品--建筑材料";
    GMAddType.list = [
        GMAddType.Actor,
        GMAddType.Story,
        GMAddType.Information,
        GMAddType.Item,
        GMAddType.Item_Money,
        GMAddType.Item_Other,
        GMAddType.Item_Normal,
        GMAddType.Item_Asset,
        GMAddType.Item_Contract,
        GMAddType.Item_Giftbag,
        GMAddType.Item_Build
    ];
    return GMAddType;
}());
exports.default = GMAddType;
},{}],540:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StringUtils_1 = require("../Libs/Helpers/StringUtils");
var Random_1 = require("../Libs/Helpers/Random");
var GMTestPanel_1 = require("../FGUI/Extends/GameGM/GMTestPanel");
var GMClientHandler = /** @class */ (function () {
    function GMClientHandler() {
    }
    /**
     *  测试
     */
    GMClientHandler.prototype.gmTest = function () {
        Laya.MiniFileMgr.deleteAll();
    };
    /**
     *  打印内存
     */
    GMClientHandler.prototype.gmPrintMem = function () {
    };
    /**
     * 测试文本--FGUI
     */
    GMClientHandler.prototype.test_Text_Fgui = function () {
        var strList = [
            "COLOR_CLEAR_VALUE	0x0C22	 ",
            "COLOR_WRITEMASK	0x0C23	 ",
            " UNPACK_ALIGNMENT	0x0CF5	 ",
            " PACK_ALIGNMENT	0x0D05	 ",
            "MAX_TEXTURE_SIZE	0x0D33	 ",
            "MAX_VIEWPORT_DIMS	0x0D3A	 ",
            "SUBPIXEL_BITS	0x0D50	 ",
            "RED_BITS	0x0D52	 ",
            "GREEN_BITS	0x0D53	 ",
            "BLUE_BITS	0x0D54	 ",
            "ALPHA_BITS	0x0D55	 ",
            "DEPTH_BITS	0x0D56	 ",
            "STENCIL_BITS	0x0D57	",
            "POLYGON_OFFSET_UNITS	0x2A00	 ",
            "POLYGON_OFFSET_FACTOR	0x8038	 ",
            "TEXTURE_BINDING_2D	0x8069	 ",
            "SAMPLE_BUFFERS	0x80A8	 ",
            "SAMPLES	0x80A9	 ",
            "SAMPLE_COVERAGE_VALUE	0x80AA",
            "•男子打卡网红桥 没嗨够就骨折",
            "•女子组团在大桥机动车道跳舞",
            "•幼儿园园长：养天鹅不养猪",
            "•女地勤拒与醉汉合影遭追打",
            "•女子莫名成老板 欠税80多万",
            "•坠崖孕妇：婆婆求情我拒绝了",
            "•男子上山抓一只老鼠获刑3年",
            "•男子开玩笑把邻居笑死 赔了6万",
            "•火了！他单腿站2小时做手术",
            "•男童患罕见病 每月花费十万"
        ];
        var root = new fairygui.GRoot();
        root.width = Laya.stage.width;
        root.height = Laya.stage.height;
        var _loop_1 = function (i) {
            var label = new fairygui.GTextField();
            setTimeout(function () {
                label.text = StringUtils_1.default.FillLeft(i.toString(), 3) + strList[Random_1.default.range(0, strList.length)];
                label.fontSize = Random_1.default.range(10, 60);
                label.color = "#" + Random_1.default.range(55, 99) + "" + Random_1.default.range(55, 99) + "" + Random_1.default.range(55, 99) + "FF";
                label.x = Random_1.default.range(0, Laya.stage.width - 200);
                label.y = Random_1.default.range(0, Laya.stage.height);
                root.addChild(label);
            }, 100);
        };
        for (var i = 0; i < 500; i++) {
            _loop_1(i);
        }
        fairygui.GRoot.inst.addChild(root);
    };
    /**
     * 测试文本--Laya
     */
    GMClientHandler.prototype.test_Text_Laya = function () {
        var strList = [
            "COLOR_CLEAR_VALUE	0x0C22	 ",
            "COLOR_WRITEMASK	0x0C23	 ",
            " UNPACK_ALIGNMENT	0x0CF5	 ",
            "•刘诗诗素颜照遭商家调侃侵权",
            "•31岁梁洛施分享庆生照",
            "•迪丽热巴全黑Look美腿吸睛",
        ];
        while (Laya.stage.numChildren > 0) {
            Laya.stage.removeChildAt(0);
        }
        var panel = GMTestPanel_1.default.createInstance();
        var content = panel.m_content;
        for (var i = 0; i < 100; i++) {
            var label = new Laya.Text();
            label.text = StringUtils_1.default.FillLeft(i.toString(), 3) + strList[Random_1.default.range(0, strList.length)];
            label.fontSize = 30;
            label.color = "#FF" + "" + Random_1.default.range(55, 99) + "" + Random_1.default.range(55, 99) + "FF";
            label.x = 50;
            label.y = i * 50;
            content.displayObject.addChild(label);
        }
        content.height = 200 * 50;
        Laya.stage.addChild(panel.displayObject);
    };
    return GMClientHandler;
}());
exports.default = GMClientHandler;
},{"../FGUI/Extends/GameGM/GMTestPanel":281,"../Libs/Helpers/Random":631,"../Libs/Helpers/StringUtils":632}],541:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Game_1 = require("../Game");
var GMCmdList = /** @class */ (function () {
    function GMCmdList(name) {
        this.list = [];
        this.dict = new Dictionary_1.default();
        this.name = name;
    }
    GMCmdList.prototype.setList = function (arr, isClient) {
        if (isClient === void 0) { isClient = false; }
        this.list = arr;
        for (var i = 0; i < arr.length; i++) {
            var item = arr[i];
            item.title = item.name + " (" + item.cnname + ")";
            item.datatxt = JSON.stringify(item.data);
            item.isClient = isClient;
            this.dict.add(item.name, item);
        }
        this.read();
    };
    GMCmdList.prototype.add = function (item) {
        this.list.push(item);
    };
    GMCmdList.prototype.clear = function () {
        this.list = [];
        this.dict.clear();
        this.save();
    };
    GMCmdList.prototype.clearCache = function () {
        Game_1.default.localStorage.removeItem(this.lsKey, true);
    };
    Object.defineProperty(GMCmdList.prototype, "lsKey", {
        get: function () {
            return this.name;
        },
        enumerable: true,
        configurable: true
    });
    GMCmdList.prototype.save = function () {
        Game_1.default.localStorage.setJSON(this.lsKey, this.list, true);
    };
    GMCmdList.prototype.read = function () {
        var list = Game_1.default.localStorage.getJSON(this.lsKey, true);
        if (!list)
            return;
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            var pre = this.dict.getValue(item.name);
            if (pre) {
                pre.datatxt = item.datatxt;
            }
            else {
                this.add(item);
            }
        }
    };
    return GMCmdList;
}());
exports.default = GMCmdList;
},{"../Game":546,"../Libs/Helpers/Dictionary":626}],542:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** 命令子菜单菜单 */
var GMCmdSubMenuType = /** @class */ (function () {
    function GMCmdSubMenuType() {
    }
    GMCmdSubMenuType.Server = "服务器";
    GMCmdSubMenuType.Client = "客户端";
    GMCmdSubMenuType.HISTORY = "最近";
    GMCmdSubMenuType.list = [
        GMCmdSubMenuType.Server,
        GMCmdSubMenuType.Client,
        GMCmdSubMenuType.HISTORY,
    ];
    return GMCmdSubMenuType;
}());
exports.default = GMCmdSubMenuType;
},{}],543:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Log_1 = require("../GameFrame/Log/Log");
/** 日志子菜单 */
var GMDeubgMenuType = /** @class */ (function () {
    function GMDeubgMenuType() {
    }
    GMDeubgMenuType.getLogType = function (menu) {
        switch (menu) {
            case GMDeubgMenuType.Log:
                return Log_1.LogLevel.Info;
            case GMDeubgMenuType.Warn:
                return Log_1.LogLevel.Warn;
            case GMDeubgMenuType.Error:
                return Log_1.LogLevel.Error;
        }
    };
    GMDeubgMenuType.getLogTypes = function (menus) {
        var types = [];
        for (var i = 0; i < menus.length; i++) {
            types.push(GMDeubgMenuType.getLogType(menus[i]));
        }
        return types;
    };
    GMDeubgMenuType.Log = "Log";
    GMDeubgMenuType.Warn = "Warn";
    GMDeubgMenuType.Error = "Error";
    GMDeubgMenuType.list = [
        GMDeubgMenuType.Log,
        GMDeubgMenuType.Warn,
        GMDeubgMenuType.Error,
    ];
    return GMDeubgMenuType;
}());
exports.GMDeubgMenuType = GMDeubgMenuType;
},{"../GameFrame/Log/Log":565}],544:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** 主菜单 */
var GMMenuType = /** @class */ (function () {
    function GMMenuType() {
    }
    GMMenuType.ADD = "添加";
    GMMenuType.CMD = "命令";
    GMMenuType.SELECTSERVER = "选择服务器";
    GMMenuType.LOG = "日志";
    GMMenuType.MODULE = "模块";
    GMMenuType.DisplayTree = "显示树";
    GMMenuType.TimeLoop = "TimeLoop";
    GMMenuType.Tick = "Tick";
    GMMenuType.list = [GMMenuType.ADD, GMMenuType.CMD, GMMenuType.SELECTSERVER, GMMenuType.MODULE, GMMenuType.LOG, GMMenuType.DisplayTree, GMMenuType.TimeLoop, GMMenuType.Tick];
    return GMMenuType;
}());
exports.default = GMMenuType;
},{}],545:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MWindow_1 = require("../GameFrame/Module/MWindow");
var GMMain_1 = require("../FGUI/Extends/GameGM/GMMain");
var MenuOpenType_1 = require("../GameFrame/Menu/MenuOpenType");
var GameGMBinder_1 = require("../FGUI/Generates/GameGM/GameGMBinder");
var GuiSetting_1 = require("../FGUI/GuiSetting");
var MenuLayer_1 = require("../GameFrame/Menu/MenuLayer");
var GMMenuType_1 = require("./GMMenuType");
var GMWindow = /** @class */ (function (_super) {
    __extends(GMWindow, _super);
    function GMWindow() {
        var _this = _super.call(this) || this;
        _this.isloaded = false;
        _this.menuParameter = { openType: MenuOpenType_1.MenuOpenType.Tab, openIndex: 0, args: [] };
        return _this;
    }
    GMWindow.prototype.load = function () {
        GameGMBinder_1.default.bindAll();
        // 加载UI
        Laya.loader.load([
            { url: "res/fgui/GameGM.bin", type: Laya.Loader.BUFFER },
        ], Laya.Handler.create(this, this.onLoaded));
    };
    GMWindow.prototype.onLoaded = function () {
        GuiSetting_1.default.addPackage("res/fgui/GameGM");
        this.isloaded = true;
        this.showOn(MenuLayer_1.default.gm);
    };
    GMWindow.prototype.show = function () {
        if (this.isloaded) {
            this.showOn(MenuLayer_1.default.gm);
        }
        else {
            this.load();
        }
    };
    // 菜单创建
    GMWindow.prototype.onMenuCreate = function () {
        this.conent = GMMain_1.default.createInstance();
        this.contentPane = this.conent;
        // this.center();
        // //弹出窗口的动效已中心为轴心
        // this.setPivot(0.5, 0.5);
        // 注册Tab
        this.registerTab(GMMenuType_1.default.ADD, this.conent.m_addPage);
        this.registerTab(GMMenuType_1.default.CMD, this.conent.m_cmdPage);
        this.registerTab(GMMenuType_1.default.SELECTSERVER, this.conent.m_selectServerPage);
        this.registerTab(GMMenuType_1.default.LOG, this.conent.m_debugPage);
        this.registerTab(GMMenuType_1.default.DisplayTree, this.conent.m_displayTreePage);
        this.registerTab(GMMenuType_1.default.TimeLoop, this.conent.m_timeLoopPage);
        this.registerTab(GMMenuType_1.default.Tick, this.conent.m_tickPage);
        this.openTab(GMMenuType_1.default.ADD);
        _super.prototype.onMenuCreate.call(this);
    };
    GMWindow.prototype.menuClose = function () {
        this.onMenuClose();
    };
    // 如果需要处理额外的业务，可以重新该方法
    GMWindow.prototype.onOpenTab = function (tabIndex) {
        this.conent.m_mainMenu.setSelect(tabIndex);
    };
    //=========================
    // 显示完成
    // 可以在这里添加协议消息监听
    //-------------------------
    GMWindow.prototype.onShowComplete = function () {
        _super.prototype.onShowComplete.call(this);
    };
    //=========================
    // 隐藏完成
    // 可以在这里移除协议消息监听
    //-------------------------
    GMWindow.prototype.onHideComplete = function () {
        _super.prototype.onHideComplete.call(this);
    };
    return GMWindow;
}(MWindow_1.default));
exports.default = GMWindow;
},{"../FGUI/Extends/GameGM/GMMain":273,"../FGUI/Generates/GameGM/GameGMBinder":458,"../FGUI/GuiSetting":534,"../GameFrame/Menu/MenuLayer":572,"../GameFrame/Menu/MenuOpenType":575,"../GameFrame/Module/MWindow":579,"./GMMenuType":544}],546:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigManager_1 = require("./Config/ConfigManager");
var ScreenSettingConfig_1 = require("./GameSetting/ScreenSettingConfig");
var GameLocalStorage_1 = require("./GameFrame/LocalStorage/GameLocalStorage");
var GameDeviceConfig_1 = require("./GameSetting/GameDeviceConfig");
var BrowserDetectConfig_1 = require("./GameSetting/BrowserDetectConfig");
var LangManager_1 = require("./Config/LangManager");
var AssetManager_1 = require("./GameFrame/AssetManagers/AssetManager");
var GuiResPackageConfigReader_1 = require("./FGUI/GuiResPackageConfigReader");
var SpriteResPackageConfigReader_1 = require("./FGUI/SpriteResPackageConfigReader");
var Emitter_1 = require("./Libs/Emitter");
var MenuManager_1 = require("./GameFrame/Menu/MenuManager");
var ChannelManager_1 = require("./GameFrame/Channel/ChannelManager");
var ModelManager_1 = require("./GameModule/ModelManager");
var VersionManager_1 = require("./GameVersion/VersionManager");
var GameApplicationBrowser_1 = require("./Bridge/Browser/GameApplicationBrowser");
var AudioManager_1 = require("./GameFrame/Sound/AudioManager");
var GameTimeData_1 = require("./GameFrame/Datas/GameTimeData");
var GameSystemMessage_1 = require("./GameModule/GameSystemMessage");
var LaunchText_1 = require("./Config/Keys/LaunchText");
var LoaderSettingHandler_1 = require("./GameFrame/Loader/LoaderSettingHandler");
var LoaderManager_1 = require("./GameFrame/Loader/LoaderManager");
var AntNet_1 = require("./AntFrame/Net/AntNet");
var ProtoHandlerList_1 = require("./AntFrame/Handlers/ProtoHandlerList");
var UserData_1 = require("./GameModule/DataStructs/UserData");
var GameLaunch_1 = require("./GameLaunch");
var ProtoSenderList_1 = require("./AntFrame/ProtoSenderList");
var ConfigExpression_1 = require("./Config/ConfigExpression");
var StageClickFx_1 = require("./FGUI/Customs/StageClickFx");
var CursorManager_1 = require("./GameFrame/Cursor/CursorManager");
var GamePreload_1 = require("./GamePreload");
var ConstConfig_1 = require("./Config/ConstConfig");
var TookManager_1 = require("./SystemTook/TookManager");
var Game = /** @class */ (function () {
    function Game() {
    }
    //=====================
    // 初始化
    //----------------------
    Game.init = function () {
        Game.protoHandler = new ProtoHandlerList_1.default();
        Game.protoHandler.init();
    };
    //=====================
    // 游戏设置
    //----------------------
    // 分辨率设置
    Game.screenSetting = new ScreenSettingConfig_1.default();
    // 设备设置
    Game.deviceSetting = new GameDeviceConfig_1.default();
    // 浏览器信息
    Game.browserSetting = new BrowserDetectConfig_1.default();
    // 应用桥接
    Game.application = new GameApplicationBrowser_1.default();
    // 游戏启动文本
    Game.launchText = new LaunchText_1.default();
    //=====================
    // 游戏框架模块
    //----------------------
    Game.launch = new GameLaunch_1.default();
    // 资源
    Game.asset = new AssetManager_1.default();
    // 配置
    Game.config = new ConfigManager_1.default();
    // 多语言
    Game.lang = LangManager_1.default.Instance;
    // 常量配置
    Game.constant = new ConstConfig_1.default();
    // 配置文件表达式
    Game.configExp = new ConfigExpression_1.default();
    // 声音
    Game.sound = new AudioManager_1.default();
    // 时间
    Game.time = new GameTimeData_1.default();
    // 本地数据存储
    Game.localStorage = GameLocalStorage_1.default.Instance;
    // 加载界面
    Game.loader = LoaderManager_1.default.Instance;
    // 加载界面事件
    Game.loaderSettingHandler = new LoaderSettingHandler_1.default();
    // 菜单
    Game.menu = new MenuManager_1.default();
    // 消息对话框
    Game.system = new GameSystemMessage_1.default();
    // 渠道
    Game.channel = ChannelManager_1.default.Instance;
    // 版本管理
    Game.version = VersionManager_1.default.Instance;
    // 光标
    Game.cursor = new CursorManager_1.default();
    // 资源预加载
    Game.preload = new GamePreload_1.default();
    //=====================
    // 游戏模块
    //----------------------
    // 数据模型
    Game.moduleModel = new ModelManager_1.default();
    // 自己用户角色数据
    Game.user = new UserData_1.default();
    //=====================
    // 资源
    //----------------------
    // ui资源配置
    Game.guiRes = new GuiResPackageConfigReader_1.default();
    Game.spriteRes = new SpriteResPackageConfigReader_1.default();
    //=====================
    // 事件
    //----------------------
    // 游戏--事件
    Game.event = new Emitter_1.default();
    // 网络
    Game.net = AntNet_1.default;
    // 协议--消息发送器列表
    Game.sender = new ProtoSenderList_1.default();
    // 订阅管理器
    Game.took = new TookManager_1.default();
    //=====================
    // 其他
    //----------------------
    /** 屏幕点击特效 */
    Game.stageClickFx = new StageClickFx_1.default();
    return Game;
}());
exports.default = Game;
window["Game"] = Game;
},{"./AntFrame/Handlers/ProtoHandlerList":48,"./AntFrame/Net/AntNet":50,"./AntFrame/ProtoSenderList":54,"./Bridge/Browser/GameApplicationBrowser":60,"./Config/ConfigExpression":63,"./Config/ConfigManager":89,"./Config/ConstConfig":117,"./Config/Keys/LaunchText":121,"./Config/LangManager":130,"./FGUI/Customs/StageClickFx":177,"./FGUI/GuiResPackageConfigReader":533,"./FGUI/SpriteResPackageConfigReader":535,"./GameFrame/AssetManagers/AssetManager":551,"./GameFrame/Channel/ChannelManager":552,"./GameFrame/Cursor/CursorManager":553,"./GameFrame/Datas/GameTimeData":555,"./GameFrame/Loader/LoaderManager":560,"./GameFrame/Loader/LoaderSettingHandler":562,"./GameFrame/LocalStorage/GameLocalStorage":563,"./GameFrame/Menu/MenuManager":574,"./GameFrame/Sound/AudioManager":587,"./GameLaunch":591,"./GameModule/DataStructs/UserData":601,"./GameModule/GameSystemMessage":602,"./GameModule/ModelManager":610,"./GamePreload":616,"./GameSetting/BrowserDetectConfig":617,"./GameSetting/GameDeviceConfig":618,"./GameSetting/ScreenSettingConfig":619,"./GameVersion/VersionManager":621,"./Libs/Emitter":625,"./SystemTook/TookManager":649}],547:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("./Game");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = Game_1.default.browserSetting.isMobile ? Laya.Stage.SCALE_FIXED_AUTO : Laya.Stage.SCALE_SHOWALL;
    // static scaleMode:string= Laya.Stage.SCALE_FIXED_AUTO ;
    GameConfig.screenMode = "none";
    GameConfig.alignV = Laya.Stage.ALIGN_TOP;
    GameConfig.alignH = Laya.Stage.ALIGN_CENTER;
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
var aa;
},{"./Game":546}],548:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameEventKey = /** @class */ (function () {
    function GameEventKey() {
    }
    GameEventKey.Test = "Test";
    /* --------------------- 框架消息 --------------------*/
    // 打开窗口消息 (menuId:MenuId, openType:MenuOpenType, openIndex?: number | string)
    GameEventKey.GameFrame_OpenMenu = "GameFrame_OpenMenu";
    // 关闭窗口 (menuId: MenuId)
    GameEventKey.GameFrame_CloseMenu = "GameFrame_CloseMenu";
    // 重刷登录数据--处理数据之前
    GameEventKey.GameFrame_ReLoginData_Begin = "GameFrame_ReLoginData_Begin";
    // 重刷登录数据--处理数据之后
    GameEventKey.GameFrame_ReLoginData_End = "GameFrame_ReLoginData_End";
    /* --------------------- Home --------------------*/
    // 场景缩放变化zoom
    GameEventKey.Home_SceneZoomChange = "Home_SceneZoomChange";
    // 场景缩放完成zoom
    GameEventKey.Home_SceneZoomEnd = "Home_SceneZoomEnd";
    // 场景移动到建筑，并隐藏主界面UI, Enter
    GameEventKey.Home_SceneZoomBuildingEnter = "Home_SceneZoomBuildingEnter";
    // 场景移动到建筑，并隐藏主界面UI, Exit
    GameEventKey.Home_SceneZoomBuildingExit = "Home_SceneZoomBuildingExit";
    // 场景Exit移动到建筑，并显示主界面UI
    GameEventKey.Home_SendSceneZoomBuildingExit = "Home_SendSceneZoomBuildingExit";
    // 拖到单位，开始
    GameEventKey.Home_DragUnitEnter = "Home_DragUnitEnter";
    // 拖到单位，结束
    GameEventKey.Home_DragUnitExit = "Home_DragUnitExit";
    /* --------------------- 物品 --------------------*/
    GameEventKey.Item_Change = "Item_Change";
    /* --------------------- 邮件 --------------------*/
    //接收邮件
    GameEventKey.Mail_Update = "Mail_Update";
    //邮件状态改变
    GameEventKey.Mail_Change = "Mail_Change";
    //删除单条邮件
    GameEventKey.Mail_DelOne = "Mail_DelOne";
    /* --------------------- 建筑 --------------------*/
    //关闭UI界面
    GameEventKey.Build_CloseWindowUI = "Build_CloseWindowUI";
    //关闭窗口
    GameEventKey.Build_CloseWindow = "Build_CloseWindow";
    GameEventKey.Build_LevelUp = "Build_LevelUp";
    //预览建筑
    GameEventKey.Build_PreView = "Build_PreView";
    //关闭成功界面
    GameEventKey.Build_CloseSuccess = "Build_CloseSuccess";
    /* --------------------- 艺人 --------------------*/
    //艺人界面跳转
    GameEventKey.Actor_SelectView = "Actor_SelectView";
    /* --------------------- 剧本 --------------------*/
    //艺人界面跳转
    GameEventKey.Story_SelectView = "Story_SelectView";
    /* --------------------- 剧本招募 --------------------*/
    // 获取状态
    GameEventKey.StoryLottery_State = "StoryLoteery_State";
    // 刷新抽奖界面
    GameEventKey.StoryLoteery_UpdateView = "StoryLoteery_UpdateView";
    // 更新抽奖结果
    GameEventKey.StoryLoteery_award = "StoryLoteery_award";
    /* --------------------- 情报 --------------------*/
    //情报界面跳转
    GameEventKey.Information_SelectView = "Information_SelectView";
    //情报选择
    GameEventKey.Information_SelectInfo = "Information_SelectInfo";
    /* --------------------- 游戏消息 --------------------*/
    // 弹出
    GameEventKey.PopupPanel = "PopupPanel";
    GameEventKey.updateOrderView = "GameEventKeyUpdateOrderView";
    //更新订单
    GameEventKey.GameEventKey_UpdateOrderView = "GameEventKey_UpdateOrderView";
    //更新合作订单
    GameEventKey.GameEventKey_UpdateCoopreationOrderView = "GameEventKey_UpdateCoopreationOrderView";
    //重置搜罗次数
    GameEventKey.GameEventKey_ResetFindStoryTime = "GameEventKey_ResetFindStoryTime";
    //更新拜访艺人
    GameEventKey.GameEventKey_UpdateVisitActor = "GameEventKey_UpdateVisitActor";
    //会议更新
    GameEventKey.GameEventKey_MeetingShowPanel = "GameEventKey_MeetingShowPanel";
    //滚动到
    GameEventKey.GameEventKey_ScrollMainRoom = "GameEventKey_ScrollMainRoom";
    //开始探班状态
    GameEventKey.GameEventKey_StartReception = "GameEventKey_StartReception";
    //点击艺人
    GameEventKey.GameEventKey_FindActorToReception = "GameEventKey_FindActorToReception";
    //禁用滚动
    GameEventKey.GameEventKey_EnabledScrollMain = "GameEventKey_EnabledScrollMain";
    //会议阶段
    GameEventKey.GameEventKey_MeetingStep = "GameEventKey_MeetingStep";
    //拍摄电影
    GameEventKey.GameEventKey_ShootStart = "GameEventKey_ShootStart";
    GameEventKey.GameEventKey_ShootEnd = "GameEventKey_ShootEnd";
    GameEventKey.GameEventKey_ShootStartAddActor = "GameEventKey_ShootStartAddActor";
    //电影上映
    GameEventKey.GameEventKey_FilmStart = "GameEventKey_FilmStart";
    GameEventKey.GameEventKey_FilmOn = "GameEventKey_FilmOn";
    GameEventKey.GameEventKey_FilmEnd = "GameEventKey_FilmEnd";
    //艺人训练
    GameEventKey.GameEventKey_ActorExperciseStart = "GameEventKey_ActorExperciseStart";
    GameEventKey.GameEventKey_ActorExperciseEnd = "GameEventKey_ActorExperciseEnd";
    GameEventKey.GameEventKey_ActorBackToExperciseRoom = "GameEventKey_ActorBackToExperciseRoom";
    //更新艺人隐藏信息
    GameEventKey.GameEventKey_UpdateActorHideInfo = "GameEventKey_UpdateActorHideInfo";
    //更新奖励领取进度
    GameEventKey.GameEventKey_UpdateProgressBoxStatus = "GameEventKey_UpdateProgressBoxStatus";
    //更新红点
    GameEventKey.GameEventKey_UpdateMainUIRed = "GameEventKey_UpdateStoryRed";
    // 拍摄相关============================
    // 
    GameEventKey.GameEventKey_UpdateFilmingStatus = "GameEventKey_UpdateFilmingStatus";
    // 拍摄请求
    GameEventKey.GameEventKey_MakeFilm = "GameEventKey_MakeFilm";
    // 拍摄 修改剧本名称
    GameEventKey.GameEventKey_MakeFilmRename = "GameEventKey_MakeFilmRename";
    // 拍摄 选择艺人
    GameEventKey.GameEventKey_MakeFilmSelectActor = "GameEventKey_MakeFilmSelectActor";
    // 拍摄 选择艺人全部确认
    GameEventKey.GameEventKey_MakeFilmConfirmSetActor = "GameEventKey_MakeFilmConfirmSetActor";
    // 拍摄 选择剧本类型
    GameEventKey.GameEventKey_MakeFilmsetSelectType = "GameEventKey_MakeFilmsetSelectType";
    // 拍摄 院线请求
    GameEventKey.GameEventKey_MakeFilmsetPublishMovie = "GameEventKey_MakeFilmsetPublishMovie";
    // 拍摄 更新电影状态
    GameEventKey.GameEventKey_MakeFilmUpdateMovieState = "GameEventKey_MakeFilmUpdateMovieState";
    // 拍摄 领取剧本目标奖励
    GameEventKey.GameEventKey_MakeFilmGetStoryGoals = "GameEventKey_MakeFilmGetStoryGoals";
    // 拍摄 切换城市
    GameEventKey.GameEventKey_MakeFilmSwitchCity = "GameEventKey_MakeFilmSwitchCity";
    // 拍摄 推广电影
    GameEventKey.GameEventKey_MakeFilmSpreadMovie = "GameEventKey_MakeFilmSpreadMovie";
    // 拍摄 领取收益
    GameEventKey.GameEventKey_MakeFilmGetRewardMovie = "GameEventKey_MakeFilmGetRewardMovie";
    // 拍摄 更新放映中的电影情况
    GameEventKey.GameEventKey_MakeFilmWarEndingIncome = "GameEventKey_MakeFilmWarEndingIncome";
    // 拍摄相关============================
    //玩家升级
    GameEventKey.GameEventKey_PlayerLevelUp = "GameEventKey_PlayerLevelUp";
    GameEventKey.GameEventKey_PlayerLevelUpOnClose = "GameEventKey_PlayerLevelUpOnClose";
    //更新主线任务
    GameEventKey.GameEventKey_ClientUpdateMainTask = "GameEventKey_ClientUpdateMainTask";
    //解锁剧本
    GameEventKey.GameEventKey_StoryUnLock = "GameEventKey_StoryUnLock";
    // 时间提醒
    GameEventKey.GameEventKey_TimeLimitRemind = "GameEventKey_TimeLimitRemind";
    //隐藏显示
    GameEventKey.GameEventKey_VisibleMainUI = "GameEventKey_VisibleMainUI";
    //显示隐藏箭头
    GameEventKey.GameEventKey_VisibleTaskArrowUI = "GameEventKey_VisibleTaskArrowUI";
    //房间和UI界面之间切换
    GameEventKey.GameEventKey_SwitchUIRoom = "GameEventKey_SwitchUIRoom";
    //同步房间信息
    GameEventKey.GameEventKey_SyncRoomInfo = "GameEventKey_SyncRoomInfo";
    //解锁初始
    GameEventKey.GameEventKey_UnlockInit = "GameEventKey_UnlockInit";
    //解锁变更
    GameEventKey.GameEventKey_UnlockChange = "GameEventKey_UnlockChange";
    GameEventKey.GameEventKey_OscarDataChange = "GameEventKey_OscarDataChange";
    GameEventKey.GameEventKey_UpdateTimeMenuTick = "GameEventKey_UpdateTimeMenuTick";
    //剧本播放完成
    GameEventKey.GameEventKey_StorylineComplete = "GameEventKey_StoryComplete";
    //剧本选择动画完成
    GameEventKey.GameEventKey_FilmStoryAnimationComplete = "GameEventKey_FilmStoryAnimationComplete";
    //拍摄状态变化
    GameEventKey.GameEventKey_FilmStoryStateChange = "GameEventKey_FilmStoryStateChange";
    return GameEventKey;
}());
exports.default = GameEventKey;
},{}],549:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var AssetItemType_1 = require("./AssetItemType");
var Loader = Laya.Loader;
var AssetHelper = /** @class */ (function () {
    function AssetHelper() {
    }
    Object.defineProperty(AssetHelper, "layaLoaderType2AssetItemTypeDict", {
        get: function () {
            if (!AssetHelper._layaLoaderType2AssetItemTypeDict) {
                var dict = new Dictionary_1.default();
                dict.add(Loader.IMAGE, AssetItemType_1.AssetItemType.Image);
                dict.add(Loader.TEXTURE2D, AssetItemType_1.AssetItemType.TEXTURE2D);
                dict.add(Loader.BUFFER, AssetItemType_1.AssetItemType.Buffer);
                dict.add(Loader.SOUND, AssetItemType_1.AssetItemType.Sound);
                dict.add(Loader.TEXT, AssetItemType_1.AssetItemType.Text);
                dict.add(Loader.JSON, AssetItemType_1.AssetItemType.Json);
                dict.add(Loader.XML, AssetItemType_1.AssetItemType.Xml);
                dict.add(Loader.FONT, AssetItemType_1.AssetItemType.Font);
                dict.add(Loader.TTF, AssetItemType_1.AssetItemType.TTF);
                AssetHelper._layaLoaderType2AssetItemTypeDict = dict;
            }
            return AssetHelper._layaLoaderType2AssetItemTypeDict;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssetHelper, "assetItemType2LayaLoaderTypeDict", {
        get: function () {
            if (!AssetHelper._assetItemType2LayaLoaderTypeDict) {
                var d = this.layaLoaderType2AssetItemTypeDict.__getDict();
                var dict = new Dictionary_1.default();
                for (var key in d) {
                    dict[d[key]] = d;
                }
                AssetHelper._assetItemType2LayaLoaderTypeDict = dict;
            }
            return AssetHelper._assetItemType2LayaLoaderTypeDict;
        },
        enumerable: true,
        configurable: true
    });
    AssetHelper.layaLoaderType2AssetItemType = function (loader) {
        return AssetHelper.layaLoaderType2AssetItemTypeDict.getValue(loader);
    };
    AssetHelper.assetItemType2LayaLoaderType = function (type) {
        return AssetHelper.assetItemType2LayaLoaderTypeDict.getValue(type);
    };
    AssetHelper.getAssetItemKey = function (item) {
        return item.type + " " + item.url;
    };
    return AssetHelper;
}());
exports.default = AssetHelper;
},{"../../Libs/Helpers/Dictionary":626,"./AssetItemType":550}],550:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AssetItemType;
(function (AssetItemType) {
    AssetItemType[AssetItemType["FguiPackage"] = 0] = "FguiPackage";
    AssetItemType[AssetItemType["FspritePackage"] = 1] = "FspritePackage";
    AssetItemType[AssetItemType["Image"] = 2] = "Image";
    AssetItemType[AssetItemType["TEXTURE2D"] = 3] = "TEXTURE2D";
    AssetItemType[AssetItemType["Buffer"] = 4] = "Buffer";
    AssetItemType[AssetItemType["Sound"] = 5] = "Sound";
    AssetItemType[AssetItemType["Text"] = 6] = "Text";
    AssetItemType[AssetItemType["Json"] = 7] = "Json";
    AssetItemType[AssetItemType["Xml"] = 8] = "Xml";
    AssetItemType[AssetItemType["Font"] = 9] = "Font";
    AssetItemType[AssetItemType["TTF"] = 10] = "TTF";
    AssetItemType[AssetItemType["PKM"] = 11] = "PKM";
})(AssetItemType = exports.AssetItemType || (exports.AssetItemType = {}));
},{}],551:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var Handler = Laya.Handler;
var Loader = Laya.Loader;
var AssetItemType_1 = require("./AssetItemType");
var Game_1 = require("../../Game");
var GuiSetting_1 = require("../../FGUI/GuiSetting");
var AssetHelper_1 = require("./AssetHelper");
var Res_1 = require("../../Config/Keys/Res");
var Particle2D_1 = require("../../EngineParticle/Particle2D");
var GameSkeleton_1 = require("../../Libs/SkeletonCaches/GameSkeleton");
var AssetManager = /** @class */ (function () {
    function AssetManager() {
        this.loadedAssets = new Dictionary_1.default();
    }
    // 加载配置
    AssetManager.prototype.loadConfig = function (path, callback) {
        if (callback) {
            // path = `config/csv/${path}.csv`;
            var obj = {
                onLoaded: function () {
                    var txt = Laya.loader.getRes(path);
                    callback(txt, path);
                }
            };
            Laya.loader.load(path, Handler.create(obj, obj.onLoaded), null, Loader.TEXT);
        }
    };
    // 卸载配置文件
    AssetManager.prototype.unloadConfig = function (path) {
        Laya.loader.clearRes(path);
    };
    // 加载资源列表
    AssetManager.prototype.loadList = function (list, onObj, onCompleteFun, onProgress) {
        var count = list.length;
        var index = 0;
        var callback = {
            onComplete: function (isSuccess) {
                var item = list[index];
                // console.log("加载资源列表 onComplete: val=" + item);
                index++;
                if (onProgress) {
                    var rate = count > 0 ? index / count : 1;
                    onProgress(rate, index, count, item);
                }
                if (index >= count) {
                    if (onCompleteFun) {
                        if (onObj) {
                            onCompleteFun.apply(onObj);
                        }
                        else {
                            onCompleteFun();
                        }
                    }
                }
            },
            onProgress: function (val) {
                // console.log("加载资源列表 onProgress: val=" + val);
            }
        };
        if (list && list.length > 0) {
            var assets = [];
            var item = void 0;
            for (var i = 0; i < list.length; i++) {
                item = list[i];
                if (!item) {
                    callback.onComplete(item);
                }
                // console.log(item.type + ", " + item.url);
                switch (item.type) {
                    case AssetItemType_1.AssetItemType.FguiPackage:
                        this.loadFguiByPackagename(item.url, callback, callback.onComplete);
                        break;
                    case AssetItemType_1.AssetItemType.FspritePackage:
                        this.loadFSpriteByPackagename(item.url, callback, callback.onComplete);
                        break;
                    case AssetItemType_1.AssetItemType.Image:
                        assets.push({ url: item.url, type: Loader.IMAGE });
                        break;
                    case AssetItemType_1.AssetItemType.Buffer:
                        assets.push({ url: item.url, type: Loader.BUFFER });
                        break;
                    case AssetItemType_1.AssetItemType.Sound:
                        assets.push({ url: item.url, type: Loader.SOUND });
                        break;
                    case AssetItemType_1.AssetItemType.Text:
                        assets.push({ url: item.url, type: Loader.TEXT });
                        break;
                    case AssetItemType_1.AssetItemType.Json:
                        assets.push({ url: item.url, type: Loader.JSON });
                        break;
                    case AssetItemType_1.AssetItemType.Xml:
                        assets.push({ url: item.url, type: Loader.XML });
                        break;
                    case AssetItemType_1.AssetItemType.Font:
                        assets.push({ url: item.url, type: Loader.FONT });
                        break;
                    case AssetItemType_1.AssetItemType.TTF:
                        assets.push({ url: item.url, type: Loader.TTF });
                        break;
                }
            }
            if (assets.length > 0) {
                for (var j = 0; j < assets.length; j++) {
                    if (this.loadedAssets.hasKey(assets[j].url)) {
                        callback.onComplete(true);
                    }
                    else {
                        Laya.loader.load([assets[j]], Handler.create(callback, callback.onComplete), Handler.create(callback, callback.onProgress));
                    }
                    this.loadedAssets.add(assets[j].url, Game_1.default.time.localTime);
                }
            }
        }
        else {
            callback.onComplete(null);
        }
    };
    // 加载fgui包
    AssetManager.prototype.loadFguiByPackagename = function (packageName, caller, method) {
        var packageConfig = Game_1.default.guiRes.getconfig(packageName);
        this.loadFgui(packageConfig, caller, method);
    };
    AssetManager.prototype.loadFguiByPackagenameAsync = function (packageName) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.loadFguiByPackagename(packageName, _this, function (packageConfig) {
                            resolve(packageConfig);
                        });
                    })];
            });
        });
    };
    // 加载fsprite包
    AssetManager.prototype.loadFSpriteByPackagename = function (packageName, caller, method) {
        var packageConfig = Game_1.default.spriteRes.getconfig(packageName);
        this.loadFgui(packageConfig, caller, method);
    };
    AssetManager.prototype.loadFgui = function (packageConfig, caller, method) {
        var callback = {
            apply: function () {
                GuiSetting_1.default.addPackage(packageConfig.packagePath, packageConfig);
                if (method) {
                    if (caller) {
                        return method.apply(caller, [packageConfig]);
                    }
                    else {
                        method(packageConfig);
                    }
                }
            }
        };
        GuiSetting_1.default.addPackageReferenceNum(packageConfig.packagePath);
        if (GuiSetting_1.default.hasLoadPackage(packageConfig.packagePath)) {
            callback.apply();
            return;
        }
        Laya.loader.load(packageConfig.loadList, Handler.create(callback, callback.apply));
    };
    AssetManager.prototype.unloadFgui = function (packageName, forceDispose) {
        if (forceDispose === undefined)
            forceDispose = false;
        var packageConfig = Game_1.default.guiRes.getconfig(packageName);
        if (!packageConfig)
            packageConfig = Game_1.default.spriteRes.getconfig(packageName);
        if (packageConfig) {
            var referenceNum = GuiSetting_1.default.removePackageReferenceNum(packageConfig.packagePath);
            if (!forceDispose) {
                if (referenceNum > 0) {
                    return;
                }
            }
            GuiSetting_1.default.removePackage(packageConfig.packagePath, packageConfig);
            var list = packageConfig.loadList;
            for (var i = 0; i < list.length; i++) {
                // console.log("==clearRes:" + list[i].url);
                Laya.loader.clearRes(list[i].url);
            }
        }
    };
    //加载特效
    AssetManager.prototype.loadFx = function (path, caller, complete) {
        Laya.loader.load(path, Handler.create(null, function (setting) {
            if (complete) {
                if (caller) {
                    complete.apply(caller, setting);
                }
                else {
                    complete(setting);
                }
            }
        }), null, Loader.JSON);
    };
    // 加载资源
    AssetManager.prototype.load = function (path, complete, caller, type) {
        Laya.loader.load(path, Handler.create(null, function (res) {
            if (complete) {
                if (caller) {
                    complete.apply(caller, [res]);
                }
                else {
                    complete(res);
                }
            }
        }), null, AssetHelper_1.default.assetItemType2LayaLoaderType(type));
    };
    // 加载资源, 异步
    AssetManager.prototype.loadAsync = function (path, type) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.load(path, function (res) {
                            resolve(res);
                        }, null, type);
                    })];
            });
        });
    };
    // 加载Shader
    AssetManager.prototype.loadShaderVSAsync = function (filename) {
        return __awaiter(this, void 0, void 0, function () {
            var code;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.loadAsync(Res_1.default.getShaderVS(filename), AssetItemType_1.AssetItemType.Text)];
                    case 1:
                        code = _a.sent();
                        return [2 /*return*/, code.replace(/\r/g, "")];
                }
            });
        });
    };
    // 加载Shader
    AssetManager.prototype.loadShaderPSAsync = function (filename) {
        return __awaiter(this, void 0, void 0, function () {
            var code;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.loadAsync(Res_1.default.getShaderPS(filename), AssetItemType_1.AssetItemType.Text)];
                    case 1:
                        code = _a.sent();
                        return [2 /*return*/, code.replace(/\r/g, "")];
                }
            });
        });
    };
    // 加载粒子
    AssetManager.prototype.loadParticleAsync = function (filename) {
        return __awaiter(this, void 0, void 0, function () {
            var setting;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.loadAsync(Res_1.default.getParticles(filename), AssetItemType_1.AssetItemType.Json)];
                    case 1:
                        setting = _a.sent();
                        return [2 /*return*/, setting];
                }
            });
        });
    };
    // 创建粒子
    AssetManager.prototype.createParticle = function (filename, texturename) {
        if (texturename === void 0) { texturename = null; }
        return __awaiter(this, void 0, void 0, function () {
            var settings, p;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.loadParticleAsync(filename)];
                    case 1:
                        settings = _a.sent();
                        if (isNullOrEmpty(settings.sourceTextureName))
                            settings.sourceTextureName = settings.textureName;
                        else if (isNullOrEmpty(texturename)) {
                            settings.textureName = settings.sourceTextureName;
                        }
                        if (!isNullOrEmpty(texturename)) {
                            settings.sourceTextureName = texturename;
                        }
                        p = new Particle2D_1.default(settings);
                        return [2 /*return*/, p];
                }
            });
        });
    };
    // UI骨骼动画--获取
    AssetManager.prototype.uiSkeletonRequrestItemAsynByName = function (name) {
        return __awaiter(this, void 0, void 0, function () {
            var texturePath, skPath;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        texturePath = Res_1.default.getSpineUIPngPath(name);
                        skPath = Res_1.default.getSpineUISkPath(name);
                        return [4 /*yield*/, this.uiSkeletonRequrestItemAsyn(texturePath, skPath)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    // UI骨骼动画--获取
    AssetManager.prototype.uiSkeletonRequrestItemAsyn = function (texturePath, skPath) {
        return __awaiter(this, void 0, void 0, function () {
            var skeleton;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, GameSkeleton_1.default.uiSkeletonCache.requrestItemAsync(texturePath, skPath)];
                    case 1:
                        skeleton = _a.sent();
                        if (skeleton) {
                            skeleton["$__texturePath"] = skeleton;
                        }
                        return [2 /*return*/, skeleton];
                }
            });
        });
    };
    // UI骨骼动画--返回
    AssetManager.prototype.uiSkeletonRecoverItem = function (skeleton, texturePath) {
        if (!skeleton)
            return;
        if (!texturePath) {
            texturePath = skeleton["$__texturePath"];
        }
        GameSkeleton_1.default.uiSkeletonCache.recoverItem(texturePath, skeleton);
    };
    return AssetManager;
}());
exports.default = AssetManager;
window['AssetManager'] = AssetManager;
},{"../../Config/Keys/Res":124,"../../EngineParticle/Particle2D":168,"../../FGUI/GuiSetting":534,"../../Game":546,"../../Libs/Helpers/Dictionary":626,"../../Libs/SkeletonCaches/GameSkeleton":636,"./AssetHelper":549,"./AssetItemType":550}],552:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Handler = laya.utils.Handler;
var Game_1 = require("../../Game");
var MenuId_1 = require("../../GameModule/MenuId");
var GameURL_1 = require("../../Config/Keys/GameURL");
var TimeHelper_1 = require("../../GameHelpers/TimeHelper");
var ServerStateType;
(function (ServerStateType) {
    ServerStateType[ServerStateType["Close"] = 0] = "Close";
    ServerStateType[ServerStateType["Noraml"] = 1] = "Noraml";
})(ServerStateType = exports.ServerStateType || (exports.ServerStateType = {}));
var ServerNoticType;
(function (ServerNoticType) {
    ServerNoticType[ServerNoticType["Normal"] = 1] = "Normal";
    ServerNoticType[ServerNoticType["StopServer"] = 2] = "StopServer";
})(ServerNoticType || (ServerNoticType = {}));
var ChannelManager = /** @class */ (function () {
    function ChannelManager() {
        // 程序内置默认		
        this.defaultServerItem = { name: "默认", ip: "nisak.123u.com", port: 5000, state: ServerStateType.Noraml, https: true, test: false, main: "https://nisak.123u.com:5000" };
    }
    Object.defineProperty(ChannelManager, "Instance", {
        get: function () {
            if (!ChannelManager._Instance) {
                ChannelManager._Instance = new ChannelManager();
            }
            return ChannelManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChannelManager.prototype, "serverListUrl", {
        get: function () {
            return GameURL_1.default.serverListUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChannelManager.prototype, "noticUrl", {
        // 通知Url		
        get: function () {
            if (this.serverItem) {
                if (this.serverItem.noticUrl) {
                    return this.serverItem.noticUrl;
                }
                if (this.serverItem.https) {
                    return "https://" + this.serverItem.ip + "/notice.html";
                }
                else {
                    return "http://" + this.serverItem.ip + "/notice.html";
                }
            }
            return "http://172.16.0.93/notice.html";
        },
        enumerable: true,
        configurable: true
    });
    ChannelManager.prototype.getServerItem = function (serverName) {
        if (!serverName)
            return null;
        if (this.serverList) {
            for (var i = 0; i < this.serverList.list.length; i++) {
                if (this.serverList.list[i].name == serverName) {
                    return this.serverList.list[i];
                }
            }
        }
        return null;
    };
    Object.defineProperty(ChannelManager.prototype, "serverName", {
        get: function () {
            if (!this._serverName) {
                if (Game_1.default.localStorage.serverName) {
                    var item = this.getServerItem(Game_1.default.localStorage.serverName);
                    if (item) {
                        this._serverName = Game_1.default.localStorage.serverName;
                    }
                }
                if (!this._serverName && this.serverList) {
                    var item = this.getServerItem(this.serverList.defaultServer);
                    if (item) {
                        this._serverName = this.serverList.defaultServer;
                    }
                    else if (this.serverList.list.length > 0) {
                        this._serverName = this.serverList.list[0].name;
                    }
                }
            }
            return this._serverName;
        },
        set: function (name) {
            this._serverName = name;
            Game_1.default.localStorage.serverName = name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChannelManager.prototype, "serverIndex", {
        //======================
        // 选择的服务器的索引
        //----------------------
        get: function () {
            if (this.serverList) {
                for (var i = 0; i < this.serverList.list.length; i++) {
                    if (this.serverList.list[i].name == this.serverName) {
                        return i;
                    }
                }
            }
            return -1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChannelManager.prototype, "serverItem", {
        //======================
        // 选择的服务器
        //----------------------
        get: function () {
            var item = this.getServerItem(this.serverName);
            if (item) {
                return item;
            }
            return this.defaultServerItem;
        },
        enumerable: true,
        configurable: true
    });
    ChannelManager.prototype.requestServerListAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.requestServerList(null, 
                        // onSucess
                        function () {
                            resolve(true);
                        }, 
                        // onFail
                        function () {
                            resolve(false);
                        });
                    })];
            });
        });
    };
    // 请求服务器列表
    ChannelManager.prototype.requestServerList = function (caller, onSucess, onFail) {
        function callSuccess() {
            if (onSucess) {
                if (caller) {
                    onSucess.apply(caller);
                }
                else {
                    onSucess();
                }
            }
        }
        function callFail() {
            if (onFail) {
                if (caller) {
                    onFail.apply(caller);
                }
                else {
                    onFail();
                }
            }
        }
        if (this.serverList) {
            callSuccess();
            return;
        }
        var url = this.serverListUrl;
        if (!url) {
            url = Game_1.default.browserSetting.urlServerList;
        }
        console.log("serverListUrl=" + url);
        // alert("确定是热更新了 serverListUrl=" + url);
        Laya.loader.load(url, Handler.create(this, function () {
            var resust = Laya.loader.getRes(url);
            if (resust) {
                this.serverList = isString(resust) ? JSON.parse(resust) : resust;
                if (this.serverList && this.serverList.list) {
                    for (var _i = 0, _a = this.serverList.list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        item.main = GameURL_1.default.getServerMainUrl(item);
                    }
                }
                console.log("获取服务器列表：");
                console.log(resust);
                console.log(JSON.stringify(this.serverList));
                callSuccess();
            }
            else {
                console.log("ChannelManager LoadFail: ServerList.json ");
                callFail();
            }
        }));
    };
    Object.defineProperty(ChannelManager.prototype, "isTodayOpenedNotice", {
        // 是否需要打开通知		
        get: function () {
            if (Game_1.default.localStorage.isNoticTodayNoOpen) {
                if (Game_1.default.localStorage.hasItem("lastOpenNoticeTime", true)) {
                    var lastOpenTime = Game_1.default.localStorage.getInt("lastOpenNoticeTime", true);
                    return !TimeHelper_1.default.isToday(lastOpenTime);
                    ;
                }
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    // 请求通知
    ChannelManager.prototype.requestNotice = function () {
        console.log(this.noticUrl);
        Laya.loader.load(this.noticUrl, Handler.create(this, this.onResopneNotic));
        // Laya.loader.load("http://blog.ihaiu.com/params.json", Handler.create(this, () =>
        // {
        // 	let result = Laya.loader.getRes("http://blog.ihaiu.com/params.json");
        // 	if (!isString(result))
        // 	{
        // 		result = JSON.stringify(result);
        // 	}
        // 	console.log("加载http://blog.ihaiu.com/params.json: " + result);
        // }));
    };
    ChannelManager.prototype.onResopneNotic = function () {
        var resust = Laya.loader.getRes(this.noticUrl);
        console.log(resust);
        if (resust) {
            try {
                this.serverNoticData = isString(resust) ? JSON.parse(resust) : resust;
                if (!this.serverNoticData || this.serverNoticData.visible == false) {
                    return;
                }
                if (this.serverNoticData.type == ServerNoticType.Normal) {
                    if (this.isTodayOpenedNotice) {
                        Game_1.default.menu.open(MenuId_1.MenuId.Notice);
                        Game_1.default.localStorage.setInt("lastOpenNoticeTime", Game_1.default.time.localTime, true);
                    }
                }
                else {
                    Game_1.default.system.alrtTextFull(this.serverNoticData.content, this.serverNoticData.title, null, function () {
                        // TODO 退出程序
                        if (window["conch"] && window["conch"]["exit"])
                            window["conch"].exit();
                    });
                }
            }
            catch (error) {
                console.warn("通知有问题");
            }
        }
    };
    return ChannelManager;
}());
exports.default = ChannelManager;
},{"../../Config/Keys/GameURL":120,"../../Game":546,"../../GameHelpers/TimeHelper":590,"../../GameModule/MenuId":603}],553:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CursorType_1 = require("./CursorType");
var Event = Laya.Event;
var MenuLayer_1 = require("../Menu/MenuLayer");
var Res_1 = require("../../Config/Keys/Res");
var R_1 = require("../../Config/Keys/R");
var CursorManager = /** @class */ (function () {
    function CursorManager() {
        this.icon = new fairygui.GLoader();
        this.offsetX = 0;
        this.offsetY = 0;
    }
    CursorManager.prototype.show = function (type, x, y, offsetX, offsetY) {
        if (type === void 0) { type = CursorType_1.CursorType.Handler; }
        if (x === void 0) { x = 0; }
        if (y === void 0) { y = 0; }
        if (offsetX === void 0) { offsetX = 0; }
        if (offsetY === void 0) { offsetY = 0; }
        this.offsetX = offsetX;
        this.offsetY = offsetY;
        this.icon.x = x + this.offsetX;
        this.icon.y = y + this.offsetY;
        switch (type) {
            case CursorType_1.CursorType.Handler:
                this.icon.url = Res_1.default.getSpritePathHasExt(R_1.default.cursor.CursorHandler);
                break;
        }
        Laya.stage.on(Event.MOUSE_DOWN, this, this.onMouse);
        Laya.stage.on(Event.MOUSE_MOVE, this, this.onMouse);
        MenuLayer_1.default.root.addChild(this.icon);
    };
    CursorManager.prototype.hide = function () {
        this.icon.removeFromParent();
        Laya.stage.off(Event.MOUSE_DOWN, this, this.onMouse);
        Laya.stage.off(Event.MOUSE_MOVE, this, this.onMouse);
    };
    CursorManager.prototype.onMouse = function (e) {
        this.icon.x = e.stageX + this.offsetX;
        this.icon.y = e.stageY + this.offsetY;
    };
    return CursorManager;
}());
exports.default = CursorManager;
},{"../../Config/Keys/R":123,"../../Config/Keys/Res":124,"../Menu/MenuLayer":572,"./CursorType":554}],554:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CursorType;
(function (CursorType) {
    CursorType[CursorType["None"] = 0] = "None";
    CursorType[CursorType["Handler"] = 1] = "Handler";
})(CursorType = exports.CursorType || (exports.CursorType = {}));
},{}],555:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Typed2Signal_1 = require("../../Libs/signals/Typed2Signal");
var DateTime = /** @class */ (function () {
    function DateTime() {
    }
    DateTime.prototype.CopyValue = function (d) {
        d.year = this.year;
        d.month = this.month;
        d.date = this.date;
        d.week = this.week;
        d.hour = this.hour;
        d.minute = this.minute;
        d.second = this.second;
        d.timezone = this.timezone;
        d.timestamp = this.timezone;
    };
    return DateTime;
}());
exports.DateTime = DateTime;
//======================
// 游戏时间 数据
//----------------------
var GameTimeData = /** @class */ (function () {
    function GameTimeData() {
        /** 消息: 服务器日期改变 */
        this.sServerDateChange = new Typed2Signal_1.default();
        /** 本地当前时间 */
        this._localDateTime = new DateTime();
        /** 服务器当前时间 */
        this._serverDateTime = new DateTime();
        /** 服务器当前时间 的 本地显示时间 */
        this._server2LocalDateTime = new DateTime();
        this._preServer2LocalDateTime = new DateTime();
        this._preFrame = -1;
        // 更新服务器时间戳
        this._settingTimestampServer = new Date().getTime();
        this._settingTimestampLocal = new Date().getTime();
        this._preServerFrame = 0;
        /** 测试时差 */
        this.___testTimeDifference = 0;
        // 服务器与客户端的时差		
        this._localSubServerTime = 0;
        // 服务器与客户端的时差区		
        this._localSubServerTimeZone = 0;
    }
    Object.defineProperty(GameTimeData.prototype, "localDateTime", {
        /** 本地当前时间 */
        get: function () {
            this.refresh();
            return this._localDateTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "serverDateTime", {
        /** 服务器当前时间 */
        get: function () {
            this.refresh();
            return this._serverDateTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "server2LocalDateTime", {
        /** 服务器当前时间 的 本地显示时间 */
        get: function () {
            this.refresh();
            return this._server2LocalDateTime;
        },
        enumerable: true,
        configurable: true
    });
    GameTimeData.prototype.start = function () {
        this.stop();
        Laya.timer.loop(1000, this, this.refresh);
    };
    GameTimeData.prototype.stop = function () {
        Laya.timer.clearAll(this);
    };
    /**
     * 刷新
     */
    GameTimeData.prototype.refresh = function () {
        if (Laya.timer.currFrame != this._preFrame) {
            this._preFrame = Laya.timer.currFrame;
            var date = new Date();
            this._localDateTime.timestamp = date.getTime();
            this._localDateTime.year = date.getFullYear();
            this._localDateTime.month = date.getMonth();
            this._localDateTime.date = date.getDate();
            this._localDateTime.week = date.getDay();
            this._localDateTime.hour = date.getHours();
            this._localDateTime.minute = date.getMinutes();
            this._localDateTime.second = date.getSeconds();
            this._serverDateTime.timestamp = this.settingServerTimestamp + this.settingTimeLength;
            date = new Date(this._serverDateTime.timestamp);
            this._serverDateTime.year = date.getFullYear();
            this._serverDateTime.month = date.getMonth();
            this._serverDateTime.date = date.getDate();
            this._serverDateTime.week = date.getDay();
            this._serverDateTime.hour = date.getHours();
            this._serverDateTime.minute = date.getMinutes();
            this._serverDateTime.second = date.getSeconds();
            this._server2LocalDateTime.timestamp = this._serverDateTime.timestamp;
            date = new Date(this._serverDateTime.timestamp - this.localSubServerTimeZone);
            this._server2LocalDateTime.year = date.getFullYear();
            this._server2LocalDateTime.month = date.getMonth();
            this._server2LocalDateTime.date = date.getDate();
            this._server2LocalDateTime.week = date.getDay();
            this._server2LocalDateTime.hour = date.getHours();
            this._server2LocalDateTime.minute = date.getMinutes();
            this._server2LocalDateTime.second = date.getSeconds();
            this._server2LocalDateTime.timezone = this._serverDateTime.timezone;
            if (this._preServer2LocalDateTime.date) {
                if (this._preServer2LocalDateTime.date != this._server2LocalDateTime.date) {
                    this.sServerDateChange.dispatch(this._preServer2LocalDateTime.date, this._server2LocalDateTime.date);
                }
            }
            this._server2LocalDateTime.CopyValue(this._preServer2LocalDateTime);
        }
    };
    Object.defineProperty(GameTimeData.prototype, "serverTimezoneMilliseconds", {
        get: function () {
            return this._serverDateTime.timezone * 60 * 60 * 1000;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "localTime", {
        // 	本地，当前时间， unix时间戳 毫秒
        get: function () {
            this.refresh();
            return this._localDateTime.timestamp;
        },
        enumerable: true,
        configurable: true
    });
    // 设置服务器时间
    GameTimeData.prototype.settingServerTime = function (timestamp, timezone) {
        if (timezone !== null && timezone !== undefined) {
            this._serverDateTime.timezone = timezone;
            this._localSubServerTimeZone = new Date().getTimezoneOffset() * 60 * 1000 * -1 - timezone * 60 * 60 * 1000;
        }
        if (timestamp !== null && timestamp !== undefined) {
            this.settingServerTimestamp = timestamp * 1000;
        }
    };
    Object.defineProperty(GameTimeData.prototype, "settingServerTimestamp", {
        get: function () {
            return this._settingTimestampServer;
        },
        set: function (value) {
            this._settingTimestampServer = value;
            this._settingTimestampLocal = this.localTime;
            this._localSubServerTime = this._settingTimestampLocal - this._settingTimestampServer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "settingTimeLength", {
        // 更新服务器时间过了多长时间
        get: function () {
            return this.localTime - this._settingTimestampLocal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "serverSeconds", {
        // 	服务器，当前时间， unix时间戳 秒
        get: function () {
            return Math.floor(this.serverMilliseconds / 1000);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "serverMilliseconds", {
        // 	服务器，当前时间， unix时间戳 毫秒
        get: function () {
            this.refresh();
            return this.serverDateTime.timestamp;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "localSubServerTime", {
        get: function () {
            return this._localSubServerTime + this.___testTimeDifference;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "localSubServerTimeZone", {
        get: function () {
            return this._localSubServerTimeZone + this.___testTimeDifference;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 服务器当前时间和之前的一个时间差 秒
     * @param preunix 之前的时间
     */
    GameTimeData.prototype.getSubSecondsPre = function (preunixSeconds) {
        var dTime = this.serverSeconds - preunixSeconds;
        if (dTime < 0)
            dTime = 0;
        return dTime;
    };
    /**
     * 服务器当前时间和之后的一个时间差 秒
     * @param afterunix 之后的时间
     */
    GameTimeData.prototype.getSubSecondsAfter = function (afterunixSeconds) {
        return afterunixSeconds - this.serverSeconds;
    };
    /**
     * 服务器当前时间和之前的一个时间差 毫秒
     * @param preunix 之前的时间
     */
    GameTimeData.prototype.getSubMillisecondsPre = function (preunixMilliseconds) {
        return this.serverMilliseconds - preunixMilliseconds;
    };
    /**
     * 服务器当前时间和之后的一个时间差 毫秒
     * @param afterunix 之后的时间
     */
    GameTimeData.prototype.getSubMillisecondsAfter = function (afterunixMilliseconds) {
        return afterunixMilliseconds - this.serverMilliseconds;
    };
    return GameTimeData;
}());
exports.default = GameTimeData;
// // 	服务器，当前时间， unix时间戳 秒
// Game.time.serverSeconds;
// // 	服务器，当前时间， unix时间戳 毫秒
// Game.time.serverMilliseconds;
// // 上次操作时间， unix时间戳 秒
// let preOpsTime: number;
// // 服务器当前时间和之前的一个时间差 秒
// let s1 = Game.time.getSubSecondsPre(preOpsTime);
// // 下次操作时间， unix时间戳 秒
// let afterOpsTime: number;
// // 服务器当前时间和之前的一个时间差 秒
// let s2 = Game.time.getSubSecondsAfter(afterOpsTime);
// // 上次操作时间， unix时间戳 毫秒
// let preOpsTime2: number;
// // 服务器当前时间和之前的一个时间差 毫秒
// let ms1 = Game.time.getSubMillisecondsPre(preOpsTime);
// // 下次操作时间， unix时间戳 毫秒
// let afterOpsTime2: number;
// // 服务器当前时间和之后的一个时间差 毫秒
// let ms2 = Game.time.getSubMillisecondsAfter(afterOpsTime);
},{"../../Libs/signals/Typed2Signal":641}],556:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalModalWaiting_1 = require("../../FGUI/Extends/GameLaunch/GlobalModalWaiting");
var LoaderPanel_1 = require("./LoaderPanel");
//======================
// 加载界面--转圈
//----------------------
var LoaderCirclePanel = /** @class */ (function (_super) {
    __extends(LoaderCirclePanel, _super);
    function LoaderCirclePanel() {
        return _super.call(this) || this;
    }
    LoaderCirclePanel.prototype.onInit = function () {
        this.contentPane = GlobalModalWaiting_1.default.createInstance();
        this.center();
        //弹出窗口的动效已中心为轴心
        this.setPivot(0.5, 0.5);
    };
    return LoaderCirclePanel;
}(LoaderPanel_1.default));
exports.default = LoaderCirclePanel;
},{"../../FGUI/Extends/GameLaunch/GlobalModalWaiting":297,"./LoaderPanel":561}],557:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderId_1 = require("./LoaderId");
var MenuLayer_1 = require("../Menu/MenuLayer");
//======================
// 加载界面控制器
//----------------------
var LoaderCtl = /** @class */ (function () {
    function LoaderCtl() {
        // 是否已经打开
        this.isOpened = false;
        //延时显示加载面板Handler
        this.delayShowPanelHandler = -1;
    }
    Object.defineProperty(LoaderCtl.prototype, "isDelayShowPanel", {
        get: function () {
            return this.loaderId == LoaderId_1.LoaderId.Module;
        },
        enumerable: true,
        configurable: true
    });
    // 打开
    LoaderCtl.prototype.open = function () {
        var _this = this;
        this.isOpened = true;
        if (this.loaderPanel) {
            this.loaderPanel.showOn(MenuLayer_1.default.loader);
            this.loaderPanel.setContentVisiable(true);
            if (this.isDelayShowPanel) {
                this.loaderPanel.setContentVisiable(false);
                clearTimeout(this.delayShowPanelHandler);
                this.delayShowPanelHandler = setTimeout(function () {
                    _this.loaderPanel.setContentVisiable(true);
                }, 100);
            }
        }
    };
    // 关闭
    LoaderCtl.prototype.close = function () {
        if (this.delayShowPanelHandler != -1) {
            clearTimeout(this.delayShowPanelHandler);
            this.delayShowPanelHandler = -1;
        }
        this.isOpened = false;
        if (this.loaderPanel) {
            this.loaderPanel.hide();
            if (this.isDelayShowPanel) {
                this.loaderPanel.setContentVisiable(false);
            }
        }
    };
    // 设置进度
    LoaderCtl.prototype.setProgress = function (progress) {
        // console.log("LoaderCtl.setProgress  progress=" + progress);
        if (this.loaderPanel)
            this.loaderPanel.setValue(progress);
    };
    // 设置进度最大值
    LoaderCtl.prototype.setMax = function (max) {
        if (this.loaderPanel)
            this.loaderPanel.setMax(max);
    };
    // 设置Tip
    LoaderCtl.prototype.setTip = function (txt) {
        if (this.loaderPanel)
            this.loaderPanel.setTip(txt);
    };
    LoaderCtl.prototype.setTips = function (txts) {
        if (this.loaderPanel)
            this.loaderPanel.setTips(txts);
    };
    // 设置版本号
    LoaderCtl.prototype.setVersion = function () {
        if (this.loaderPanel)
            this.loaderPanel.setVersion();
    };
    return LoaderCtl;
}());
exports.default = LoaderCtl;
},{"../Menu/MenuLayer":572,"./LoaderId":559}],558:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderPanel_1 = require("./LoaderPanel");
var LaunchLoaderPanel_1 = require("../../FGUI/Extends/GameLaunch/LaunchLoaderPanel");
var Game_1 = require("../../Game");
var Random_1 = require("../../Libs/Helpers/Random");
//======================
// 加载界面--进入游戏
//----------------------
var LoaderEnterPanel = /** @class */ (function (_super) {
    __extends(LoaderEnterPanel, _super);
    function LoaderEnterPanel() {
        var _this = _super.call(this) || this;
        _this.tips = [];
        _this.__setTipHandlerTimer = -1;
        return _this;
    }
    LoaderEnterPanel.prototype.onInit = function () {
        this.loader = LaunchLoaderPanel_1.default.createInstance();
        this.contentPane = this.loader;
        // this.center();
        //弹出窗口的动效已中心为轴心
        // this.setPivot(0.5, 0.5);
        _super.prototype.onInit.call(this);
        this.tips = Game_1.default.launchText.tips;
        this.setVersion();
    };
    // 显示完成
    LoaderEnterPanel.prototype.onShown = function () {
        _super.prototype.onShown.call(this);
        this.beginTips();
        this.setVersion();
        Game_1.default.version.sLocalVersionChange.add(this.setVersion, this);
    };
    // 隐藏完成
    LoaderEnterPanel.prototype.onHide = function () {
        _super.prototype.onHide.call(this);
        this.stopTips();
        Game_1.default.version.sLocalVersionChange.remove(this.setVersion, this);
    };
    LoaderEnterPanel.prototype.beginTips = function () {
        this.stopTips();
        if (this.tips && this.tips.length > 0) {
            this.__setTipHandler();
        }
    };
    LoaderEnterPanel.prototype.stopTips = function () {
        if (this.__setTipHandlerTimer > 0) {
            clearTimeout(this.__setTipHandlerTimer);
            this.__setTipHandlerTimer = -1;
        }
    };
    LoaderEnterPanel.prototype.__setTipHandler = function () {
        var _this = this;
        this.loader.m_help.text = this.tips[Random_1.default.range(0, this.tips.length)];
        this.__setTipHandlerTimer = setTimeout(function () {
            _this.__setTipHandler();
        }, Random_1.default.range(100, 400));
    };
    // 设置最大值
    LoaderEnterPanel.prototype.setMax = function (value) {
        // console.log("LoaderEnterPanel.setMax  value=" + value);
        this.loader.m_progressBar.max = value;
    };
    // 设置加载进度
    LoaderEnterPanel.prototype.setValue = function (value) {
        // console.log("LoaderEnterPanel.setValue  value=" + value);
        this.loader.m_progressBar.value = value;
    };
    // 设置Tip
    LoaderEnterPanel.prototype.setTip = function (tip) {
        this.loader.m_title.text = tip;
    };
    LoaderEnterPanel.prototype.setTips = function (tips) {
        // this.loader.m_help.text = tips[0];
    };
    // 设置版本号
    LoaderEnterPanel.prototype.setVersion = function () {
        this.loader.m_txt_gamever.text = "GameVersion:" + Game_1.default.version.localAppVersionData.toString();
        this.loader.m_txt_resVer.text = "ResVersion:" + Game_1.default.version.localResVersionData.toString();
    };
    return LoaderEnterPanel;
}(LoaderPanel_1.default));
exports.default = LoaderEnterPanel;
},{"../../FGUI/Extends/GameLaunch/LaunchLoaderPanel":298,"../../Game":546,"../../Libs/Helpers/Random":631,"./LoaderPanel":561}],559:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderId;
(function (LoaderId) {
    // 没有显示界面
    LoaderId[LoaderId["None"] = 0] = "None";
    // 转圈圈
    LoaderId[LoaderId["Circle"] = 1] = "Circle";
    // 启动界面
    LoaderId[LoaderId["Launch"] = 2] = "Launch";
    // 进入游戏加载界面
    LoaderId[LoaderId["EnterGame"] = 3] = "EnterGame";
    // 加载模块界面
    LoaderId[LoaderId["Module"] = 4] = "Module";
})(LoaderId = exports.LoaderId || (exports.LoaderId = {}));
},{}],560:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var LoaderId_1 = require("./LoaderId");
var LoaderCtl_1 = require("./LoaderCtl");
var LoaderCirclePanel_1 = require("./LoaderCirclePanel");
var LoaderEnterPanel_1 = require("./LoaderEnterPanel");
//=================
// 加载界面管理器
//------------------
var LoaderManager = /** @class */ (function () {
    function LoaderManager() {
        // 加载器字典
        this.dict = new Dictionary_1.default();
        this.isInited = false;
    }
    Object.defineProperty(LoaderManager, "Instance", {
        get: function () {
            if (!LoaderManager._Instance) {
                LoaderManager._Instance = new LoaderManager();
            }
            return LoaderManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    // 初始化
    LoaderManager.prototype.install = function () {
        if (this.isInited)
            return;
        this.isInited = true;
        // None
        var ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.None;
        this.dict.add(ctl.loaderId, ctl);
        // Circle
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.Circle;
        ctl.loaderPanel = new LoaderCirclePanel_1.default();
        this.dict.add(ctl.loaderId, ctl);
        var defaultPanel = new LoaderEnterPanel_1.default();
        // Launch
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.Launch;
        ctl.loaderPanel = defaultPanel;
        this.dict.add(ctl.loaderId, ctl);
        // EnterGame
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.EnterGame;
        ctl.loaderPanel = defaultPanel;
        this.dict.add(ctl.loaderId, ctl);
        // Module
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.Module;
        ctl.loaderPanel = defaultPanel;
        this.dict.add(ctl.loaderId, ctl);
    };
    // 获取加载进度面板控制器
    LoaderManager.prototype.getLoaderCtl = function (loaderId) {
        return this.dict.getValue(loaderId);
    };
    // 打开加载进度面板控制器
    LoaderManager.prototype.open = function (loaderId) {
        var loaderCtl = this.getLoaderCtl(loaderId);
        loaderCtl.open();
        this.current = loaderCtl;
        return loaderCtl;
    };
    // 关闭加载进度控制器
    LoaderManager.prototype.close = function (loaderId) {
        var loaderCtl = this.getLoaderCtl(loaderId);
        if (loaderCtl) {
            if (this.current == loaderCtl) {
                this.current = null;
            }
            loaderCtl.close();
        }
    };
    // 关闭所有
    LoaderManager.prototype.closeAll = function () {
        var list = this.dict.getValues();
        for (var i = 0; i < list.length; i++) {
            list[i].close();
        }
        this.current = null;
    };
    // 设置进度
    LoaderManager.prototype.setProgress = function (progress) {
        if (this.current) {
            this.current.setProgress(progress);
        }
    };
    // 设置进度最大值
    LoaderManager.prototype.setMax = function (max) {
        if (this.current) {
            this.current.setMax(max);
        }
    };
    return LoaderManager;
}());
exports.default = LoaderManager;
},{"../../Libs/Helpers/Dictionary":626,"./LoaderCirclePanel":556,"./LoaderCtl":557,"./LoaderEnterPanel":558,"./LoaderId":559}],561:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = require("../../Libs/signals/Signal");
var FWindow_1 = require("../Module/FWindow");
//======================
// 加载界面
//----------------------
var LoaderPanel = /** @class */ (function (_super) {
    __extends(LoaderPanel, _super);
    function LoaderPanel() {
        var _this = _super.call(this) || this;
        // 消息--显示完成
        _this.sShowComplete = new Signal_1.default();
        // 消息--隐藏完成
        _this.sHideComplete = new Signal_1.default();
        return _this;
    }
    LoaderPanel.prototype.onInit = function () {
        _super.prototype.onInit.call(this);
    };
    // 设置内容是否显示
    LoaderPanel.prototype.getContentVisiable = function () {
        if (this.contentPane) {
            return this.contentPane.visible;
        }
        return false;
    };
    LoaderPanel.prototype.setContentVisiable = function (value) {
        if (this.contentPane) {
            this.contentPane.visible = value;
        }
    };
    LoaderPanel.prototype.doShowAnimation = function () {
        this.onWindowWillShow();
        _super.prototype.doShowAnimation.call(this);
    };
    LoaderPanel.prototype.doHideAnimation = function () {
        this.onWindowWillHide();
        _super.prototype.doHideAnimation.call(this);
    };
    // 显示完成
    LoaderPanel.prototype.onShown = function () {
        this.sShowComplete.dispatch();
    };
    // 隐藏完成
    LoaderPanel.prototype.onHide = function () {
        this.sHideComplete.dispatch();
    };
    // 设置最大值
    LoaderPanel.prototype.setMax = function (value) {
    };
    // 设置加载进度
    LoaderPanel.prototype.setValue = function (value) {
    };
    // 设置Tip
    LoaderPanel.prototype.setTip = function (tip) {
    };
    LoaderPanel.prototype.setTips = function (tips) {
    };
    // 设置版本号
    LoaderPanel.prototype.setVersion = function () {
    };
    return LoaderPanel;
}(FWindow_1.default));
exports.default = LoaderPanel;
},{"../../Libs/signals/Signal":640,"../Module/FWindow":577}],562:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var LoaderId_1 = require("./LoaderId");
var Mathf_1 = require("../../Libs/Mathf");
//======================
// 加载界面消息处理器
//----------------------
var LoaderSettingHandler = /** @class */ (function () {
    function LoaderSettingHandler() {
        this.percent = 0;
        this.showPercent = 0;
    }
    LoaderSettingHandler.prototype.loading = function (percent) {
        this.percent = percent;
    };
    LoaderSettingHandler.prototype.setTip = function (txt) {
        var ctl = Game_1.default.loader.getLoaderCtl(LoaderId_1.LoaderId.Launch);
        ctl.setTip(txt);
    };
    LoaderSettingHandler.prototype.setPercent = function (percent) {
        var ctl = Game_1.default.loader.getLoaderCtl(LoaderId_1.LoaderId.Launch);
        ctl.setMax(100);
        ctl.setProgress(percent);
    };
    LoaderSettingHandler.prototype.starTweenPrecent = function () {
        var _this = this;
        this.stopTweenPrecent();
        this._tweenHandler = setInterval(function () {
            _this.showPercent = Math.ceil(Mathf_1.default.Lerp(_this.showPercent, _this.percent, 0.1));
            _this.setPercent(_this.showPercent);
            if (_this.showPercent >= 100)
                _this.stopTweenPrecent();
        }, 100);
    };
    LoaderSettingHandler.prototype.stopTweenPrecent = function () {
        if (this._tweenHandler) {
            clearInterval(this._tweenHandler);
            this._tweenHandler = null;
        }
    };
    // 开始加载	
    LoaderSettingHandler.prototype.onBegin = function () {
        this.loading(0);
        this.starTweenPrecent();
    };
    // 加载配置	
    LoaderSettingHandler.prototype.onLoadedConfig = function (index, count, rate) {
        this.setTip(Game_1.default.launchText.LoadedConfig);
        this.loading(0 + Math.floor(rate * 40));
    };
    // 加载语言配置
    LoaderSettingHandler.prototype.onLoadedLangConfig = function (index, count, rate) {
        this.setTip(Game_1.default.launchText.LoadedConfig);
        this.loading(40 + Math.floor(rate * 20));
    };
    // 加载UI
    LoaderSettingHandler.prototype.onLoadedFgui = function (index, count) {
        this.setTip(Game_1.default.launchText.LoadedUI);
        this.loading(60 + Math.floor((index / count) * 40));
    };
    // 完成	
    LoaderSettingHandler.prototype.onEnd = function () {
        this.setTip(Game_1.default.launchText.LoadedEnd);
        this.loading(100);
    };
    return LoaderSettingHandler;
}());
exports.default = LoaderSettingHandler;
},{"../../Game":546,"../../Libs/Mathf":635,"./LoaderId":559}],563:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LocalStorage_1 = require("./LocalStorage");
var Game_1 = require("../../Game");
//======================
// 游戏本地数据缓存
//----------------------
var GameLocalStorage = /** @class */ (function (_super) {
    __extends(GameLocalStorage, _super);
    function GameLocalStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(GameLocalStorage, "Instance", {
        get: function () {
            if (!GameLocalStorage._Instance) {
                GameLocalStorage._Instance = new GameLocalStorage();
            }
            return GameLocalStorage._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "gmX", {
        get: function () {
            if (this._gmX === undefined) {
                this._gmX = this.getFloat("gmX", true);
            }
            return this._gmX;
        },
        set: function (value) {
            this._gmX = value;
            this.setFloat("gmX", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "gmY", {
        get: function () {
            if (this._gmY === undefined) {
                if (this.hasItem("gmY", true)) {
                    this._gmY = this.getFloat("gmY", true);
                }
                else {
                    this._gmY = 100;
                }
            }
            return this._gmY;
        },
        set: function (value) {
            this._gmY = value;
            this.setFloat("gmY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "fontSetting", {
        get: function () {
            if (!this._fontSetting) {
                this._fontSetting = this.getItem("fontSetting", true);
            }
            return this._fontSetting;
        },
        set: function (value) {
            this._fontSetting = value;
            this.setItem("fontSetting", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "serverName", {
        get: function () {
            if (!this._serverName) {
                this._serverName = this.getItem("serverName", true);
            }
            return this._serverName;
        },
        set: function (value) {
            this._serverName = value;
            this.setItem("serverName", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "useraccountList", {
        get: function () {
            if (!this._useraccountList) {
                this._useraccountList = this.getJSON("_useraccountList", true);
            }
            if (!this._useraccountList) {
                this._useraccountList = [];
            }
            return this._useraccountList;
        },
        set: function (value) {
            this._useraccountList = value;
            this.setJSON("_useraccountList", value, true);
        },
        enumerable: true,
        configurable: true
    });
    GameLocalStorage.prototype.addUseraccount = function (username, password) {
        var has = false;
        var list = this.useraccountList ? this.useraccountList : [];
        for (var i = 0; i < list.length; i++) {
            if (list[i].username == username) {
                list[i].password = password;
                list[i].lasttime = Game_1.default.time.localTime;
                has = true;
            }
        }
        if (!has) {
            list.push({ username: username, password: password, lasttime: Game_1.default.time.localTime });
        }
        list.sort(function (a, b) { return b.lasttime - a.lasttime; });
        this.useraccountList = list;
    };
    Object.defineProperty(GameLocalStorage.prototype, "password", {
        get: function () {
            if (!this._password) {
                this._password = this.getItem("password");
                if (this._password == null)
                    this._password = "";
            }
            return this._password;
        },
        set: function (value) {
            this._password = value;
            this.setItem("password", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "deviceId", {
        get: function () {
            if (!this._deviceId) {
                if (window["conch"]) {
                    var deviceInfo = JSON.parse(window["conch"].config.getDeviceInfo());
                    this._deviceId = deviceInfo["guid"];
                    if (this._deviceId == "08:00:27:1d:38:2c") {
                        this._deviceId = Game_1.default.application.IDFA;
                    }
                }
                if (!this._deviceId || this._deviceId == "undefined" || this._deviceId == undefined) {
                    this._deviceId = this.getString("_deviceId", true);
                    if (!this._deviceId) {
                        var timestamp = new Date().getTime();
                        var random = Math.random();
                        this._deviceId = timestamp.toString() + "." + random.toString();
                    }
                }
            }
            return this._deviceId;
        },
        set: function (value) {
            this._deviceId = value;
            this.setString("_deviceId", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "guestusername", {
        get: function () {
            if (!this._guestusername) {
                this._guestusername = this.getString("guest", true);
            }
            return this._guestusername;
        },
        set: function (value) {
            this._guestusername = value;
            this.setString("guest", value, true);
            Game_1.default.sound.onLogin();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "isGuest", {
        get: function () {
            if (this._isGuest === undefined) {
                this._isGuest = this.getBoolean("isGuest", true);
            }
            return this._isGuest;
        },
        set: function (value) {
            this._isGuest = value;
            this.setBoolean("isGuest", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "isGameGuest", {
        get: function () {
            if (this._isGameGuest === undefined) {
                this._isGameGuest = this.getBoolean("isGameGuest", true);
            }
            return this._isGameGuest;
        },
        set: function (value) {
            this._isGameGuest = value;
            this.setBoolean("isGameGuest", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "isNoticTodayNoOpen", {
        get: function () {
            if (this._isNoticTodayNoOpen === undefined) {
                this._isNoticTodayNoOpen = this.getBoolean("isNoticTodayNoOpen", true);
            }
            return this._isNoticTodayNoOpen;
        },
        set: function (value) {
            this._isNoticTodayNoOpen = value;
            this.setBoolean("isNoticTodayNoOpen", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "lastOpenShopSpecialTime", {
        get: function () {
            if (this._lastOpenShopSpecialTime === undefined) {
                this._lastOpenShopSpecialTime = this.getFloat("lastOpenShopSpecialTime", true);
            }
            return this._lastOpenShopSpecialTime;
        },
        set: function (value) {
            this._lastOpenShopSpecialTime = value;
            this.setFloat("lastOpenShopSpecialTime", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "lastOpenShopSingleTime", {
        get: function () {
            if (this._lastOpenShopSingleTime === undefined) {
                this._lastOpenShopSingleTime = this.getFloat("lastOpenShopSingleTime", true);
            }
            return this._lastOpenShopSingleTime;
        },
        set: function (value) {
            this._lastOpenShopSingleTime = value;
            this.setFloat("lastOpenShopSingleTime", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return GameLocalStorage;
}(LocalStorage_1.default));
exports.default = GameLocalStorage;
},{"../../Game":546,"./LocalStorage":564}],564:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
//======================
// 游戏本地数据缓存
//----------------------
var LocalStorage = /** @class */ (function () {
    function LocalStorage() {
    }
    Object.defineProperty(LocalStorage.prototype, "username", {
        get: function () {
            if (!this._username) {
                this._username = this.getString("username", true);
            }
            return this._username;
        },
        set: function (value) {
            this._username = value;
            this.setString("username", value, true);
            Game_1.default.sound.onLogin();
        },
        enumerable: true,
        configurable: true
    });
    LocalStorage.prototype.getKey = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        if (isGobal) {
            return key;
        }
        else {
            return this.username + "_" + key;
        }
    };
    // string
    LocalStorage.prototype.setItem = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal));
    };
    // string
    LocalStorage.prototype.setString = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getString = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val === undefined || val === null) {
            val = "";
        }
        return val;
    };
    // boolean
    LocalStorage.prototype.setBoolean = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value ? "true" : "false");
    };
    LocalStorage.prototype.getBoolean = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal)) == "true";
    };
    // int
    LocalStorage.prototype.setInt = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value.toString());
    };
    LocalStorage.prototype.getInt = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val) {
            return parseInt(val);
        }
        return 0;
    };
    // float
    LocalStorage.prototype.setFloat = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value.toString());
    };
    LocalStorage.prototype.getFloat = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val) {
            return parseFloat(val);
        }
        return 0;
    };
    LocalStorage.prototype.setJSON = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setJSON(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getJSON = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getJSON(this.getKey(key, isGobal));
    };
    LocalStorage.prototype.removeItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.removeItem(this.getKey(key, isGobal));
    };
    LocalStorage.prototype.hasItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return !isNullOrEmpty(Laya.LocalStorage.getItem(this.getKey(key, isGobal)));
    };
    LocalStorage.prototype.clear = function () {
        return Laya.LocalStorage.clear();
    };
    return LocalStorage;
}());
exports.default = LocalStorage;
},{"../../Game":546}],565:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Loger_1 = require("./Loger");
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["Debug"] = 0] = "Debug";
    LogLevel[LogLevel["Info"] = 0] = "Info";
    LogLevel[LogLevel["Warn"] = 2] = "Warn";
    LogLevel[LogLevel["Error"] = 3] = "Error";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
var LogLevelText;
(function (LogLevelText) {
    LogLevelText["Debug"] = "Debug";
    LogLevelText["Info"] = "Info";
    LogLevelText["Warn"] = "Warn";
    LogLevelText["Error"] = "Error";
})(LogLevelText = exports.LogLevelText || (exports.LogLevelText = {}));
var Log = /** @class */ (function () {
    function Log() {
    }
    Object.defineProperty(Log, "Level", {
        get: function () {
            return this.level;
        },
        set: function (level) {
            this.level = level;
        },
        enumerable: true,
        configurable: true
    });
    Log.Debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a, _b;
        if (this.level > LogLevel.Debug)
            return;
        (_a = this.logger).debug.apply(_a, args);
        (_b = this.mineloger).debug.apply(_b, args);
    };
    Log.Info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a, _b;
        if (this.level > LogLevel.Info)
            return;
        (_a = this.logger).info.apply(_a, args);
        (_b = this.mineloger).info.apply(_b, args);
    };
    Log.Warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a, _b;
        if (this.level > LogLevel.Warn)
            return;
        (_a = this.logger).warn.apply(_a, args);
        (_b = this.mineloger).warn.apply(_b, args);
    };
    Log.Error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a, _b;
        if (this.level > LogLevel.Warn)
            return;
        (_a = this.logger).error.apply(_a, args);
        (_b = this.mineloger).error.apply(_b, args);
    };
    Log.clear = function () {
        this.logger.clear();
        this.mineloger.clear();
    };
    Log.mineloger = new Loger_1.default();
    Log.logger = console;
    Log.level = LogLevel.Debug;
    return Log;
}());
exports.default = Log;
},{"./Loger":567}],566:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Pool = Laya.Pool;
var LogItem = /** @class */ (function () {
    function LogItem(logType, msg) {
        this.logType = logType;
        this.msg = msg + "";
    }
    /** 丢回对象池 */
    LogItem.prototype.poolRecover = function () {
        Pool.recover(LogItem.POOL_SIGN, this);
    };
    /** 从对象池里获取对象 */
    LogItem.poolGet = function () {
        var item = Pool.getItemByClass(LogItem.POOL_SIGN, LogItem);
        return item;
    };
    LogItem.POOL_SIGN = "LogItem";
    return LogItem;
}());
exports.default = LogItem;
},{}],567:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var Log_1 = require("./Log");
var LogItem_1 = require("./LogItem");
var Loger = /** @class */ (function () {
    function Loger() {
        this.maxcount = 1000;
        this.enable = true;
        this.dict = new Dictionary_1.default();
        this.list = [];
    }
    Loger.prototype.getList = function (type) {
        if (this.dict.hasKey(type))
            return this.dict.getValue(type);
        var l = [];
        this.dict.add(type, l);
        return l;
    };
    Object.defineProperty(Loger.prototype, "listAll", {
        get: function () {
            return this.list;
        },
        enumerable: true,
        configurable: true
    });
    Loger.prototype.getListByTypes = function (types) {
        var list = [];
        for (var i = 0; i < this.list.length; i++) {
            if (types.indexOf(this.list[i].logType) != -1) {
                list.push(this.list[i]);
            }
        }
        return list;
    };
    Loger.prototype.addLog = function (type, message) {
        var optionalParams = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            optionalParams[_i - 2] = arguments[_i];
        }
        if (!this.enable)
            return;
        if (message) {
            var item = LogItem_1.default.poolGet();
            item.logType = type;
            item.msg = this.stringFormat.apply(this, [message].concat(optionalParams));
            this.add(item);
        }
        else {
            var item = LogItem_1.default.poolGet();
            item.logType = type;
            item.msg = message;
            this.add(item);
        }
    };
    Loger.prototype.add = function (item) {
        if (!this.enable)
            return;
        var l = this.getList(item.logType);
        l.push(item);
        this.list.push(item);
        if (this.list.length > this.maxcount) {
            this.list.shift().poolRecover();
        }
        if (l.length > this.maxcount) {
            l.shift().poolRecover();
        }
    };
    Loger.prototype.clear = function () {
        console.clear();
        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
            var item = _a[_i];
            item.poolRecover();
        }
        this.list = [];
        this.dict.clear();
    };
    Loger.prototype.stringFormat = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        if (optionalParams) {
            for (var i = 0; i < optionalParams.length; i++) {
                if (/%s|%d|%i|%o/.test(message)) {
                    message = message.replace(/%s|%d|%i|%o/, optionalParams[i]);
                }
                else {
                    break;
                }
            }
        }
        return message;
    };
    Loger.prototype.debug = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        this.addLog.apply(this, [Log_1.LogLevel.Debug, message].concat(optionalParams));
    };
    Loger.prototype.error = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        this.addLog.apply(this, [Log_1.LogLevel.Error, message].concat(optionalParams));
    };
    Loger.prototype.info = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        this.addLog.apply(this, [Log_1.LogLevel.Info, message].concat(optionalParams));
    };
    Loger.prototype.log = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        this.addLog.apply(this, [Log_1.LogLevel.Info, message].concat(optionalParams));
    };
    Loger.prototype.warn = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        this.addLog.apply(this, [Log_1.LogLevel.Warn, message].concat(optionalParams));
    };
    return Loger;
}());
exports.default = Loger;
},{"../../Libs/Helpers/Dictionary":626,"./Log":565,"./LogItem":566}],568:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 菜单按钮放置位置
// ---------------------------
var MenuBarType;
(function (MenuBarType) {
    // 没有按钮
    MenuBarType[MenuBarType["None"] = 0] = "None";
    // 主按钮栏--下
    MenuBarType[MenuBarType["Bottom"] = 1] = "Bottom";
    // 右下
    MenuBarType[MenuBarType["Right_Bottom"] = 2] = "Right_Bottom";
    // 右上
    MenuBarType[MenuBarType["Right_Top"] = 3] = "Right_Top";
    // 子菜单_社交
    MenuBarType[MenuBarType["SumBar_Social"] = 1000001] = "SumBar_Social";
})(MenuBarType = exports.MenuBarType || (exports.MenuBarType = {}));
},{}],569:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 关闭面板时，处理其他面板方式
 */
var MenuCloseOtherType;
(function (MenuCloseOtherType) {
    // 不关闭任何面板
    MenuCloseOtherType[MenuCloseOtherType["None"] = 0] = "None";
    // 除自己外的所有
    MenuCloseOtherType[MenuCloseOtherType["ExceptSelf_All"] = 1] = "ExceptSelf_All";
    // 除自己外的所有模块层级面板
    MenuCloseOtherType[MenuCloseOtherType["ExceptSelf_Module"] = 2] = "ExceptSelf_Module";
    // 相同层级的其他面板
    MenuCloseOtherType[MenuCloseOtherType["ExceptSelf_SameLayer"] = 3] = "ExceptSelf_SameLayer";
})(MenuCloseOtherType = exports.MenuCloseOtherType || (exports.MenuCloseOtherType = {}));
},{}],570:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuId_1 = require("../../GameModule/MenuId");
var MenuCtlStateType_1 = require("./MenuCtlStateType");
var MenuLayer_1 = require("./MenuLayer");
var Game_1 = require("../../Game");
var GameEventKey_1 = require("../../GameEventKey");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var SoundKey_1 = require("../../FGUI/Generates/SoundKey");
var MenuCloseOtherType_1 = require("./MenuCloseOtherType");
var MenuLayerType_1 = require("./MenuLayerType");
// 菜单控制器
var MenuCtl = /** @class */ (function () {
    function MenuCtl() {
        // 返回菜单ID
        this.backMenuId = -1;
        // 返回菜单ID排除
        this.backExcludeMenuIdMenuId = -1;
        // 关闭时间
        this.closeTime = 0;
        // 此次关闭是否销毁
        this.closeIsDestory = true;
    }
    // 打开
    MenuCtl.prototype.open = function (parametar) {
        this.openParametar = parametar;
        if (!this.moduleWindow) {
            this.moduleWindow = new this.menuWindowConfig.windowClass();
            this.moduleWindow.menuId = this.menuId;
            this.moduleWindow.name = this.menuConfig.name;
            this.moduleWindow.windowContainer = MenuLayer_1.default.getLayer(this.menuConfig.menuLayer);
        }
        this.load();
    };
    // 关闭
    MenuCtl.prototype.close = function () {
        if (this.state == MenuCtlStateType_1.MenuCtlStateType.Closed || this.state == MenuCtlStateType_1.MenuCtlStateType.Destoryed)
            return;
        this.__menuManager.__onMenuClose(this);
    };
    // 延时关闭，等把主界面打开再关闭
    MenuCtl.prototype.__delayClose = function () {
        // this.backMenuId = -1;
        if (this.moduleWindow && this.moduleWindow.menuIsCreated) {
            Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_CloseMenu, this.moduleWindow.menuId);
            this.moduleWindow.onMenuClose();
            this.closeTime = Game_1.default.time.localTime;
        }
        this.state = MenuCtlStateType_1.MenuCtlStateType.Closed;
        // this.destory();
    };
    // 销毁
    MenuCtl.prototype.destory = function () {
        if (this.moduleWindow) {
            this.moduleWindow.sShowComplete.remove(this.closeOther, this);
            this.moduleWindow.destory();
            this.moduleWindow = null;
        }
        this.state = MenuCtlStateType_1.MenuCtlStateType.Destoryed;
    };
    // 加载资源
    MenuCtl.prototype.load = function () {
        this.state = MenuCtlStateType_1.MenuCtlStateType.Loading;
        var list = this.getLoadAssets();
        if (!list || list.length == 0) {
            this.loadBeginTime = 0;
            this.onLoadComplete();
        }
        else {
            this.loadBeginTime = Game_1.default.time.localTime;
            // 打开加载面板
            var loaderCtl_1 = Game_1.default.loader.open(this.menuConfig.menuLoaderId);
            loaderCtl_1.setMax(list.length);
            loaderCtl_1.setProgress(0);
            var onProgress = function (rate, current, max, assetItemInfo) {
                loaderCtl_1.setProgress(current);
            };
            Game_1.default.asset.loadList(list, this, this.onLoadComplete, onProgress);
        }
    };
    // 加载完成
    MenuCtl.prototype.onLoadComplete = function () {
        this.setShow();
        Game_1.default.loader.close(this.menuConfig.menuLoaderId);
        if (this.loadBeginTime > 0)
            console.log("加载界面花费时间 (" + this.menuConfig.moduleName + ") :" + (Game_1.default.time.localTime - this.loadBeginTime) + " 毫秒");
    };
    // 获取模块资源列表
    MenuCtl.prototype.getLoadAssets = function () {
        var list = [];
        var dict = new Dictionary_1.default();
        if (!this.moduleWindow.menuIsCreated) {
            this.moduleWindow.getLoadAssets(list, dict);
        }
        this.moduleWindow.generateAssetsForDynmic();
        this.moduleWindow.getLoadAssetsForDynamic(list, dict);
        return list;
    };
    // 设置显示
    MenuCtl.prototype.setShow = function () {
        if (!this.moduleWindow) {
            console.warn("\u8BBE\u7F6E\u663E\u793A \u4F46\u662F\u6A21\u5757\u5DF2\u9500\u6BC1 " + this.menuConfig.name + "(" + this.menuConfig.moduleName + "): " + this.menuId);
            return;
        }
        console.log("\u8BBE\u7F6E\u663E\u793A\u9762\u677F " + this.menuConfig.name + "(" + this.menuConfig.moduleName + "): " + this.menuId);
        this.moduleWindow.sShowComplete.addOnce(this.closeOther, this);
        this.moduleWindow.sShowSubwindowComplete.addOnce(this.closeOther, this);
        this.state = MenuCtlStateType_1.MenuCtlStateType.Opened;
        if (this.moduleWindow.menuIsCreated) {
            this.moduleWindow.onMenuOpen(this.openParametar);
        }
        else {
            this.moduleWindow.menuParameter = this.openParametar;
        }
        this.moduleWindow.menuShow(this.moduleWindow.windowContainer);
        switch (this.menuId) {
            case MenuId_1.MenuId.Login:
                Game_1.default.sound.playMusic(SoundKey_1.default.MM_BGM_01);
                break;
            case MenuId_1.MenuId.Home:
                Game_1.default.sound.playMusic(SoundKey_1.default.MM_BGM_01);
                break;
        }
    };
    MenuCtl.prototype.setCloseDontDestory = function () {
    };
    // 关闭其他模块
    MenuCtl.prototype.closeOther = function () {
        var homeIsOpen = this.__menuManager.isOpened(MenuId_1.MenuId.Home);
        // 设置返回MenuID
        var backMenuId = this.__menuManager.getLastModuleOpenMenuId([this.backExcludeMenuIdMenuId, this.menuId]);
        var hasCloseOtherMenu = false;
        var list = Game_1.default.menu.dict.getValues();
        switch (this.menuConfig.menuCloseOtherType) {
            // 不关闭任何面板
            case MenuCloseOtherType_1.MenuCloseOtherType.None:
                break;
            // 除自己外的所有
            case MenuCloseOtherType_1.MenuCloseOtherType.ExceptSelf_All:
                for (var i = 0; i < list.length; i++) {
                    var ctl = list[i];
                    if (ctl.menuId == MenuId_1.MenuId.Home)
                        continue;
                    if (ctl != this) {
                        ctl.closeIsDestory = homeIsOpen;
                        ctl.close();
                        hasCloseOtherMenu = true;
                    }
                }
                break;
            // 除自己外的所有模块层级面板
            case MenuCloseOtherType_1.MenuCloseOtherType.ExceptSelf_Module:
                for (var i = 0; i < list.length; i++) {
                    var ctl = list[i];
                    if (ctl != this && ctl.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.Module) {
                        ctl.closeIsDestory = homeIsOpen;
                        ctl.close();
                        hasCloseOtherMenu = true;
                    }
                }
                break;
            // 相同层级的其他面板
            case MenuCloseOtherType_1.MenuCloseOtherType.ExceptSelf_SameLayer:
                for (var i = 0; i < list.length; i++) {
                    var ctl = list[i];
                    if (ctl.menuId == MenuId_1.MenuId.Home)
                        continue;
                    if (ctl != this && ctl.menuConfig.menuLayer == this.menuConfig.menuLayer) {
                        ctl.closeIsDestory = homeIsOpen;
                        ctl.close();
                        hasCloseOtherMenu = true;
                    }
                }
                break;
        }
        if (this.menuConfig.closeHomeWindow) {
            // this.__menuManager.close(MenuId.Home);
            var home = this.__menuManager.getMenuCtl(MenuId_1.MenuId.Home);
            if (home && home.moduleWindow) {
                var homeWindow = home.moduleWindow;
                if (homeWindow) {
                    homeWindow.setHomeHide();
                }
            }
        }
        if (hasCloseOtherMenu) {
            if (backMenuId != -1)
                this.backMenuId = backMenuId;
        }
        else
            this.backMenuId = -1;
    };
    return MenuCtl;
}());
exports.default = MenuCtl;
},{"../../FGUI/Generates/SoundKey":497,"../../Game":546,"../../GameEventKey":548,"../../GameModule/MenuId":603,"../../Libs/Helpers/Dictionary":626,"./MenuCloseOtherType":569,"./MenuCtlStateType":571,"./MenuLayer":572,"./MenuLayerType":573}],571:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// menu状态
// ---------------------------
var MenuCtlStateType;
(function (MenuCtlStateType) {
    // 关闭的，或者没打开过
    MenuCtlStateType[MenuCtlStateType["Closed"] = 1] = "Closed";
    // 加载中
    MenuCtlStateType[MenuCtlStateType["Loading"] = 2] = "Loading";
    // 打开的
    MenuCtlStateType[MenuCtlStateType["Opened"] = 3] = "Opened";
    // 销毁的
    MenuCtlStateType[MenuCtlStateType["Destoryed"] = 4] = "Destoryed";
})(MenuCtlStateType = exports.MenuCtlStateType || (exports.MenuCtlStateType = {}));
},{}],572:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MenuLayerType_1 = require("./MenuLayerType");
var Game_1 = require("../../Game");
var BGModel_1 = require("../../FGUI/Extends/GameLaunch/BGModel");
/**
 * 模块UI 层
 */
var MenuLayer = /** @class */ (function () {
    function MenuLayer() {
    }
    Object.defineProperty(MenuLayer, "dialogModel", {
        get: function () {
            if (!MenuLayer._dialogModel) {
                MenuLayer._dialogModel = BGModel_1.default.createInstance();
            }
            return MenuLayer._dialogModel;
        },
        enumerable: true,
        configurable: true
    });
    MenuLayer.showDialogModel = function () {
        MenuLayer.dialog.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialog.height = Game_1.default.screenSetting.screenHeight;
        MenuLayer.dialogModel.alpha = 0.8;
        MenuLayer.dialogModel.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialogModel.height = Game_1.default.screenSetting.screenHeight;
        if (MenuLayer.dialogModel)
            MenuLayer.dialog.addChildAt(MenuLayer.dialogModel, 0);
    };
    MenuLayer.resetDialogModelSize = function () {
        MenuLayer.dialog.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialog.height = Game_1.default.screenSetting.screenHeight;
        MenuLayer.dialogModel.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialogModel.height = Game_1.default.screenSetting.screenHeight;
    };
    MenuLayer.hideDialogModel = function () {
        if (MenuLayer.dialogModel)
            MenuLayer.dialogModel.removeFromParent();
    };
    // 初始化
    MenuLayer.install = function () {
        // 根容器
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        MenuLayer.root = fairygui.GRoot.inst;
        MenuLayer.home = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.Home, "MenuLayer-home");
        MenuLayer.homeTop = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.HomeTop, "MenuLayer-homeTop");
        MenuLayer.module = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.Module, "MenuLayer-module");
        MenuLayer.moduleTop = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.ModuleTop, "MenuLayer-moduleTop");
        MenuLayer.mainUI = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.MainUI, "MenuLayer-mainUI");
        MenuLayer.dialog = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.Dialog, "MenuLayer-dialog");
        MenuLayer.guide = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.Guide, "MenuLayer-guide");
        MenuLayer.loader = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.Loader, "MenuLayer-loader");
        MenuLayer.gm = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.GM, "MenuLayer-gm");
        MenuLayer.floatMsg = MenuLayer.createLayer(MenuLayerType_1.MenuLayerType.FloatMsg, "MenuLayer-floatMsg");
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Home, MenuLayer.home);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.HomeTop, MenuLayer.homeTop);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Module, MenuLayer.module);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.ModuleTop, MenuLayer.moduleTop);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.MainUI, MenuLayer.mainUI);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Dialog, MenuLayer.dialog);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Guide, MenuLayer.guide);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Loader, MenuLayer.loader);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.GM, MenuLayer.gm);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.FloatMsg, MenuLayer.floatMsg);
    };
    MenuLayer.getLayer = function (layerType) {
        return MenuLayer.dict.getValue(layerType);
    };
    MenuLayer.createLayer = function (menuLayer, name) {
        var root = MenuLayer.root;
        var v = new fairygui.GRoot();
        v["menuLayer"] = menuLayer;
        if (name) {
            v.name = name;
        }
        if (Game_1.default.browserSetting.isLiuHai) {
            switch (menuLayer) {
                case MenuLayerType_1.MenuLayerType.Loader:
                    v.setSize(root.width, root.height);
                    break;
                default:
                    v.y = Game_1.default.screenSetting.liuHaiHeightTop;
                    v.setSize(root.width, root.height - Game_1.default.screenSetting.screenHeightLiuHai);
            }
        }
        else {
            v.setSize(root.width, root.height);
        }
        root.addChild(v);
        return v;
    };
    MenuLayer.getLayerHeight = function (menuLayer) {
        if (Game_1.default.browserSetting.isLiuHai) {
            switch (menuLayer) {
                case MenuLayer.loader:
                    return Game_1.default.screenSetting.screenHeight;
                default:
                    return Game_1.default.screenSetting.screenHeightLiuHai;
            }
        }
        return Game_1.default.screenSetting.screenHeight;
    };
    // 字典
    MenuLayer.dict = new Dictionary_1.default();
    return MenuLayer;
}());
exports.default = MenuLayer;
window["MenuLayer"] = MenuLayer;
},{"../../FGUI/Extends/GameLaunch/BGModel":294,"../../Game":546,"../../Libs/Helpers/Dictionary":626,"./MenuLayerType":573}],573:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 层级类型
// ---------------------------
var MenuLayerType;
(function (MenuLayerType) {
    // 主界面
    MenuLayerType[MenuLayerType["Home"] = 1] = "Home";
    // 主界面 上一层
    MenuLayerType[MenuLayerType["HomeTop"] = 2] = "HomeTop";
    // 模块
    MenuLayerType[MenuLayerType["Module"] = 3] = "Module";
    // 模块
    MenuLayerType[MenuLayerType["ModuleTop"] = 4] = "ModuleTop";
    // 主UI
    MenuLayerType[MenuLayerType["MainUI"] = 5] = "MainUI";
    // 对话框
    MenuLayerType[MenuLayerType["Dialog"] = 6] = "Dialog";
    // 引导
    MenuLayerType[MenuLayerType["Guide"] = 7] = "Guide";
    // 加载面板
    MenuLayerType[MenuLayerType["Loader"] = 8] = "Loader";
    // GM
    MenuLayerType[MenuLayerType["GM"] = 9] = "GM";
    // 浮动对话框
    MenuLayerType[MenuLayerType["FloatMsg"] = 10] = "FloatMsg";
})(MenuLayerType = exports.MenuLayerType || (exports.MenuLayerType = {}));
},{}],574:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MenuCtl_1 = require("./MenuCtl");
var MenuId_1 = require("../../GameModule/MenuId");
var MenuCtlStateType_1 = require("./MenuCtlStateType");
var MenuOpenType_1 = require("./MenuOpenType");
var Game_1 = require("../../Game");
var MenuLayerType_1 = require("./MenuLayerType");
var FGLoader_1 = require("../../FGUI/FGLoader");
var Log_1 = require("../Log/Log");
var MenuWindows_1 = require("../../GameModule/MenuWindows");
var TEXT_1 = require("../../Config/Keys/TEXT");
//=================
// 模块管理器
//------------------
var MenuManager = /** @class */ (function () {
    function MenuManager() {
        this.dict = new Dictionary_1.default();
        this.list = [];
        this.stack = [];
    }
    // 初始化
    MenuManager.prototype.install = function () {
    };
    // 获取模块控制器
    MenuManager.prototype.getMenuCtl = function (menuId) {
        return this.dict.getValue(menuId);
    };
    // 销毁
    MenuManager.prototype.destory = function (menuId) {
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            if (ctl.state == MenuCtlStateType_1.MenuCtlStateType.Opened) {
                ctl.close();
                setTimeout(function () {
                    ctl.destory();
                }, 100);
            }
            else {
                ctl.destory();
            }
        }
    };
    // 打开模块的tab面板
    MenuManager.prototype.openTab = function (menuId, tabIndex) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        return this._open(menuId, { openType: MenuOpenType_1.MenuOpenType.Tab, openIndex: tabIndex, args: args });
    };
    // 打开模块的子窗口
    MenuManager.prototype.openSubWindow = function (menuId, subwindowIndex) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        return this._open(menuId, { openType: MenuOpenType_1.MenuOpenType.Subwindow, openIndex: subwindowIndex, args: args });
    };
    // 打开模块
    MenuManager.prototype.open = function (menuId) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this._open(menuId, { openType: MenuOpenType_1.MenuOpenType.None, openIndex: 0, args: args });
    };
    // 打开模块使用menuIndexId
    MenuManager.prototype.openByMenuIndexId = function (menuIndexId) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var indexConfig = Game_1.default.config.menuIndex.getConfig(menuIndexId);
        if (indexConfig) {
            switch (indexConfig.openType) {
                case MenuOpenType_1.MenuOpenType.Subwindow:
                    this.openSubWindow.apply(this, [indexConfig.menuId, indexConfig.menuIndex].concat(args));
                    break;
                case MenuOpenType_1.MenuOpenType.Tab:
                    this.openTab.apply(this, [indexConfig.menuId, indexConfig.menuIndex].concat(args));
                    break;
                default:
                    this.open.apply(this, [indexConfig.menuId].concat(args));
                    break;
            }
        }
        else {
            var menuConfig = Game_1.default.config.menu.getConfig(menuIndexId);
            if (menuConfig) {
                this.open.apply(this, [menuIndexId].concat(args));
            }
        }
    };
    //打开主界面
    MenuManager.prototype.openHome = function () {
        var home = this.getMenuCtl(MenuId_1.MenuId.Home);
        // if (!home || home.state != MenuCtlStateType.Opened)
        // {
        //     this.open(MenuId.Home);
        // }
        if (!home || home.state != MenuCtlStateType_1.MenuCtlStateType.Opened) {
            home = this.open(MenuId_1.MenuId.Home);
        }
        if (home.moduleWindow.contentPane && !home.moduleWindow.contentPane.visible) {
            home.moduleWindow.contentPane.visible = true;
        }
    };
    //关闭主界面
    MenuManager.prototype.closeHome = function () {
        var home = this.getMenuCtl(MenuId_1.MenuId.Home);
        if (home && home.moduleWindow && home.moduleWindow.contentPane) {
            home.moduleWindow.contentPane.visible = false;
        }
    };
    // 打开模块
    MenuManager.prototype._open = function (menuId, parametar) {
        var ctl = this.getMenuCtl(menuId);
        if (!ctl) {
            var menuConfig = Game_1.default.config.menu.getConfig(menuId);
            if (!menuConfig) {
                Log_1.default.Error("MenuManager.open \u6CA1\u6709\u627E\u5230menuConfig, menuId=" + menuId);
                return null;
            }
            var menuWindowConfig = MenuWindows_1.default.get(menuId);
            if (!menuWindowConfig) {
                Game_1.default.system.toastText(TEXT_1.default.Disable);
                Log_1.default.Error("MenuManager.open \u6CA1\u6709\u627E\u5230menuWindowConfig, menuId=" + menuId);
                return null;
            }
            if (!menuWindowConfig.windowClass) {
                Log_1.default.Error("MenuManager.open menuWindowConfig.windowClass=" + menuWindowConfig.windowClass + ", menuId=" + menuId);
                return null;
            }
            ctl = new MenuCtl_1.default();
            ctl.__menuManager = this;
            ctl.menuId = menuId;
            ctl.menuConfig = menuConfig;
            ctl.menuWindowConfig = menuWindowConfig;
            this.dict.add(menuId, ctl);
            if (ctl.menuId != MenuId_1.MenuId.Home)
                this.list.push(ctl);
        }
        ctl.open(parametar);
        var index = this.stack.indexOf(ctl);
        if (index != -1)
            this.stack.splice(index, 1);
        this.stack.push(ctl);
        //
        return ctl;
    };
    // 返回
    MenuManager.prototype.back = function (menuId) {
        var _this = this;
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            var backMenuId = ctl.backMenuId;
            if (backMenuId > 0) {
                var backMenuCtl = this.getMenuCtl(backMenuId);
                if (backMenuCtl) {
                    backMenuCtl.backExcludeMenuIdMenuId = menuId;
                    var openParametar = backMenuCtl.moduleWindow ? backMenuCtl.moduleWindow.getLastMenuParameter() : null;
                    if (!openParametar) {
                        openParametar = backMenuCtl.openParametar;
                    }
                    this._open(backMenuId, openParametar);
                }
            }
            setTimeout(function () {
                _this.close(menuId);
            }, 100);
        }
    };
    // 关闭模块
    MenuManager.prototype.close = function (menuId) {
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            ctl.closeIsDestory = true;
            ctl.close();
        }
    };
    MenuManager.prototype.__onMenuClose = function (ctl) {
        for (var i = this.stack.length - 1; i >= 0; i--) {
            if (this.stack[i] == ctl)
                this.stack.splice(i, 1);
        }
        var openedNum = 0;
        var sameLayoutOpenedNum = 0;
        var moduleOpenedNum = 0;
        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
            var item = _a[_i];
            if (item.menuId == ctl.menuId)
                continue;
            switch (item.state) {
                case MenuCtlStateType_1.MenuCtlStateType.Opened:
                    openedNum++;
                    if (item.menuConfig.menuLayer == ctl.menuConfig.menuLayer) {
                        sameLayoutOpenedNum++;
                    }
                    if (item.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.Module || item.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.ModuleTop) {
                        moduleOpenedNum++;
                    }
                    break;
            }
        }
        console.log("\u5173\u95ED\u9762\u677F " + ctl.menuConfig.zh_cn_name + " ( " + ctl.menuConfig.moduleName + ")  :\" + openedNum=" + openedNum + ", sameLayoutOpenedNum=" + sameLayoutOpenedNum + ", moduleOpenedNum=" + moduleOpenedNum);
        if (moduleOpenedNum == 0 && ctl.menuConfig.isAutoOpenHomeWindow) {
            var home = this.getMenuCtl(MenuId_1.MenuId.Home);
            // if (!home || home.state != MenuCtlStateType.Opened)
            // {
            //     this.open(MenuId.Home);
            // }
            if (!home || home.state != MenuCtlStateType_1.MenuCtlStateType.Opened) {
                home = this.open(MenuId_1.MenuId.Home);
            }
            var homeWindow = home.moduleWindow;
            if (homeWindow) {
                homeWindow.setHomeShow();
            }
        }
        ctl.__delayClose();
        // 改成关闭时再去销毁
        this.onTick();
        // 改成关闭时再去清理动态图片
        FGLoader_1.default.clearFreeLong();
    };
    // 获取最后打开的面板
    MenuManager.prototype.getLastOpenMenuId = function () {
        if (this.stack.length > 0) {
            return this.stack[this.stack.length - 1].menuId;
        }
        return -1;
    };
    // 获取最后打开的模块面板ID
    MenuManager.prototype.getLastModuleOpenMenuId = function (excludeMenuId) {
        for (var i = this.stack.length - 1; i >= 0; i--) {
            var ctl = this.stack[i];
            if (ctl.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.Module || ctl.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.ModuleTop) {
                if (excludeMenuId && excludeMenuId.indexOf(ctl.menuId) != -1) {
                    continue;
                }
                return ctl.menuId;
            }
        }
        return -1;
    };
    // 获取模块是否打开        
    MenuManager.prototype.isOpened = function (menuId) {
        var result = false;
        var ctl = this.getMenuCtl(menuId);
        if (ctl && ctl.state == MenuCtlStateType_1.MenuCtlStateType.Opened) {
            if (ctl.menuId == MenuId_1.MenuId.Home) {
                if (ctl.moduleWindow && ctl.moduleWindow.contentPane)
                    result = ctl.moduleWindow.contentPane.visible;
            }
            else {
                result = true;
            }
        }
        return result;
    };
    // 是否打开子面板或者Tab
    MenuManager.prototype.isOpenedSubOrTab = function (menuId, index) {
        if (!this.isOpened(menuId)) {
            return false;
        }
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            return ctl.moduleWindow.isOpenSubOrTab(index);
        }
        return false;
    };
    /** 获取模块子窗口 */
    MenuManager.prototype.getSubWindow = function (menuId, index) {
        if (!this.isOpened(menuId)) {
            return null;
        }
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            return ctl.moduleWindow.getSubwindow(index);
        }
        return null;
    };
    /** 检测销毁模块 */
    MenuManager.prototype.onTick = function () {
        for (var i = 0; i < this.list.length; i++) {
            var ctl = this.list[i];
            if (ctl.state == MenuCtlStateType_1.MenuCtlStateType.Closed) {
                if (ctl.menuConfig.cacheTime != -1) {
                    var cacheTime = Math.max(ctl.menuConfig.cacheTime, Game_1.default.deviceSetting.menuCacheTime);
                    var subtime = Game_1.default.time.localTime - ctl.closeTime;
                    if (subtime >= cacheTime && ctl.closeIsDestory) {
                        ctl.destory();
                    }
                }
            }
        }
    };
    return MenuManager;
}());
exports.default = MenuManager;
},{"../../Config/Keys/TEXT":125,"../../FGUI/FGLoader":346,"../../Game":546,"../../GameModule/MenuId":603,"../../GameModule/MenuWindows":609,"../../Libs/Helpers/Dictionary":626,"../Log/Log":565,"./MenuCtl":570,"./MenuCtlStateType":571,"./MenuLayerType":573,"./MenuOpenType":575}],575:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 打开menu方式
// ---------------------------
var MenuOpenType;
(function (MenuOpenType) {
    // 默认
    MenuOpenType[MenuOpenType["None"] = 0] = "None";
    // Tab面板
    MenuOpenType[MenuOpenType["Tab"] = 2] = "Tab";
    // 子窗口
    MenuOpenType[MenuOpenType["Subwindow"] = 3] = "Subwindow";
})(MenuOpenType = exports.MenuOpenType || (exports.MenuOpenType = {}));
},{}],576:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuLayer_1 = require("../Menu/MenuLayer");
var FguiHelper_1 = require("../../Libs/Helpers/FguiHelper");
var DialogCtrl = /** @class */ (function () {
    function DialogCtrl() {
    }
    DialogCtrl.prototype.init = function (dialogUI) {
        this.dialogUI = dialogUI;
        FguiHelper_1.default.setScreenSize(dialogUI);
        return this;
    };
    DialogCtrl.prototype.open = function () {
        MenuLayer_1.default.dialog.addChild(this.dialogUI);
    };
    DialogCtrl.prototype.close = function () {
        this.dialogUI.removeFromParent();
    };
    // 设置关闭按钮 关闭当前窗口
    DialogCtrl.prototype.setCloseBtnEvent = function () {
        if (this.dialogUI && this.dialogUI["m_frame"] && this.dialogUI["m_frame"].getChild("closeBtn")) {
            this.dialogUI["m_frame"].getChild("closeBtn").onClick(this, this.close);
        }
    };
    return DialogCtrl;
}());
exports.default = DialogCtrl;
},{"../../Libs/Helpers/FguiHelper":627,"../Menu/MenuLayer":572}],577:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var MenuLayer_1 = require("../Menu/MenuLayer");
//======================
// 扩展 fairygui.Window
//----------------------
var FWindow = /** @class */ (function (_super) {
    __extends(FWindow, _super);
    function FWindow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isAddedStage = false;
        return _this;
    }
    Object.defineProperty(FWindow.prototype, "isShowed", {
        get: function () {
            if (this.contentPane)
                return this.parent != null;
            return false;
        },
        enumerable: true,
        configurable: true
    });
    FWindow.prototype.onWindowWillShow = function () {
        if (this.contentPane) {
            this.callChildOnWindowWillShow(this.contentPane);
        }
        this.setScreenSize();
        if (this.isAddedStage)
            return;
        this.isAddedStage = true;
        Laya.stage.on(laya.events.Event.RESIZE, this, this.setScreenSize);
    };
    FWindow.prototype.onWindowWillHide = function () {
        if (this.contentPane) {
            this.callChildOnWindowWillHide(this.contentPane);
        }
        this.isAddedStage = false;
        Laya.stage.off(laya.events.Event.RESIZE, this, this.setScreenSize);
    };
    FWindow.prototype.setScreenSize = function () {
        if (this.contentPane) {
            if (this.windowContainer && this.windowContainer["menuLayer"] !== undefined) {
                this.width = this.windowContainer.width;
                this.height = MenuLayer_1.default.getLayerHeight(this.windowContainer["menuLayer"]);
                this.contentPane.width = this.windowContainer.width;
                this.contentPane.height = this.height;
            }
            else {
                this.width = Game_1.default.screenSetting.screenWidth;
                this.height = Game_1.default.screenSetting.screenHeight;
                this.contentPane.width = Game_1.default.screenSetting.screenWidth;
                this.contentPane.height = Game_1.default.screenSetting.screenHeight;
            }
            this.callChildOnWindowResize(this.contentPane);
            // this.contentPane.displayObject.graphics.drawRect(0, 0, this.contentPane.width, this.contentPane.height, "red");
        }
    };
    //=========================
    // 调用child GComponent的 onWindowWillShow
    //-------------------------
    FWindow.prototype.callChildOnWindowWillShow = function (com) {
        if (com) {
            var fun = com["onWindowWillShow"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowWillShow(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowWillHide
    //-------------------------
    FWindow.prototype.callChildOnWindowWillHide = function (com) {
        if (com) {
            var fun = com["onWindowWillHide"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowWillHide(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowResize
    //-------------------------
    FWindow.prototype.callChildOnWindowResize = function (com) {
        if (com) {
            var fun = com["onWindowResize"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowResize(com._children[i]);
                }
            }
        }
    };
    return FWindow;
}(fairygui.Window));
exports.default = FWindow;
},{"../../Game":546,"../Menu/MenuLayer":572}],578:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = require("../../Libs/signals/Signal");
//======================
// 模块 数据模型
//----------------------
var MModel = /** @class */ (function () {
    function MModel() {
        // 状态发送改变
        this.sStateChange = new Signal_1.default();
    }
    // 初始化
    MModel.prototype.install = function () {
        this.startListen();
    };
    // 刷新状态: 红点
    MModel.prototype.refreshState = function () {
    };
    // 添加事件监听
    MModel.prototype.startListen = function () {
    };
    // 移除事件监听
    MModel.prototype.stopListen = function () {
    };
    MModel.prototype.onStateChange = function () {
        this.sStateChange.dispatch();
    };
    return MModel;
}());
exports.default = MModel;
},{"../../Libs/signals/Signal":640}],579:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("./FWindow");
var Signal_1 = require("../../Libs/signals/Signal");
var AssetItemType_1 = require("../AssetManagers/AssetItemType");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var AssetHelper_1 = require("../AssetManagers/AssetHelper");
var GuiPackageNames_1 = require("../../FGUI/Generates/GuiPackageNames");
var Game_1 = require("../../Game");
var MenuOpenType_1 = require("../Menu/MenuOpenType");
var GameEventKey_1 = require("../../GameEventKey");
var Point = laya.maths.Point;
var Handler = laya.utils.Handler;
var FguiHelper_1 = require("../../Libs/Helpers/FguiHelper");
//======================
// 模块窗口
//----------------------
var MWindow = /** @class */ (function (_super) {
    __extends(MWindow, _super);
    function MWindow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 消息--显示完成
        _this.sShowComplete = new Signal_1.default();
        // 消息--隐藏完成
        _this.sHideComplete = new Signal_1.default();
        // 是否初始化视图
        _this.menuIsCreated = false;
        // 是否已经销毁
        _this.isDestoryed = false;
        // 是否可以出现显示过度动画
        _this.enableShowAnimation = true;
        // 是否显示需要发消息
        _this.enableShowSignal = true;
        // 是否隐藏需要发消息
        _this.enableHideSignal = true;
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // 依赖资源列表
        _this._loadAssets = [];
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // 动态资源列表
        _this._dynamicAssetsList = [];
        _this.toPoint = new Point();
        _this.srcPoint = new Point();
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // 消息--显示完成
        _this.sShowSubwindowComplete = new Signal_1.default();
        // 消息--隐藏完成
        _this.sHideSubwindowComplete = new Signal_1.default();
        // 子窗口字典
        _this.subwindowDict = new Dictionary_1.default();
        // 打开子窗口栈
        _this.subwindowStack = [];
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // Tab字典
        _this.tabDict = new Dictionary_1.default();
        // Tab历史记录
        _this.tabHistorys = [];
        return _this;
    }
    /** 异步检查该模块是否可以打开 */
    MWindow.AsyncEnableOpen = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, Promise.resolve(true)];
            });
        });
    };
    // 是否打开子面板或者Tab
    MWindow.prototype.isOpenSubOrTab = function (index) {
        return this.menuParameter.openIndex == index;
    };
    // 添加依赖资源--fgui 包名
    MWindow.prototype.addAssetForFguiPackagename = function (packagename) {
        this._loadAssets.push({ url: packagename, type: AssetItemType_1.AssetItemType.FguiPackage });
    };
    // 添加依赖资源--组件
    MWindow.prototype.addAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.addAssetForFguiPackagename(names[i]);
        }
    };
    // 获取资源加载列表
    MWindow.prototype.getLoadAssets = function (list, dict) {
        var assets = this._loadAssets;
        for (var i = 0; i < assets.length; i++) {
            var key = AssetHelper_1.default.getAssetItemKey(assets[i]);
            if (!dict.hasKey(key)) {
                list.push(assets[i]);
                dict.add(key, assets[i]);
            }
        }
        return list;
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    MWindow.prototype.unloadAssetForFguiPackagename = function (packagename) {
        switch (packagename) {
            case GuiPackageNames_1.default._ResImageUIV1:
            case GuiPackageNames_1.default._ResFont:
            case GuiPackageNames_1.default.CommonBase:
            case GuiPackageNames_1.default.CommonGame:
            case GuiPackageNames_1.default.CommonFx:
            case GuiPackageNames_1.default.SystemModuleDialog:
                return;
        }
        Game_1.default.asset.unloadFgui(packagename);
    };
    // 卸载依赖资源--组件
    MWindow.prototype.unloadAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.unloadAssetForFguiPackagename(names[i]);
        }
    };
    // 下周依赖资源--初始化时加载的
    MWindow.prototype.unloadAssetFroAssetList = function () {
        for (var i = 0; i < this._loadAssets.length; i++) {
            this.unloadAssetForFguiPackagename(this._loadAssets[i].url);
        }
    };
    // 添加动态资源
    MWindow.prototype.addDynamicAsset = function (assetItem) {
        if (assetItem)
            this._dynamicAssetsList.push(assetItem);
    };
    // 添加动态资源--AvatarConfig里的所有
    MWindow.prototype.addDynmicAssetForAvatarAll = function (avatarConfig) {
        avatarConfig.getAllAssset(this._dynamicAssetsList);
    };
    // 生成动态预加载资源
    MWindow.prototype.generateAssetsForDynmic = function () {
        this._dynamicAssetsList = [];
    };
    // 获取动态资源加载列表
    MWindow.prototype.getLoadAssetsForDynamic = function (list, dict) {
        var assets = this._dynamicAssetsList;
        for (var i = 0; i < assets.length; i++) {
            var key = AssetHelper_1.default.getAssetItemKey(assets[i]);
            if (!dict.hasKey(key)) {
                list.push(assets[i]);
                dict.add(key, assets[i]);
            }
        }
        var subwindows = this.subwindowDict.getValues();
        for (var i = 0; i < subwindows.length; i++) {
            subwindows[i].getLoadAssetsForDynamic(list, dict);
        }
        return list;
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    // fgui 初始化视图
    MWindow.prototype.onInit = function () {
        this.onMenuCreate();
        _super.prototype.onInit.call(this);
    };
    // 菜单创建
    MWindow.prototype.onMenuCreate = function () {
        // 在该位置实例化显示对象
        // 如果需要创建Tab, 可以在该位置设置
        this.setChildWindow(this.contentPane);
        this.callChildOnWindowInited(this.contentPane);
        this.menuIsCreated = true;
        this.onMenuOpen(this.menuParameter);
    };
    // 设置关闭按钮 关闭当前窗口
    MWindow.prototype.setCloseBtnEvent = function () {
        if (this.contentPane && this.contentPane["m_frame"] && this.contentPane["m_frame"].getChild("closeBtn")) {
            this.contentPane["m_frame"].getChild("closeBtn").onClick(this, this.menuClose);
        }
    };
    // 设置返回按钮 返回之前的窗口
    MWindow.prototype.setBackBtnEvent = function () {
        if (this.contentPane && this.contentPane["m_frame"] && this.contentPane["m_frame"].getChild("closeBtn")) {
            this.contentPane["m_frame"].getChild("closeBtn").onClick(this, this.menuBack);
        }
    };
    // 菜单打开事件，传递参数
    MWindow.prototype.onMenuOpen = function (parameter) {
        this.enableShowSignal = true;
        this.enableShowAnimation = true;
        this.menuParameter = parameter;
        switch (parameter.openType) {
            // 打开子窗口
            case MenuOpenType_1.MenuOpenType.Subwindow:
                this.enableShowSignal = false;
                this.enableShowAnimation = false;
                this.openSubwindowByIndex.apply(this, [parameter.openIndex, false].concat(parameter.args));
                break;
            // 打开Tab
            case MenuOpenType_1.MenuOpenType.Tab:
                this.openTab(parameter.openIndex);
                break;
            default:
                Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_OpenMenu, this.menuId, parameter.openType);
                break;
        }
    };
    // 窗口显示        
    MWindow.prototype.windowShow = function () {
        if (this.windowContainer)
            this.showOn(this.windowContainer);
        else
            this.show();
    };
    // 菜单显示
    MWindow.prototype.menuShow = function (root) {
        switch (this.menuParameter.openType) {
            // 打开子窗口
            case MenuOpenType_1.MenuOpenType.Subwindow:
                if (!this.contentPane)
                    this.onInit();
                break;
            default:
                this.showOn(root);
                break;
        }
    };
    // 关闭
    MWindow.prototype.menuClose = function () {
        Game_1.default.menu.close(this.menuId);
    };
    // 返回, 到之前打开该模块的面板
    MWindow.prototype.menuBack = function () {
        Game_1.default.menu.back(this.menuId);
    };
    // 销毁
    MWindow.prototype.destory = function () {
        this.callChildOnWindowDestory(this.contentPane);
        this.onMenuDestory();
        this.sShowComplete.removeAll();
        this.sHideComplete.removeAll();
        this.sShowSubwindowComplete.removeAll();
        this.sHideSubwindowComplete.removeAll();
        this.tabDict.clear();
        var list = this.subwindowDict.getValues();
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            item.destory();
        }
        this.subwindowDict.clear();
        if (this.contentPane) {
            this.contentPane.dispose();
            this.contentPane = null;
        }
        this.unloadAssetFroAssetList();
        _super.prototype.dispose.call(this);
        this.isDestoryed = true;
    };
    // 菜单管理调的销毁
    MWindow.prototype.onMenuDestory = function () {
    };
    MWindow.prototype.doShowAnimation = function () {
        var _this = this;
        this.onWindowWillShow();
        if (this.openAnimation == 1) {
            this.srcPoint.x = this.panel.x;
            this.srcPoint.y = this.panel.y;
            this.panel.setScale(0.1, 0.1);
            this.calBuutonPos();
            this.panel.setXY(this.toPoint.x, this.toPoint.y);
            laya.utils.Tween.to(this.panel, { scaleX: 1, scaleY: 1, x: this.srcPoint.x, y: this.srcPoint.y }, 300, laya.utils.Ease.quadOut, Handler.create(this, function () {
                _this.onShown();
            }));
        }
        else {
            _super.prototype.doShowAnimation.call(this);
        }
    };
    Object.defineProperty(MWindow.prototype, "panel", {
        get: function () {
            if (this.contentPane["m_panel"]) {
                return this.contentPane["m_panel"];
            }
            return this.contentPane;
        },
        enumerable: true,
        configurable: true
    });
    MWindow.prototype.doHideAnimation = function () {
        var _this = this;
        this.onWindowWillHide();
        if (this.closeAnimation == 1) {
            this.panel.setScale(1, 1);
            this.calBuutonPos();
            laya.utils.Tween.to(this.panel, { scaleX: 0.1, scaleY: 0.1, x: this.toPoint.x, y: this.toPoint.y }, 300, laya.utils.Ease.quadOut, Handler.create(this, function () {
                _this.panel.x = _this.srcPoint.x;
                _this.panel.y = _this.srcPoint.y;
                _this.hideImmediately();
            }));
        }
        else {
            _super.prototype.doHideAnimation.call(this);
        }
    };
    Object.defineProperty(MWindow.prototype, "openAnimation", {
        get: function () {
            if (this.menuConfig == null) {
                return 0;
            }
            return this.menuConfig.openAnimation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MWindow.prototype, "closeAnimation", {
        get: function () {
            if (this.menuConfig == null) {
                return 0;
            }
            return this.menuConfig.closeAnimation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MWindow.prototype, "menuConfig", {
        get: function () {
            if (this.menuId > 0) {
                return Game_1.default.config.menu.getConfig(this.menuId);
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    MWindow.prototype.calBuutonPos = function () {
        // let btn = Game.moduleModel.func.getMenuCtrlByMenuId(this.menuId);
        // if (btn)
        // {
        //     let p = btn.getGlobalPos();
        //     this.toPoint.x = p.x;
        //     this.toPoint.y = p.y;
        // }
        // else
        // {
        //     this.toPoint.x = Game.screenSetting.screenWidth >> 1;
        //     this.toPoint.y = Game.screenSetting.screenHeight >> 1;
        // }
    };
    // protected doShowAnimation()
    // {
    //     this.onWindowWillShow();
    //     super.doShowAnimation();
    // }
    // protected doHideAnimation()
    // {
    //     this.onWindowWillHide();
    //     super.doHideAnimation();
    // }
    MWindow.prototype.onShown = function () {
        // this.panel.setScale(1, 1);
        this.enableHideSignal = true;
        this.onShowComplete();
        if (this.contentPane) {
            this.callChildOnWindowShow(this.contentPane);
        }
    };
    // 菜单管理器调的关闭
    MWindow.prototype.onMenuClose = function () {
        this.hide();
        var list = this.subwindowDict.getValues();
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            item.hide();
        }
    };
    MWindow.prototype.onHide = function () {
        this.enableShowSignal = true;
        this.onHideComplete();
        this.clearTabHistorys();
        if (this.contentPane) {
            this.callChildOnWindowHide(this.contentPane);
        }
    };
    //=========================
    // 显示完成
    // 可以在这里添加协议消息监听
    //-------------------------
    MWindow.prototype.onShowComplete = function () {
        if (this.enableShowSignal) {
            this.sShowComplete.dispatch();
        }
    };
    //=========================
    // 隐藏完成
    // 可以在这里移除协议消息监听
    //-------------------------
    MWindow.prototype.onHideComplete = function () {
        if (this.enableHideSignal) {
            this.sHideComplete.dispatch();
        }
    };
    // 获取子窗口
    MWindow.prototype.getSubwindow = function (subwindowIndex) {
        return this.subwindowDict.getValue(subwindowIndex);
    };
    // 注册子窗口
    MWindow.prototype.registerSubwindow = function (subwindow) {
        this.subwindowDict.add(subwindow.subwindowIndex, subwindow);
    };
    // 关闭子窗口消息        
    MWindow.prototype.__onSubWindowClose = function (subwindow) {
        for (var i = this.subwindowStack.length - 1; i >= 0; i--) {
            if (this.subwindowStack[i] == subwindow)
                this.subwindowStack.splice(i, 1);
        }
    };
    // 获取最后打开的子面板
    MWindow.prototype.__getLastOpenSubWindow = function (excludeSubwindow) {
        for (var i = this.subwindowStack.length - 1; i >= 0; i--) {
            var ctl = this.subwindowStack[i];
            if (excludeSubwindow && excludeSubwindow.indexOf(ctl) != -1) {
                continue;
            }
            return ctl;
        }
        return null;
    };
    // 关闭所有子窗口
    MWindow.prototype.closeAllSubwindowSelf = function (excludeSubwindow) {
        var list = [];
        for (var i = this.subwindowStack.length - 1; i >= 0; i--) {
            list.push(this.subwindowStack[i]);
        }
        for (var i = 0; i < list.length; i++) {
            var ctl = list[i];
            if (excludeSubwindow && excludeSubwindow.indexOf(ctl) != -1) {
                continue;
            }
            ctl.closeSelf();
        }
    };
    // 关闭最后的子窗口
    MWindow.prototype.closeLastSubwindowSelf = function () {
        var subWindow = this.__getLastOpenSubWindow();
        if (subWindow) {
            subWindow.closeSelf();
        }
    };
    // 获取最后的menuParameter
    MWindow.prototype.getLastMenuParameter = function () {
        var subWindow = this.__getLastOpenSubWindow();
        if (subWindow) {
            return subWindow.menuParameter;
        }
        else {
            return this.menuParameter;
        }
    };
    // 打开子窗口
    MWindow.prototype.openSubwindow = function (subwindow, dontCloseOther) {
        var _this = this;
        if (dontCloseOther === void 0) { dontCloseOther = false; }
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        subwindow.__backSubWindow = this.__getLastOpenSubWindow([subwindow]);
        this.menuParameter.openType = MenuOpenType_1.MenuOpenType.Subwindow;
        this.menuParameter.openIndex = subwindow.subwindowIndex;
        this.menuParameter.args = args;
        var menuParmeter = {
            openType: this.menuParameter.openType,
            openIndex: this.menuParameter.openIndex,
            args: args,
            dontCloseOther: dontCloseOther
        };
        if (!dontCloseOther) {
            var caller = {
                on: function () {
                    if (subwindow.whenOpenCloseMainwindow) {
                        _this.enableHideSignal = false;
                        _this.hideImmediately();
                    }
                    if (subwindow.whenOpenCloseOthersubwindow) {
                        var list = _this.subwindowDict.getValues;
                        for (var i = 0; i < list.length; i++) {
                            var item = list[i];
                            if (item != subwindow) {
                                item.hideImmediately();
                                _this.__onSubWindowClose(item);
                            }
                        }
                    }
                    _this.sShowSubwindowComplete.dispatch();
                }
            };
            subwindow.sShowComplete.addOnce(caller.on, caller);
        }
        var index = this.subwindowStack.indexOf(subwindow);
        if (index != -1)
            this.subwindowStack.splice(index, 1);
        this.subwindowStack.push(subwindow);
        if (subwindow.menuIsCreated) {
            subwindow.onMenuOpen(menuParmeter);
        }
        else {
            subwindow.menuParameter = menuParmeter;
        }
        subwindow.showOn(this.windowContainer);
        Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_OpenMenu, this.menuId, menuParmeter.openType, menuParmeter.openIndex);
    };
    // 打开子窗口, 使用索引
    MWindow.prototype.openSubwindowByIndex = function (subwindowIndex, dontCloseOther) {
        if (dontCloseOther === void 0) { dontCloseOther = false; }
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var subwindow = this.getSubwindow(subwindowIndex);
        this.openSubwindow.apply(this, [subwindow, dontCloseOther].concat(args));
    };
    // 子窗口返回到主窗口
    MWindow.prototype.onSubwindowBack = function (subwindow) {
        this.menuParameter.openType = MenuOpenType_1.MenuOpenType.None;
        this.menuParameter.openIndex = 0;
        this.sShowComplete.addOnce(function () {
            subwindow.hide();
        }, subwindow);
        if (this.windowContainer.parent) {
            subwindow.hide();
        }
        this.showOn(this.windowContainer);
        this.subwindowStack = [];
    };
    // 获取Tab的显示对象列表
    MWindow.prototype.getTabDispyaObjects = function (tabIndex) {
        if (this.tabDict.hasKey(tabIndex)) {
            return this.tabDict.getValue(tabIndex);
        }
        var list = [];
        this.tabDict.add(tabIndex, list);
        return list;
    };
    // 注册控制器Tab
    MWindow.prototype.registerControllerTab = function (tabCtrl, contentPane) {
        if (contentPane === void 0) { contentPane = null; }
        if (!contentPane)
            contentPane = this.contentPane;
        var count = contentPane.numChildren;
        for (var i = 0; i < count; i++) {
            var obj = contentPane.getChildAt(i);
            if (obj._gears && obj._gears.length > 0) {
                for (var _i = 0, _a = obj._gears; _i < _a.length; _i++) {
                    var gear = _a[_i];
                    if (gear && gear.controller == tabCtrl) {
                        if (gear instanceof fairygui.gears.GearDisplay) {
                            if (gear.pages && gear.pages.length > 0) {
                                for (var _b = 0, _c = gear.pages; _b < _c.length; _b++) {
                                    var pageIndexStr = _c[_b];
                                    var tabIndex = toInt(pageIndexStr);
                                    this.registerTab(tabIndex, obj);
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    // 注册Tab内容
    MWindow.prototype.registerTab = function (tabIndex, displayObject) {
        var list = this.getTabDispyaObjects(tabIndex);
        list.push(displayObject);
    };
    // 设置Tab，显示或者隐藏
    MWindow.prototype.setTabVisiable = function (tabIndex, visiable) {
        var list = this.getTabDispyaObjects(tabIndex);
        for (var i = 0; i < list.length; i++) {
            if (visiable) {
                this.callChildOnTabShow(list[i]);
            }
            else if (list[i].visible) {
                this.callChildOnTabHide(list[i]);
            }
            list[i].visible = visiable;
        }
    };
    MWindow.prototype.setOpenTab = function (tabIndex) {
        this.menuParameter.openIndex = tabIndex;
        var keys = this.tabDict.getKeys();
        for (var i = 0; i < keys.length; i++) {
            if (keys[i] != tabIndex) {
                this.setTabVisiable(keys[i], false);
            }
        }
        this.setTabVisiable(tabIndex, true);
        this.onOpenTab(tabIndex);
    };
    // 打开Tab
    MWindow.prototype.openTab = function (tabIndex) {
        this.tabHistorys.push(tabIndex);
        this.setOpenTab(tabIndex);
        Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_OpenMenu, this.menuId, MenuOpenType_1.MenuOpenType.Tab, tabIndex);
    };
    // 如果需要处理额外的业务，可以重新该方法
    MWindow.prototype.onOpenTab = function (tabIndex) {
    };
    // 返回上一次Tab
    MWindow.prototype.backTab = function () {
        if (this.tabHistorys.length > 0) {
            // this.tabHistorys = this.tabHistorys.filter((id)=>{return id != this.menuParameter.openIndex});
            // if(this.tabHistorys.length > 0)
            // {
            //     let index = this.tabHistorys[0];
            //     this.tabHistorys = this.tabHistorys.filter((id)=>{return id != index});
            //     this.menuParameter.openIndex = index;
            //     this.setOpenTab(index);
            // }
            var lastIndex = void 0;
            for (var i = this.tabHistorys.length - 1; i >= 0; i--) {
                if (this.tabHistorys[i] == this.menuParameter.openIndex) {
                    if (i > 0) {
                        if (this.tabHistorys[i - 1] != this.menuParameter.openIndex) {
                            lastIndex = this.tabHistorys[i - 1];
                        }
                    }
                }
            }
            if (lastIndex === undefined) {
                this.menuBack();
            }
            else {
                this.openTab(lastIndex);
            }
        }
    };
    // 清除Tab历史记录
    MWindow.prototype.clearTabHistorys = function () {
        this.tabHistorys = [];
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    //=========================
    // 设置child.moduleWindow
    //-------------------------
    MWindow.prototype.setChildWindow = function (com) {
        FguiHelper_1.default.setChildWindow(com, this);
    };
    //=========================
    // 设置child.onWindowInited
    //-------------------------
    MWindow.prototype.callChildOnWindowInited = function (com) {
        FguiHelper_1.default.callChildOnWindowInited(com);
    };
    //=========================
    // 设置child.onWindowDestory
    //-------------------------
    MWindow.prototype.callChildOnWindowDestory = function (com) {
        FguiHelper_1.default.callChildOnWindowDestory(com);
    };
    //=========================
    // 调用child GComponent的 onWindowShow
    //-------------------------
    MWindow.prototype.callChildOnWindowShow = function (com) {
        FguiHelper_1.default.callChildOnWindowShow(com);
    };
    //=========================
    // 调用child GComponent的 onWindowHide
    //-------------------------
    MWindow.prototype.callChildOnWindowHide = function (com) {
        FguiHelper_1.default.callChildOnWindowHide(com);
    };
    //=========================
    // 调用child GComponent的 onTabShow
    //-------------------------
    MWindow.prototype.callChildOnTabShow = function (com) {
        FguiHelper_1.default.callChildOnTabShow(com);
    };
    //=========================
    // 调用child GComponent的 onTabHide
    //-------------------------
    MWindow.prototype.callChildOnTabHide = function (com) {
        FguiHelper_1.default.callChildOnTabHide(com);
    };
    return MWindow;
}(FWindow_1.default));
exports.default = MWindow;
},{"../../FGUI/Generates/GuiPackageNames":479,"../../Game":546,"../../GameEventKey":548,"../../Libs/Helpers/Dictionary":626,"../../Libs/Helpers/FguiHelper":627,"../../Libs/signals/Signal":640,"../AssetManagers/AssetHelper":549,"../AssetManagers/AssetItemType":550,"../Menu/MenuOpenType":575,"./FWindow":577}],580:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// 模块配置
var ModuleConfig = /** @class */ (function () {
    function ModuleConfig(menuId, windowClass) {
        this.menuId = menuId;
        this.windowClass = windowClass;
    }
    return ModuleConfig;
}());
exports.default = ModuleConfig;
},{}],581:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PropType_1 = require("./PropType");
var PropHelper_1 = require("./PropHelper");
var Game_1 = require("../../Game");
var PropGroupType_1 = require("./PropGroupType");
var Prop = /** @class */ (function () {
    function Prop() {
        this.val = 0;
        this.uid = Prop.UID++;
    }
    Prop.prototype.clone = function () {
        var d = new Prop();
        d._type = this._type;
        d._id = this._id;
        d._typeId = this._typeId;
        d.val = this.val;
        if (isNaN(this.val))
            d.val = 0;
        return d;
    };
    Prop.prototype.copyValue = function (p) {
        this._type = p._type;
        this._id = p._id;
        this._typeId = p._typeId;
        this.val = p.val;
        if (isNaN(p.val))
            this.val = 0;
        return this;
    };
    Prop.prototype.toString = function () {
        return "Prop {id:" + this.id + ", val:" + this.val + ", field:" + this.field + ", name:" + this.name + ", type:" + this.type + ", }";
    };
    Prop.ToStr = function (list) {
        var str = "";
        for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
            var prop = list_1[_i];
            str += "    " + prop.toString();
        }
        return str;
    };
    /**
     * 创建Prop
     * @param propId  属性ID
     * @param propVal  值
     * @param propType 属性类型
     */
    Prop.Create = function (propId, propVal, propType) {
        if (propType === void 0) { propType = PropType_1.PropType.Add; }
        var prop = new Prop();
        prop._typeId = PropHelper_1.default.GetTypeId(propId, propType);
        prop._id = propId;
        prop._type = propType;
        prop.val = propVal;
        if (isNaNOrEmpty(propVal))
            prop.val = 0;
        return prop;
    };
    /**
     * 创建Prop
     * @param propTypeId 属性类型ID
     * @param propVal 值
     */
    Prop.CreateByTypeid = function (propTypeId, propVal) {
        var prop = new Prop();
        prop._typeId = propTypeId;
        prop._id = PropHelper_1.default.PropTypeid2Id(propTypeId);
        prop._type = PropHelper_1.default.PropTypeid2Type(propTypeId);
        prop.val = propVal;
        if (isNaN(propVal))
            prop.val = 0;
        return prop;
    };
    /**
     * 创建Prop
     * @param proField 属性字段
     * @param propVal 值
     */
    Prop.CreateByField = function (proField, propVal) {
        var prop = new Prop();
        prop._id = PropHelper_1.default.GetPropId(proField);
        prop._type = PropType_1.PropType.Add;
        prop._typeId = PropHelper_1.default.GetTypeId(prop._id, prop._type);
        prop.val = propVal;
        if (isNaN(propVal))
            prop.val = 0;
        return prop;
    };
    Object.defineProperty(Prop.prototype, "id", {
        // id
        get: function () {
            return this._id;
        },
        set: function (value) {
            this._id = value;
            this._typeId = PropHelper_1.default.GetTypeId(this._id, this._type);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "type", {
        // type
        get: function () {
            return this._type;
        },
        set: function (value) {
            this._type = value;
            this._typeId = PropHelper_1.default.GetTypeId(this._id, this._type);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "typeId", {
        // typeId
        get: function () {
            return this._typeId;
        },
        set: function (value) {
            this._typeId = value;
            this._id = PropHelper_1.default.PropTypeid2Id(value);
            this._type = PropHelper_1.default.PropTypeid2Type(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "config", {
        /** 配置 */
        get: function () {
            return Game_1.default.config.property.getConfig(this._id);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "groupType", {
        /** 组类型 */
        get: function () {
            return this.config.groupType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "enableRevert", {
        /** 是否可以回滚 */
        get: function () {
            return this.groupType != PropGroupType_1.PropGroupType.Nonrevert;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "field", {
        /** 属性字段名 */
        get: function () {
            return this.config.field;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "name", {
        /** 显示名称 */
        get: function () {
            return this.config.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "icon", {
        /** 图标URL */
        get: function () {
            return this.config.iconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Prop.prototype, "visiable", {
        /** 是否可见 */
        get: function () {
            return this.config.visible;
        },
        enumerable: true,
        configurable: true
    });
    Prop.UID = 0;
    return Prop;
}());
exports.default = Prop;
},{"../../Game":546,"./PropGroupType":583,"./PropHelper":584,"./PropType":586}],582:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PropField = /** @class */ (function () {
    function PropField() {
    }
    /** 储量 */
    PropField.reserve = "reserve";
    /** 储量最大值 */
    PropField.reserveMax = "reserveMax";
    /** 产出频率 */
    PropField.produceCd = "produceCd";
    /** 产出数量 */
    PropField.produceNum = "produceNum";
    /** 建造cd */
    PropField.buildingCd = "buildingCd";
    /** 上映持续天数 */
    PropField.playDay = "playDay";
    /** 招募概率 */
    PropField.recruitProbability = "recruitProbability";
    /** 暴击几率 */
    PropField.criticalHitChance = "criticalHitChance";
    /** 暴击效果 */
    PropField.critEffect = "critEffect";
    /** 拍摄收视率 */
    PropField.audienceRatings = "audienceRatings";
    /** 后续收益效果 */
    PropField.followUp = "followUp";
    /** 事件触发 */
    PropField.event = "event";
    /** 增加随机剧本 */
    PropField.script = "script";
    /** 生产应援卡 */
    PropField.assistanceCard = "assistanceCard";
    /* 表演*/
    PropField.charm = 'charm';
    /**  口才 */
    PropField.eloquence = 'eloquence';
    /** 娱乐 */
    PropField.entertainment = 'entertainment';
    /** 表演 */
    PropField.act = 'act';
    /** 才艺 */
    PropField.talent = 'talent';
    return PropField;
}());
exports.default = PropField;
},{}],583:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PropGroupType;
(function (PropGroupType) {
    /** 不可逆, HP、Energy */
    PropGroupType[PropGroupType["Nonrevert"] = 0] = "Nonrevert";
    /** 可回滚 */
    PropGroupType[PropGroupType["Revert"] = 1] = "Revert";
    /** 状态 */
    PropGroupType[PropGroupType["State"] = 2] = "State";
})(PropGroupType = exports.PropGroupType || (exports.PropGroupType = {}));
},{}],584:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PropField_1 = require("./PropField");
var PropId_1 = require("./PropId");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var PropHelper = /** @class */ (function () {
    function PropHelper() {
    }
    /** 获取propId, 根据 propTypeId */
    PropHelper.PropTypeid2Id = function (propTypeId) {
        return propTypeId % PropHelper.TYPE_ID_MASK;
    };
    /** 获取propType, 根据 propTypeId */
    PropHelper.PropTypeid2Type = function (propTypeId) {
        return Math.floor(propTypeId / PropHelper.TYPE_ID_MASK);
    };
    /** 获取propTypeId, 根据 propId和propType */
    PropHelper.GetTypeId = function (propId, propType) {
        return propType * PropHelper.TYPE_ID_MASK + propId;
    };
    /** 获取属性ID，根据属性字段 */
    PropHelper.GetPropId = function (propField) {
        return PropId_1.default[propField];
    };
    /** 获取属性字段，根据属性ID */
    PropHelper.GetPropField = function (propId) {
        return PropHelper.ID2FieldDict.getValue(propId);
    };
    Object.defineProperty(PropHelper, "FieldList", {
        get: function () {
            if (!PropHelper._fieldList) {
                var list = PropHelper._fieldList = [];
                for (var field in PropField_1.default) {
                    list.push(PropField_1.default[field]);
                }
            }
            return PropHelper._fieldList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PropHelper, "PreFieldList", {
        get: function () {
            if (!PropHelper._preFieldList) {
                var list = PropHelper._preFieldList = [];
                for (var _i = 0, _a = PropHelper.FieldList; _i < _a.length; _i++) {
                    var field = _a[_i];
                    list.push("prop_" + field);
                }
            }
            return PropHelper._preFieldList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PropHelper, "ID2FieldDict", {
        get: function () {
            if (!PropHelper._ID2FieldDict) {
                var dict = PropHelper._ID2FieldDict = new Dictionary_1.default();
                for (var field in PropId_1.default) {
                    if (field.toLowerCase() == "list")
                        continue;
                    dict.add(PropId_1.default[field], field);
                }
            }
            return PropHelper._ID2FieldDict;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 生成配置 PropList
     */
    PropHelper.GenerateConfigPropList = function (config, propList) {
        var fields = PropHelper.FieldList;
        var preFields = PropHelper.PreFieldList;
        var count = fields.length;
        for (var i = 0; i < count; i++) {
            var val = config[preFields[i]];
            if (val !== undefined) {
                var propId = PropHelper.GetPropId(fields[i]);
                propList.setVal(propId, val);
            }
        }
    };
    Object.defineProperty(PropHelper, "ActorPropIds", {
        get: function () {
            if (!this._actorPropIds) {
                this._actorPropIds = [
                    PropId_1.default.charm,
                    PropId_1.default.eloquence,
                    PropId_1.default.entertainment,
                    PropId_1.default.act,
                    PropId_1.default.talent
                ];
            }
            return this._actorPropIds;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PropHelper, "ActorPropIdsHasAll", {
        get: function () {
            if (!this._actorPropIdsHasAll) {
                this._actorPropIdsHasAll = [
                    PropId_1.default.tabAll,
                    PropId_1.default.charm,
                    PropId_1.default.eloquence,
                    PropId_1.default.entertainment,
                    PropId_1.default.act,
                    PropId_1.default.talent
                ];
            }
            return this._actorPropIdsHasAll;
        },
        enumerable: true,
        configurable: true
    });
    // 最大值
    PropHelper.TYPE_ID_MASK = 100;
    return PropHelper;
}());
exports.default = PropHelper;
},{"../../Libs/Helpers/Dictionary":626,"./PropField":582,"./PropId":585}],585:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PropId = /** @class */ (function () {
    function PropId() {
    }
    Object.defineProperty(PropId, "List", {
        get: function () {
            if (!PropId.list) {
                var list = [];
                for (var key in PropId) {
                    if (key == 'list' || key == 'List' || PropId[key] <= 0)
                        continue;
                    list.push(PropId[key]);
                }
                PropId.list = list;
            }
            return PropId.list;
        },
        enumerable: true,
        configurable: true
    });
    // 只是UI Tab 综合 使用
    PropId.tabAll = 0;
    // 储量
    PropId.reserve = 1;
    // 储量最大值
    PropId.reserveMax = 2;
    /** 产出频率 */
    PropId.produceCd = 3;
    // 产出数量
    PropId.produceNum = 4;
    // 建造cd
    PropId.buildingCd = 5;
    // 上映持续天数
    PropId.playDay = 6;
    // 招募概率
    PropId.recruitProbability = 7;
    /** 暴击几率 */
    PropId.criticalHitChance = 8;
    /** 暴击效果 */
    PropId.critEffect = 9;
    /** 拍摄收视率 */
    PropId.audienceRatings = 10;
    /** 后续收益效果 */
    PropId.followUp = 11;
    /** 事件触发 */
    PropId.event = 12;
    /** 增加随机剧本 */
    PropId.script = 13;
    /** 生产应援卡 */
    PropId.assistanceCard = 14;
    /** 额外产出 */
    PropId.additionalOutput = 15;
    /** 魅力 */
    PropId.charm = 1601;
    /** 口才 */
    PropId.eloquence = 1602;
    /** 娱乐 */
    PropId.entertainment = 1603;
    /** 表演 */
    PropId.act = 1604;
    /** 才艺 */
    PropId.talent = 1605;
    return PropId;
}());
exports.default = PropId;
},{}],586:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PropType;
(function (PropType) {
    /** 基础属性 */
    PropType[PropType["Base"] = 0] = "Base";
    /** 附加具体值, 相对基础值 */
    PropType[PropType["Basesadd"] = 1] = "Basesadd";
    /** 附加百分比, 相对基础值 */
    PropType[PropType["Baseper"] = 2] = "Baseper";
    /** 附加百分比，相对上限值，比如血量 */
    PropType[PropType["Maxper"] = 3] = "Maxper";
    /** 附加具体值 */
    PropType[PropType["Add"] = 4] = "Add";
    /** 附加百分比 */
    PropType[PropType["Per"] = 5] = "Per";
    /** 终于属性 */
    PropType[PropType["Final"] = 6] = "Final";
})(PropType = exports.PropType || (exports.PropType = {}));
},{}],587:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundManager = Laya.SoundManager;
var Handler = laya.utils.Handler;
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var Game_1 = require("../../Game");
var SoundKey_1 = require("../../FGUI/Generates/SoundKey");
//======================
// 声音管理器
//----------------------
var AudioManager = /** @class */ (function () {
    function AudioManager() {
        // 正在播放中的音效列表
        this.soundPlayingDic = new Dictionary_1.default();
        this.localUseGlobal = true;
    }
    // 初始化
    AudioManager.prototype.install = function () {
        // this.muted = this.muted;
        // this.soundMuted = this.soundMuted;
        // this.musicMuted = this.musicMuted;
        // this.musicVolume = this.musicVolume;
        // this.soundVolume = this.soundVolume;
        this.onLogin();
        Game_1.default.application.sAppResume.add(this.onAppResume, this);
    };
    AudioManager.prototype.onAppResume = function () {
        this.replayMusic();
    };
    AudioManager.prototype.onLogin = function () {
        this.muted = this.muted;
        this.soundMuted = this.soundMuted;
        this.musicMuted = this.musicMuted;
        this.musicVolume = this.musicVolume;
        this.soundVolume = this.soundVolume;
    };
    /**
     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播发当前的背景音乐。
     * @param soundKey	声音Key。
     * @param loops		循环次数,0表示无限循环。
     * @param complete	声音播放完成回调。
     * @param startTime	声音播放起始时间。
     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。
     */
    AudioManager.prototype.playMusic = function (soundKey, loops, complete, startTime) {
        // if (BrowserDetect.isMobile)
        // 	return;
        if (this.lastMusic == soundKey) {
            return;
        }
        this.lastMusic = soundKey;
        if (this.musicMuted) {
            return;
        }
        var path = SoundKey_1.default.getPath(soundKey);
        SoundManager.stopMusic();
        return SoundManager.playMusic(path, loops, complete, startTime);
    };
    /**
     * 重新播放背景音乐
     */
    AudioManager.prototype.replayMusic = function () {
        if (this.lastMusic) {
            this.playMusic(this.lastMusic);
        }
        else {
            this.playMusic(SoundKey_1.default.MM_BGM_01);
        }
    };
    /**
     * 播放音效。音效可以同时播放多个。
     * @param url			声音文件地址。
     * @param isStopPreSound 是否停止其它声音
     * @param loops			循环次数,0表示无限循环。
     * @param complete		声音播放完成回调  Handler对象。
     * @param soundClass	使用哪个声音类进行播放，null表示自动选择。
     * @param startTime		声音播放起始时间。
     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。
     */
    AudioManager.prototype.playSound = function (soundKey, isStopPreSound, loops, complete, startTime) {
        if (!this.soundPlayingDic || this.soundPlayingDic === null) {
            this.soundPlayingDic = new Dictionary_1.default();
        }
        if (isStopPreSound) {
            this.stopAllSound();
            this.soundPlayingDic.clear();
        }
        var path = SoundKey_1.default.getPath(soundKey);
        var isPlay = true;
        if (!complete || complete === null) {
            complete = Handler.create(this, this.playSoundComplete, [path]);
            if (this.soundPlayingDic.hasKey(path)) {
                isPlay = false;
            }
        }
        if (isPlay) {
            var soundChannel = SoundManager.playSound(path, loops, complete, startTime);
            this.soundPlayingDic.add(path, soundChannel);
        }
        return this.soundPlayingDic.getValue(path);
    };
    // 声音播放完成
    AudioManager.prototype.playSoundComplete = function (path) {
        if (this.soundPlayingDic.hasKey(path)) {
            this.soundPlayingDic.remove(path);
        }
    };
    /**
     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。
     * @param url  声音文件地址。
     */
    AudioManager.prototype.stopSound = function (soundKey) {
        var path = SoundKey_1.default.getPath(soundKey);
        if (this.soundPlayingDic.hasKey(path)) {
            this.soundPlayingDic.remove(path);
        }
        SoundManager.stopSound(path);
    };
    /**
     * 停止播放所有声音（包括背景音乐和音效）。
     */
    AudioManager.prototype.stopAll = function () {
        if (this.soundPlayingDic) {
            this.soundPlayingDic.clear();
        }
        SoundManager.stopAll();
    };
    /**
     * 停止播放所有音效（不包括背景音乐）。
     */
    AudioManager.prototype.stopAllSound = function () {
        if (this.soundPlayingDic) {
            this.soundPlayingDic.clear();
        }
        SoundManager.stopAllSound();
    };
    /**
     * 停止播放背景音乐（不包括音效）。
     * @param url  声音文件地址。
     */
    AudioManager.prototype.stopMusic = function () {
        SoundManager.stopMusic();
    };
    Object.defineProperty(AudioManager.prototype, "muted", {
        get: function () {
            if (this._muted === undefined) {
                this._muted = Game_1.default.localStorage.hasItem("sound_muted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_muted", this.localUseGlobal) : false;
            }
            return this._muted;
        },
        set: function (value) {
            this._muted = value;
            Game_1.default.localStorage.setBoolean("sound_muted", value, this.localUseGlobal);
            SoundManager.muted = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "soundMuted", {
        get: function () {
            if (this._soundMuted === undefined) {
                this._soundMuted = Game_1.default.localStorage.hasItem("sound_soundMuted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_soundMuted", this.localUseGlobal) : false;
            }
            return this._soundMuted;
        },
        set: function (value) {
            this._soundMuted = value;
            Game_1.default.localStorage.setBoolean("sound_soundMuted", value, this.localUseGlobal);
            SoundManager.soundMuted = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "musicMuted", {
        get: function () {
            if (this._musicMuted === undefined) {
                this._musicMuted = Game_1.default.localStorage.hasItem("sound_musicMuted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_musicMuted", this.localUseGlobal) : false;
            }
            return this._musicMuted;
        },
        set: function (value) {
            this._musicMuted = value;
            Game_1.default.localStorage.setBoolean("sound_musicMuted", value, this.localUseGlobal);
            SoundManager.musicMuted = value;
            if (value) {
                SoundManager.stopMusic();
            }
            else {
                this.replayMusic();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "musicVolume", {
        get: function () {
            if (this._musicVolume === undefined) {
                this._musicVolume = Game_1.default.localStorage.hasItem("sound_musicVolume", this.localUseGlobal) ? Game_1.default.localStorage.getFloat("sound_musicVolume", this.localUseGlobal) : 1;
            }
            return this._musicVolume;
        },
        set: function (value) {
            this._musicVolume = value;
            Game_1.default.localStorage.setFloat("sound_musicVolume", value, this.localUseGlobal);
            SoundManager.musicVolume = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "soundVolume", {
        get: function () {
            if (this._soundVolume === undefined) {
                this._soundVolume = Game_1.default.localStorage.hasItem("sound_soundVolume", this.localUseGlobal) ? Game_1.default.localStorage.getFloat("sound_soundVolume", this.localUseGlobal) : 1;
            }
            return this._soundVolume;
        },
        set: function (value) {
            this._soundVolume = value;
            Game_1.default.localStorage.setFloat("sound_soundVolume", value, this.localUseGlobal);
            SoundManager.soundVolume = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "autoStopMusic", {
        get: function () {
            return this._autoStopMusic;
        },
        set: function (value) {
            SoundManager.autoStopMusic = value;
            this._autoStopMusic = value;
        },
        enumerable: true,
        configurable: true
    });
    return AudioManager;
}());
exports.default = AudioManager;
},{"../../FGUI/Generates/SoundKey":497,"../../Game":546,"../../Libs/Helpers/Dictionary":626}],588:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var SoundKey_1 = require("../../FGUI/Generates/SoundKey");
var SystemToastMessage_1 = require("./SystemToastMessage");
var TEXT_1 = require("../../Config/Keys/TEXT");
var SystemAlertMessage_1 = require("../../FGUI/Extends/GameLaunch/SystemAlertMessage");
var SystemConfirmMessage_1 = require("../../FGUI/Extends/GameLaunch/SystemConfirmMessage");
//======================
// 转圈
//----------------------
var SystemMessag = /** @class */ (function () {
    function SystemMessag() {
        // 浮动消息
        this.toastMessage = new SystemToastMessage_1.default();
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    }
    // 播放打开声音		
    SystemMessag.prototype.playOpenSound = function () {
        // 播放弹出声音
        if (window["Game"] && window["Game"]["_isInstall"])
            Game_1.default.sound.playSound(SoundKey_1.default.MM02_Popup);
    };
    Object.defineProperty(SystemMessag.prototype, "alertMessage", {
        get: function () {
            if (!this._alertMessage) {
                this._alertMessage = SystemAlertMessage_1.default.createInstance();
            }
            return this._alertMessage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemMessag.prototype, "confirmMessage", {
        get: function () {
            if (!this._confirmMessage) {
                this._confirmMessage = SystemConfirmMessage_1.default.createInstance();
            }
            return this._confirmMessage;
        },
        enumerable: true,
        configurable: true
    });
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    // 浮动消息
    SystemMessag.prototype.toastText = function (txt) {
        this.toastMessage.play(txt);
    };
    SystemMessag.prototype.toastMsg = function (msgKey) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgKey].concat(args));
        this.toastMessage.play(txt);
    };
    SystemMessag.prototype.toastFormatText = function (txt) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.toastText(format(txt, args));
    };
    /**
     * 道具不足提示
     * @param id 道具id
     */
    SystemMessag.prototype.toastItemNotEnough = function (id) {
        var config = Game_1.default.config.item.getConfig(id);
        var itemName = "";
        if (config)
            itemName = config.name;
        else
            itemName = id.toString();
        this.toastText(format(TEXT_1.default.ToastTextItemNotEnough, itemName));
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    // 对话框消息,一个按钮, 简洁方法
    SystemMessag.prototype.alertText = function (txt, yesObj, yesFun) {
        this.alrtTextFull(txt, "", yesObj, yesFun);
    };
    SystemMessag.prototype.alertMsg = function (msgKey, yesObj, yesFun) {
        var txt = Game_1.default.config.msg.getTxt(msgKey);
        this.alrtTextFull(txt, "", yesObj, yesFun);
    };
    SystemMessag.prototype.alertMsgFormat = function (msgKey, msgargs, yesObj, yesFun) {
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgKey].concat(msgargs));
        this.alrtTextFull(txt, "", yesObj, yesFun);
    };
    SystemMessag.prototype.alrtTMsgFull = function (msgkey, msgargs, title, yesObj, yesFun, yesTxt, buttonEnable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (yesObj === void 0) { yesObj = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (buttonEnable === void 0) { buttonEnable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgkey].concat(msgargs));
        this.alrtTextFull(txt, "", yesObj, yesFun, yesTxt, buttonEnable, isClickButtonAutoClose);
    };
    /**
     * 对话框消息,一个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param yesObj 点击yes按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param buttonEnable 按钮是否可以点击
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemMessag.prototype.alrtTextFull = function (txt, title, yesObj, yesFun, yesTxt, closeButtonVisiable, buttonEnable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (yesObj === void 0) { yesObj = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (buttonEnable === void 0) { buttonEnable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(yesTxt)) {
            yesTxt = Game_1.default.launchText.btnYes;
        }
        this.alertMessage.open(txt, title, yesObj, yesFun, yesTxt, closeButtonVisiable, buttonEnable, isClickButtonAutoClose);
        this.playOpenSound();
    };
    SystemMessag.prototype.closeAlert = function () {
        this.alertMessage.close();
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    /**
     * 对话框消息,两个按钮
     * @param msgkey MsgConfig key
     * @param msgargs 消息参数
     * @param title 标题
     * @param caller 点击按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param noFun 点击no按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param noTxt no按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemMessag.prototype.confirmMsg = function (msgkey, msgargs, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (caller === void 0) { caller = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (noFun === void 0) { noFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (noTxt === void 0) { noTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgkey].concat(msgargs));
        this.confirmText(txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose);
    };
    /**
     * 对话框消息,两个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param caller 点击按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param noFun 点击no按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param noTxt no按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemMessag.prototype.confirmText = function (txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (caller === void 0) { caller = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (noFun === void 0) { noFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (noTxt === void 0) { noTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(yesTxt)) {
            yesTxt = TEXT_1.default.ButtonYes;
        }
        if (isNullOrEmpty(noTxt)) {
            noTxt = TEXT_1.default.ButtonNo;
        }
        this.confirmMessage.open(txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose);
        this.playOpenSound();
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    /**
     * 关闭对话框
     */
    SystemMessag.prototype.alertMessageHide = function () {
        if (this._alertMessage) {
            this._alertMessage.close();
        }
        if (this._confirmMessage) {
            this._confirmMessage.close();
        }
    };
    return SystemMessag;
}());
exports.default = SystemMessag;
},{"../../Config/Keys/TEXT":125,"../../FGUI/Extends/GameLaunch/SystemAlertMessage":300,"../../FGUI/Extends/GameLaunch/SystemConfirmMessage":301,"../../FGUI/Generates/SoundKey":497,"../../Game":546,"./SystemToastMessage":589}],589:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Handler = laya.utils.Handler;
var SystemToastMessage_1 = require("../../FGUI/Extends/GameLaunch/SystemToastMessage");
//======================
// 浮动消息管理
//----------------------
var SystemToastMessag = /** @class */ (function () {
    function SystemToastMessag() {
        // 所有的
        this.list = [];
        // 可以使用的池
        this.pools = [];
        this.timeSpacing = 1;
    }
    SystemToastMessag.prototype.play = function (txt) {
        if (txt != this.lastTxt) {
            this.show(txt);
        }
        else if (getTime() - this.lastTime >= this.timeSpacing) {
            this.show(txt);
        }
    };
    SystemToastMessag.prototype.show = function (txt) {
        this.lastTxt = txt;
        this.lastTime = getTime();
        var item;
        if (this.pools.length > 0) {
            item = this.pools.pop();
        }
        else {
            item = SystemToastMessage_1.default.createInstance();
            this.list.push(item);
        }
        item.play(txt, Handler.create(this, this.onItemComplete));
    };
    SystemToastMessag.prototype.onItemComplete = function (item) {
        this.pools.push(item);
    };
    return SystemToastMessag;
}());
exports.default = SystemToastMessag;
},{"../../FGUI/Extends/GameLaunch/SystemToastMessage":302}],590:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
var LangManager_1 = require("../Config/LangManager");
var LangType_1 = require("../Config/LangType");
var TEXT_1 = require("../Config/Keys/TEXT");
var TimeHelper = /** @class */ (function () {
    function TimeHelper() {
    }
    /**
     * 获取指定时间 月的天数 (28/ 29/ 30 / 31)
     * @param fullYear 年
     * @param month 月 取值范围(1--12)
     */
    TimeHelper.GetServerMonthDateNum = function (fullYear, month) {
        var date = this.GetServerDateByTimestamp();
        if (fullYear === null || fullYear === undefined)
            fullYear = date.getFullYear();
        if (month === null || month === undefined)
            month = date.getMonth() + 1;
        date = new Date(fullYear, month, 0);
        return date.getDate();
    };
    /**
     * 日期转字符串 ， 返回 2019-6-24 周7 18:45:30
     * @param d
     */
    TimeHelper.ToStr = function (d) {
        return d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate() + " \u5468" + (d.getDay() == 0 ? 7 : d.getDay()) + "  " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
    };
    //======================================
    // 获取服务器时区 时间
    //--------------------------------------
    /**
     * 获取服务器时区时间的本地对应时间 （用于判断跨天，星期，显示服务器时间）,返回的Date，使用Get函数可以获得服务器的年月日时分秒，方便显示和比较， 但时间戳不同，慎用。
     * @param timestamp 时间戳 秒
     * @return 返回的Date，使用Get函数可以获得服务器的年月日时分秒，方便显示和比较， 但时间戳不同，慎用。
     */
    TimeHelper.GetServerDateByTimestamp = function (timestamp) {
        if (timestamp == null) {
            timestamp = Game_1.default.time.serverSeconds;
        }
        return new Date(timestamp * 1000 - Game_1.default.time.localSubServerTimeZone);
    };
    /**
     * 获取服务器时间戳 (精确到毫秒)
     * @param h
     * @param m
     * @param s
     */
    TimeHelper.GetServerTimestampByHMS = function (h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var date = this.GetServerDateByHMS(h, m, s);
        return date.getTime();
    };
    /**
     * 获取服务器时间戳  (精确到毫秒)
     * @param timeHMS 字符窜时间 01:20:10
     */
    TimeHelper.GetServerTimestampByHMSText = function (timeHMS) {
        var strTimes = timeHMS.split(':');
        var h, m, s;
        if (strTimes[0]) {
            h = Number(strTimes[0]) || 0;
        }
        if (strTimes[1]) {
            m = Number(strTimes[1]) || 0;
        }
        if (strTimes[2]) {
            s = Number(strTimes[2]) || 0;
        }
        return this.GetServerTimestampByHMS(h, m, s);
    };
    /**
     * 获取服务器时间
     * @param h
     * @param m
     * @param s
     */
    TimeHelper.GetServerDateByHMS = function (h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var date = this.GetServerDateByTimestamp();
        date.setHours(h);
        date.setMinutes(m);
        date.setSeconds(s);
        return date;
    };
    //======================================
    // 获取指定时间点的日期, 如果指定时间点过了将修改日期到下一个时间点, 参照服务器时区
    //--------------------------------------
    /**
     * 获取下一个服务器时间点
     * 如果当前时间 <= 目标时间， 返回目标时间
     * 如果当前时间 > 目标时间, 返回第二天对应时间
     * @param h
     * @param m
     * @param s
     */
    TimeHelper.getServerNextDate = function (h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var date = this.GetServerDateByHMS(h, m, s);
        if (date.getTime() >= Game_1.default.time.serverMilliseconds) {
            return date;
        }
        date.setHours(date.getHours() + 24);
        return date;
    };
    /**
     * 获取下一个服务器时间点
     * 如果当前时间 <= 目标时间， 返回目标时间
     * 如果当前时间 > 目标时间, 返回下一周对应时间
     *
     * @param week 星期几 (0--6)
     * @param h
     * @param m
     * @param s
     */
    TimeHelper.getServerNextWeekDate = function (week, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var date = this.GetServerDateByHMS(h, m, s);
        var subWeek = week - date.getDay();
        if (subWeek < 0) {
            subWeek += 7;
        }
        else if (subWeek == 0) {
            if (date.getTime() < Game_1.default.time.serverMilliseconds) {
                subWeek += 7;
            }
        }
        date.setDate(date.getDate() + subWeek);
        return date;
    };
    /**
     * 获取下一个服务器时间点
     * 如果当前时间 <= 目标时间， 返回目标时间
     * 如果当前时间 > 目标时间, 返回下一个月对应时间
     * @param monthDate (1 ~ 31), 如果是0就是当天， 如果小于0就是月末倒数第几天
     * @param h
     * @param m
     * @param s
     */
    TimeHelper.getServerNextMonthDate = function (monthDate, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var date = this.GetServerDateByHMS(h, m, s);
        var mdate = monthDate;
        if (monthDate == 0) {
            mdate = date.getDate();
        }
        else if (monthDate < 0) {
            mdate = this.GetServerMonthDateNum() + monthDate + 1;
        }
        date.setDate(mdate);
        if (date.getTime() >= Game_1.default.time.serverMilliseconds) {
            return date;
        }
        var nextMothDateNum = this.GetServerMonthDateNum(date.getFullYear(), date.getMonth() + 1);
        if (monthDate < 0) {
            mdate = nextMothDateNum + monthDate + 1;
        }
        if (mdate > nextMothDateNum) {
            mdate = nextMothDateNum;
        }
        date.setMonth(date.getMonth() + 1);
        date.setDate(mdate);
        return date;
    };
    //======================================
    // 时间--判断
    //--------------------------------------
    /**
     * 获取服务器明天0点时间戳 (精确到毫秒)
     */
    TimeHelper.getServerTomorrowZeroPointTimestamp = function () {
        return this.GetServerTimestampByHMS() + this.ONE_DAY_SECONDS * 1000;
    };
    /**
     * 判断服务器时区下时间戳的星期
     * @param timestamp 时间戳 秒
     */
    TimeHelper.IsServerWeek = function (timestamp, week) {
        var date = this.GetServerDateByTimestamp(timestamp);
        return date.getDay() == week;
    };
    /**
     * 检查本地时区是否就今天
     * @param timestamp 时间戳 秒
     */
    TimeHelper.isToday = function (timestamp) {
        var d = new Date(timestamp * 1000);
        var c = new Date();
        return d.getFullYear() == c.getFullYear() && d.getMonth() == c.getMonth() && d.getDate() == c.getDate();
    };
    /**
     * 检查服务器时区是否就今天
     * @param timestamp 时间戳 秒
     */
    TimeHelper.IsServerToday = function (timestamp) {
        var d1 = this.GetServerDateByTimestamp(timestamp);
        var d2 = this.GetServerDateByTimestamp();
        return d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate();
    };
    /**
     * 判断本地时区下时间戳是否是同一天
     * @param timestamp1 时间戳 秒
     * @param timestamp2 时间戳 秒
     */
    TimeHelper.IsSameDay = function (timestamp1, timestamp2) {
        var d1 = new Date(timestamp1);
        var d2 = new Date(timestamp2);
        return d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate();
    };
    /**
     * 判断服务器时区下时间戳是否是同一天
     * @param timestamp1 时间戳 秒
     * @param timestamp2 时间戳 秒
     */
    TimeHelper.IsServerSameDay = function (timestamp1, timestamp2) {
        var d1 = this.GetServerDateByTimestamp(timestamp1);
        var d2 = this.GetServerDateByTimestamp(timestamp2);
        return d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate();
    };
    /**
     * 判断服务器时区下时间戳是否超过某个时刻
     * @param timestamp 时间戳 秒
     */
    TimeHelper.IsBeyondTimeInSameDay = function (timestamp, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        return this.BeyondTimeInSameDay(timestamp, h, m, s) / 1000 <= 0;
    };
    /**
     * 判断服务器时区下时间戳到指定时间的差
     * @param timestamp 时间戳 秒
     */
    TimeHelper.BeyondTimeInSameDay = function (timestamp, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        if (h == 24) {
            h = 0;
            var date_1 = this.GetServerDateByHMS(h, m, s);
            return (date_1.getTime() / 1000 + this.ONE_DAY_SECONDS) - timestamp;
        }
        var date = this.GetServerDateByHMS(h, m, s);
        return date.getTime() / 1000 - timestamp;
    };
    /**
     * 获取某个时间到某个点的秒数
     * 如果该点过了判断时间 那该点为下一天该点到这个时间的秒数
     * 否则为该点到判断时间的秒数
     * @param timestamp
     * @param h
     * @param m
     * @param s
     */
    TimeHelper.SubSecondTimeInDay = function (timestamp, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var seconds = this.BeyondTimeInSameDay(timestamp, h, m, s);
        if (seconds <= 0) {
            seconds = seconds + this.ONE_DAY_SECONDS;
        }
        return seconds;
    };
    //======================================
    // 时间格式化-- 以时间戳
    //--------------------------------------
    /**
     * 返回格式 Y-M-D-H:M:S
     * @param timestamp 时间戳 秒
     * @param isHaveYear 是否显示年
     * @param isShowServerTimezoom 是否用服务器时区显示， 默认 flase
     */
    TimeHelper.GetYMDHMS = function (timestamp, isHaveYear, isShowServerTimezoom) {
        if (isHaveYear === void 0) { isHaveYear = true; }
        if (isShowServerTimezoom === void 0) { isShowServerTimezoom = false; }
        //三目运算符
        var Dates = isShowServerTimezoom ? this.GetServerDateByTimestamp(timestamp) : new Date(timestamp);
        //年份
        var Year = Dates.getFullYear();
        //月份下标是0-11
        var Months = (Dates.getMonth() + 1) < 10 ? '0' + (Dates.getMonth() + 1) : (Dates.getMonth() + 1);
        //具体的天数
        var Day = Dates.getDate() < 10 ? '0' + Dates.getDate() : Dates.getDate();
        //小时
        var Hours = Dates.getHours() < 10 ? '0' + Dates.getHours() : Dates.getHours();
        //分钟
        var Minutes = Dates.getMinutes() < 10 ? '0' + Dates.getMinutes() : Dates.getMinutes();
        //秒
        // const Seconds = Dates.getSeconds() < 10 ? '0' + Dates.getSeconds() : Dates.getSeconds();
        //返回数据格式
        if (LangManager_1.default.Instance.lang == LangType_1.default.zh_cn) {
            if (isHaveYear) {
                return Year + '-' + Months + '-' + Day + ' ' + Hours + ':' + Minutes;
            }
            else {
                return Months + '-' + Day + ' ' + Hours + ':' + Minutes;
            }
        }
        else {
            if (isHaveYear) {
                return Year + ' ' + TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day + ', ' + Hours + ':' + Minutes;
            }
            else {
                return TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day + ', ' + Hours + ':' + Minutes;
            }
        }
    };
    /**
     * 获取年月日 Y-M-D
     * @param timestamp 时间戳 秒
     * @param isShowServerTimezoom 是否用服务器时区显示， 默认 flase
     */
    TimeHelper.GetYMD = function (timestamp, isShowServerTimezoom) {
        if (isShowServerTimezoom === void 0) { isShowServerTimezoom = false; }
        //三目运算符
        var Dates = isShowServerTimezoom ? this.GetServerDateByTimestamp(timestamp) : new Date(timestamp);
        //年份
        var Year = Dates.getFullYear();
        //月份下标是0-11
        var Months = (Dates.getMonth() + 1) < 10 ? '0' + (Dates.getMonth() + 1) : (Dates.getMonth() + 1);
        //具体的天数
        var Day = Dates.getDate() < 10 ? '0' + Dates.getDate() : Dates.getDate();
        if (LangManager_1.default.Instance.lang == LangType_1.default.zh_cn) {
            //返回数据格式
            return Year + '-' + Months + '-' + Day;
        }
        else {
            //返回数据格式
            return Year + ' ' + TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day;
        }
    };
    /**
     * 获取日期 M-D
     * @param timestamp 时间戳 秒
     * @param isShowServerTimezoom 是否用服务器时区显示， 默认 flase
     */
    TimeHelper.GetMD = function (timestamp, isShowServerTimezoom) {
        if (isShowServerTimezoom === void 0) { isShowServerTimezoom = false; }
        //三目运算符
        var Dates = isShowServerTimezoom ? this.GetServerDateByTimestamp(timestamp) : new Date(timestamp);
        //月份下标是0-11
        var Months = (Dates.getMonth() + 1) < 10 ? '0' + (Dates.getMonth() + 1) : (Dates.getMonth() + 1);
        //具体的天数
        var Day = Dates.getDate() < 10 ? '0' + Dates.getDate() : Dates.getDate();
        if (LangManager_1.default.Instance.lang == LangType_1.default.zh_cn) {
            //返回数据格式
            return Months + '-' + Day;
        }
        else {
            //返回数据格式
            return TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day;
        }
    };
    /**
     * 获取时间 H:M
     * @param timestamp 时间戳 秒
     * @param isShowServerTimezoom 是否用服务器时区显示， 默认 flase
     */
    TimeHelper.GetHM = function (timestamp, isShowServerTimezoom) {
        if (isShowServerTimezoom === void 0) { isShowServerTimezoom = false; }
        //三目运算符
        var Dates = isShowServerTimezoom ? this.GetServerDateByTimestamp(timestamp) : new Date(timestamp);
        //小时
        var Hours = Dates.getHours() < 10 ? '0' + Dates.getHours() : Dates.getHours();
        //分钟
        var Minutes = Dates.getMinutes() < 10 ? '0' + Dates.getMinutes() : Dates.getMinutes();
        return Hours + ':' + Minutes;
    };
    /**
     * 获取剩余时间 00:00:00
     * @param timestamp 时间戳 秒
     */
    TimeHelper.TimeleftHHMMSS = function (timestamp) {
        var time = timestamp - Game_1.default.time.serverSeconds;
        time = Math.max(time, 0);
        return this.TimeFormatFixedHHMMSS(time);
    };
    /**
     * 判断倒计时是否结束
     * @param timestamp 时间戳
     */
    TimeHelper.TimeleftIsOver = function (timestamp) {
        var time = timestamp - Game_1.default.time.serverSeconds;
        return time <= 0 ? true : false;
    };
    //======================================
    // 时间格式化-- 以时间长度
    //--------------------------------------
    /**
     * 返回格式 00:00:00
     * @param time 秒 时间长度
     */
    TimeHelper.TimeFormatFixedHHMMSS = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        str += hours < 10 ? "0" + hours : hours;
        str += ":" + (minutes < 10 ? "0" + minutes : minutes);
        str += ":" + (seconds < 10 ? "0" + seconds : seconds);
        return str;
    };
    /**
     * 返回格式 00：00：00
     * @param time 秒 时间长度
     * 注：位图字体生成的字符串需要中文的"："获取
     */
    TimeHelper.TimeFormatFixedHHMMSSCN = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        str += hours < 10 ? "0" + hours : hours;
        str += "：" + (minutes < 10 ? "0" + minutes : minutes);
        str += "：" + (seconds < 10 ? "0" + seconds : seconds);
        return str;
    };
    /**
     * 返回格式 x小时x分x秒
     * @param time 秒
     */
    TimeHelper.TimeFormatFixedXHXMXS = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        if (hours > 0)
            str += hours + TEXT_1.default.Hour;
        str += minutes + TEXT_1.default.Minute;
        str += seconds + TEXT_1.default.Second;
        return str;
    };
    /**
     * 返回格式 00:00:00, 前面为0 不显示
     * @param time 秒
     */
    TimeHelper.TimeFormatHHMMSS = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        str += hours == 0 ? "" : "0" + hours;
        str += (hours > 0 ? ":" : "") + (minutes < 10 ? "0" + minutes : minutes);
        str += ":" + (seconds < 10 ? "0" + seconds : seconds);
        return str;
    };
    /**
     * 返回格式 x小时x分x秒, 前面为0 不显示
     * @param time 秒
     */
    TimeHelper.TimeFormatXHXMXS = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        if (hours > 0)
            str += hours + TEXT_1.default.Hour;
        if (minutes > 0)
            str += minutes + TEXT_1.default.Minute;
        str += seconds + TEXT_1.default.Second;
        return str;
    };
    /**
     * 返回格式 x小时x分x秒, 为0 不显示
     * @param time 秒
     */
    TimeHelper.TimeFormatXHXMXSWithoutZero = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        if (hours > 0)
            str += hours + TEXT_1.default.Hour;
        if (minutes > 0)
            str += minutes + TEXT_1.default.Minute;
        if (seconds > 0)
            str += seconds + TEXT_1.default.Second;
        return str;
    };
    //======================================
    // 时间格式化--获取 xx前
    //--------------------------------------
    /**
     * 返回 Y-M-D / x个月前 / x周前 / x天前 / x小时前 / x分钟前 / x秒前
     * @param timestamp 时间戳 (秒)
     */
    TimeHelper.TimeBeforeByTimestamp = function (timestamp) {
        var seconds = Game_1.default.time.serverSeconds - timestamp;
        return this.TimeBefore(seconds);
    };
    /**
     * 返回 Y-M-D / x个月前 / x周前 / x天前 / x小时前 / x分钟前 / x秒前
     * @param seconds 时间长度 (秒)
     */
    TimeHelper.TimeBefore = function (seconds) {
        var totalDays = seconds / this.ONE_DAY_SECONDS;
        if (totalDays > 60) {
            return this.GetYMD(totalDays);
        }
        else {
            if (totalDays > 30) {
                return TEXT_1.default.DATE_MonthBefore.format(1);
            }
            else {
                if (totalDays > 14) {
                    return TEXT_1.default.DATE_WeekBefore.format(2);
                }
                else {
                    if (totalDays > 7) {
                        return TEXT_1.default.DATE_WeekBefore.format(1);
                    }
                    else {
                        if (totalDays > 1) {
                            return TEXT_1.default.DATE_DayBefore.format(Math.floor(totalDays));
                        }
                        else {
                            var totalHours = seconds / this.ONE_HOUR_SECONDS;
                            if (totalHours > 1) {
                                return TEXT_1.default.DATE_HourBefore.format(Math.floor(totalHours));
                            }
                            else {
                                var totalMinutes = seconds / 60;
                                if (totalMinutes > 1) {
                                    return TEXT_1.default.DATE_MinuteBefore.format(Math.floor(totalMinutes));
                                }
                                else if (seconds >= 1) {
                                    return TEXT_1.default.DATE_SecondeBefore.format(Math.floor(seconds));
                                }
                                else {
                                    return TEXT_1.default.DATE_SecondeBefore.format(1);
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    /** 一天的秒数 */
    TimeHelper.ONE_DAY_SECONDS = 86400;
    /** 一小时的秒数 */
    TimeHelper.ONE_HOUR_SECONDS = 3600;
    TimeHelper.MonthText = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    return TimeHelper;
}());
exports.default = TimeHelper;
window['TimeHelper'] = TimeHelper;
},{"../Config/Keys/TEXT":125,"../Config/LangManager":130,"../Config/LangType":131,"../Game":546}],591:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GuiSetting_1 = require("./FGUI/GuiSetting");
var FGLoader_1 = require("./FGUI/FGLoader");
var GuiBinderList_1 = require("./FGUI/Generates/GuiBinderList");
var Game_1 = require("./Game");
var GuiPackageNames_1 = require("./FGUI/Generates/GuiPackageNames");
var LoaderId_1 = require("./GameFrame/Loader/LoaderId");
var MenuLayer_1 = require("./GameFrame/Menu/MenuLayer");
var MenuId_1 = require("./GameModule/MenuId");
var MenuWindows_1 = require("./GameModule/MenuWindows");
var AntFrameConfig_1 = require("./AntFrame/AntFrameConfig");
var ShanderInstall_1 = require("./Shader/ShanderInstall");
var GM_1 = require("./GM/GM");
var TestParticle_1 = require("./TestParticle");
var SoundKey_1 = require("./FGUI/Generates/SoundKey");
var AssetItemType_1 = require("./GameFrame/AssetManagers/AssetItemType");
var GameLaunch = /** @class */ (function () {
    function GameLaunch() {
        this.version = 10002;
    }
    // 初始化
    GameLaunch.prototype.install = function () {
        this.installAsync();
    };
    GameLaunch.prototype.installAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var version;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log(window.navigator);
                        console.log(window.navigator.userAgent);
                        console.log("Game.browserSetting.isWeixinMinigame=", Game_1.default.browserSetting.isWeixinMinigame);
                        if (Game_1.default.browserSetting.isWeixinMinigame) {
                            version = Game_1.default.localStorage.getInt("version", true);
                            if (version != this.version) {
                                // Laya.MiniFileMgr.deleteAll();
                            }
                            Game_1.default.localStorage.setInt("version", this.version, true);
                            if (VersionConfig && VersionConfig.UrlBasePath)
                                Laya.URL.basePath = VersionConfig.UrlBasePath;
                            else
                                Laya.URL.basePath = 'http://nisakcdn.123u.com/game/v1_00_12/';
                            // Laya.URL.basePath = "http://192.168.2.224:8900/bin/";
                            //GuiSetting.resRoot = "http://gidea.ihaiu.com/GameWPWX/wxgame/res/";
                            if (Laya.MiniAdpter)
                                Laya.MiniAdpter.nativefiles =
                                    [
                                        "res/sprite/Launch/launch.png",
                                        "res/fgui/GameLaunch_atlas0.png",
                                        "res/fgui/GameLaunch.bin"
                                    ];
                        }
                        Game_1.default.init();
                        // 初始化UI层级容器
                        MenuLayer_1.default.install();
                        // 初始化UI窗口配置
                        MenuWindows_1.default.install();
                        // 设置FGUI
                        return [4 /*yield*/, this.initFguiSetting()];
                    case 1:
                        // 设置FGUI
                        _a.sent();
                        // 初始化加载界面
                        Game_1.default.loader.install();
                        // 初始化GM按钮
                        GM_1.default.installGMButton();
                        // 初始化化版本信息
                        Game_1.default.version.init();
                        // 打开启动界面
                        Game_1.default.loader.open(LoaderId_1.LoaderId.Launch);
                        Game_1.default.loaderSettingHandler.onBegin();
                        // 加载网络版本配置
                        // await this.loadWebVersionConfigAsync();
                        // 加载版本清单文件
                        return [4 /*yield*/, this.loadVersionAsync()];
                    case 2:
                        // 加载网络版本配置
                        // await this.loadWebVersionConfigAsync();
                        // 加载版本清单文件
                        _a.sent();
                        // 初始化shader
                        return [4 /*yield*/, ShanderInstall_1.default.install()];
                    case 3:
                        // 初始化shader
                        _a.sent();
                        // 加载配置
                        return [4 /*yield*/, this.initConfig()];
                    case 4:
                        // 加载配置
                        _a.sent();
                        // 加载多语言配置
                        return [4 /*yield*/, this.initLangConfig()];
                    case 5:
                        // 加载多语言配置
                        _a.sent();
                        // 初始化数据模型
                        Game_1.default.moduleModel.install();
                        // 加载服务器列表
                        return [4 /*yield*/, this.installServerList()];
                    case 6:
                        // 加载服务器列表
                        _a.sent();
                        // 资源预加载
                        return [4 /*yield*/, Game_1.default.preload.start()];
                    case 7:
                        // 资源预加载
                        _a.sent();
                        Game_1.default.loaderSettingHandler.onEnd();
                        // 打开登录界面
                        Game_1.default.menu.open(MenuId_1.MenuId.Login);
                        // 声音
                        Game_1.default.sound.install();
                        // Game.system.alertText(window.navigator.userAgent);
                        // Game.loader.closeAll();
                        // Game.home.install();
                        return [4 /*yield*/, new TestParticle_1.default().InitSync()];
                    case 8:
                        // Game.system.alertText(window.navigator.userAgent);
                        // Game.loader.closeAll();
                        // Game.home.install();
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    // 加载版本文件
    GameLaunch.prototype.loadVersion = function () {
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    };
    GameLaunch.prototype.onVersionLoaded = function () {
    };
    // 异步加载版本清单文件
    GameLaunch.prototype.loadVersionAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(_this, function () {
                            if (Laya.ResourceVersion.manifest && Laya.ResourceVersion.manifest["__ResVersion__"]) {
                                var resVersion = Laya.ResourceVersion.manifest["__ResVersion__"];
                                Game_1.default.version.localResVersionData.setVersionTxt(resVersion);
                                Game_1.default.version.localResVersion = resVersion;
                            }
                            resolve();
                        }), Laya.ResourceVersion.FILENAME_VERSION);
                    })];
            });
        });
    };
    // 异步加载版本信息文件
    GameLaunch.prototype.loadWebVersionConfigAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var versionConfig;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.asset.loadAsync("VersionConfig.json", AssetItemType_1.AssetItemType.Json)];
                    case 1:
                        versionConfig = _a.sent();
                        console.info("webVersionConfig", versionConfig);
                        if (versionConfig) {
                            Game_1.default.version.localResVersion = versionConfig.ResVersion;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    // 设置FGUI
    GameLaunch.prototype.initFguiSetting = function () {
        return __awaiter(this, void 0, void 0, function () {
            var packageConfig;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // 初始化 fgui资源列表
                        Game_1.default.guiRes.install();
                        // 设置fgui文件后缀
                        fairygui.UIConfig.packageFileExtension = GuiSetting_1.default.packageFileExtension;
                        // 注册Loader类
                        fairygui.UIObjectFactory.setLoaderExtension(FGLoader_1.default);
                        // 绑定组件
                        GuiBinderList_1.default.fguiBinderAll();
                        // 设置按钮声音
                        fairygui.UIConfig.buttonSound = SoundKey_1.default.getUrl(SoundKey_1.default.MM01_Button);
                        //设置字体
                        fairygui.UIConfig.defaultFont = "_sans";
                        return [4 /*yield*/, Game_1.default.asset.loadFguiByPackagenameAsync(GuiPackageNames_1.default.GameLaunch)];
                    case 1:
                        packageConfig = _a.sent();
                        GuiSetting_1.default.addPackage(packageConfig.packagePath);
                        // 初始化转圈
                        fairygui.UIConfig.globalModalWaiting = fairygui.UIPackage.getItemURL(packageConfig.packageName, "GlobalModalWaiting");
                        fairygui.UIConfig.windowModalWaiting = fairygui.UIPackage.getItemURL(packageConfig.packageName, "WindowModalWaiting");
                        return [2 /*return*/];
                }
            });
        });
    };
    // 加载配置
    GameLaunch.prototype.initConfig = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Game_1.default.config.configLoader = Game_1.default.asset;
                        Game_1.default.config.initList();
                        Game_1.default.config.sLoadProgress.add(Game_1.default.loaderSettingHandler.onLoadedConfig, Game_1.default.loaderSettingHandler);
                        return [4 /*yield*/, Game_1.default.config.loadAllAsync()];
                    case 1:
                        _a.sent();
                        Game_1.default.config.sLoadProgress.remove(Game_1.default.loaderSettingHandler.onLoadedConfig, Game_1.default.loaderSettingHandler);
                        return [2 /*return*/];
                }
            });
        });
    };
    // 加载多语言配置
    GameLaunch.prototype.initLangConfig = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Game_1.default.lang.current.configLoader = Game_1.default.asset;
                        Game_1.default.lang.current.initList();
                        if (!Game_1.default.lang.isUseLang) return [3 /*break*/, 2];
                        Game_1.default.lang.current.sLoadProgress.add(Game_1.default.loaderSettingHandler.onLoadedLangConfig, Game_1.default.loaderSettingHandler);
                        return [4 /*yield*/, Game_1.default.lang.current.loadAllAsync()];
                    case 1:
                        _a.sent();
                        Game_1.default.lang.current.sLoadProgress.remove(Game_1.default.loaderSettingHandler.onLoadedLangConfig, Game_1.default.loaderSettingHandler);
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    // 初始化网络设置
    GameLaunch.prototype.installServerList = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.channel.requestServerListAsync()];
                    case 1:
                        _a.sent();
                        net.config.url = Game_1.default.channel.serverItem.main;
                        // net.config.url = "https://nisak.123u.com:5000";
                        net.logic.onError.on(this.onNetError, this);
                        return [2 /*return*/];
                }
            });
        });
    };
    GameLaunch.prototype.onNetError = function (error) {
        return __awaiter(this, void 0, void 0, function () {
            var txt;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log("onNetError " + error);
                        return [4 /*yield*/, AntFrameConfig_1.default.GetErrorStr(error)];
                    case 1:
                        txt = _a.sent();
                        console.log("OnNetError no=" + error + "  txt=" + txt);
                        if (!txt)
                            txt = "服务器反馈错误: " + error;
                        Game_1.default.system.toastText(txt);
                        return [2 /*return*/];
                }
            });
        });
    };
    // 进入主界面
    GameLaunch.prototype.enterGame = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                Game_1.default.time.start();
                Game_1.default.menu.open(MenuId_1.MenuId.Home);
                Game_1.default.menu.close(MenuId_1.MenuId.Login);
                // 启动订阅任务
                Game_1.default.took.start();
                return [2 /*return*/];
            });
        });
    };
    return GameLaunch;
}());
exports.default = GameLaunch;
},{"./AntFrame/AntFrameConfig":2,"./FGUI/FGLoader":346,"./FGUI/Generates/GuiBinderList":478,"./FGUI/Generates/GuiPackageNames":479,"./FGUI/Generates/SoundKey":497,"./FGUI/GuiSetting":534,"./GM/GM":538,"./Game":546,"./GameFrame/AssetManagers/AssetItemType":550,"./GameFrame/Loader/LoaderId":559,"./GameFrame/Menu/MenuLayer":572,"./GameModule/MenuId":603,"./GameModule/MenuWindows":609,"./Shader/ShanderInstall":644,"./TestParticle":650}],592:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Game_1 = require("./Game");
var GameMain = /** @class */ (function () {
    function GameMain() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        // 启动游戏
        Game_1.default.launch.install();
    }
    return GameMain;
}());
//激活启动类
new GameMain();
},{"./Game":546,"./GameConfig":547}],593:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MModel_1 = require("../../GameFrame/Module/MModel");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var GashaponData_1 = require("../DataStructs/GashaponData");
var GashaponModel = /** @class */ (function (_super) {
    __extends(GashaponModel, _super);
    function GashaponModel() {
        var _this = _super.call(this) || this;
        _this.dict = new Dictionary_1.default();
        return _this;
    }
    /**
     * 设置抽奖信息
     * @param msg
     */
    GashaponModel.prototype.setGashaponList = function (msg) {
        // this.dict.clear();
        for (var i = 0; i < msg.length; i++) {
            var gashapon = GashaponData_1.default.Create(msg[i]);
            this.dict.add(gashapon.id, gashapon);
            // TODO
            // Game.moduleModel.storyLottery.updateProtoData( gashapon );
        }
    };
    /**
     * 获取抽奖
     * @param gashaponId
     */
    GashaponModel.prototype.getGashapon = function (gashaponId) {
        return this.dict.getValue(gashaponId);
    };
    /**
     * 根据模块 获取抽奖
     * @param menuId
     */
    GashaponModel.prototype.getGashaponByMenuId = function (menuId) {
        var list = [];
        var gashapons = this.dict.getValues();
        for (var i = 0; i < gashapons.length; i++) {
            if (gashapons[i].menuId == menuId) {
                list.push(gashapons[i]);
            }
        }
        list.sort(function (a, b) {
            return a.id - b.id;
        });
        return list;
    };
    return GashaponModel;
}(MModel_1.default));
exports.default = GashaponModel;
},{"../../GameFrame/Module/MModel":578,"../../Libs/Helpers/Dictionary":626,"../DataStructs/GashaponData":597}],594:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MModel_1 = require("../../GameFrame/Module/MModel");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var ItemData_1 = require("../DataStructs/ItemData");
var eItemTab;
(function (eItemTab) {
    /*** 道具 */
    eItemTab[eItemTab["NormalItem"] = 0] = "NormalItem";
    /** 资产 */
    eItemTab[eItemTab["PropertyItem"] = 1] = "PropertyItem";
    /** 合同 */
    eItemTab[eItemTab["ContractItem"] = 2] = "ContractItem";
})(eItemTab = exports.eItemTab || (exports.eItemTab = {}));
//======================
// 物品 数据模型
//----------------------
var ItemModel = /** @class */ (function (_super) {
    __extends(ItemModel, _super);
    function ItemModel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 物品字典
        _this.dict = new Dictionary_1.default();
        // 物品字典,用uuid作为字典
        _this.dictByUuid = new Dictionary_1.default();
        return _this;
    }
    ItemModel.prototype.CreateItem = function (id, num) {
        var item = new ItemData_1.default();
        item.id = id;
        item.count = num;
        return item;
    };
    Object.defineProperty(ItemModel.prototype, "itemList", {
        // 获取物品列表，数量大于0，且config存在
        get: function () {
            var list = [];
            var items = this.dict.getValues();
            for (var i = 0; i < items.length; i++) {
                if (items[i].count > 0 && items[i].itemConfig) {
                    list.push(items[i]);
                }
            }
            return list;
        },
        enumerable: true,
        configurable: true
    });
    ItemModel.prototype.GetItemListByType = function (tab) {
        var list = [];
        var types = this.getTypesByTab(tab);
        var items = this.dict.getValues();
        for (var i = 0; i < items.length; i++) {
            for (var j = 0; j < types.length; j++) {
                var type = types[j];
                if (items[i].itemType == type && items[i].count > 0 && items[i].itemConfig) {
                    list.push(items[i]);
                    break;
                }
            }
        }
        return list;
    };
    ItemModel.prototype.getTypesByTab = function (tab) {
        if (tab === void 0) { tab = eItemTab.NormalItem; }
        var types = [5, 8, 9, 17, 30];
        switch (tab) {
            case eItemTab.NormalItem:
                types = [5, 8, 9, 17, 30];
                break;
            case eItemTab.PropertyItem:
                types = [6];
                break;
            case eItemTab.ContractItem:
                types = [7, 16];
                break;
            default:
                types = [5, 8, 9, 17, 30];
                break;
        }
        return types;
    };
    // 获取物品, 用uuid
    ItemModel.prototype.getItemByUuid = function (uuid) {
        if (this.dictByUuid.hasKey(uuid)) {
            return this.dictByUuid.getValue(uuid);
        }
        else {
            return null;
        }
    };
    // 获取物品数量, 用uuid
    ItemModel.prototype.getItemNumByUuid = function (uuid) {
        var item = this.getItemByUuid(uuid);
        if (item) {
            return item.count;
        }
        return 0;
    };
    // 获取物品
    ItemModel.prototype.getItem = function (itemId) {
        if (this.dict.hasKey(itemId)) {
            return this.dict.getValue(itemId);
        }
        else {
            var item = ItemData_1.default.Create(itemId, 0);
            this.dict.add(itemId, item);
            return item;
        }
    };
    // 获取物品数量文本
    ItemModel.prototype.getItemNumTxt = function (itemId) {
        return formatNumberUnit(this.getItemNum(itemId));
    };
    // 获取物品数量
    ItemModel.prototype.getItemNum = function (itemId) {
        var item = this.getItem(itemId);
        if (item) {
            return item.count;
        }
        return 0;
    };
    // 设置物品数量
    ItemModel.prototype.setItemNum = function (itemId, itemNum, createTime, uuid) {
        var item;
        if (uuid) {
            item = this.getItemByUuid(uuid);
            if (!item && itemId > 0) {
                item = this.getItem(itemId);
                item.uid = uuid;
                this.dictByUuid.add(uuid, item);
            }
        }
        if (!item) {
            item = this.getItem(itemId);
        }
        item.count = itemNum;
        if (createTime !== undefined) {
            item.obtainTime = createTime;
        }
    };
    // 是否满足物品数量
    ItemModel.prototype.hasItemNum = function (itemId, needNum) {
        return this.getItemNum(itemId) >= needNum;
    };
    return ItemModel;
}(MModel_1.default));
exports.default = ItemModel;
},{"../../GameFrame/Module/MModel":578,"../../Libs/Helpers/Dictionary":626,"../DataStructs/ItemData":598}],595:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MModel_1 = require("../../GameFrame/Module/MModel");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MailData_1 = require("../DataStructs/MailData");
var MailModel = /** @class */ (function (_super) {
    __extends(MailModel, _super);
    function MailModel() {
        var _this = _super.call(this) || this;
        _this.dict = new Dictionary_1.default();
        return _this;
    }
    //存储邮件列表
    MailModel.prototype.setMailList = function (msg) {
        for (var i = 0; i < msg.length; i++) {
            var mail = MailData_1.default.Create(msg[i]);
            this.dict.add(mail.id, mail);
        }
    };
    //获取邮件列表
    MailModel.prototype.getMailList = function () {
        var list = [];
        var mails = this.dict.getValues();
        for (var i = 0; i < mails.length; i++) {
            list.push(mails[i]);
        }
        list.sort(function (a, b) {
            if (a.time == b.time) {
                return b.id - a.id;
            }
            return b.time - a.time;
        });
        return list;
    };
    //查询邮件内容
    MailModel.prototype.getMailData = function (id) {
        var data = this.dict.getValue(id);
        if (data)
            return data;
        return null;
    };
    //读/领取邮件
    MailModel.prototype.changeMail = function (id, state) {
        var mail = this.dict.getValue(id);
        mail.state = state;
        this.dict.set(id, mail);
    };
    //删除邮件(one or more)
    MailModel.prototype.delMails = function (id) {
        if (id === void 0) { id = null; }
        if (id) {
            //one
            this.dict.remove(id);
        }
        else {
            //more
            var mails = this.dict.getValues();
            for (var i = 0; i < mails.length; i++) {
                var mail = mails[i];
                if ((!mail.attachments && mail.state == 1) || mail.state == 2) {
                    this.dict.remove(mail.id);
                }
            }
        }
    };
    //奖励邮件(one or more)
    MailModel.prototype.rcvMails = function (id) {
        if (id === void 0) { id = null; }
        if (id) {
            //one
            var mail = this.dict.getValue(id);
            mail.state = 1;
            this.dict.set(id, mail);
        }
        else {
            //more
            var mails = this.dict.getValues();
            for (var i = 0; i < mails.length; i++) {
                var mail = mails[i];
                if (mail.attachments && mail.state != 2) {
                    mail.state = 2;
                    this.dict.set(mail.id, mail);
                }
            }
        }
    };
    //已读邮件判定
    MailModel.prototype.getReadMail = function () {
        var mails = this.dict.getValues();
        for (var i = 0; i < mails.length; i++) {
            var mail = mails[i];
            if ((!mail.attachments && mail.state == 1) || mail.state == 2) {
                return true;
            }
        }
        return false;
    };
    //奖励邮件判定
    MailModel.prototype.getrewardMail = function () {
        var mails = this.dict.getValues();
        for (var i = 0; i < mails.length; i++) {
            var mail = mails[i];
            if (mail.attachments && mail.state != 2) {
                return true;
            }
        }
        return false;
    };
    return MailModel;
}(MModel_1.default));
exports.default = MailModel;
},{"../../GameFrame/Module/MModel":578,"../../Libs/Helpers/Dictionary":626,"../DataStructs/MailData":599}],596:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MModel_1 = require("../../GameFrame/Module/MModel");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var RoleModel = /** @class */ (function (_super) {
    __extends(RoleModel, _super);
    function RoleModel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 角色字典 by id
        _this.dictById = new Dictionary_1.default();
        // 角色字典 by id
        _this.dictByUid = new Dictionary_1.default();
        return _this;
    }
    // 获取角色数据，使用id
    RoleModel.prototype.getRoleById = function (id) {
        if (this.dictById.hasKey(id)) {
            return this.dictById.getValue(id);
        }
    };
    // 获取角色数据，使用uid
    RoleModel.prototype.getRoleByUid = function (uid) {
        if (this.dictByUid.hasKey(uid)) {
            return this.dictByUid.getValue(uid);
        }
    };
    // 添加角色数据
    RoleModel.prototype.addRole = function (role) {
        this.dictById.add(role.id, role);
        if (role.uid)
            this.dictByUid.add(role.uid, role);
    };
    return RoleModel;
}(MModel_1.default));
exports.default = RoleModel;
},{"../../GameFrame/Module/MModel":578,"../../Libs/Helpers/Dictionary":626}],597:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var GashaponData = /** @class */ (function () {
    function GashaponData() {
    }
    Object.defineProperty(GashaponData.prototype, "config", {
        get: function () {
            return this._config;
        },
        /**
         * 抽奖配置
         */
        set: function (val) {
            this._config = val;
        },
        enumerable: true,
        configurable: true
    });
    GashaponData.Create = function (msg) {
        var gashaponData = new GashaponData();
        gashaponData.id = msg.id;
        gashaponData.extractNum = msg.extractNum;
        gashaponData.freeNum = msg.freeNum;
        gashaponData.nextFreeTime = msg.nextFreeTime;
        gashaponData.startTime = msg.startTime;
        gashaponData.endTime = msg.endTime;
        gashaponData.config = Game_1.default.config.gashapon.getConfig(msg.id);
        // 剧本招募相关
        gashaponData.storyCurrentExtractNum = msg.storyCurrentExtractNum;
        // gashaponData.storyExtractState = msg.storyExtractState;
        gashaponData.storyExtractStartTime = msg.storyExtractStartTime;
        gashaponData.storyExtractEndTime = msg.storyExtractEndTime;
        gashaponData.storyPurchaseNum = msg.storyPurchaseNum;
        return gashaponData;
    };
    Object.defineProperty(GashaponData.prototype, "menuId", {
        /**
         * 所属模块
         */
        get: function () {
            return this.config.menu;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GashaponData.prototype, "type", {
        /**
         * 类型
         */
        get: function () {
            return this.config.type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GashaponData.prototype, "iconUrl", {
        /**
         * 海报路径
         */
        get: function () {
            return; //this.config.pic;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GashaponData.prototype, "costItem", {
        /**
         * 抽奖消耗
         */
        get: function () {
            return this.config.cost[0];
        },
        enumerable: true,
        configurable: true
    });
    return GashaponData;
}());
exports.default = GashaponData;
},{"../../Game":546}],598:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var DTItemNum_1 = require("../../Config/ConfigExtends/DTItemNum");
//======================
// 物品 数据
//----------------------
var ItemData = /** @class */ (function () {
    function ItemData() {
        // 物品ID
        this.id = 0;
        // 物品数量
        this.count = 0;
        // 创建(获得)时间
        this.obtainTime = 0;
    }
    ItemData.prototype.setProtoData = function (data) {
        this.id = data.id;
        this.count = data.count;
        this.obtainTime = data.obtainTime;
    };
    Object.defineProperty(ItemData.prototype, "itemNumTxt", {
        // 数字文本
        get: function () {
            var fix = this.count > 1000 ? 1 : 0;
            return formatNumberUnit(this.count, fix);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemConfig", {
        // 物品配置
        get: function () {
            return Game_1.default.config.item.getConfig(this.id);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemType", {
        // 物品类型
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.type;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemName", {
        // 物品名称
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.name;
            }
            return this.id + "\u6CA1\u914D\u7F6E\u8BE5\u7269\u54C1";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemDes", {
        // 物品描述
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.item_des;
            }
            return this.id + "\u6CA1\u914D\u7F6E\u8BE5\u7269\u54C1";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemStar", {
        // 物品星级
        get: function () {
            if (this.itemConfig) {
                var propertyCfg = Game_1.default.config.property.getConfig(this.itemConfig.id);
                if (propertyCfg) {
                    var star = Number(propertyCfg.zh_cn_name);
                    if (star == null) {
                        console.log("Error Item Star");
                        return 0;
                    }
                    star = star < 0 ? 0 : star;
                    star = star > 6 ? 6 : star;
                    return star;
                }
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemIconUrl", {
        // 物品图标
        get: function () {
            if (this.itemConfig) {
                var avatarConfig = Game_1.default.config.avatar.getConfig(this.itemConfig.icon);
                if (avatarConfig) {
                    return avatarConfig.iconUrl;
                }
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemBodyIconUrl", {
        get: function () {
            if (this.itemConfig) {
                var avatarConfig = Game_1.default.config.avatar.getConfig(this.itemConfig.icon);
                if (avatarConfig) {
                    return avatarConfig.bodyIconUrl;
                }
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundItem", {
        get: function () {
            if (this.itemConfig) {
                var compoundConfig = Game_1.default.config.compound.getConfig(this.itemConfig.syn_id);
                if (compoundConfig && compoundConfig.syn_item != 0) {
                    var item = new DTItemNum_1.default();
                    item.itemId = compoundConfig.syn_item;
                    item.itemNum = compoundConfig.num_req;
                    return item;
                }
                return null;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundNum", {
        get: function () {
            if (this.compoundItem) {
                var num = this.compoundItem.itemNum;
                return Math.floor(this.count / num);
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "splitItem", {
        get: function () {
            if (this.itemConfig) {
                var compoundConfig = Game_1.default.config.compound.getConfig(this.itemConfig.syn_id);
                if (compoundConfig) {
                    var splitList = compoundConfig.split_list;
                    if (splitList.length == 1 && splitList[0].itemId == 0) {
                        return [];
                    }
                    return splitList;
                }
                return null;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundActor", {
        get: function () {
            if (this.itemConfig) {
                var item = new DTItemNum_1.default();
                item.itemId = this.itemConfig.actor_id;
                item.itemNum = this.itemConfig.actor_num;
                return item;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundActorNum", {
        get: function () {
            if (this.compoundActor) {
                var num = this.compoundActor.itemNum;
                return Math.floor(this.count / num);
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "canUse", {
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.rewardid != 0;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "canSell", {
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.can_sell;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "canCompound", {
        get: function () {
            return this.compoundItem != null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "canSplit", {
        get: function () {
            return this.splitItem != null && this.splitItem.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "red", {
        get: function () {
            return this.itemType == 8 || this.itemType == 17;
        },
        enumerable: true,
        configurable: true
    });
    // 创建物品数据结构，使用物品ID和数量
    ItemData.Create = function (itemId, itemNum) {
        var item = new ItemData();
        item.id = itemId;
        item.count = itemNum;
        return item;
    };
    ItemData.GetIconUrl = function (id) {
        var itemConfig = Game_1.default.config.item.getConfig(id);
        if (itemConfig) {
            var avatarConfig = Game_1.default.config.avatar.getConfig(itemConfig.icon);
            if (avatarConfig) {
                return avatarConfig.iconUrl;
            }
        }
        return "";
    };
    ItemData.GetName = function (id) {
        var itemConfig = Game_1.default.config.item.getConfig(id);
        if (itemConfig) {
            return itemConfig.name;
        }
        return "";
    };
    return ItemData;
}());
exports.default = ItemData;
},{"../../Config/ConfigExtends/DTItemNum":68,"../../Game":546}],599:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ItemData_1 = require("./ItemData");
var Game_1 = require("../../Game");
var MailData = /** @class */ (function () {
    function MailData() {
    }
    //创建邮件数据单位
    MailData.Create = function (msg) {
        var mail = new MailData();
        mail.id = msg.id;
        mail.mailType = msg.mailType;
        mail.time = msg.time;
        mail.state = msg.state;
        //读表 or 读服务器
        var data = msg.cfgId ? MailData.GetMailDataById(msg.cfgId) : msg;
        mail.theme = data.title;
        mail.msg = data.content;
        if (data.attachments && data.attachments.length > 0) {
            mail.attachments = MailData.GetRewardDatas(data.attachments, 0);
        }
        if (data.item && data.item[0].itemId != 0) {
            mail.attachments = MailData.GetRewardDatas(data.item, 1);
        }
        return mail;
    };
    //解析奖励数据 type:0服务器 1查表
    MailData.GetRewardDatas = function (arr, type) {
        var list = [];
        for (var i = 0; i < arr.length; i++) {
            var data = null;
            if (type == 0) {
                data = ItemData_1.default.Create(arr[i].id, arr[i].count);
            }
            else {
                data = ItemData_1.default.Create(arr[i].itemId, arr[i].itemNum);
            }
            if (data)
                list.push(data);
        }
        return list;
    };
    //根据id获取邮件
    MailData.GetMailDataById = function (id) {
        var mailConfig = Game_1.default.config.mail.getConfig(id);
        return mailConfig;
    };
    //根据id获取邮件描述
    MailData.GetMailContentById = function (id) {
        var mailConfig = Game_1.default.config.mail.getConfig(id);
        return mailConfig.content;
    };
    return MailData;
}());
exports.default = MailData;
},{"../../Game":546,"./ItemData":598}],600:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var RoleData = /** @class */ (function () {
    function RoleData() {
        //vip等级
        this.vipLevel = 1;
    }
    RoleData.prototype.setGamerMain = function (data) {
        for (var key in data) {
            this[key] = data[key];
        }
    };
    Object.defineProperty(RoleData.prototype, "setGamerMini", {
        set: function (data) {
            for (var key in data) {
                this[key] = data[key];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoleData.prototype, "headIconUrl", {
        // 获取头像Url		
        get: function () {
            var portraitCfg = Game_1.default.config.headPortrait.getConfig(this.icon);
            if (!portraitCfg)
                portraitCfg = Game_1.default.config.headPortrait.getConfig(1001);
            if (portraitCfg) {
                return portraitCfg.iconUrl;
            }
            return "";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoleData.prototype, "upgradeFans", {
        // 获取升级需要经验值
        get: function () {
            var config = Game_1.default.config.playerLevel.getConfig(Game_1.default.user.level);
            if (config) {
                return config.exp;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    // 获取等级的最大经验值
    RoleData.prototype.getMaxExpByLevel = function (lv) {
        var config = Game_1.default.config.playerLevel.getConfig(lv);
        if (config) {
            return config.exp;
        }
        return 0;
    };
    /** 是否是最大等级 */
    RoleData.prototype.getIsMaxLevel = function (level) {
        return level >= Game_1.default.config.playerLevel.maxLevel;
    };
    return RoleData;
}());
exports.default = RoleData;
},{"../../Game":546}],601:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RoleData_1 = require("./RoleData");
var Game_1 = require("../../Game");
var AntFrame_1 = require("../../AntFrame/AntFrame");
/** 玩家等级快照数据 */
var UserLevelSnapshotData = /** @class */ (function () {
    function UserLevelSnapshotData() {
    }
    return UserLevelSnapshotData;
}());
exports.UserLevelSnapshotData = UserLevelSnapshotData;
var UserData = /** @class */ (function (_super) {
    __extends(UserData, _super);
    function UserData() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * 是否登录了并且获取了用户数据
         */
        _this.isLoginAndGetUserData = false;
        // 等级快照数据
        _this.levelSnapshotData = new UserLevelSnapshotData();
        return _this;
    }
    Object.defineProperty(UserData.prototype, "headIconUrl", {
        // 获取头像Url		
        get: function () {
            if (!isNullOrEmpty(AntFrame_1.default.platform.userInfo.avatarUrl))
                return AntFrame_1.default.platform.userInfo.avatarUrl;
            var portraitCfg = Game_1.default.config.headPortrait.getConfig(this.icon);
            if (!portraitCfg)
                portraitCfg = Game_1.default.config.headPortrait.getConfig(1001);
            if (portraitCfg) {
                return portraitCfg.iconUrl;
            }
            return "";
        },
        enumerable: true,
        configurable: true
    });
    UserData.prototype.setGamerMain = function (data) {
        console.info("UserData setGamerMain", data);
        _super.prototype.setGamerMain.call(this, data);
    };
    // 刷新等级快照
    UserData.prototype.levelSnapshot = function () {
        this.levelSnapshotData.exp = this.exp;
        this.levelSnapshotData.level = this.level;
    };
    return UserData;
}(RoleData_1.default));
exports.default = UserData;
},{"../../AntFrame/AntFrame":1,"../../Game":546,"./RoleData":600}],602:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SystemMessage_1 = require("../GameFrame/System/SystemMessage");
var SetNumberDialog_1 = require("../FGUI/Extends/SystemModuleDialog/SetNumberDialog");
var GetRewardDialog_1 = require("../FGUI/Extends/SystemModuleDialog/GetRewardDialog");
var MailContentDialog_1 = require("../FGUI/Extends/SystemModuleDialog/MailContentDialog");
var ItemInfoDialog_1 = require("../FGUI/Extends/SystemModuleDialog/ItemInfoDialog");
var UserLevelAndExpPlay_1 = require("../FGUI/Customs/UserLevelAndExpPlay");
var Game_1 = require("../Game");
var ItemGetWayDialog_1 = require("../FGUI/Extends/SystemModuleDialog/ItemGetWayDialog");
//======================
// 消息对话框API
//----------------------
var GameSystemMessag = /** @class */ (function (_super) {
    __extends(GameSystemMessag, _super);
    function GameSystemMessag() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 玩家等级和经验播放
        _this.userLevelAndExpPlay = new UserLevelAndExpPlay_1.default();
        return _this;
    }
    Object.defineProperty(GameSystemMessag.prototype, "getRewardDialog", {
        get: function () {
            if (!this._getRewardDialog) {
                this._getRewardDialog = GetRewardDialog_1.default.createInstance();
            }
            return this._getRewardDialog;
        },
        enumerable: true,
        configurable: true
    });
    GameSystemMessag.prototype.rewardDialog = function (items) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getRewardDialog.open(items)];
            });
        });
    };
    Object.defineProperty(GameSystemMessag.prototype, "setNumberDialog", {
        get: function () {
            if (!this._setNumberDialog) {
                this._setNumberDialog = SetNumberDialog_1.default.createInstance();
            }
            return this._setNumberDialog;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameSystemMessag.prototype, "itemGetWayDialog", {
        get: function () {
            if (!this._itemGetWayDialog) {
                this._itemGetWayDialog = ItemGetWayDialog_1.default.createInstance();
            }
            return this._itemGetWayDialog;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 检测物品数量是否足够
     * @param itemId 物品ID
     * @param itemNeedNum 物品需要数量
     */
    GameSystemMessag.prototype.checkItemNum = function (itemId, itemNeedNum) {
        var count = Game_1.default.moduleModel.item.getItemNum(itemId);
        if (itemNeedNum <= count) {
            return true;
        }
        var item = Game_1.default.moduleModel.item.getItem(itemId);
        if (item) {
            // Game.system.toastFormatText(TEXT.ToastTextItemNotEnough2, item.itemName, itemNeedNum);
            this.openItemGetWayDailog(itemId, itemNeedNum);
        }
        else {
            console.error("Erro:", "不存在物品", itemId);
        }
        return false;
    };
    /**
     * 打开物品获取对话框
     * @param itemId 物品ID
     * @param costNum 物品需求数量
     */
    GameSystemMessag.prototype.openItemGetWayDailog = function (itemId, costNum) {
        this.itemGetWayDialog.open(itemId, costNum);
    };
    GameSystemMessag.prototype.itemUse = function (max, value) {
        if (value === void 0) { value = 1; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setNumberDialog.m_frame.title = "物品使用";
                        this.setNumberDialog.m_content.text = "选择使用物品数量";
                        return [4 /*yield*/, this.setNumberDialog.open(max, value)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    GameSystemMessag.prototype.itemSale = function (max, value) {
        if (value === void 0) { value = 1; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setNumberDialog.m_frame.title = "物品出售";
                        this.setNumberDialog.m_content.text = "选择出售物品数量";
                        return [4 /*yield*/, this.setNumberDialog.open(max, value)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    GameSystemMessag.prototype.itemCompound = function (max, value) {
        if (value === void 0) { value = 1; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setNumberDialog.m_frame.title = "物品合成";
                        this.setNumberDialog.m_content.text = "选择合成物品数量";
                        return [4 /*yield*/, this.setNumberDialog.open(max, value)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    GameSystemMessag.prototype.itemSplit = function (max, value) {
        if (value === void 0) { value = 1; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setNumberDialog.m_frame.title = "物品拆分";
                        this.setNumberDialog.m_content.text = "选择拆分物品数量";
                        return [4 /*yield*/, this.setNumberDialog.open(max, value)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Object.defineProperty(GameSystemMessag.prototype, "mailDialog", {
        get: function () {
            if (!this._mailContentDialog) {
                this._mailContentDialog = MailContentDialog_1.default.createInstance();
            }
            return this._mailContentDialog;
        },
        enumerable: true,
        configurable: true
    });
    GameSystemMessag.prototype.mailRead = function (datasource) {
        return this.mailDialog.open(datasource);
    };
    Object.defineProperty(GameSystemMessag.prototype, "itemInfoDialog", {
        get: function () {
            if (!this._itemInfoDialog) {
                this._itemInfoDialog = ItemInfoDialog_1.default.createInstance();
            }
            return this._itemInfoDialog;
        },
        enumerable: true,
        configurable: true
    });
    GameSystemMessag.prototype.itemInfoShow = function (datasource) {
        return this.itemInfoDialog.open(datasource);
    };
    return GameSystemMessag;
}(SystemMessage_1.default));
exports.default = GameSystemMessag;
},{"../FGUI/Customs/UserLevelAndExpPlay":178,"../FGUI/Extends/SystemModuleDialog/GetRewardDialog":321,"../FGUI/Extends/SystemModuleDialog/ItemGetWayDialog":323,"../FGUI/Extends/SystemModuleDialog/ItemInfoDialog":324,"../FGUI/Extends/SystemModuleDialog/MailContentDialog":325,"../FGUI/Extends/SystemModuleDialog/SetNumberDialog":327,"../Game":546,"../GameFrame/System/SystemMessage":588}],603:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// 模块ID
var MenuId;
(function (MenuId) {
    /*------------- 系统  ------------ */
    /** 主界面 */
    MenuId[MenuId["Home"] = 100] = "Home";
    /** 登录 */
    MenuId[MenuId["Login"] = 101] = "Login";
    /** 创建角色 */
    MenuId[MenuId["CreateRole"] = 102] = "CreateRole";
    /** 角色信息 */
    MenuId[MenuId["PlayerInfo"] = 103] = "PlayerInfo";
    /** 排行榜 */
    MenuId[MenuId["Rank"] = 104] = "Rank";
    /** 设置 */
    MenuId[MenuId["SystemSetting"] = 105] = "SystemSetting";
    /** 邮件 */
    MenuId[MenuId["Mail"] = 107] = "Mail";
    /** 聊天 */
    MenuId[MenuId["Chat"] = 108] = "Chat";
    /*------------- 主菜单  ------------ */
    /** 背包 */
    MenuId[MenuId["Bag"] = 140] = "Bag";
    /** 拍摄 */
    MenuId[MenuId["Studio"] = 150] = "Studio";
    /** 剧本 */
    MenuId[MenuId["StoryLibrary"] = 160] = "StoryLibrary";
    /** 艺人 */
    MenuId[MenuId["ActorList"] = 180] = "ActorList";
    /** 好友 */
    MenuId[MenuId["Friend"] = 190] = "Friend";
    /*------------- 活动  ------------ */
    /** 商城 */
    MenuId[MenuId["Shop"] = 121] = "Shop";
    /** 充值 */
    MenuId[MenuId["Recharge"] = 122] = "Recharge";
    /** 日常任务 */
    MenuId[MenuId["DailyTask"] = 123] = "DailyTask";
    /** 日常签到 */
    MenuId[MenuId["DailySignin"] = 124] = "DailySignin";
    /** 活动 */
    MenuId[MenuId["Activity"] = 125] = "Activity";
    /** 公告 */
    MenuId[MenuId["Notice"] = 126] = "Notice";
    /*------------- 拍摄  ------------ */
    /** 拍摄--持续收益 */
    MenuId[MenuId["StudioContinue"] = 15001] = "StudioContinue";
    /** 拍摄--拍摄结束持续收益介绍 */
    MenuId[MenuId["StudioContinueInfo"] = 15002] = "StudioContinueInfo";
    /*------------- 剧本  ------------ */
    /** 剧本信息  */
    MenuId[MenuId["StoryInfo"] = 16001] = "StoryInfo";
    /** 剧本招募  */
    MenuId[MenuId["StoryLottery"] = 16002] = "StoryLottery";
    /*------------- 建筑  ------------ */
    /** 建筑 */
    MenuId[MenuId["BuildingInfo"] = 170] = "BuildingInfo";
    /** 建筑艺人 */
    MenuId[MenuId["BuildingActor"] = 171] = "BuildingActor";
    /*------------- 艺人  ------------ */
    /** 艺人详情 */
    MenuId[MenuId["ActorDetail"] = 18001] = "ActorDetail";
    /** 艺人粉丝 */
    MenuId[MenuId["ActorFans"] = 18002] = "ActorFans";
    /** 情报 */
    MenuId[MenuId["Information"] = 18003] = "Information";
    /** 情报分析 */
    MenuId[MenuId["InformationAnalysis"] = 18004] = "InformationAnalysis";
    /*------------- 好友  ------------ */
    /*------------- 子菜单组  ------------ */
    MenuId[MenuId["SubMenuButtonBegin"] = 1000000] = "SubMenuButtonBegin";
})(MenuId = exports.MenuId || (exports.MenuId = {}));
window["MenuId"] = MenuId;
},{}],604:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
//=========================
// 验证基类
//-------------------------
var MenuValidate = /** @class */ (function () {
    function MenuValidate() {
        this.dict = new Dictionary_1.default();
    }
    /**
     * 获取单例实例
     */
    MenuValidate.getInstance = function () {
        var Class = this;
        if (Class.__instance == null) {
            Class.__instance = new Class();
            Class.__instance.install();
        }
        return Class.__instance;
    };
    MenuValidate.prototype.validate = function (menuId) {
        if (this.dict.hasKey(menuId)) {
            return this.dict.getValue(menuId).apply(this);
        }
        return true;
    };
    MenuValidate.prototype.add = function (menuId, fun) {
        this.dict.add(menuId, fun);
    };
    MenuValidate.prototype.install = function () {
    };
    return MenuValidate;
}());
exports.default = MenuValidate;
},{"../Libs/Helpers/Dictionary":626}],605:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
var MenuId_1 = require("./MenuId");
//=========================
// 验证是否可以打开
//-------------------------
var MenuValidateEnableOpen = /** @class */ (function (_super) {
    __extends(MenuValidateEnableOpen, _super);
    function MenuValidateEnableOpen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuValidateEnableOpen.prototype.install = function () {
        this.dict.add(MenuId_1.MenuId.Studio, this.warEnableOpen);
    };
    MenuValidateEnableOpen.prototype.validate = function (menuId) {
        switch (menuId) {
            case MenuId_1.MenuId.Studio:
                return this.warEnableOpen();
        }
        return _super.prototype.validate.call(this, menuId);
    };
    //拍摄是否可以使用
    MenuValidateEnableOpen.prototype.warEnableOpen = function () {
        return true;
        // let b: boolean = false;
        // if (User.isNineToFiftyFive && !User.isTenTime && (!Game.moduleModel.warData.moveData || (Game.moduleModel.warData.moveData !== null && Game.moduleModel.warData.moveData.state < EMovieState.result)))
        // {
        // 	Game.system.toastText(TEXT.NineToFiftyFiveTip);
        // }
        // else
        // {
        // 	b = true;
        // }
        // return b;
    };
    return MenuValidateEnableOpen;
}(MenuValidate_1.default));
exports.default = MenuValidateEnableOpen;
},{"./MenuId":603,"./MenuValidate":604}],606:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
//==================
//验证新功能
//==================
var MenuValidateNew = /** @class */ (function (_super) {
    __extends(MenuValidateNew, _super);
    function MenuValidateNew() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuValidateNew.prototype.install = function () {
    };
    MenuValidateNew.prototype.validate = function (menuId) {
        if (this.dict.hasKey(menuId)) {
            return this.dict.getValue(menuId).apply(this);
        }
        // let isNew = Game.moduleModel.func.getIsNewMenu(menuId);
        // if (isNew)
        // {
        // 	return isNew;
        // }
        // let menuConfig = Game.config.menu.getConfig(menuId);
        // if (menuConfig.isSubbarMainButton)
        // {
        // 	let list = Game.config.menu.getBarMenus(<number>menuId);
        // 	for (let i = 0; i < list.length; i++)
        // 	{
        // 		if (this.validate(list[i].menuId))
        // 		{
        // 			return true;
        // 		}
        // 	}
        // }
        return false;
    };
    return MenuValidateNew;
}(MenuValidate_1.default));
exports.default = MenuValidateNew;
},{"./MenuValidate":604}],607:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Game_1 = require("../Game");
//=========================
// 验证是否开放
//-------------------------
var MenuValidateOpening = /** @class */ (function (_super) {
    __extends(MenuValidateOpening, _super);
    function MenuValidateOpening() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.closeDict = new Dictionary_1.default();
        return _this;
    }
    MenuValidateOpening.prototype.install = function () {
        // this.addClose(MenuId.GuideComplete, this.isCloseGuideComplete);
        // this.addClose(MenuId.Goal, this.isCloseGoal);
        // this.addClose(MenuId.CupGift, this.isCloseCupGift);
    };
    // isCloseGuideComplete(): boolean
    // {
    // 	return Game.moduleModel.guide.guideCompleteStatus == 1;
    // }
    // isCloseGoal(): boolean
    // {
    // 	return Game.moduleModel.targetPackage.isCloseLevelGift;
    // }
    // isCloseCupGift(): boolean
    // {
    // 	return Game.moduleModel.targetPackage.isCloseCupGift;
    // }
    MenuValidateOpening.prototype.addClose = function (id, func) {
        this.closeDict.add(id, func);
    };
    MenuValidateOpening.prototype.validate = function (menuId) {
        var isClose = false;
        if (this.closeDict.hasKey(menuId)) {
            isClose = this.closeDict.getValue(menuId).apply(this);
        }
        if (isClose == true) {
            return false;
        }
        var unlockConfig = Game_1.default.config.unlock.getUnlockConfig(menuId);
        if (this.dict.hasKey(menuId)) {
            return this.dict.getValue(menuId).apply(this);
        }
        // if (unlockConfig)
        // {
        // 	switch (unlockConfig.open_type)
        // 	{
        // 		case UnlockType.None:
        // 			return true;
        // 		case UnlockType.Level:
        // 			return User.info.level >= unlockConfig.open_data;
        // 		case UnlockType.BuildingLevel:
        // 			return Game.moduleModel.building.validataBuildLevel(unlockConfig.open_data);
        // 		case UnlockType.BlockLevel:
        // 			return Game.moduleModel.street.validataBlockLevelId(unlockConfig.open_data);
        // 		case UnlockType.Other:
        // 			return false;
        // 		case UnlockType.HoldCity:
        // 			return Game.moduleModel.market.IsTaskCityFinish(unlockConfig.open_data);
        // 		case UnlockType.MainTask:
        // 			return Game.moduleModel.task.isCompleteMainTask(unlockConfig.open_data);
        // 	}
        // }
        return _super.prototype.validate.call(this, menuId);
    };
    return MenuValidateOpening;
}(MenuValidate_1.default));
exports.default = MenuValidateOpening;
},{"../Game":546,"../Libs/Helpers/Dictionary":626,"./MenuValidate":604}],608:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
var MenuValidateOpening_1 = require("./MenuValidateOpening");
//=========================
// 验证是否解锁
//-------------------------
var MenuValidateUnlock = /** @class */ (function (_super) {
    __extends(MenuValidateUnlock, _super);
    function MenuValidateUnlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuValidateUnlock.prototype.install = function () {
    };
    MenuValidateUnlock.prototype.validate = function (menuId) {
        return MenuValidateOpening_1.default.getInstance().validate(menuId);
    };
    return MenuValidateUnlock;
}(MenuValidate_1.default));
exports.default = MenuValidateUnlock;
},{"./MenuValidate":604,"./MenuValidateOpening":607}],609:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var MenuId_1 = require("./MenuId");
var ModuleConfig_1 = require("../GameFrame/Module/ModuleConfig");
var HomeWindow_1 = require("./ViewWindows/HomeWindow");
var LoginWindow_1 = require("./ViewWindows/LoginWindow");
var BagWindow_1 = require("./ViewWindows/BagWindow");
var MailWindow_1 = require("./ViewWindows/MailWindow");
//======================
// 模块配置
//----------------------
var MenuWindows = /** @class */ (function () {
    function MenuWindows() {
    }
    MenuWindows.get = function (menuId) {
        return MenuWindows.dict.getValue(menuId);
    };
    MenuWindows.add = function (menuId, windowClass) {
        // 请在该地方配置menuId对应的 MWindow
        MenuWindows.dict.add(menuId, new ModuleConfig_1.default(menuId, windowClass));
    };
    MenuWindows.install = function () {
        MenuWindows.add(MenuId_1.MenuId.Login, LoginWindow_1.default);
        MenuWindows.add(MenuId_1.MenuId.Home, HomeWindow_1.default);
        MenuWindows.add(MenuId_1.MenuId.Bag, BagWindow_1.default);
        MenuWindows.add(MenuId_1.MenuId.Mail, MailWindow_1.default);
    };
    MenuWindows.dict = new Dictionary_1.default();
    return MenuWindows;
}());
exports.default = MenuWindows;
},{"../GameFrame/Module/ModuleConfig":580,"../Libs/Helpers/Dictionary":626,"./MenuId":603,"./ViewWindows/BagWindow":612,"./ViewWindows/HomeWindow":613,"./ViewWindows/LoginWindow":614,"./ViewWindows/MailWindow":615}],610:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ModelManagerList_1 = require("./ModelManagerList");
//======================
// 模块 数据模型 管理器
//----------------------
var ModelManager = /** @class */ (function (_super) {
    __extends(ModelManager, _super);
    function ModelManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 初始化
    ModelManager.prototype.install = function () {
        this.initList();
        for (var i = 0; i < this.list.length; i++) {
            this.list[i].install();
        }
    };
    return ModelManager;
}(ModelManagerList_1.default));
exports.default = ModelManager;
},{"./ModelManagerList":611}],611:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ItemModel_1 = require("./DataModels/ItemModel");
var MailModel_1 = require("./DataModels/MailModel");
var RoleModel_1 = require("./DataModels/RoleModel");
var GashaponModel_1 = require("./DataModels/GashaponModel");
//======================
// 模块 数据模型 管理器
//----------------------
var ModelManagerList = /** @class */ (function () {
    function ModelManagerList() {
        // 列表
        this.list = [];
        // 埋点数据
        // buriedPoint: BuriedPointModel = new BuriedPointModel();
        // 角色
        this.role = new RoleModel_1.default();
        // 物品
        this.item = new ItemModel_1.default();
        // 邮件
        this.mail = new MailModel_1.default();
        /** 抽奖*/
        this.gashapon = new GashaponModel_1.default();
    }
    // 初始化列表
    ModelManagerList.prototype.initList = function () {
        this.list.push(this.role);
        this.list.push(this.item);
        this.list.push(this.mail);
        this.list.push(this.gashapon);
    };
    return ModelManagerList;
}());
exports.default = ModelManagerList;
},{"./DataModels/GashaponModel":593,"./DataModels/ItemModel":594,"./DataModels/MailModel":595,"./DataModels/RoleModel":596}],612:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MWindow_1 = require("../../GameFrame/Module/MWindow");
var BagWindowUI_1 = require("../../FGUI/Extends/ModuleBag/BagWindowUI");
var MenuOpenType_1 = require("../../GameFrame/Menu/MenuOpenType");
var Game_1 = require("../../Game");
var GuiPackageNames_1 = require("../../FGUI/Generates/GuiPackageNames");
var SetNumberDialog_1 = require("../../FGUI/Extends/SystemModuleDialog/SetNumberDialog");
var BagShowType;
(function (BagShowType) {
    BagShowType[BagShowType["Hide"] = 0] = "Hide";
    BagShowType[BagShowType["Show"] = 1] = "Show";
})(BagShowType = exports.BagShowType || (exports.BagShowType = {}));
var BagWindow = /** @class */ (function (_super) {
    __extends(BagWindow, _super);
    function BagWindow() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(BagWindowUI_1.default);
        _this.addAssetForFguiComponent(SetNumberDialog_1.default);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default._ResImageUI);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default._ResImagePic);
        return _this;
    }
    // 菜单创建
    BagWindow.prototype.onMenuCreate = function () {
        var windowUI = BagWindowUI_1.default.createInstance();
        this.window = windowUI;
        this.contentPane = windowUI;
        // 设置关闭按钮 关闭当前窗口
        this.setCloseBtnEvent();
        _super.prototype.onMenuCreate.call(this);
    };
    // 菜单打开事件，传递参数
    BagWindow.prototype.onMenuOpen = function (parameter) {
        if (parameter.openType == MenuOpenType_1.MenuOpenType.None) {
            if (Game_1.default.localStorage.isGuest) {
                parameter.openType = MenuOpenType_1.MenuOpenType.Tab;
                parameter.openIndex = BagShowType.Show;
            }
        }
        _super.prototype.onMenuOpen.call(this, parameter);
    };
    BagWindow.prototype.openTab = function (tabIndex) {
        if (this.window) {
            this.window.m_showItemInfo.setSelectedIndex(tabIndex);
        }
        _super.prototype.openTab.call(this, tabIndex);
    };
    return BagWindow;
}(MWindow_1.default));
exports.default = BagWindow;
},{"../../FGUI/Extends/ModuleBag/BagWindowUI":307,"../../FGUI/Extends/SystemModuleDialog/SetNumberDialog":327,"../../FGUI/Generates/GuiPackageNames":479,"../../Game":546,"../../GameFrame/Menu/MenuOpenType":575,"../../GameFrame/Module/MWindow":579}],613:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MWindow_1 = require("../../GameFrame/Module/MWindow");
var Game_1 = require("../../Game");
var GuiPackageNames_1 = require("../../FGUI/Generates/GuiPackageNames");
var AssetItemType_1 = require("../../GameFrame/AssetManagers/AssetItemType");
var Res_1 = require("../../Config/Keys/Res");
var HomeWindowUI_1 = require("../../FGUI/Extends/SystemModuleHome/HomeWindowUI");
//======================
// 游戏主界面
//----------------------
var HomeWindow = /** @class */ (function (_super) {
    __extends(HomeWindow, _super);
    function HomeWindow() {
        var _this = _super.call(this) || this;
        // 添加依赖资源
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default._ResFont);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default._ResImageUIV1);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default._ResImageUI);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default._ResImagePic);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default.CommonBase);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default.CommonGame);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default.CommonFx);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default.SystemModuleDialog);
        _this.addAssetForFguiComponent(HomeWindowUI_1.default);
        _this.addDynamicAsset({ url: Res_1.default.getHomePath(), type: AssetItemType_1.AssetItemType.Json });
        return _this;
    }
    // 菜单创建
    HomeWindow.prototype.onMenuCreate = function () {
        // 屏幕点击特效
        Game_1.default.stageClickFx.install();
        var windowUI = HomeWindowUI_1.default.createInstance();
        this.conent = windowUI;
        this.contentPane = windowUI;
        _super.prototype.onMenuCreate.call(this);
    };
    // 设置主界面显示
    HomeWindow.prototype.setHomeShow = function () {
        if (this.contentPane && !this.contentPane.visible) {
            this.contentPane.visible = true;
            this.onShown();
        }
    };
    // 设置主界面隐藏
    HomeWindow.prototype.setHomeHide = function () {
        if (this.contentPane && this.contentPane.visible) {
            this.contentPane.visible = false;
            this.onHide();
        }
    };
    return HomeWindow;
}(MWindow_1.default));
exports.default = HomeWindow;
},{"../../Config/Keys/Res":124,"../../FGUI/Extends/SystemModuleHome/HomeWindowUI":329,"../../FGUI/Generates/GuiPackageNames":479,"../../Game":546,"../../GameFrame/AssetManagers/AssetItemType":550,"../../GameFrame/Module/MWindow":579}],614:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MWindow_1 = require("../../GameFrame/Module/MWindow");
var LoginWindowUI_1 = require("../../FGUI/Extends/ModuleLogin/LoginWindowUI");
var MenuOpenType_1 = require("../../GameFrame/Menu/MenuOpenType");
var Game_1 = require("../../Game");
var LoginTabType;
(function (LoginTabType) {
    // 登录
    LoginTabType[LoginTabType["Login"] = 0] = "Login";
    // 游客登录
    LoginTabType[LoginTabType["LoginGuest"] = 1] = "LoginGuest";
    // 注册
    LoginTabType[LoginTabType["Register"] = 2] = "Register";
    // 注册协议
    LoginTabType[LoginTabType["Agreement"] = 3] = "Agreement";
})(LoginTabType = exports.LoginTabType || (exports.LoginTabType = {}));
//======================
// 登录窗口
//----------------------
var LoginWindow = /** @class */ (function (_super) {
    __extends(LoginWindow, _super);
    function LoginWindow() {
        var _this = _super.call(this) || this;
        // 添加依赖资源
        _this.addAssetForFguiComponent(LoginWindowUI_1.default);
        return _this;
        // TODO Test
        // this.addAssetForFguiPackagename(GuiPackageNames.CommonNumber);
        // this.addAssetForFguiPackagename(GuiPackageNames.ModuleStudioMovieClip00Common);
        // this.addAssetForFguiPackagename(GuiPackageNames.ModuleStudioMovieClip01Normal);
        // this.addAssetForFguiPackagename(GuiPackageNames._ResImageUI);
        // this.addAssetForFguiPackagename(GuiPackageNames.CommonBase);
        // this.addAssetForFguiPackagename(GuiPackageNames._ResFont);
        // this.addAssetForFguiPackagename(GuiPackageNames.ModuleStudio);
        // this.addAssetForFguiPackagename(GuiPackageNames._ResImageUIV1);
        // this.addAssetForFguiPackagename(GuiPackageNames._ResImagePic);
        // this.addAssetForFguiPackagename(GuiPackageNames.CommonGame);
    }
    // 生成动态预加载资源
    LoginWindow.prototype.generateAssetsForDynmic = function () {
        _super.prototype.generateAssetsForDynmic.call(this);
        // // 方式1, 自己手动加资源
        // this.addDynamicAsset({url:xxxxx, type:AssetItemType.Buffer});
        // // 方式2, 添加AvatarConfig里指定的资源
        // let list = Game.moduleModel.story.getList();
        // for(let i = 0; i < list.length; i ++)
        // {
        //     this.addDynamicAsset(list[i].avatarConfig.iconAssetItem);
        //     this.addDynamicAsset(list[i].avatarConfig.miniIconAssetItem);
        // }
        // // 方式3, 添加AvatarConfig所有的资源
        // let list = Game.moduleModel.story.getList();
        // for(let i = 0; i < list.length; i ++)
        // {
        //     this.addDynmicAssetForAvatarAll(list[i].avatarConfig);
        // }
    };
    // 菜单创建
    LoginWindow.prototype.onMenuCreate = function () {
        var windowUI = LoginWindowUI_1.default.createInstance();
        this.conent = windowUI;
        this.contentPane = windowUI;
        // this.center();
        // //弹出窗口的动效已中心为轴心
        // this.setPivot(0.5, 0.5);
        // 注册控制器Tab
        this.registerControllerTab(this.conent.m_TabCtrl, this.contentPane);
        _super.prototype.onMenuCreate.call(this);
        this.openTab(LoginTabType.Login);
    };
    // 菜单打开事件，传递参数
    LoginWindow.prototype.onMenuOpen = function (parameter) {
        if (parameter.openType == MenuOpenType_1.MenuOpenType.None) {
            if (Game_1.default.localStorage.isGuest) {
                parameter.openType = MenuOpenType_1.MenuOpenType.Tab;
                parameter.openIndex = LoginTabType.LoginGuest;
            }
        }
        console.log("parameter: ", parameter);
        _super.prototype.onMenuOpen.call(this, parameter);
    };
    LoginWindow.prototype.openTab = function (tabIndex) {
        if (this.conent) {
            this.conent.m_TabCtrl.setSelectedIndex(tabIndex);
        }
        _super.prototype.openTab.call(this, tabIndex);
    };
    //=========================
    // 显示完成
    // 可以在这里添加协议消息监听
    //-------------------------
    LoginWindow.prototype.onShowComplete = function () {
        _super.prototype.onShowComplete.call(this);
    };
    //=========================
    // 隐藏完成
    // 可以在这里移除协议消息监听
    //-------------------------
    LoginWindow.prototype.onHideComplete = function () {
        _super.prototype.onHideComplete.call(this);
    };
    return LoginWindow;
}(MWindow_1.default));
exports.default = LoginWindow;
},{"../../FGUI/Extends/ModuleLogin/LoginWindowUI":315,"../../Game":546,"../../GameFrame/Menu/MenuOpenType":575,"../../GameFrame/Module/MWindow":579}],615:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MWindow_1 = require("../../GameFrame/Module/MWindow");
var MailWindowUI_1 = require("../../FGUI/Extends/ModuleEmail/MailWindowUI");
var GuiPackageNames_1 = require("../../FGUI/Generates/GuiPackageNames");
var MailContentDialog_1 = require("../../FGUI/Extends/SystemModuleDialog/MailContentDialog");
var MailTabType;
(function (MailTabType) {
})(MailTabType = exports.MailTabType || (exports.MailTabType = {}));
//======================
// 邮箱窗口
//----------------------
var MailWindow = /** @class */ (function (_super) {
    __extends(MailWindow, _super);
    function MailWindow() {
        var _this = _super.call(this) || this;
        //添加依赖资源
        _this.addAssetForFguiComponent(MailWindowUI_1.default);
        _this.addAssetForFguiComponent(MailContentDialog_1.default);
        _this.addAssetForFguiPackagename(GuiPackageNames_1.default.CommonGame);
        return _this;
    }
    //生成动态预加载资源
    MailWindow.prototype.generateAssetsForDynmic = function () {
        _super.prototype.generateAssetsForDynmic.call(this);
    };
    //模块界面创建
    MailWindow.prototype.onMenuCreate = function () {
        var windowUI = MailWindowUI_1.default.createInstance();
        this.conent = windowUI;
        this.contentPane = windowUI;
        // 设置关闭按钮 关闭当前窗口
        this.setCloseBtnEvent();
        _super.prototype.onMenuCreate.call(this);
    };
    //模块界面打开时，显示前被调用
    MailWindow.prototype.onMenuOpen = function (parameter) {
        _super.prototype.onMenuOpen.call(this, parameter);
    };
    //打开Tab面板
    MailWindow.prototype.openTab = function (tabIndex) {
        _super.prototype.openTab.call(this, tabIndex);
    };
    //=========================
    // 显示完成(初始化完成)
    // 可以在这里添加协议消息监听(网络、事件)
    //-------------------------
    MailWindow.prototype.onShowComplete = function () {
        _super.prototype.onShowComplete.call(this);
    };
    //=========================
    // 隐藏完成(销毁完成)
    // 可以在这里移除协议消息监听
    //-------------------------
    MailWindow.prototype.onHideComplete = function () {
        _super.prototype.onHideComplete.call(this);
    };
    return MailWindow;
}(MWindow_1.default));
exports.default = MailWindow;
},{"../../FGUI/Extends/ModuleEmail/MailWindowUI":311,"../../FGUI/Extends/SystemModuleDialog/MailContentDialog":325,"../../FGUI/Generates/GuiPackageNames":479,"../../GameFrame/Module/MWindow":579}],616:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("./Game");
var GuiSetting_1 = require("./FGUI/GuiSetting");
var AssetItemType_1 = require("./GameFrame/AssetManagers/AssetItemType");
var GuiPackageNames_1 = require("./FGUI/Generates/GuiPackageNames");
var Dictionary_1 = require("./Libs/Helpers/Dictionary");
var AssetHelper_1 = require("./GameFrame/AssetManagers/AssetHelper");
/** 游戏预加载资源 */
var GamePreload = /** @class */ (function () {
    function GamePreload() {
        /** Fgui包 */
        this.packageConfigs = [];
        // 依赖资源列表
        this.assets = [];
        /** 是否运行中 */
        this.isRuning = false;
        /** 是否完成 */
        this.isComplete = false;
        /** 检查完成函数 */
        this.completeCallbackList = [];
    }
    // 添加依赖资源--fgui 包名
    GamePreload.prototype.addAssetForFguiPackagename = function (packagename) {
        this.assets.push({ url: packagename, type: AssetItemType_1.AssetItemType.FguiPackage });
    };
    // 添加依赖资源--组件
    GamePreload.prototype.addAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.addAssetForFguiPackagename(names[i]);
        }
    };
    // 添加动态资源--AvatarConfig里的所有
    GamePreload.prototype.addDynmicAssetForAvatarAll = function (avatarConfig) {
        avatarConfig.getAllAssset(this.assets);
    };
    /** 生成 */
    GamePreload.prototype.generate = function () {
        if (this.list)
            return;
        this.addAssetForFguiPackagename(GuiPackageNames_1.default.Sound);
        var packageConfig = Game_1.default.guiRes.getconfig(GuiPackageNames_1.default.Sound);
        if (packageConfig) {
            var packageRes = packageConfig.loadList;
            var willRemoves = [];
            for (var _i = 0, packageRes_1 = packageRes; _i < packageRes_1.length; _i++) {
                var packageItem = packageRes_1[_i];
                if (packageItem.url.endsWith(".mp3") || packageItem.url.endsWith(".ogg") || packageItem.url.endsWith(".wav")) {
                    willRemoves.push(packageItem);
                }
            }
            for (var _a = 0, willRemoves_1 = willRemoves; _a < willRemoves_1.length; _a++) {
                var packageItem = willRemoves_1[_a];
                arrayRemoveItem(packageRes, packageItem);
            }
        }
        var dict = new Dictionary_1.default();
        var packageDict = new Dictionary_1.default();
        for (var i = 0; i < this.assets.length; i++) {
            var item = this.assets[i];
            var packageConfig_1 = null;
            switch (item.type) {
                case AssetItemType_1.AssetItemType.FguiPackage:
                    packageConfig_1 = Game_1.default.guiRes.getconfig(item.url);
                    break;
                case AssetItemType_1.AssetItemType.FspritePackage:
                    packageConfig_1 = Game_1.default.spriteRes.getconfig(item.url);
                    break;
            }
            if (packageConfig_1) {
                if (!packageDict.hasKey(packageConfig_1.packagePath)) {
                    packageDict.add(packageConfig_1.packagePath, packageConfig_1);
                }
                var packageRes = packageConfig_1.loadList;
                for (var _b = 0, packageRes_2 = packageRes; _b < packageRes_2.length; _b++) {
                    var packageItem = packageRes_2[_b];
                    if (!dict.hasKey(packageItem.url)) {
                        var mitem = { url: packageItem.url, type: AssetHelper_1.default.layaLoaderType2AssetItemType(packageItem.type) };
                        dict.add(mitem.url, mitem);
                    }
                }
            }
            else {
                if (!dict.hasKey(item.url)) {
                    dict.add(item.url, item);
                }
            }
        }
        this.list = dict.getValues();
        this.packageConfigs = packageDict.getValues();
    };
    /** 启动 */
    GamePreload.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        if (_this.isComplete) {
                            resolve(true);
                        }
                        else {
                            var fun = function () {
                                resolve(true);
                            };
                            _this.completeCallbackList.push(fun);
                            if (!_this.isRuning) {
                                _this.generate();
                                Game_1.default.asset.loadList(_this.list, _this, _this.onComplete, _this.onProgress);
                            }
                        }
                    })];
            });
        });
    };
    /** 加载进度 */
    GamePreload.prototype.onProgress = function (rate, index, count, item) {
        Game_1.default.loaderSettingHandler.onLoadedFgui(index, count);
    };
    /** 加载完成 */
    GamePreload.prototype.onComplete = function () {
        for (var _i = 0, _a = this.packageConfigs; _i < _a.length; _i++) {
            var packageConfig = _a[_i];
            GuiSetting_1.default.addPackage(packageConfig.packagePath);
        }
        for (var _b = 0, _c = this.completeCallbackList; _b < _c.length; _b++) {
            var fun = _c[_b];
            fun.apply(this);
        }
        this.isComplete = true;
    };
    return GamePreload;
}());
exports.default = GamePreload;
},{"./FGUI/Generates/GuiPackageNames":479,"./FGUI/GuiSetting":534,"./Game":546,"./GameFrame/AssetManagers/AssetHelper":549,"./GameFrame/AssetManagers/AssetItemType":550,"./Libs/Helpers/Dictionary":626}],617:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
/**
* 浏览器检测
*/
var BrowserDetectConfig = /** @class */ (function () {
    function BrowserDetectConfig() {
        this.isConch = false;
        this.isCrosswalk = false;
        // 发布版本
        this.isResease = false;
        // 是本地
        this.isLocal = false;
        // 是否显示GM
        this.enableGM = true;
        // 是否显示状态
        this.isShowState = true;
        // 是否使用版本号
        this.isUseVersion = false;
        // 内部充值模式
        this.isDebugRecharge = true;
        // 是否请求公告
        this.isRequestNotice = false;
        this.urlServerListRemote = "http://mbqb.ihaiu.com/GamePF/ServerList.json";
        this.urlServerListLocal = "ServerList.json";
        this._isPhoneX = -1;
        console.log("this.isWeixinMinigame=" + this.isWeixinMinigame);
        if (window["conch"]) {
            this.isConch = true;
        }
        if (window && window.navigator && window.navigator.userAgent) {
            var agent = window.navigator.userAgent;
            console.log(agent);
            this.isFirefox = (agent.indexOf("Firefox") > -1);
            this.isOpera = (window["opera"] != null);
            this.isChrome = (agent.indexOf("Chrome") > -1); // NOTE that Chrome on Android returns true but is a completely different browser with different abilities
            this.isIOS = agent.indexOf("iPod") > -1 || agent.indexOf("iPhone") > -1 || agent.indexOf("iPad") > -1;
            this.isAndroid = (agent.indexOf("Android") > -1);
            this.isBlackberry = (agent.indexOf("Blackberry") > -1);
            this.isTV = (agent.indexOf("Box") > -1) || (agent.indexOf("box") > -1);
            this.isIE = (agent.indexOf("IE") > -1);
            this.isMobile = this.isIOS || this.isAndroid || this.isBlackberry;
            this.isApp = window["conch"] ? true : false;
        }
        else {
            this.isMobile = true;
            this.isApp = true;
        }
        // this.isMobile = true;
        // this.isApp = true;
        // console.log("window.location=" + (window["location"] ? JSON.stringify(window["location"]) : "没有"));
        this.isResease = true;
        if (window && window["location"] && window["location"]["pathname"] && window["location"]["pathname"].startsWith("/GamePF") || /\/[A-Z]:\//.test(window["location"]["pathname"])) {
            this.isResease = false;
        }
        // if (this.isResease)
        // {
        // 	this.enableGM = false;
        // 	this.isShowState = false;
        // 	this.isLocal = true;
        // }
        if (window && window["location"] && window["location"]["pathname"] && /\/[A-Z]:\//.test(window["location"]["pathname"])) {
            this.isUseVersion = false;
        }
        if (!this.isIOS && window && window["location"] && window && window["location"]["origin"] && window && (window["location"]["origin"] == "http://pfqa.ihaiu.com" || window["location"]["origin"] == "http://172.16.50.181:8900")) {
            this.isUseVersion = false;
            this.enableGM = true;
            this.isLocal = true;
        }
        this.enableGM = true;
        if (this.isAndroid) {
            this.isUseVersion = false;
            this.enableGM = true;
            this.isShowState = true;
            this.isLocal = true;
            this.isDebugRecharge = true;
        }
        if (this.isIOS) {
            this.isUseVersion = false;
            this.enableGM = true;
            this.isShowState = true;
            this.isLocal = true;
            this.isDebugRecharge = false;
        }
        this.isLocal = true;
        console.log("this.isResease=" + this.isResease);
        console.log("this.urlServerList=" + this.urlServerList);
        if (window["conch"]) {
            var nType = window["conch"].config.getNetworkType();
            console.log("getNetworkType:" + nType);
            window["conch"].setNetworkEvtFunction(function (type) {
                console.log("setNetworkEvtFunction:" + type);
            });
        }
    }
    Object.defineProperty(BrowserDetectConfig.prototype, "isWeixinMinigame", {
        get: function () {
            return Laya.Browser.onWeiXin && Laya.MiniAdpter != undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "versionUrl", {
        // 版本号路径
        get: function () {
            // if (window && window["location"] && window["location"]["_fullpath"] && window["location"]["_fullpath"].startsWith("https://cdn-exp-pf.shinezone.com/resources/"))
            // {
            // 	return window["location"]["_fullpath"].replace("https://cdn-exp-pf.shinezone.com/resources/", "https://s3.amazonaws.com/mv-va-qa01/resources/") + "/version.json";
            // }
            // else
            // {
            return "version.json";
            // }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "urlServerList", {
        get: function () {
            if (this.isLocal) {
                return this.urlServerListLocal;
            }
            else {
                return this.urlServerListRemote;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "deviceInfo", {
        get: function () {
            if (window["conch"]) {
                if (!this._deviceInfo) {
                    this._deviceInfo = JSON.parse(window["conch"].config.getDeviceInfo());
                }
            }
            else {
                if (!this._deviceInfo)
                    this._deviceInfo = {
                        "os": "ios",
                        "devicename": "iPhone8,1",
                        "imei": "imeixxx",
                        "imsi": "imsixxx",
                        "phonemodel": "iPhone",
                        "localmodel": "iPhone",
                        "retinavalue": "2.000000",
                        "osversion": "10.2",
                        "resolution": "375*667",
                        "guid": "E5B525AB-6B9A-495F-BF74-82345E76D646"
                    };
            }
            return this._deviceInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "deviceId", {
        /**
         * 获取设备ID
         */
        get: function () {
            return Game_1.default.localStorage.deviceId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "deviceName", {
        get: function () {
            return this.deviceInfo["devicename"];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "isPhoneX", {
        get: function () {
            if (this._isPhoneX === -1) {
                this._isPhoneX = false;
                if (window.navigator && window.navigator.userAgent) {
                    var index = window.navigator.userAgent.indexOf("iPhone OS ");
                    if (index != -1) {
                        var v = window.navigator.userAgent.substring(window.navigator.userAgent.indexOf("iPhone OS ") + "iPhone OS ".length, window.navigator.userAgent.indexOf(" like"));
                        v = v.replace(/\_/g, '.');
                        var num = parseFloat(v);
                        if (num >= 10.3) {
                            this._isPhoneX = true;
                        }
                    }
                }
                // if (this.deviceName && this.deviceName.indexOf("iPhone") != -1)
                // {
                // 	try
                // 	{
                // 		let v = this.deviceName.replace("iPhone", "").replace(",", ".");
                // 		let num = parseFloat(v);
                // 		if (num >= 10.3)
                // 		{
                // 			return true;
                // 		}
                // 	}
                // 	catch (error)
                // 	{
                // 		return false;
                // 	}
                // }
            }
            return this._isPhoneX;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "isLiuHai", {
        get: function () {
            if (this._isLiuHai === undefined) {
                if (Laya.Browser.onMiniGame || this.isConch) {
                    this._isLiuHai = window.innerWidth / window.innerHeight <= 0.5;
                    // return this.isPhoneX;
                }
            }
            return this._isLiuHai;
        },
        enumerable: true,
        configurable: true
    });
    return BrowserDetectConfig;
}());
exports.default = BrowserDetectConfig;
},{"../Game":546}],618:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** 机器性能类型 */
var GameDevicePerformanceType;
(function (GameDevicePerformanceType) {
    /** 非常底，快支持不了 */
    GameDevicePerformanceType[GameDevicePerformanceType["VeryLower"] = 0] = "VeryLower";
    /** 底 */
    GameDevicePerformanceType[GameDevicePerformanceType["Lower"] = 1] = "Lower";
    /** 中 */
    GameDevicePerformanceType[GameDevicePerformanceType["Middle"] = 2] = "Middle";
    /** 高 */
    GameDevicePerformanceType[GameDevicePerformanceType["Hight"] = 3] = "Hight";
})(GameDevicePerformanceType || (GameDevicePerformanceType = {}));
/**
* 机型配置
*/
var GameDeviceConfig = /** @class */ (function () {
    function GameDeviceConfig() {
        /** 骨骼动画最大缓存数量 */
        this.skeletonCacheMaxNum = 10;
        /** 总共单位最大数量 default = 10*/
        this.unitMaxNum = 10;
        /** 单个房间单位最大数量 default = 2*/
        this.roomUnitMaxNum = 2;
        /** 模块最小缓存时间 */
        this.menuCacheTime = 10000;
        /** 动态图片缓存数量 */
        this.fguiLoaderCacheNum = 100;
        /** 动态图片缓存时间 */
        this.fguiLoaderCacheTime = 100;
        /** 粒子拖尾每次发射数量 */
        this.trailNum = 5;
        /** 机器性能类型 */
        this._performanceType = GameDevicePerformanceType.Lower;
        this._networkType = -1;
    }
    Object.defineProperty(GameDeviceConfig.prototype, "performanceType", {
        get: function () {
            return this._performanceType;
        },
        set: function (val) {
            this._performanceType = val;
            switch (val) {
                case GameDevicePerformanceType.VeryLower:
                    this.skeletonCacheMaxNum = 5;
                    this.unitMaxNum = 18;
                    this.roomUnitMaxNum = 2;
                    this.menuCacheTime = 3000;
                    this.fguiLoaderCacheNum = 50;
                    this.fguiLoaderCacheTime = 3000;
                    this.trailNum = 1;
                    break;
                case GameDevicePerformanceType.Lower:
                    this.skeletonCacheMaxNum = 10;
                    this.unitMaxNum = 20;
                    this.roomUnitMaxNum = 3;
                    this.menuCacheTime = 3000;
                    this.fguiLoaderCacheNum = 30;
                    this.fguiLoaderCacheTime = 3000;
                    this.trailNum = 2;
                    break;
                case GameDevicePerformanceType.Middle:
                    this.skeletonCacheMaxNum = 25;
                    this.unitMaxNum = 30;
                    this.roomUnitMaxNum = 4;
                    this.menuCacheTime = 10000;
                    this.fguiLoaderCacheNum = 60;
                    this.fguiLoaderCacheTime = 10000;
                    this.trailNum = 4;
                    break;
                case GameDevicePerformanceType.Hight:
                    this.skeletonCacheMaxNum = 50;
                    this.unitMaxNum = 50;
                    this.roomUnitMaxNum = 4;
                    this.menuCacheTime = 300000;
                    this.fguiLoaderCacheNum = 100;
                    this.fguiLoaderCacheTime = 100000;
                    this.trailNum = 5;
                    break;
            }
            // this.unitMaxNum = 2;
            // this.roomUnitMaxNum = 1;
        },
        enumerable: true,
        configurable: true
    });
    GameDeviceConfig.prototype.init = function () {
        var totalMem = this.getTotalMem();
        if (totalMem <= 0) {
            this.performanceType = GameDevicePerformanceType.Hight;
        }
        else if (totalMem <= 1 * 1024 * 1024) {
            this.performanceType = GameDevicePerformanceType.VeryLower;
        }
        else if (totalMem <= 2 * 1024 * 1024) {
            this.performanceType = GameDevicePerformanceType.Middle;
        }
        else {
            this.performanceType = GameDevicePerformanceType.Hight;
        }
    };
    Object.defineProperty(GameDeviceConfig.prototype, "isApp", {
        /**
         * 是否是应用设备
         */
        get: function () {
            return window["conch"] ? true : false;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 获得运行设备总内存
     * 单位为KB
     */
    GameDeviceConfig.prototype.getTotalMem = function () {
        if (this.isApp) {
            return window["conch"].config.getTotalMem();
        }
        return 0;
    };
    /**
     * 获得当前应用程序占用的内存
     * 单位为KB
     */
    GameDeviceConfig.prototype.getUsedMem = function () {
        if (this.isApp) {
            return window["conch"].config.getUsedMem();
        }
        return 0;
    };
    /**
     * 获得可用的内存
     * 单位为KB
     */
    GameDeviceConfig.prototype.getAvalidMem = function () {
        if (this.isApp) {
            return window["conch"].config.getAvalidMem();
        }
        return 0;
    };
    /**
     * 获得网络状态
     */
    GameDeviceConfig.prototype.getNetworkType = function () {
        if (this._networkType == -1) {
            if (this.isApp) {
                this._networkType = window["conch"].config.getNetworkType();
                return this._networkType;
            }
        }
        else {
            return this._networkType;
        }
        return NetworkType.NET_UNKNOWN;
    };
    Object.defineProperty(GameDeviceConfig.prototype, "networkType", {
        set: function (type) {
            this._networkType = type;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 打印设备信息情况
     */
    GameDeviceConfig.prototype.printInfo = function () {
        var str = " TotalMem: " + kbToStr(this.getTotalMem()) + "\n UsedMem: " + kbToStr(this.getUsedMem()) + "\n AvalidMem: " + kbToStr(this.getAvalidMem()) + "\n NetworkType: " + this.getNetworkType();
        console.log(str);
    };
    return GameDeviceConfig;
}());
exports.default = GameDeviceConfig;
},{}],619:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 屏幕分辨率
 */
var ScreenSettingConfig = /** @class */ (function () {
    function ScreenSettingConfig() {
        // 开发分辨率
        this.developWidth = 750;
        this.developHeight = 1334;
    }
    Object.defineProperty(ScreenSettingConfig.prototype, "developAspect", {
        get: function () {
            return this.developWidth / this.developHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenWidth", {
        // 屏幕分辨率
        get: function () {
            return Laya.stage.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenHeight", {
        get: function () {
            return Laya.stage.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "liuHaiHeightTop", {
        /** 刘海屏幕高度 */
        get: function () {
            return 65;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "liuHaiHeightBottom", {
        /** 刘海屏幕高度 */
        get: function () {
            return 60 + 50;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenHeightLiuHai", {
        /** 刘海屏幕高度 */
        get: function () {
            return fairygui.GRoot.inst.height - this.liuHaiHeightTop - this.liuHaiHeightBottom;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenAspect", {
        get: function () {
            return this.screenWidth / this.screenHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleExpand", {
        // 获取缩放比例
        get: function () {
            var rate = 1;
            if (this.screenAspect <= this.developAspect) {
                rate = this.screenHeight / this.developHeight / (this.screenWidth / this.developWidth);
            }
            else {
                rate = this.screenWidth / this.developWidth / (this.screenHeight / this.developHeight);
            }
            return rate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleX", {
        get: function () {
            return this.screenWidth / this.developWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleY", {
        get: function () {
            return this.screenHeight / this.developHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleShrink", {
        get: function () {
            return Math.min(this.screenScaleX, this.screenScaleY);
            // let rate = 1;
            // if (this.screenAspect <= this.developAspect)
            // {
            // 	rate = this.screenHeight / this.developHeight;
            // }
            // else
            // {
            // 	rate = this.screenWidth / this.developWidth;
            // }
            // return rate;
        },
        enumerable: true,
        configurable: true
    });
    return ScreenSettingConfig;
}());
exports.default = ScreenSettingConfig;
},{}],620:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 版本号数据结构
 */
var VersionData = /** @class */ (function () {
    function VersionData() {
        // 第一部分为主版本号
        this.master = 0;
        // 第二部分为次版本号, 需要更新app版本
        this.minor = 0;
        // 第三部分为修订版
        this.revised = 0;
        // 第四部分为修订版
        this.revised2 = 0;
    }
    Object.defineProperty(VersionData.prototype, "isZero", {
        get: function () {
            return this.master == 0 &&
                this.minor == 0 &&
                this.revised == 0 &&
                this.revised2 == 0;
        },
        enumerable: true,
        configurable: true
    });
    VersionData.prototype.setVersionTxt = function (versionTxt) {
        if (versionTxt === undefined || versionTxt === null)
            return this;
        if (isNullOrEmpty(versionTxt.trim()))
            return this;
        versionTxt = versionTxt.toLowerCase();
        versionTxt = versionTxt.replace("version:", "").replace("version", "").replace("ver", "").replace("v", "");
        var arr = versionTxt.split('.');
        this.master = parseInt(arr[0]);
        if (arr.length > 1)
            this.minor = parseInt(arr[1]);
        if (arr.length > 2)
            this.revised = parseInt(arr[2]);
        if (arr.length > 3)
            this.revised2 = parseInt(arr[3]);
        return this;
    };
    VersionData.prototype.equal = function (target) {
        return this.master == target.master
            && this.minor == target.minor
            && this.revised == target.revised
            && this.revised2 == target.revised2;
    };
    VersionData.prototype.toString = function () {
        return "v" + this.master + "." + this.minor + "." + this.revised + "." + this.revised2;
    };
    return VersionData;
}());
exports.default = VersionData;
},{}],621:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LocalStorage = Laya.LocalStorage;
var VersionData_1 = require("./VersionData");
var Game_1 = require("../Game");
var Signal_1 = require("../Libs/signals/Signal");
var VersionManager = /** @class */ (function () {
    function VersionManager() {
        this.platform = "android";
        this.urlpath = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources/ios/web/";
        this.url = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources/ios/web/index.html";
        this.appId = "com.shinezone.movie";
        this.webRoot = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources";
        this.webVersionUrl = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources/verinfo/DTGameVersion.json";
        // 本地版本号发生变化
        this.sLocalVersionChange = new Signal_1.default();
        // 拷贝 assets->data/{packages}/files 的版本
        this.assetCopytoFileVersionData = new VersionData_1.default();
        // 本地，应用版本
        this.localAppVersionData = new VersionData_1.default();
        // 网络，应用版本
        this.webAppVersionData = new VersionData_1.default();
        // 本地，资源版本
        this.localResVersionData = new VersionData_1.default();
        // 网络，资源版本
        this.webResVersionData = new VersionData_1.default();
        // 本地，分包资源版本
        this.localPartialVersionData = new VersionData_1.default();
        // 网络，分包资源版本
        this.webPartialVersionData = new VersionData_1.default();
    }
    Object.defineProperty(VersionManager, "Instance", {
        get: function () {
            if (!VersionManager._Instance) {
                VersionManager._Instance = new VersionManager();
            }
            return VersionManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    VersionManager.prototype.init = function () {
        this.localAppVersionData.setVersionTxt(VersionConfig.AppVersion);
        this.localResVersionData.setVersionTxt(VersionConfig.ResVersion);
    };
    Object.defineProperty(VersionManager.prototype, "localAppVersion", {
        // /** 初始化 */
        // init()
        // {
        // 	// 设置处理器			
        // 	if (BrowserDetect.isCrosswalk)
        // 	{
        // 		this.versionHandler = new CrosswalkVersionHandler(this);
        // 	}
        // 	else
        // 	{
        // 		this.versionHandler = new ConchVersionHandler(this);
        // 	}
        // 	// 设置信息
        // 	this.platform = AppSetting.platform;
        // 	this.appId = AppSetting.appId;
        // 	this.url = AppSetting.url;
        // 	this.urlpath = this.url.replace("index.html", "");
        // 	var folderUrl = this.url.replace("/index.html", "");
        // 	folderUrl = folderUrl.substring(0, folderUrl.lastIndexOf("/"));
        // 	this.webRoot = folderUrl.substring(0, folderUrl.lastIndexOf("/"));
        // 	this.webVersionUrl = this.webRoot + "/verinfo/DTGameVersion.json";
        // 	console.log("GameVersion platform=" + this.platform);
        // 	console.log("GameVersion appId=" + this.appId);
        // 	console.log("GameVersion url=" + this.url);
        // 	console.log("GameVersion urlpath=" + this.urlpath);
        // 	console.log("GameVersion webRoot=" + this.webRoot);
        // 	console.log("GameVersion webVersionUrl=" + this.webVersionUrl);
        // 	gameDeviceConfig.checkNetwork();
        // 	this.localAppVersionData = new VersionData().setVersionTxt(this.localAppVersion);
        // 	this.localResVersionData = new VersionData().setVersionTxt(this.localResVersion);
        // 	this.assetCopytoFileVersionData = new VersionData().setVersionTxt(this.assetsCopytoFileVersion);
        // 	console.log("GameVersion localAppVersionData=" + this.localAppVersionData.toString());
        // 	console.log("GameVersion localResVersionData=" + this.localResVersionData.toString());
        // 	console.log("GameVersion assetCopytoFileVersionData=" + this.assetCopytoFileVersionData.toString());
        // 	gameLaunchLoding.setVersion();
        // 	// 设置是否要显示错误对话框			
        // 	try
        // 	{
        // 		if (!BrowserDetect.enableGM && window["showAlertOnJsException"])
        // 		{
        // 			window["showAlertOnJsException"](false);
        // 		}
        // 	}
        // 	catch (error)
        // 	{
        // 		console.warn("window.showAlertOnJsException error:" + error);
        // 	}
        // 	if (AppSetting.enableVersion)
        // 	{
        // 		this.checkAssetsCopy();
        // 	}
        // 	else
        // 	{
        // 		this.end();
        // 	}
        // }
        // /**
        //  * 刷新应用版本信息
        //  */
        // refreshAppVersion()
        // {
        // 	this.__localResVersion = null;
        // 	this.localAppVersionData = new VersionData().setVersionTxt(this.localAppVersion);
        // 	this.localResVersionData = new VersionData().setVersionTxt(this.localResVersion);
        // 	gameLaunchLoding.setVersion();
        // }
        /**
         * 获取当前应用版本
         */
        get: function () {
            return Game_1.default.application.AppVersionName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "localResVersion", {
        get: function () {
            if (!this.__localResVersion) {
                this.__localResVersion = LocalStorage.getItem("__localResVersion");
                if (!this.__localResVersion) {
                    this.__localResVersion = this.localAppVersion;
                }
            }
            return this.__localResVersion;
        },
        set: function (version) {
            this.__localResVersion = version;
            LocalStorage.setItem("__localResVersion", version);
            this.sLocalVersionChange.dispatch();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "assetsCopytoFileVersion", {
        get: function () {
            if (!this.__assetsCopytoFileVersion) {
                this.__assetsCopytoFileVersion = LocalStorage.getItem("__assetsCopytoFileVersion");
                if (!this.__assetsCopytoFileVersion) {
                    this.__assetsCopytoFileVersion = "0.0.0";
                }
            }
            return this.__assetsCopytoFileVersion;
        },
        set: function (version) {
            this.__assetsCopytoFileVersion = version;
            LocalStorage.setItem("__assetsCopytoFileVersion", version);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "localPartialVersion", {
        get: function () {
            if (!this.__localPartialVersion) {
                this.__localPartialVersion = LocalStorage.getItem("__localPartialVersion");
                if (!this.__localPartialVersion) {
                    this.__localPartialVersion = "0.0.0";
                }
            }
            return this.__localPartialVersion;
        },
        set: function (version) {
            this.__localPartialVersion = version;
            LocalStorage.setItem("__localPartialVersion", version);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "isNeedAssetsCopy", {
        // 获取是否需要拷贝assets->data/{packages}/files
        get: function () {
            if (Game_1.default.browserSetting.isCrosswalk) {
                return !this.localAppVersionData.equal(this.assetCopytoFileVersionData);
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    return VersionManager;
}());
exports.default = VersionManager;
},{"../Game":546,"../Libs/signals/Signal":640,"./VersionData":620}],622:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UnOrderMultiMap_1 = require("./Helpers/UnOrderMultiMap");
var Assembly = /** @class */ (function () {
    function Assembly() {
    }
    Assembly.register = function (classType, name) {
        classType.tag = name;
        this._namespace.addItem(classType.__namespace, classType);
    };
    Assembly.get = function (namespaceName) {
        return this._namespace.get(namespaceName);
    };
    Assembly._namespace = new UnOrderMultiMap_1.default();
    return Assembly;
}());
exports.default = Assembly;
window['Assembly'] = Assembly;
},{"./Helpers/UnOrderMultiMap":634}],623:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AssemblyNamespace;
(function (AssemblyNamespace) {
    AssemblyNamespace["EComponents"] = "EComponents";
    AssemblyNamespace["ESystems"] = "ESystems";
    AssemblyNamespace["EEvents"] = "EEvents";
    AssemblyNamespace["ECSSystems"] = "ECSSystems";
    AssemblyNamespace["UnitCmds"] = "UnitCmds";
    AssemblyNamespace["UnitCmdActions"] = "UnitCmdActions";
    AssemblyNamespace["TookHandlers"] = "TookHandlers";
})(AssemblyNamespace = exports.AssemblyNamespace || (exports.AssemblyNamespace = {}));
window['AssemblyNamespace'] = AssemblyNamespace;
},{}],624:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mathf_1 = require("../Mathf");
var Point = Laya.Point;
var Signal_1 = require("../signals/Signal");
var ChartPolygonView = /** @class */ (function (_super) {
    __extends(ChartPolygonView, _super);
    function ChartPolygonView() {
        var _this = _super.call(this) || this;
        /** 刷新事件 */
        _this.sRefresh = new Signal_1.default();
        /** 几边形 */
        _this.polygonNum = 5;
        /** 属性数据 */
        _this.data = [];
        /** 数据 最后绘制的 */
        _this.lastData = [];
        /** 数据 当前绘制的 */
        _this.props = [];
        /** 点 */
        _this.points = [];
        /** 中心点 */
        _this.center = new Point();
        /** 角度偏远 */
        _this.angleOffset = -15;
        /** 最大半径 */
        _this.radius = 200;
        /** 值最大半径比例 */
        _this.radiusValueRate = 1;
        /** 文本半径比例 */
        _this.radiusTextRate = 1.5;
        /** 刻度几等分 */
        _this.mark = 3;
        _this.markRadiusRate = [1, 0.7, 0.4];
        _this.markFillColors = ['#9e97daFF', '#8c84dbFF', '#7b71dbFF'];
        _this.markLineColors = ['#FFFFFF33', '#bcb6edFF', '#bcb6edFF'];
        _this.markLineWidths = [6, 2, 2];
        _this.lineColor = '#bcb6edFF';
        _this.lineWidth = 3;
        _this.fillColor = '#FFFFFF66';
        _this.pointSize = 4;
        _this.pointColor = '#FFFFFFff';
        _this.valueFillColor = '#FFFFFF88';
        _this.valueLineColor = '#FFFFFFff';
        _this.valueLineWidth = 2;
        _this.isFirst = true;
        _this.tweenDuration = 1000;
        _this.tweenMax = 100;
        _this._tweenIndex = 0;
        _this.isTweenEnd = true;
        window['c'] = _this;
        return _this;
    }
    /** 设置数据 */
    ChartPolygonView.prototype.setData = function (props, isTween) {
        if (isTween === void 0) { isTween = true; }
        this.data = props;
        if (this.data.length != this.props.length) {
            for (var i = 0; i < props.length; i++) {
                if (i < this.props.length) {
                    this.props[i].copyValue(props[i]);
                }
                else {
                    this.props.push(props[i].clone());
                }
            }
        }
        if (this.data.length != this.lastData.length) {
            for (var i = 0; i < props.length; i++) {
                if (i < this.lastData.length) {
                    this.lastData[i].copyValue(props[i]);
                }
                else {
                    this.lastData.push(props[i].clone());
                }
            }
        }
        this.polygonNum = this.data.length;
        if (this.isFirst || !isTween) {
            this.draw();
            this.isFirst = false;
        }
        else
            this.tweenDraw();
    };
    Object.defineProperty(ChartPolygonView.prototype, "tweenIndex", {
        get: function () {
            return this._tweenIndex;
        },
        set: function (val) {
            this._tweenIndex = val;
            var count = this.props.length;
            var prop;
            var rate = this._tweenIndex / this.tweenMax;
            for (var i = 0; i < count; i++) {
                prop = this.props[i];
                prop.val = Laya.MathUtil.lerp(this.lastData[i].val, this.data[i].val, rate);
            }
            this.isTweenEnd = rate >= 1;
            if (this.isTweenEnd) {
                for (var i = 0; i < this.lastData.length; i++) {
                    this.lastData[i].val = this.data[i].val;
                }
            }
            this.draw();
        },
        enumerable: true,
        configurable: true
    });
    /** 缓动绘制 */
    ChartPolygonView.prototype.tweenDraw = function () {
        this.tweenIndex = 0;
        Laya.Tween.clearAll(this);
        Laya.Tween.to(this, { tweenIndex: this.tweenMax }, this.tweenDuration, Laya.Ease.linearNone);
    };
    /** 绘制 */
    ChartPolygonView.prototype.draw = function () {
        this.graphics.clear();
        // 绘制刻度
        for (var i = 0; i < this.mark; i++) {
            this.drawMark(this.markRadiusRate[i] * this.radius, this.markFillColors[i], this.markLineColors[i], this.markLineWidths[i]);
        }
        // 绘制经线
        this.drawLongitude();
        // 绘制值
        this.drawValue();
        // 绘制文本
        this.drawText();
        this.sRefresh.dispatch();
    };
    /** 计算点 */
    ChartPolygonView.prototype.calculationPoints = function (radius) {
        if (!radius || radius <= 0)
            radius = this.radius;
        var count = this.polygonNum;
        var averageAngle = 360 / count;
        for (var i = 0; i < count; i++) {
            var angle = this.angleOffset + averageAngle * i;
            var point = void 0;
            if (i < this.points.length) {
                point = this.points[i];
            }
            else {
                point = new Point();
                this.points.push(point);
            }
            point.x = Mathf_1.default.anglePointX(angle, radius, this.center.x);
            point.y = Mathf_1.default.anglePointY(angle, radius, this.center.y);
        }
    };
    /** 绘制文本 */
    ChartPolygonView.prototype.drawText = function () {
        var count = this.props.length;
        this.calculationPoints();
    };
    /** 绘制值 */
    ChartPolygonView.prototype.drawValue = function () {
        var count = this.props.length;
        var averageAngle = 360 / count;
        var maxPropVal = 0;
        for (var i = 0; i < count; i++) {
            maxPropVal = Math.max(this.props[i].val, maxPropVal);
        }
        var point;
        for (var i = 0; i < count; i++) {
            var angle = this.angleOffset + averageAngle * i;
            if (i < this.points.length) {
                point = this.points[i];
            }
            else {
                point = new Point();
                this.points.push(point);
            }
            var radius = maxPropVal <= 0 ? 0 : this.props[i].val / maxPropVal * this.radiusValueRate * this.radius;
            point.x = Mathf_1.default.anglePointX(angle, radius, this.center.x);
            point.y = Mathf_1.default.anglePointY(angle, radius, this.center.y);
        }
        var pointArray = this.pointsToArray(this.points, count);
        // 绘制多边形
        this.graphics.drawPoly(this.center.x, this.center.y, pointArray, this.valueFillColor, this.valueLineColor, this.valueLineWidth);
        // 绘制点
        for (var i = 0; i < count; i++) {
            point = this.points[i];
            this.graphics.drawCircle(point.x, point.y, this.pointSize, this.pointColor);
        }
    };
    /** 绘制经线 */
    ChartPolygonView.prototype.drawLongitude = function () {
        var count = this.props.length;
        this.calculationPoints(this.radius);
        for (var i = 0; i < count; i++) {
            var point = this.points[i];
            this.graphics.drawLine(this.center.x, this.center.y, point.x, point.y, this.lineColor, this.lineWidth);
        }
    };
    /** 绘制刻度 */
    ChartPolygonView.prototype.drawMark = function (radius, fillColor, lineColor, lineWidth) {
        var count = this.props.length;
        this.calculationPoints(radius);
        var pointArray = this.pointsToArray(this.points, count);
        this.graphics.drawPoly(this.center.x, this.center.y, pointArray, fillColor, lineColor, lineWidth);
    };
    ChartPolygonView.prototype.pointsToArray = function (points, count) {
        (count === void 0) && (count = points.length);
        count = Math.min(count, this.points.length);
        var arr = [];
        arr.length = 0;
        var point;
        for (var i = 0; i < count; i++) {
            point = points[i];
            arr.push(point.x, point.y);
        }
        return arr;
    };
    return ChartPolygonView;
}(Laya.Sprite));
exports.default = ChartPolygonView;
},{"../Mathf":635,"../signals/Signal":640}],625:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 事件
 */
var Emitter = /** @class */ (function () {
    function Emitter(isDispatchName) {
        if (isDispatchName === void 0) { isDispatchName = false; }
        /** 监听数组 */
        this.listeners = {};
        /** 是否把事件名称抛当参数抛给回调 */
        this.isDispatchName = false;
        this.isDispatchName = isDispatchName;
    }
    /**
     * 注册事件
     * @param name 事件名称
     * @param callback 回调函数
     * @param context 上下文
     */
    Emitter.prototype.add = function (name, callback, context) {
        var hasRegistered = false;
        var observers = this.listeners[name];
        if (!observers) {
            this.listeners[name] = [];
        }
        else {
            var length_1 = observers.length;
            for (var i = 0; i < length_1; i++) {
                var observer = observers[i];
                if (observer.comparAll(callback, context)) {
                    hasRegistered = true;
                }
            }
        }
        if (!hasRegistered) {
            this.listeners[name].push(new Observer(callback, context));
        }
    };
    /**
     * 移除事件
     * @param name 事件名称
     * @param callback 回调函数
     * @param context 上下文
     */
    Emitter.prototype.remove = function (name, callback, context) {
        var observers = this.listeners[name];
        if (!observers)
            return;
        var length = observers.length;
        for (var i = 0; i < length; i++) {
            var observer = observers[i];
            if (observer.compar(context)) {
                observers.splice(i, 1);
                break;
            }
        }
        if (observers.length == 0) {
            delete this.listeners[name];
        }
    };
    /**
     * 发送事件
     * @param name 事件名称
     */
    Emitter.prototype.dispatch = function (name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var observers = this.listeners[name];
        if (!observers)
            return;
        var length = observers.length;
        for (var i = length - 1; i >= 0; i--) {
            var observer = observers[i];
            if (this.isDispatchName) {
                observer.notify.apply(observer, [name].concat(args));
            }
            else {
                observer.notify.apply(observer, args);
            }
        }
    };
    return Emitter;
}());
exports.default = Emitter;
/**
 * 观察者
 */
var Observer = /** @class */ (function () {
    function Observer(callback, context) {
        /** 回调函数 */
        this.callback = null;
        /** 上下文 */
        this.context = null;
        var self = this;
        self.callback = callback;
        self.context = context;
    }
    /**
     * 发送通知
     * @param args 不定参数
     */
    Observer.prototype.notify = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a;
        var self = this;
        (_a = self.callback).call.apply(_a, [self.context].concat(args));
    };
    /**
     * 上下文比较
     * @param context 上下文
     */
    Observer.prototype.compar = function (context) {
        return context == this.context;
    };
    /**
     * 上下文比较
     * @param context 上下文
     */
    Observer.prototype.comparAll = function (callback, context) {
        return callback == this.callback && context == this.context;
    };
    return Observer;
}());
},{}],626:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary = /** @class */ (function () {
    function Dictionary() {
        this.dict = {};
        this._count = 0;
    }
    Object.defineProperty(Dictionary.prototype, "count", {
        get: function () {
            return this._count;
        },
        enumerable: true,
        configurable: true
    });
    Dictionary.prototype.add = function (key, val) {
        if (this.hasKey(key) === false) {
            this._count++;
        }
        this.dict[key] = val;
    };
    Dictionary.prototype.set = function (key, val) {
        if (this.hasKey(key) === false) {
            this._count++;
        }
        this.dict[key] = val;
    };
    Dictionary.prototype.remove = function (key) {
        if (this.hasKey(key)) {
            this._count--;
        }
        // this.dict[key] = undefined;
        delete this.dict[key];
    };
    Dictionary.prototype.hasKey = function (key) {
        return this.dict[key] != undefined;
    };
    Dictionary.prototype.getValue = function (key) {
        return this.dict[key];
    };
    Dictionary.prototype.getValueOrDefault = function (key, _default) {
        if (this.hasKey(key)) {
            return this.getValue(key);
        }
        else {
            return _default;
        }
    };
    Dictionary.prototype.__getDict = function () {
        return this.dict;
    };
    Dictionary.prototype.getValues = function () {
        var list = [];
        for (var key in this.dict) {
            list.push(this.dict[key]);
        }
        return list;
    };
    Dictionary.prototype.getKeys = function () {
        var list = [];
        for (var key in this.dict) {
            list.push(key);
        }
        return list;
    };
    Dictionary.prototype.clear = function () {
        this.dict = {};
        this._count = 0;
    };
    return Dictionary;
}());
exports.default = Dictionary;
},{}],627:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var FguiHelper = /** @class */ (function () {
    function FguiHelper() {
    }
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    //=========================
    // 设置child.moduleWindow
    //-------------------------
    FguiHelper.setChildWindow = function (com, window) {
        if (com) {
            com["moduleWindow"] = window;
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.setChildWindow(com._children[i], window);
                }
            }
        }
    };
    //=========================
    // 设置child.onWindowInited
    //-------------------------
    FguiHelper.callChildOnWindowInited = function (com) {
        if (com) {
            var fun = com["onWindowInited"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowInited(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 设置child.onWindowDestory
    //-------------------------
    FguiHelper.callChildOnWindowDestory = function (com) {
        var container;
        if (com instanceof fairygui.GObject) {
            container = com.displayObject;
        }
        if (com) {
            // if (getClassName(com) == "GuideClickHand")
            //     console.log(com);
            var fun = com["onWindowDestory"];
            if (fun) {
                if (fun.apply(com)) {
                    return;
                }
            }
            for (var i = container.numChildren - 1; i >= 0; i--) {
                var display = container.getChildAt(i);
                if (display["$owner"])
                    this.callChildOnWindowDestory(display["$owner"]);
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowShow
    //-------------------------
    FguiHelper.callChildOnWindowShow = function (com) {
        if (com) {
            var enbaleCall = true;
            var fun = com["onWindowShow"];
            if (fun) {
                if (com["whenSelfVisiableCallWindowShowAndHide"] !== undefined) {
                    var whenSelfVisiableCallWindowShowAndHide = com["whenSelfVisiableCallWindowShowAndHide"];
                    if (whenSelfVisiableCallWindowShowAndHide) {
                        if (com.visible == false) {
                            enbaleCall = false;
                        }
                    }
                }
                if (enbaleCall) {
                    fun.apply(com);
                }
            }
            if (enbaleCall && com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowShow(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowHide
    //-------------------------
    FguiHelper.callChildOnWindowHide = function (com) {
        if (com) {
            var enbaleCall = true;
            var fun = com["onWindowHide"];
            if (fun) {
                if (com["whenSelfVisiableCallWindowShowAndHide"] !== undefined) {
                    var whenSelfVisiableCallWindowShowAndHide = com["whenSelfVisiableCallWindowShowAndHide"];
                    if (whenSelfVisiableCallWindowShowAndHide) {
                        if (com.visible == false) {
                            enbaleCall = false;
                        }
                    }
                }
                if (enbaleCall) {
                    fun.apply(com);
                }
            }
            if (enbaleCall && com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowHide(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onTabShow
    //-------------------------
    FguiHelper.callChildOnTabShow = function (com) {
        if (com) {
            var fun = com["onTabShow"];
            if (fun) {
                fun.apply(com);
            }
            if (com["_children"]) {
                for (var i = 0; i < com["_children"]["length"]; i++) {
                    this.callChildOnTabShow(com["_children"][i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onTabHide
    //-------------------------
    FguiHelper.callChildOnTabHide = function (com) {
        if (com) {
            var fun = com["onTabHide"];
            if (fun) {
                fun.apply(com);
            }
            if (com["_children"]) {
                for (var i = 0; i < com["_children"]["length"]; i++) {
                    this.callChildOnTabHide(com["_children"][i]);
                }
            }
        }
    };
    // 屏幕自适应
    FguiHelper.autoScreenScaleShrink = function (content, alignH, alignV) {
        var rate = Game_1.default.screenSetting.screenScaleShrink;
        content.scaleX = rate;
        content.scaleY = rate;
        if (alignH) {
            var parent_1 = fairygui.GRoot.inst;
            switch (alignH) {
                case Laya.Stage.ALIGN_LEFT:
                    content.x = 0;
                    break;
                case Laya.Stage.ALIGN_CENTER:
                    content.x = (parent_1.width - content.width * rate) * 0.5;
                    break;
                case Laya.Stage.ALIGN_RIGHT:
                    content.x = parent_1.width - content.width * rate;
                    break;
            }
            switch (alignV) {
                case Laya.Stage.ALIGN_TOP:
                    content.y = 0;
                    break;
                case Laya.Stage.ALIGN_MIDDLE:
                    content.y = (parent_1.height - content.height * rate) * 0.5;
                    break;
                case Laya.Stage.ALIGN_BOTTOM:
                    content.y = parent_1.height - content.height * rate;
                    break;
            }
        }
    };
    // 屏幕自适应
    FguiHelper.autoScreenScaleShrink2 = function (content, sourceScale) {
        if (sourceScale === void 0) { sourceScale = 1; }
        var rate = Game_1.default.screenSetting.screenScaleShrink;
        content.scaleX = rate * sourceScale;
        content.scaleY = rate * sourceScale;
        if (content.parent) {
            content.x = content.parent.width * 0.5;
            content.y = content.parent.height * 0.5;
        }
    };
    // 屏幕自适应
    FguiHelper.autoScreenScale = function (content, alignH, alignV) {
        var rate = Game_1.default.screenSetting.screenScaleExpand;
        content.scaleX = rate;
        content.scaleY = rate;
        if (alignH) {
            var parent_2 = fairygui.GRoot.inst;
            switch (alignH) {
                case Laya.Stage.ALIGN_LEFT:
                    content.x = 0;
                    break;
                case Laya.Stage.ALIGN_CENTER:
                    content.x = (parent_2.width - content.width * rate) * 0.5;
                    break;
                case Laya.Stage.ALIGN_RIGHT:
                    content.x = parent_2.width - content.width * rate;
                    break;
            }
            switch (alignV) {
                case Laya.Stage.ALIGN_TOP:
                    content.y = 0;
                    break;
                case Laya.Stage.ALIGN_MIDDLE:
                    if (content.parent) {
                        this.helpPoint.y = (parent_2.height - content.height * rate) * 0.5;
                        this.helpPoint = content.parent.globalToLocal(0, this.helpPoint.y, this.helpPoint);
                        content.y = this.helpPoint.y;
                    }
                    else {
                        content.y = (parent_2.height - content.height * rate) * 0.5;
                    }
                    break;
                case Laya.Stage.ALIGN_BOTTOM:
                    content.y = parent_2.height - content.height * rate;
                    break;
            }
        }
    };
    // 屏幕自适应
    FguiHelper.autoScreenScale2 = function (content) {
        var rate = Game_1.default.screenSetting.screenScaleExpand;
        content.scaleX = rate;
        content.scaleY = rate;
        if (content.parent) {
            content.x = content.parent.width * 0.5;
            content.y = content.parent.height * 0.5;
        }
    };
    // 屏幕自适应
    FguiHelper.autoScreenScale3 = function (content) {
        var rate = Game_1.default.screenSetting.screenScaleExpand;
        content.scaleX = rate;
        content.scaleY = rate;
    };
    // 屏幕自适应 场景大小
    FguiHelper.autoScreenSize = function (content, alignH, alignV) {
        var rate = Game_1.default.screenSetting.screenScaleExpand;
        content.width = content.sourceWidth * rate;
        content.height = content.sourceHeight * rate;
        if (alignH) {
            var parent_3 = fairygui.GRoot.inst;
            switch (alignH) {
                case Laya.Stage.ALIGN_LEFT:
                    content.x = 0;
                    break;
                case Laya.Stage.ALIGN_CENTER:
                    content.x = (parent_3.width - content.width) * 0.5;
                    break;
                case Laya.Stage.ALIGN_RIGHT:
                    content.x = parent_3.width - content.width;
                    break;
            }
            switch (alignV) {
                case Laya.Stage.ALIGN_TOP:
                    content.y = 0;
                    break;
                case Laya.Stage.ALIGN_MIDDLE:
                    if (content.parent) {
                        this.helpPoint.y = (parent_3.height - content.height) * 0.5;
                        this.helpPoint = content.parent.globalToLocal(0, this.helpPoint.y, this.helpPoint);
                        content.y = this.helpPoint.y;
                    }
                    else {
                        content.y = (parent_3.height - content.height) * 0.5;
                    }
                    break;
                case Laya.Stage.ALIGN_BOTTOM:
                    content.y = parent_3.height - content.height;
                    break;
            }
        }
    };
    // 屏幕自适应 -- 父容器大小
    FguiHelper.autoParentSize = function (content, alignH, alignV) {
        var rate = Game_1.default.screenSetting.screenScaleExpand;
        content.width = content.sourceWidth * rate;
        content.height = content.sourceHeight * rate;
        if (alignH) {
            var parent_4 = fairygui.GRoot.inst;
            switch (alignH) {
                case Laya.Stage.ALIGN_LEFT:
                    content.x = 0;
                    break;
                case Laya.Stage.ALIGN_CENTER:
                    content.x = (parent_4.width - content.width) * 0.5;
                    break;
                case Laya.Stage.ALIGN_RIGHT:
                    content.x = parent_4.width - content.width;
                    break;
            }
            switch (alignV) {
                case Laya.Stage.ALIGN_TOP:
                    content.y = 0;
                    break;
                case Laya.Stage.ALIGN_MIDDLE:
                    content.y = (parent_4.height - content.height) * 0.5;
                    break;
                case Laya.Stage.ALIGN_BOTTOM:
                    content.y = parent_4.height - content.height;
                    break;
            }
        }
    };
    // 屏幕居中
    FguiHelper.centerScreen = function (content) {
        content.x = (Game_1.default.screenSetting.screenWidth - content.width) * 0.5;
        content.y = (Game_1.default.screenSetting.screenHeight - content.height) * 0.5;
    };
    FguiHelper.centerScreenForCenter = function (content) {
        content.x = Game_1.default.screenSetting.screenWidth * 0.5;
        content.y = Game_1.default.screenSetting.screenHeight * 0.5;
    };
    // 屏幕大小
    FguiHelper.setScreenSize = function (content) {
        content.width = Game_1.default.screenSetting.screenWidth;
        content.height = Game_1.default.screenSetting.screenHeight;
    };
    /** 获取值，使用访问路径 */
    FguiHelper.getValueForPath = function (path, content) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        if (path.endsWith("()")) {
            return FguiHelper.getFunResultForPath.apply(FguiHelper, [path, content].concat(args));
        }
        else {
            return FguiHelper.getFieldValueForPath(path, content);
        }
    };
    /** 获取函数结果值，使用访问路径 */
    FguiHelper.getFunResultForPath = function (path, content) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        if (path.endsWith("()")) {
            path = path.replace("()", "");
            var fun = FguiHelper.getFieldValueForPath(path, content);
            if (fun) {
                var paths = path.split(/[\.\/]/);
                if (paths.length == 1) {
                    if (args.length == 1) {
                        return fun.apply(content, args[0]);
                    }
                    return fun.apply(content, args);
                }
                else {
                    var objPath = "";
                    var gap = "";
                    for (var i = 0; i < paths.length - 1; i++) {
                        objPath += gap + paths[i];
                        gap = ".";
                    }
                    var obj = FguiHelper.getFieldValueForPath(objPath, content);
                    if (args.length == 1) {
                        return fun.apply(obj, args[0]);
                    }
                    return fun.apply(obj, args);
                }
            }
        }
        else {
            return FguiHelper.getFieldValueForPath(path, content);
        }
    };
    /** 获取值，使用访问路径 */
    FguiHelper.getFieldValueForPath = function (path, content) {
        if (!content) {
            content = window;
            if (!content) {
                content = this;
            }
        }
        var paths = path.split(/[\.\/]/);
        var val = content;
        for (var i = 0; i < paths.length; i++) {
            if (val[paths[i]]) {
                val = val[paths[i]];
            }
            else {
                return null;
            }
        }
        return val;
    };
    FguiHelper.setStringsSource = function (lang) {
        //let txtmap = fairygui.UIPackage["_stringsSource"] = {};
        var txtmap = fairygui.TranslationHelper["strings"] = {};
        var list = lang.getConfigList();
        for (var i = 0; i < list.length; i++) {
            var config = list[i];
            var name_1 = config.dict.getValue("name");
            var value = config.dict.getValue("value");
            var index = name_1.indexOf("-");
            if (value === undefined || value === null)
                continue;
            if (index == -1)
                continue;
            var uiUrl = name_1.substr(0, index);
            var uiNodeName = name_1.substr(index + 1);
            var col = txtmap[uiUrl];
            if (!col) {
                col = {};
                txtmap[uiUrl] = col;
            }
            col[uiNodeName] = value;
        }
    };
    FguiHelper.setGray = function (component) {
        if (!component)
            return;
        if (!FguiHelper.grayscaleFilters) {
            var grayscaleFilter = new Laya.ColorFilter(FguiHelper.grayscaleMat);
            FguiHelper.grayscaleFilters = [grayscaleFilter];
        }
        component.displayObject.filters = FguiHelper.grayscaleFilters;
    };
    FguiHelper.clearFilters = function (component) {
        if (!component)
            return;
        component.displayObject.filters = null;
    };
    Object.defineProperty(FguiHelper, "saturationFilters", {
        get: function () {
            if (!FguiHelper._saturationFilters) {
                FguiHelper._saturationFilters = [new Laya.ColorFilter(FguiHelper.saturation)];
            }
            return FguiHelper._saturationFilters;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FguiHelper, "saturationFilters2", {
        get: function () {
            if (!FguiHelper._saturationFilters2) {
                FguiHelper._saturationFilters2 = [new Laya.ColorFilter(FguiHelper.saturation2)];
            }
            return FguiHelper._saturationFilters2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FguiHelper, "saturationFilters3", {
        get: function () {
            if (!FguiHelper._saturationFilters3) {
                FguiHelper._saturationFilters3 = [new Laya.ColorFilter().adjustColor(0, -50, -100, 0)];
            }
            return FguiHelper._saturationFilters3;
        },
        enumerable: true,
        configurable: true
    });
    FguiHelper.halfStaturation = function (obj) {
        if (!obj)
            return;
        obj.displayObject.filters = FguiHelper.saturationFilters;
    };
    FguiHelper.half2Staturation = function (obj) {
        if (!obj)
            return;
        obj.displayObject.filters = FguiHelper.saturationFilters2;
    };
    FguiHelper.half3Staturation = function (obj) {
        if (!obj)
            return;
        obj.displayObject.filters = FguiHelper.saturationFilters3;
    };
    //组件弹出效果
    FguiHelper.boundEffect = function (target, duration) {
        if (duration === void 0) { duration = 1000; }
        target.setPivot(0.5, 0.5);
        target.setScale(0.5, 0.5);
        Laya.Tween.to(target, { scaleX: 1, scaleY: 1 }, duration, Laya.Ease.backOut, Laya.Handler.create(null, function () {
        }), 0, true, true);
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    FguiHelper.helpPoint = new Laya.Point();
    //设置灰色
    FguiHelper.grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0, 0.3086, 0.6094, 0.0820, 0, 0, 0.3086, 0.6094, 0.0820, 0, 0, 0, 0, 0, 1, 0];
    FguiHelper.grayscaleFilters = null;
    FguiHelper.normalFilters = null;
    // 饱和度一半
    FguiHelper.saturation = [
        0.5, 0, 0, 0, 0,
        0, 0.5, 0, 0, 0,
        0, 0, 0.5, 0, 0,
        0, 0, 0, 1, 0,
    ];
    // 饱和度一半
    FguiHelper.saturation2 = [
        0.25, 0, 0, 0, 0,
        0, 0.25, 0, 0, 0,
        0, 0, 0.25, 0, 0,
        0, 0, 0, 1, 0,
    ];
    return FguiHelper;
}());
exports.default = FguiHelper;
},{"../../Game":546}],628:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NumberTransfrom = /** @class */ (function () {
    function NumberTransfrom() {
        this.unms = ["零", "一", "二", "三", "四", "五", "六", "七", "八", "九"];
        this.digits = ["", "十", "百", "千"];
        this.units = ["", "万", "亿", "万亿", "亿亿"];
    }
    //检查字符串s是否全为数字
    NumberTransfrom.prototype.checkIsNumbers = function (x) {
        if (null == x) {
            return false;
        }
        for (var i = 0; i < x.length; i++) {
            var c = parseInt(x[i]);
            if (isNaN(c)) {
                return false;
            }
        }
        return true;
    };
    NumberTransfrom.prototype.transfrom2 = function (num) {
        if (null == num) {
            return "您输入的字符串地址为null！";
        }
        var str = num;
    };
    // 转换
    NumberTransfrom.prototype.transfrom = function (num) {
        if (null == num) {
            return "您输入的字符串地址为null！";
        }
        var x = num.toString();
        if (0 == x.length) {
            return "您输入的字符串长度为0，请输入要转换的数字！";
        }
        if (x.length > 16) {
            return "您输入的字符串长度大于16，无法转换！";
        }
        //去除字符串首部的0，例如：0010->10
        var fm;
        for (fm = 0; fm < x.length; fm++) {
            if (x.charAt(fm) != '0') {
                break;
            }
        }
        x = x.substring(fm); //去除完毕
        //把字符串看作一些组，例如：123456789->1,2345,6789
        var result = "";
        var p = 0;
        var m = x.length % 4;
        var k = (m > 0 ? Math.floor(x.length / 4) + 1 : Math.floor(x.length / 4));
        //从最左边的那组开始，向右循环
        for (var i = k; i > 0; i--) {
            var len = 4;
            if (i == k && m != 0) //当i为最左边的那组时，组长度可能有变化
             {
                len = m;
            }
            var s = x.substring(p, p + len);
            var le = s.length;
            for (var j = 0; j < le; j++) {
                var n = parseInt(s.substring(j, j + 1));
                if (0 == n) {
                    if (j < le - 1 && parseInt(s.substring(j + 1, j + 2)) > 0 && !result.endsWith(this.unms[0])) { //加零的条件：不为最后一位 && 下一位数字大于0 && 以前没有加过“零”
                        result += this.unms[0];
                    }
                }
                else {
                    if (!(n == 1 && (result.endsWith(this.unms[0]) || result.length == 0) && j == le - 2)) { //处理1013一千零"十三"，1113 一千一百"一十三"
                        result += this.unms[n];
                    }
                    result += this.digits[le - j - 1];
                }
            }
            if (0 != parseInt(s)) //如果这组数字不全是 0 ，则加上单位：万，亿，万亿
             {
                result += this.units[i - 1];
            }
            p += len;
        }
        return result;
    };
    return NumberTransfrom;
}());
exports.default = NumberTransfrom;
},{}],629:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UnOrderMultiMap_1 = require("./UnOrderMultiMap");
var Game_1 = require("../../Game");
var Particle2DCache = /** @class */ (function () {
    function Particle2DCache() {
    }
    Particle2DCache.get = function (res, texturename) {
        if (texturename === void 0) { texturename = null; }
        return __awaiter(this, void 0, void 0, function () {
            var key, pool, p;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        key = res;
                        if (!isNullOrEmpty(texturename)) {
                            key += " ; " + texturename;
                        }
                        pool = this.particlesCaches.get(key);
                        if (pool && pool.length > 0) {
                            return [2 /*return*/, pool.shift()];
                        }
                        return [4 /*yield*/, Game_1.default.asset.createParticle(res, texturename)];
                    case 1:
                        p = _a.sent();
                        p['$__res'] = key;
                        p.emitter.start();
                        p.stop();
                        return [2 /*return*/, p];
                }
            });
        });
    };
    Particle2DCache.recover = function (p) {
        var key = p['$__res'];
        if (!key)
            key = '__other';
        p.stop();
        this.particlesCaches.addItem(key, p);
    };
    Particle2DCache.particlesCaches = new UnOrderMultiMap_1.default();
    return Particle2DCache;
}());
exports.default = Particle2DCache;
},{"../../Game":546,"./UnOrderMultiMap":634}],630:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Particle2DCache_1 = require("./Particle2DCache");
/** 粒子组 */
var ParticleGroup = /** @class */ (function () {
    function ParticleGroup() {
        // 粒子列表
        this.particles = [];
        this._x = 0;
        this._y = 0;
        this._scaleX = 1;
        this._scaleY = 1;
        this._posRangeScaleX = 1;
        this._posRangeScaleY = 1;
        this._posRangeScaleZ = 1;
        this._isPlaying = false;
        this.duration = -1;
    }
    ParticleGroup.prototype.generateHelperPoint = function () {
        this.helper = new Laya.Sprite();
        this.helper.graphics.drawCircle(0, 0, 5, '#FF0000', '#00FF00', 5);
        this.container.addChild(this.helper);
    };
    Object.defineProperty(ParticleGroup.prototype, "x", {
        get: function () {
            return this._x;
        },
        set: function (val) {
            this._x = val;
            for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
                var item = _a[_i];
                item.x = val;
            }
            if (this.helper)
                this.helper.x = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParticleGroup.prototype, "y", {
        get: function () {
            return this._y;
        },
        set: function (val) {
            this._y = val;
            for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
                var item = _a[_i];
                item.y = val;
            }
            if (this.helper)
                this.helper.y = val;
        },
        enumerable: true,
        configurable: true
    });
    ParticleGroup.prototype.setScale = function (x, y) {
        this._scaleX = x;
        this._scaleY = y;
        for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
            var item = _a[_i];
            item.scale(x, y);
        }
    };
    /** 设置发射范围 */
    ParticleGroup.prototype.setPosRangeScale = function (x, y, z) {
        if (x === void 0) { x = 1; }
        if (y === void 0) { y = 1; }
        if (z === void 0) { z = 1; }
        this._posRangeScaleX = x;
        this._posRangeScaleY = y;
        this._posRangeScaleZ = z;
        for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
            var item = _a[_i];
            item.setPosRangeScale(x, y, z);
        }
    };
    ParticleGroup.prototype.addToContainerBottom = function () {
        for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
            var item = _a[_i];
            this.container.addChildAt(item, 0);
        }
    };
    ParticleGroup.prototype.addToContainerTop = function () {
        for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
            var item = _a[_i];
            this.container.addChild(item);
        }
    };
    ParticleGroup.prototype.setContainer = function (container) {
        this.container = container;
    };
    /** 初始化 */
    ParticleGroup.prototype.init = function (container, resList, textureList) {
        if (textureList === void 0) { textureList = null; }
        return __awaiter(this, void 0, void 0, function () {
            var i, _i, resList_1, res, textureName, p;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.container = container;
                        if (this.particles.length > 0)
                            return [2 /*return*/];
                        i = 0;
                        _i = 0, resList_1 = resList;
                        _a.label = 1;
                    case 1:
                        if (!(_i < resList_1.length)) return [3 /*break*/, 4];
                        res = resList_1[_i];
                        textureName = null;
                        if (textureList && i < textureList.length) {
                            textureName = textureList[i];
                        }
                        return [4 /*yield*/, Particle2DCache_1.default.get(res, textureName)];
                    case 2:
                        p = _a.sent();
                        this.particles.push(p);
                        i++;
                        _a.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        this.x = this._x;
                        this.y = this._y;
                        this.setScale(this._scaleX, this._scaleY);
                        this.setPosRangeScale(this._posRangeScaleX, this._posRangeScaleY, this._posRangeScaleZ);
                        if (this._isPlaying) {
                            this.play(this.duration);
                        }
                        else {
                            this.stop();
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 播放 */
    ParticleGroup.prototype.play = function (duration) {
        if (duration === void 0) { duration = -1; }
        this._isPlaying = true;
        this.duration = duration;
        // if(this.container)
        // {
        //     for(let item of this.particles)
        //     {
        //         this.container.addChild(item);
        //     }
        // }
        for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
            var item = _a[_i];
            item.reset();
            item.play();
        }
        Laya.timer.clearAll(this);
        if (duration > 0) {
            Laya.timer.once(duration, this, this.stop);
        }
    };
    /** 停止 */
    ParticleGroup.prototype.stop = function () {
        this._isPlaying = false;
        for (var _i = 0, _a = this.particles; _i < _a.length; _i++) {
            var item = _a[_i];
            item.stop();
            item.removeSelf();
        }
    };
    return ParticleGroup;
}());
exports.default = ParticleGroup;
},{"./Particle2DCache":629}],631:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Random = /** @class */ (function () {
    function Random() {
    }
    // int
    // min <= r < max
    Random.range = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        return min + Math.floor(range * rand);
    };
    // int
    // min <= r <= max
    Random.rangeBoth = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        return min + Math.round(range * rand);
    };
    // int
    // min < r < max
    Random.rangeBetween = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        if (Math.round(rand * range) == 0) {
            return min + 1;
        }
        else if (Math.round(rand * max) == max) {
            return max - 1;
        }
        else {
            return min + Math.round(rand * range) - 1;
        }
    };
    /// <summary>
    /// 乱序排列一个数组
    /// </summary>
    Random.GetDisorderList = function (list) {
        var countNum = list.length;
        var listA = new Array();
        var listB = new Array();
        for (var i = 0; i < countNum; i++) {
            listA.push(list[i]);
        }
        while (listB.length < countNum) {
            var index = Random.range(0, listA.length);
            if (listB.indexOf(listA[index]) === -1) {
                listB.push(listA[index]);
                listA.splice(index, 1);
            }
        }
        return listB;
    };
    return Random;
}());
exports.default = Random;
},{}],632:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NumberTransfrom_1 = require("./NumberTransfrom");
var Mathf_1 = require("../Mathf");
var StringUtils = /** @class */ (function () {
    function StringUtils() {
    }
    /** 小数点多少位 */
    StringUtils.FloatLength = function (num, floatM) {
        if (floatM === void 0) { floatM = 100; }
        return Mathf_1.default.FloatLength(num, floatM).toString();
    };
    /** 填充长度 */
    StringUtils.FillLeft = function (str, length, c) {
        if (c === void 0) { c = '0'; }
        while (str.length < length) {
            str = c + str;
        }
        return str;
    };
    StringUtils.FillRight = function (str, length, c) {
        if (c === void 0) { c = '0'; }
        while (str.length < length) {
            str = str + c;
        }
        return str;
    };
    Object.defineProperty(StringUtils, "numberTransfrom", {
        get: function () {
            if (!this._numberTransfrom) {
                this._numberTransfrom = new NumberTransfrom_1.default();
            }
            return this._numberTransfrom;
        },
        enumerable: true,
        configurable: true
    });
    /** 获取中文数字 */
    StringUtils.GetChineseNum = function (num) {
        return this.numberTransfrom.transfrom(num);
    };
    /** 字符串 */
    StringUtils.empty = "";
    return StringUtils;
}());
exports.default = StringUtils;
window["StringUtils"] = StringUtils;
},{"../Mathf":635,"./NumberTransfrom":628}],633:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SyncHellper = /** @class */ (function () {
    function SyncHellper() {
    }
    SyncHellper.waitTime = function (millisecond) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        Laya.timer.once(millisecond, _this, function () {
                            return resolve();
                        }, null, false);
                    })];
            });
        });
    };
    SyncHellper.waitFrame = function (frameNum) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        Laya.timer.frameOnce(frameNum, _this, function () {
                            return resolve();
                        });
                    })];
            });
        });
    };
    return SyncHellper;
}());
exports.default = SyncHellper;
},{}],634:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("./Dictionary");
var UnOrderMultiMap = /** @class */ (function () {
    function UnOrderMultiMap() {
        this.dictionary = new Dictionary_1.default();
        // 重用list
        this.queue = [];
    }
    UnOrderMultiMap.prototype.__getDict = function () {
        return this.dictionary;
    };
    UnOrderMultiMap.prototype.FetchList = function () {
        if (this.queue.length > 0) {
            var list = this.queue.shift();
            list.length = 0;
            return list;
        }
        return [];
    };
    UnOrderMultiMap.prototype.RecycleList = function (list) {
        list.length = 0;
        // 防止暴涨
        if (this.queue.length > 100) {
            return;
        }
        this.queue.push(list);
    };
    UnOrderMultiMap.prototype.addItem = function (t, k) {
        var list = this.dictionary.getValue(t);
        if (!list) {
            list = this.FetchList();
            this.dictionary.add(t, list);
        }
        list.push(k);
    };
    UnOrderMultiMap.prototype.removeItem = function (t, k) {
        var list = this.dictionary.getValue(t);
        if (!list) {
            return false;
        }
        if (!arrayRemoveItem(list, k)) {
            return false;
        }
        if (list.length == 0) {
            this.RecycleList(list);
            this.dictionary.remove(t);
        }
        return true;
    };
    UnOrderMultiMap.prototype.removeList = function (t) {
        var list = this.dictionary.getValue(t);
        if (!list) {
            this.RecycleList(list);
        }
        return this.dictionary.remove(t);
    };
    Object.defineProperty(UnOrderMultiMap.prototype, "count", {
        get: function () {
            return this.dictionary.count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnOrderMultiMap.prototype, "allCount", {
        get: function () {
            var objs = this.dictionary.__getDict();
            var list;
            var count = 0;
            for (var key in objs) {
                list = objs[key];
                count += list.length;
            }
            return count;
        },
        enumerable: true,
        configurable: true
    });
    /// <summary>
    /// 不返回内部的list,copy一份出来
    /// </summary>
    /// <param name="t"></param>
    /// <returns></returns>
    UnOrderMultiMap.prototype.getAll = function (t) {
        var list = this.dictionary.getValue(t);
        if (!list) {
            return [];
        }
        return list.slice(0);
    };
    /// <summary>
    /// 返回内部的list
    /// </summary>
    /// <param name="t"></param>
    /// <returns></returns>
    UnOrderMultiMap.prototype.get = function (t) {
        return this.dictionary.getValue(t);
    };
    UnOrderMultiMap.prototype.Contains = function (t, k) {
        var list = this.get(t);
        if (!list) {
            return false;
        }
        return list.indexOf(k) != -1;
        // return list.includes(k);
    };
    UnOrderMultiMap.prototype.ContainsKey = function (t) {
        return this.dictionary.hasKey(t);
    };
    UnOrderMultiMap.prototype.clear = function () {
        var values = this.dictionary.getKeys();
        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
            var val = values_1[_i];
            this.RecycleList(val);
        }
        this.dictionary.clear();
    };
    return UnOrderMultiMap;
}());
exports.default = UnOrderMultiMap;
},{"./Dictionary":626}],635:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Vector3 = Laya.Vector3;
var Mathf = /** @class */ (function () {
    function Mathf() {
    }
    /** 小数点多少位 */
    Mathf.FloatLength = function (num, floatM) {
        if (floatM === void 0) { floatM = 100; }
        if (floatM == 0) {
            return Math.floor(num);
        }
        return Math.floor(num * floatM) / floatM;
    };
    Mathf.clamp = function (num, min, max) {
        return Math.max(Math.min(num, Math.max(min, max)), Math.min(min, max));
    };
    Mathf.Clamp01 = function (value) {
        if (value < 0.0)
            return 0.0;
        if (value > 1.0)
            return 1;
        return value;
    };
    /// <summary>
    ///   <para>Linearly interpolates between a and b by t.</para>
    /// </summary>
    /// <param name="a"></param>
    /// <param name="b"></param>
    /// <param name="t"></param>
    Mathf.Lerp = function (a, b, t) {
        return a + (b - a) * Mathf.Clamp01(t);
    };
    /** 弧度, 计算2个点 */
    Mathf.radian = function (fromX, fromY, toX, toY) {
        var dx = toX - fromX;
        var dy = toY - fromY;
        return Math.atan2(dy, dx);
    };
    /** 角度, 计算2个点 */
    Mathf.angle = function (fromX, fromY, toX, toY) {
        return this.radian(fromX, fromY, toX, toY) * 180 / Math.PI;
    };
    /** 角度 转 弧度 */
    Mathf.angleToRadian = function (angle) {
        return angle * Math.PI / 180;
    };
    /** 弧度 转 角度 */
    Mathf.radianToAngle = function (radian) {
        return radian * 180 / Math.PI;
    };
    /** 距离, 计算2个点 */
    Mathf.distanceangle = function (fromX, fromY, toX, toY) {
        var dx = toX - fromX;
        var dy = toY - fromY;
        return Math.sqrt(dx * dx + dy * dy);
    };
    /** 方向延迟点 */
    Mathf.directionPoint = function (fromX, fromY, toX, toY, length) {
        var angle = this.radian(fromX, fromY, toX, toY);
        var point = new Laya.Point();
        point.x = Math.cos(angle) * length;
        point.y = Math.sin(angle) * length;
        point.x += fromX;
        point.y += fromY;
        return point;
    };
    Mathf.directionPointX = function (fromX, fromY, toX, toY, length) {
        return Math.cos(this.radian(fromX, fromY, toX, toY)) * length + fromX;
    };
    Mathf.directionPointY = function (fromX, fromY, toX, toY, length) {
        return Math.sin(this.radian(fromX, fromY, toX, toY)) * length + fromY;
    };
    /** 弧度方向 点 */
    Mathf.radianPointX = function (radian, length, fromX) {
        return Math.cos(radian) * length + fromX;
    };
    Mathf.radianPointY = function (radian, length, fromY) {
        return Math.sin(radian) * length + fromY;
    };
    /** 弧度方向 点 */
    Mathf.anglePointX = function (angle, length, fromX) {
        return Math.cos(this.angleToRadian(angle)) * length + fromX;
    };
    Mathf.anglePointY = function (angle, length, fromY) {
        return Math.sin(this.angleToRadian(angle)) * length + fromY;
    };
    /** 角度方向 点 */
    Mathf.PointAngle = function (o, angle, length) {
        return this.PointRadian(o, this.angleToRadian(angle), length);
    };
    Mathf.PointRadian = function (o, radian, length) {
        var p = new Laya.Point();
        p.x = o.x + Math.sin(radian) * length;
        p.y = o.y + Math.cos(radian) * length;
        return p;
    };
    /** 点到直线的距离 */
    Mathf.distancePointToLine = function (point, lineFrom, lineTo) {
        var ab = new Vector3();
        Vector3.subtract(lineTo, lineFrom, ab);
        var ac = point;
        var cross = new Vector3();
        Vector3.cross(ab, ac, cross);
        Vector3.distanceSquared(Vector3.ZERO, cross);
        var wd = Vector3.distanceSquared(Vector3.ZERO, cross) /
            Vector3.distanceSquared(Vector3.ZERO, ab);
        return wd;
    };
    /** 直线与圆相交。圆半径和直线的相交点 */
    Mathf.IntersectionPoint = function (point, hit, radius, lineFrom, lineTo) {
        var c = radius;
        var a = this.distancePointToLine(point, lineFrom, lineTo);
        var b = Math.sqrt(c * c - a * a);
        var sub = new Vector3();
        Vector3.subtract(lineTo, lineFrom, sub);
        var normalized = new Vector3();
        Vector3.normalize(sub, normalized);
        var mul = new Vector3();
        Vector3.scale(normalized, b, mul);
        var add = new Vector3();
        Vector3.add(hit, mul, add);
        return add;
    };
    /** 点到直线的垂直线和直线的相交点 */
    Mathf.IntersectionPoint2 = function (point, lineFrom, lineTo) {
        var line = new Vector3();
        Vector3.subtract(lineTo, lineFrom, line);
        var normalized = new Vector3();
        Vector3.normalize(line, normalized);
        var sub = new Vector3();
        Vector3.subtract(point, lineFrom, sub);
        var dot = Vector3.dot(sub, line);
        var mul = new Vector3();
        Vector3.scale(normalized, dot, mul);
        var add = new Vector3();
        Vector3.add(lineFrom, mul, add);
        return add;
    };
    return Mathf;
}());
exports.default = Mathf;
},{}],636:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SkeletonCache_1 = require("./SkeletonCache");
var TempletCache_1 = require("./TempletCache");
var GameSkeleton = /** @class */ (function () {
    function GameSkeleton() {
    }
    /** 骨骼动画对象缓存池 */
    GameSkeleton.skeletonCache = new SkeletonCache_1.default();
    /** 骨骼动画模板缓存池 */
    GameSkeleton.templetCache = new TempletCache_1.default();
    /** UI骨骼动画对象缓存池 */
    GameSkeleton.uiSkeletonCache = new SkeletonCache_1.default();
    return GameSkeleton;
}());
exports.default = GameSkeleton;
window['GameSkeleton'] = GameSkeleton;
},{"./SkeletonCache":637,"./TempletCache":639}],637:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var SkeletonPool_1 = require("./SkeletonPool");
var SkeletonCache = /** @class */ (function () {
    function SkeletonCache() {
        this.poolDict = new Dictionary_1.default();
    }
    Object.defineProperty(SkeletonCache.prototype, "maxNum", {
        /** 最多缓存数量 */
        get: function () {
            // 默认20
            return 20;
        },
        enumerable: true,
        configurable: true
    });
    /** 获取对象池 */
    SkeletonCache.prototype.getPool = function (texturePath) {
        return this.poolDict.getValue(texturePath);
    };
    /** 请求骨骼动画 */
    SkeletonCache.prototype.requrestItemAsync = function (texturePath, skPath) {
        return __awaiter(this, void 0, void 0, function () {
            var pool;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        pool = this.getPool(texturePath);
                        if (!pool) {
                            pool = new SkeletonPool_1.default();
                            pool.texturePath = texturePath;
                            pool.skPath = skPath;
                            this.poolDict.add(texturePath, pool);
                        }
                        return [4 /*yield*/, pool.requrestItemAsync()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /** 返回骨骼动画 */
    SkeletonCache.prototype.recoverItem = function (texturePath, skeleton) {
        skeleton.stop();
        skeleton.removeSelf();
        var pool = this.getPool(texturePath);
        if (pool) {
            pool.recover(skeleton);
            this.tickClear();
        }
        else {
            skeleton.destroy();
        }
    };
    /**
     * 清理缓存
     */
    SkeletonCache.prototype.tickClear = function (isPringLog) {
        if (isPringLog === void 0) { isPringLog = true; }
        var poolCount = 0;
        var skeletonTotal = 0;
        var skeletonNoUse = 0;
        var skeletonUse = 0;
        var dict = this.poolDict.__getDict();
        for (var key in dict) {
            var pool = dict[key];
            skeletonTotal += pool.totalNum;
            skeletonNoUse += pool.poolNum;
            skeletonUse += pool.useNum;
            poolCount++;
        }
        var clearNum = 0;
        if (skeletonTotal > this.maxNum) {
            for (var key in dict) {
                var pool = dict[key];
                pool.clearNoUse();
                clearNum += 1;
                // if (clearNum >= 2)
                // 	break;
            }
        }
        // 打印日志	
        if (isPringLog) {
            console.log("===============");
            console.log("poolCount:" + poolCount + ", skeletonTotal:" + skeletonTotal + ", skeletonNoUse:" + skeletonNoUse + ", skeletonUse:" + skeletonUse);
            for (var key in dict) {
                var pool = dict[key];
                console.log(pool.toString());
            }
        }
    };
    return SkeletonCache;
}());
exports.default = SkeletonCache;
},{"../../Libs/Helpers/Dictionary":626,"./SkeletonPool":638}],638:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameSkeleton_1 = require("./GameSkeleton");
/**
 * 骨骼动画 对象池
 */
var SkeletonPool = /** @class */ (function () {
    function SkeletonPool() {
        /** 所有对象 */
        this.allList = [];
        /** 没有使用的对象列表 */
        this.list = [];
        /**
         * 被清理数量
         */
        this.clearNum = 0;
    }
    Object.defineProperty(SkeletonPool.prototype, "totalNum", {
        /**
         * 总数
         */
        get: function () {
            return this.allList.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkeletonPool.prototype, "poolNum", {
        /**
         * 没有使用的数量
         */
        get: function () {
            return this.list.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkeletonPool.prototype, "useNum", {
        /**
         * 正在被使用的数量
         */
        get: function () {
            return this.totalNum - this.poolNum;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 创建对象
     */
    SkeletonPool.prototype.createItem = function () {
        var item;
        if (this.templet) {
            item = this.templet.buildArmature(0);
            this.allList.push(item);
        }
        return item;
    };
    /** 获取对象 */
    SkeletonPool.prototype.getItem = function () {
        var item;
        if (this.list.length > 0) {
            item = this.list.pop();
        }
        return item;
    };
    /**
     * 获取或者创建对象
     */
    SkeletonPool.prototype.getItemOrCreate = function () {
        var item = this.getItem();
        if (!item) {
            if (this.templet) {
                item = this.createItem();
            }
        }
        return item;
    };
    /**
     * 异步获取骨骼动画对象
     */
    SkeletonPool.prototype.requrestItemAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, item;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!!this.templet) return [3 /*break*/, 2];
                        _a = this;
                        return [4 /*yield*/, GameSkeleton_1.default.templetCache.requrestItemAsync(this.texturePath, this.skPath)];
                    case 1:
                        _a.templet = _b.sent();
                        if (!this.templet) {
                            return [2 /*return*/, null];
                        }
                        _b.label = 2;
                    case 2:
                        item = this.getItemOrCreate();
                        if (item) {
                            return [2 /*return*/, item];
                        }
                        return [2 /*return*/, null];
                }
            });
        });
    };
    /** 返回对象 */
    SkeletonPool.prototype.recover = function (skeleton) {
        if (this.list.indexOf(skeleton) == -1) {
            this.list.push(skeleton);
        }
        else {
            console.error("该对象已经返还对象池了:" + this.texturePath);
        }
    };
    SkeletonPool.prototype.toString = function () {
        return "SkeletonPool  totalNum:" + this.totalNum + ", poolNum:" + this.poolNum + ", useNum:" + this.useNum + ": " + this.texturePath;
    };
    SkeletonPool.prototype.clearNoUse = function () {
        var clearNum = 0;
        while (this.list.length > 0) {
            var skeleton = this.list.pop();
            var i = this.allList.indexOf(skeleton);
            this.allList.splice(i, 1);
            skeleton.destroy();
            this.clearNum++;
            clearNum++;
        }
        if (this.totalNum <= 0) {
            GameSkeleton_1.default.templetCache.recoverItem(this.texturePath, this.skPath);
            this.templet = null;
        }
        return clearNum;
    };
    return SkeletonPool;
}());
exports.default = SkeletonPool;
},{"./GameSkeleton":636}],639:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Templet = Laya.Templet;
var Event = laya.events.Event;
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var Game_1 = require("../../Game");
var AssetItemType_1 = require("../../GameFrame/AssetManagers/AssetItemType");
/**
 * 骨骼动画模版 缓存池
 */
var TempletCache = /** @class */ (function () {
    function TempletCache() {
        // 已经解析好的
        this.dict = new Dictionary_1.default();
        // 引用次数
        this.referenceCountDict = new Dictionary_1.default();
        // 最后一次返回时间
        this.lastTimeDict = new Dictionary_1.default();
    }
    // 获取缓存		
    TempletCache.prototype.getCacheItem = function (texturePath) {
        return this.dict.getValue(texturePath);
    };
    // 销毁模板
    TempletCache.prototype.destoryItem = function (texturePath, skPath) {
        var tpl = this.getCacheItem(texturePath);
        if (tpl) {
            // console.log("destory Skeleton Templet:" + texturePath);
            tpl.destroy();
            this.dict.remove(texturePath);
        }
        Laya.loader.clearRes(texturePath);
        Laya.loader.clearRes(skPath);
    };
    // 返回模板
    TempletCache.prototype.recoverItem = function (texturePath, skPath) {
        var num = this.referenceCountDict.getValueOrDefault(texturePath, 0);
        if (num > 0) {
            num = num - 1;
            this.referenceCountDict.set(texturePath, num);
        }
        this.lastTimeDict.add(texturePath, Game_1.default.time.localTime);
        // if (num <= 0)
        // {
        //     this.destoryItem(texturePath, skPath);
        // }
    };
    // 请求模板		
    TempletCache.prototype.requrestItemAsync = function (texturePath, skPath) {
        return __awaiter(this, void 0, void 0, function () {
            var num, tpl;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log("TempletCache.requrestItemAsync: texturePath=" + texturePath + ", skPath=" + skPath);
                        if (isNullOrEmpty(texturePath) || isNullOrEmpty(skPath)) {
                            console.warn("TempletCache.requrestItemAsync: texturePath=" + texturePath + ", skPath=" + skPath);
                            return [2 /*return*/, null];
                        }
                        num = this.referenceCountDict.getValueOrDefault(texturePath, 0);
                        this.referenceCountDict.add(texturePath, num + 1);
                        tpl = this.getCacheItem(texturePath);
                        if (!!tpl) return [3 /*break*/, 2];
                        return [4 /*yield*/, TempletCache.CreateTempletAsync(texturePath, skPath)];
                    case 1:
                        tpl = _a.sent();
                        if (tpl) {
                            // console.log("skPath=" + skPath);
                            // console.log("texturePath=" + texturePath);
                            // let count = tpl.getAnimationCount();
                            // console.log("动画数量" + count);
                            // for(let i = 0; i < count; i ++)
                            // {
                            //     let name = tpl.getAniNameByIndex(i);
                            //     console.log(i, name);
                            // }
                            this.dict.add(texturePath, tpl);
                        }
                        else {
                            console.warn("没有找到资源 texturePath=" + texturePath);
                        }
                        _a.label = 2;
                    case 2: return [2 /*return*/, tpl];
                }
            });
        });
    };
    /**
     * 异步创建骨骼动画模板
     * @param texturePath 皮肤路径
     * @param skPath 骨骼数据路径
     */
    TempletCache.CreateTempletAsync = function (texturePath, skPath) {
        return __awaiter(this, void 0, void 0, function () {
            var sk, texture;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Game_1.default.asset.loadAsync(skPath, AssetItemType_1.AssetItemType.Buffer)];
                    case 1:
                        sk = _a.sent();
                        return [4 /*yield*/, Game_1.default.asset.loadAsync(texturePath, AssetItemType_1.AssetItemType.Image)];
                    case 2:
                        texture = _a.sent();
                        return [2 /*return*/, new Promise(function (resolve) {
                                if (!sk || !texture) {
                                    if (texturePath)
                                        console.warn("\u4E0D\u5B58\u5728\u6587\u4EF6 " + texturePath);
                                    if (skPath)
                                        console.warn("\u4E0D\u5B58\u5728\u6587\u4EF6 " + skPath);
                                    resolve(null);
                                    return;
                                }
                                var tpl = new Templet();
                                tpl.once(Event.COMPLETE, _this, function () {
                                    resolve(tpl);
                                });
                                tpl.once(Event.ERROR, _this, function () {
                                    tpl.destroy();
                                    resolve(null);
                                });
                                try {
                                    tpl.parseData(texture, sk);
                                }
                                catch (error) {
                                    console.error(error);
                                    resolve(null);
                                }
                            })];
                }
            });
        });
    };
    return TempletCache;
}());
exports.default = TempletCache;
},{"../../Game":546,"../../GameFrame/AssetManagers/AssetItemType":550,"../../Libs/Helpers/Dictionary":626}],640:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal = /** @class */ (function () {
    function Signal() {
        this._listeners = [];
    }
    Signal.prototype.add = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new SignalHandler(listener, self));
        }
    };
    Signal.prototype.addOnce = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new SignalHandler(listener, self, true));
        }
    };
    Signal.prototype.hasListener = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                return true;
            }
        }
        return false;
    };
    Signal.prototype.remove = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                this._listeners.splice(i, 1);
                break;
            }
        }
    };
    Signal.prototype.removeAll = function () {
        this._listeners.length = 0;
    };
    Signal.prototype.dispatch = function () {
        this._listeners.forEach(function (handler) { return handler.apply(); });
        this._listeners = this._listeners.filter(function (handler, i, arr) { return !handler.once(); });
    };
    return Signal;
}());
exports.default = Signal;
var SignalHandler = /** @class */ (function () {
    function SignalHandler(handler, self, once) {
        if (once === void 0) { once = false; }
        this._handler = handler;
        this._self = self;
        this._once = once;
    }
    SignalHandler.prototype.apply = function () {
        this._handler.apply(this._self);
    };
    SignalHandler.prototype.equals = function (handler, self) {
        return this._handler == handler && this._self == self;
    };
    SignalHandler.prototype.once = function () {
        return this._once;
    };
    return SignalHandler;
}());
},{}],641:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Typed2Signal = /** @class */ (function () {
    function Typed2Signal() {
        this._listeners = [];
    }
    Typed2Signal.prototype.add = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self));
        }
    };
    Typed2Signal.prototype.addOnce = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self, true));
        }
    };
    Typed2Signal.prototype.hasListener = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                return true;
            }
        }
        return false;
    };
    Typed2Signal.prototype.remove = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                this._listeners.splice(i, 1);
                break;
            }
        }
    };
    Typed2Signal.prototype.removeAll = function () {
        this._listeners.length = 0;
    };
    Typed2Signal.prototype.dispatch = function (value1, value2) {
        this._listeners.forEach(function (handler) { return handler.apply(value1, value2); });
        this._listeners = this._listeners.filter(function (handler, i, arr) { return !handler.once(); });
    };
    return Typed2Signal;
}());
exports.default = Typed2Signal;
var TypedSignalHandler = /** @class */ (function () {
    function TypedSignalHandler(handler, self, once) {
        if (once === void 0) { once = false; }
        this._handler = handler;
        this._self = self;
        this._once = once;
    }
    TypedSignalHandler.prototype.apply = function (arg1, arg2) {
        this._handler.apply(this._self, [arg1, arg2]);
    };
    TypedSignalHandler.prototype.equals = function (handler, self) {
        return this._handler == handler && this._self == self;
    };
    TypedSignalHandler.prototype.once = function () {
        return this._once;
    };
    return TypedSignalHandler;
}());
},{}],642:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Typed3Signal = /** @class */ (function () {
    function Typed3Signal() {
        this._listeners = [];
    }
    Typed3Signal.prototype.add = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self));
        }
    };
    Typed3Signal.prototype.addOnce = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self, true));
        }
    };
    Typed3Signal.prototype.hasListener = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                return true;
            }
        }
        return false;
    };
    Typed3Signal.prototype.remove = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                this._listeners.splice(i, 1);
                break;
            }
        }
    };
    Typed3Signal.prototype.removeAll = function () {
        this._listeners.length = 0;
    };
    Typed3Signal.prototype.dispatch = function (value1, value2, value3) {
        this._listeners.forEach(function (handler) { return handler.apply(value1, value2, value3); });
        this._listeners = this._listeners.filter(function (handler, i, arr) { return !handler.once(); });
    };
    return Typed3Signal;
}());
exports.default = Typed3Signal;
var TypedSignalHandler = /** @class */ (function () {
    function TypedSignalHandler(handler, self, once) {
        if (once === void 0) { once = false; }
        this._handler = handler;
        this._self = self;
        this._once = once;
    }
    TypedSignalHandler.prototype.apply = function (arg1, arg2, arg3) {
        this._handler.apply(this._self, [arg1, arg2, arg3]);
    };
    TypedSignalHandler.prototype.equals = function (handler, self) {
        return this._handler == handler && this._self == self;
    };
    TypedSignalHandler.prototype.once = function () {
        return this._once;
    };
    return TypedSignalHandler;
}());
},{}],643:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TypedSignal = /** @class */ (function () {
    function TypedSignal() {
        this._listeners = [];
    }
    TypedSignal.prototype.add = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self));
        }
    };
    TypedSignal.prototype.addOnce = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self, true));
        }
    };
    TypedSignal.prototype.hasListener = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                return true;
            }
        }
        return false;
    };
    TypedSignal.prototype.remove = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                this._listeners.splice(i, 1);
                break;
            }
        }
    };
    TypedSignal.prototype.removeAll = function () {
        this._listeners.length = 0;
    };
    TypedSignal.prototype.dispatch = function (value) {
        this._listeners.forEach(function (handler) { return handler.apply(value); });
        this._listeners = this._listeners.filter(function (handler, i, arr) { return !handler.once(); });
    };
    return TypedSignal;
}());
exports.default = TypedSignal;
var TypedSignalHandler = /** @class */ (function () {
    function TypedSignalHandler(handler, self, once) {
        if (once === void 0) { once = false; }
        this._handler = handler;
        this._self = self;
        this._once = once;
    }
    TypedSignalHandler.prototype.apply = function (arg) {
        this._handler.apply(this._self, [arg]);
    };
    TypedSignalHandler.prototype.equals = function (handler, self) {
        return this._handler == handler && this._self == self;
    };
    TypedSignalHandler.prototype.once = function () {
        return this._once;
    };
    return TypedSignalHandler;
}());
},{}],644:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ParticleShader_1 = require("../EngineParticle/ParticleShader");
var ShaderInstall = /** @class */ (function () {
    function ShaderInstall() {
    }
    ShaderInstall.install = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // 3D
                    // await BlinnPhongMaterial.install();
                    // await HeroMaterial.install();
                    // await WallMaterial.install();
                    // 2D
                    return [4 /*yield*/, ParticleShader_1.default.install()];
                    case 1:
                        // 3D
                        // await BlinnPhongMaterial.install();
                        // await HeroMaterial.install();
                        // await WallMaterial.install();
                        // 2D
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return ShaderInstall;
}());
exports.default = ShaderInstall;
},{"../EngineParticle/ParticleShader":171}],645:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TookHandler_1 = require("./TookHandler");
var TimeHelper_1 = require("../GameHelpers/TimeHelper");
/**
 * 定点任务
 */
var FixedTimeTookHandler = /** @class */ (function (_super) {
    __extends(FixedTimeTookHandler, _super);
    function FixedTimeTookHandler() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fixedTimeList = [];
        return _this;
    }
    /**
     * 验证是否可以被调用
     */
    FixedTimeTookHandler.prototype.validate = function (serverMilliseconds) {
        var result = false;
        for (var _i = 0, _a = this.fixedTimeList; _i < _a.length; _i++) {
            var item = _a[_i];
            if (serverMilliseconds >= item.timestamp) {
                result = true;
                item.reseTimestamp();
                break;
            }
        }
        return result;
    };
    return FixedTimeTookHandler;
}(TookHandler_1.default));
exports.default = FixedTimeTookHandler;
/** 定点时间类型 */
var FixedTimeType;
(function (FixedTimeType) {
    /** 天 */
    FixedTimeType[FixedTimeType["Day"] = 0] = "Day";
    /** 周 */
    FixedTimeType[FixedTimeType["Week"] = 1] = "Week";
    /** 月 */
    FixedTimeType[FixedTimeType["Month"] = 2] = "Month";
})(FixedTimeType = exports.FixedTimeType || (exports.FixedTimeType = {}));
/**
 * 定点时间配置
 */
var FixedTimeConfig = /** @class */ (function () {
    function FixedTimeConfig() {
        this.timeType = FixedTimeType.Day;
        /**
         * 一个月中的第几天
         * FixedTimeType.Month 才有效
         *
         * 值是 1 ~ 31 之间的一个整数
         * 0 就是当天
         * 负数就是月末倒数第几天, -1是月末最后一天
         */
        this.monthDate = 0;
        /**
         * 周几
         * FixedTimeType.Week 才有效
         *
         * 一周（0~6）的某一天的数字。
         * 注意： 星期天为 0, 星期一为 1, 以此类推。
         */
        this.weekDay = 0;
        /** 时 */
        this.hour = 0;
        /** 分 */
        this.minute = 0;
        /** 秒 */
        this.second = 0;
        /**
         * 时间戳 (精确到毫秒)
         */
        this._timestamp = -1;
    }
    /** 创建时间点 */
    FixedTimeConfig.CreateHMS = function (h, m, s) {
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var config = new FixedTimeConfig();
        config.timeType = FixedTimeType.Day;
        config.hour = h;
        config.minute = m;
        config.second = s;
        return config;
    };
    /**
     * 创建每周 时间点
     * @param weekDay  周几,  一周（0~6）的某一天的数字。注意： 星期天为 0, 星期一为 1, 以此类推。
     * @param h
     * @param m
     * @param s
     */
    FixedTimeConfig.CreateWeek = function (weekDay, h, m, s) {
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var config = new FixedTimeConfig();
        config.timeType = FixedTimeType.Week;
        config.weekDay = weekDay;
        config.hour = h;
        config.minute = m;
        config.second = s;
        return config;
    };
    /**
     * 创建每月 时间点
     * @param monthDate  一个月中的第几天,值是 1 ~ 31 之间的一个整数, 0 就是当天；负数就是月末倒数第几天, -1是月末最后一天
     * @param h
     * @param m
     * @param s
     */
    FixedTimeConfig.CreateMonthDate = function (monthDate, h, m, s) {
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var config = new FixedTimeConfig();
        config.timeType = FixedTimeType.Month;
        config.monthDate = monthDate;
        config.hour = h;
        config.minute = m;
        config.second = s;
        return config;
    };
    Object.defineProperty(FixedTimeConfig.prototype, "timestamp", {
        get: function () {
            if (this._timestamp <= 0) {
                this.reseTimestamp();
            }
            return this._timestamp;
        },
        enumerable: true,
        configurable: true
    });
    /** 重置时间戳 */
    FixedTimeConfig.prototype.reseTimestamp = function () {
        var date;
        switch (this.timeType) {
            case FixedTimeType.Day:
                date = TimeHelper_1.default.getServerNextDate(this.hour, this.minute, this.second);
                break;
            case FixedTimeType.Week:
                date = TimeHelper_1.default.getServerNextWeekDate(this.weekDay, this.hour, this.minute, this.second);
                break;
            case FixedTimeType.Month:
                date = TimeHelper_1.default.getServerNextMonthDate(this.monthDate, this.hour, this.minute, this.second);
                break;
        }
        console.log(TimeHelper_1.default.ToStr(date));
        this._timestamp = date.getTime();
    };
    return FixedTimeConfig;
}());
exports.FixedTimeConfig = FixedTimeConfig;
},{"../GameHelpers/TimeHelper":590,"./TookHandler":647}],646:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FixedTimeTookHandler_1 = require("../FixedTimeTookHandler");
/**
 * 0:0:0 执行
 */
var FixedTimeHookHandler_0h0m0s = /** @class */ (function (_super) {
    __extends(FixedTimeHookHandler_0h0m0s, _super);
    function FixedTimeHookHandler_0h0m0s() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * 初始化, 配置你的订阅
     */
    FixedTimeHookHandler_0h0m0s.prototype.init = function () {
        // // 前提模块ID, 只有这些模块是置顶时才通过
        // this.preconditionMenuIds = [MenuId.Home, MenuId.Studio];
        // // 自己所属模块，用来验证功能是否解锁
        // this.menuId = MenuId.Studio;
        this.fixedTimeList.push(FixedTimeTookHandler_1.FixedTimeConfig.CreateHMS(0, 0, 0));
        _super.prototype.init.call(this);
    };
    /** 执行 */
    FixedTimeHookHandler_0h0m0s.prototype.exe = function () {
        console.log("FixedTimeHookHandler_0h0m0s exe");
    };
    return FixedTimeHookHandler_0h0m0s;
}(FixedTimeTookHandler_1.default));
exports.default = FixedTimeHookHandler_0h0m0s;
},{"../FixedTimeTookHandler":645}],647:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AssemblyNamespace_1 = require("../Libs/AssemblyNamespace");
/**
 * 订阅处理器
 */
var TookHandler = /** @class */ (function () {
    function TookHandler() {
        /** 自己所属模块，用来验证功能是否解锁 */
        this.menuId = 0;
    }
    /**
     * 初始化, 配置你的订阅
     */
    TookHandler.prototype.init = function () {
    };
    /**
     * 验证是否可以被调用
     */
    TookHandler.prototype.validate = function (serverMilliseconds) {
        return true;
    };
    /**
     * 执行
     */
    TookHandler.prototype.exe = function () {
    };
    /** 内部方法，继承的不要重写 */
    TookHandler.prototype.__onExe = function () {
    };
    /** 命令空间 */
    TookHandler.__namespace = AssemblyNamespace_1.AssemblyNamespace.TookHandlers;
    return TookHandler;
}());
exports.default = TookHandler;
},{"../Libs/AssemblyNamespace":623}],648:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Assembly_1 = require("../Libs/Assembly");
var FixedTimeHookHandler_0h0m0s_1 = require("./Handlers/FixedTimeHookHandler_0h0m0s");
var TookIncludes = /** @class */ (function () {
    function TookIncludes() {
    }
    TookIncludes.install = function () {
        if (this.isInstalled)
            return;
        // Assembly.register(<any>TestFixedTimeHookHandler, 'TestFixedTimeHookHandler');
        // Assembly.register(<any>TestHeartTookHandler, 'TestHeartTookHandler');
        Assembly_1.default.register(FixedTimeHookHandler_0h0m0s_1.default, 'FixedTimeHookHandler_0h0m0s');
    };
    TookIncludes.isInstalled = false;
    return TookIncludes;
}());
exports.default = TookIncludes;
},{"../Libs/Assembly":622,"./Handlers/FixedTimeHookHandler_0h0m0s":646}],649:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TookHandler_1 = require("./TookHandler");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Assembly_1 = require("../Libs/Assembly");
var AssemblyNamespace_1 = require("../Libs/AssemblyNamespace");
var Game_1 = require("../Game");
var MenuValidateOpening_1 = require("../GameModule/MenuValidateOpening");
var MenuValidateUnlock_1 = require("../GameModule/MenuValidateUnlock");
var TookIncludes_1 = require("./TookIncludes");
var FixedTimeTookHandler_1 = require("./FixedTimeTookHandler");
//====================
// 订阅管理器
//--------------------
var TookManager = /** @class */ (function () {
    function TookManager() {
        this.dict = new Dictionary_1.default();
        this.list = [];
        this.count = 0;
        this.isInsalled = false;
        this.serverMilliseconds = 0;
    }
    /**
     * 初始化
     */
    TookManager.prototype.install = function () {
        if (this.isInsalled)
            return;
        this.isInsalled = true;
        TookIncludes_1.default.install();
        var clasList = Assembly_1.default.get(AssemblyNamespace_1.AssemblyNamespace.TookHandlers);
        if (clasList) {
            for (var _i = 0, clasList_1 = clasList; _i < clasList_1.length; _i++) {
                var classType = clasList_1[_i];
                this.registerSystem(classType);
            }
        }
    };
    /** 注册任务 */
    TookManager.prototype.registerSystem = function (classType) {
        var tag = classType.tag || classType.name || classType["__tookClassUid"];
        if (!tag || !this.dict.hasKey(tag)) {
            tag = classType["__tookClassUid"] = TookManager.TookClassUid++;
        }
        var handler = new classType();
        if (handler instanceof TookHandler_1.default) {
            handler.init();
            this.dict.add(tag, handler);
            this.list.push(handler);
            this.count = this.list.length;
        }
    };
    TookManager.prototype.fixedReseTimestamp = function () {
        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
            var hander = _a[_i];
            if (hander instanceof FixedTimeTookHandler_1.default) {
                for (var _b = 0, _c = hander.fixedTimeList; _b < _c.length; _b++) {
                    var item = _c[_b];
                    item.reseTimestamp();
                }
            }
        }
    };
    /**
     * 启动
     */
    TookManager.prototype.start = function () {
        this.install();
        this.stop();
        Laya.timer.loop(1000, this, this.onTick);
    };
    /**
     * 停止
     */
    TookManager.prototype.stop = function () {
        Laya.timer.clear(this, this.onTick);
    };
    /**
     * 刷新
     */
    TookManager.prototype.onTick = function () {
        this.serverMilliseconds = Game_1.default.time.serverMilliseconds;
        for (var i = 0; i < this.count; i++) {
            var took = this.list[i];
            if (this.validate(took)) {
                took.exe();
                took.__onExe();
            }
        }
    };
    // 验证是否可以发送
    TookManager.prototype.validate = function (took) {
        if (!Game_1.default.user.isLoginAndGetUserData) {
            return false;
        }
        var result = true;
        // 验证功能是否开发
        if (result && took.menuId > 0)
            result = MenuValidateOpening_1.default.getInstance().validate(took.menuId);
        // 验证功能是否解锁
        if (result && took.menuId > 0)
            result = MenuValidateUnlock_1.default.getInstance().validate(took.menuId);
        // 验证是否在条件面板
        if (result && took.preconditionMenuIds && took.preconditionMenuIds.length > 0) {
            result = false;
            for (var _i = 0, _a = took.preconditionMenuIds; _i < _a.length; _i++) {
                var itemId = _a[_i];
                if (Game_1.default.menu.isOpened(itemId)) {
                    result = true;
                    break;
                }
            }
        }
        if (result)
            result = took.validate(this.serverMilliseconds);
        return result;
    };
    TookManager.TookClassUid = 1;
    return TookManager;
}());
exports.default = TookManager;
},{"../Game":546,"../GameModule/MenuValidateOpening":607,"../GameModule/MenuValidateUnlock":608,"../Libs/Assembly":622,"../Libs/AssemblyNamespace":623,"../Libs/Helpers/Dictionary":626,"./FixedTimeTookHandler":645,"./TookHandler":647,"./TookIncludes":648}],650:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Particle2D_1 = require("./EngineParticle/Particle2D");
var R_1 = require("./Config/Keys/R");
var Particle2DCache_1 = require("./Libs/Helpers/Particle2DCache");
var ParticleGroup_1 = require("./Libs/Helpers/ParticleGroup");
var TestParticle = /** @class */ (function () {
    function TestParticle() {
    }
    TestParticle.prototype.InitSync = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    TestParticle.prototype.onMouseClick = function () {
    };
    TestParticle.prototype.onAssetsLoaded = function (settings) {
        this.sp = new Particle2D_1.default(settings);
        this.sp.emitter.start();
        this.sp.play();
        Laya.stage.addChild(this.sp);
        this.sp.x = Laya.stage.width / 2;
        this.sp.y = Laya.stage.height / 2;
        window['pp'] = this.sp;
        this.sp.graphics.drawCircle(0, 0, 5, '#FF0000', '#00FF00', 5);
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
    };
    TestParticle.prototype.setSP = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, Particle2DCache_1.default.get(R_1.default.particles.InformationActorShow)];
                    case 1:
                        _a.sp = _b.sent();
                        this.sp.emitter.start();
                        this.sp.play();
                        Laya.stage.addChild(this.sp);
                        this.sp.x = Laya.stage.width / 2;
                        this.sp.y = Laya.stage.height / 2;
                        window['pp'] = this.sp;
                        this.sp.graphics.drawCircle(0, 0, 5, '#FF0000', '#00FF00', 5);
                        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
                        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
                        return [2 /*return*/];
                }
            });
        });
    };
    TestParticle.prototype.setParticleGroup = function () {
        return __awaiter(this, void 0, void 0, function () {
            var arr;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        arr = [
                            R_1.default.particles.DecorationShowIn_1_Star1,
                            R_1.default.particles.DecorationShowIn_2_Star2,
                            R_1.default.particles.DecorationShowIn_3_Line,
                            R_1.default.particles.DecorationShowIn_4_Glow
                        ];
                        // let arr = [
                        // 		R.particles.InformationActorShow,
                        // 		R.particles.InformationActorShowSmall,
                        // ];
                        // let arr = [
                        // 	R.particles.BuildingLevelShow,
                        // 	// R.particles.BuildingLevelShow1
                        // ];
                        this.group = new ParticleGroup_1.default();
                        return [4 /*yield*/, this.group.init(Laya.stage, arr)];
                    case 1:
                        _a.sent();
                        this.group.addToContainerTop();
                        this.group.generateHelperPoint();
                        this.group.x = Laya.stage.width / 2;
                        this.group.y = Laya.stage.height / 2;
                        this.group.play();
                        window["group"] = this.group;
                        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDownGroup);
                        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUpGroup);
                        return [2 /*return*/];
                }
            });
        });
    };
    TestParticle.prototype.onMouseDownGroup = function (e) {
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMoveGroup);
        this.group.x = e.stageX;
        this.group.y = e.stageY;
        this.group.play();
    };
    TestParticle.prototype.onMouseUpGroup = function () {
        Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.onMouseMoveGroup);
    };
    TestParticle.prototype.onMouseMoveGroup = function (e) {
        this.group.x = e.stageX;
        this.group.y = e.stageY;
    };
    TestParticle.prototype.onMouseDown = function (e) {
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
        this.sp.x = e.stageX;
        this.sp.y = e.stageY;
    };
    TestParticle.prototype.onMouseUp = function () {
        Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
    };
    TestParticle.prototype.onMouseMove = function (e) {
        this.sp.x = e.stageX;
        this.sp.y = e.stageY;
    };
    return TestParticle;
}());
exports.default = TestParticle;
},{"./Config/Keys/R":123,"./EngineParticle/Particle2D":168,"./Libs/Helpers/Particle2DCache":629,"./Libs/Helpers/ParticleGroup":630}]},{},[592])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
