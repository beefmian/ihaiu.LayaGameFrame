var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = require("../../Libs/signals/Signal");
var GameApplicationBrowser = /** @class */ (function () {
    function GameApplicationBrowser() {
        this.jsClassName = "GameApplicationBrowser";
        this.networkEnable = true;
        /////////////////////////////////////
        // 事件
        /////////////////////////////////////
        // 获取完基本消息
        this.sInfo = new Signal_1.default();
        // 触发时机：从活动状态进入非活动状态。
        this.sAppPause = new Signal_1.default();
        // 触发时机：程序进入前台并处于活动状态时调用。
        this.sAppResume = new Signal_1.default();
        this.isSetUserInfo = false;
    }
    GameApplicationBrowser.prototype.openURL = function (url) {
    };
    GameApplicationBrowser.prototype.checkNetwork = function () {
    };
    GameApplicationBrowser.prototype.setUserInfo = function (username, name) {
        if (this.isSetUserInfo)
            return;
        this.isSetUserInfo = true;
    };
    // 退出游戏应用
    GameApplicationBrowser.prototype.exit = function () {
    };
    return GameApplicationBrowser;
}());
exports.default = GameApplicationBrowser;
},{"../../Libs/signals/Signal":683}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig = /** @class */ (function () {
    function BaseConfig() {
    }
    return BaseConfig;
}());
exports.default = BaseConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var BaseConfigRender = /** @class */ (function () {
    function BaseConfigRender() {
        // 配置字典
        this.configs = new Dictionary_1.default();
    }
    // 获取配置列表
    BaseConfigRender.prototype.getConfigList = function () {
        return this.configs.getValues();
    };
    Object.defineProperty(BaseConfigRender.prototype, "configList", {
        // 配置列表
        get: function () {
            return this.configs.getValues();
        },
        enumerable: true,
        configurable: true
    });
    // 获取配置
    BaseConfigRender.prototype.getConfig = function (id) {
        if (!this.configs.hasKey(id)) {
            console.log(this.tableName + " \u6CA1\u6709 id=" + id + " \u7684\u914D\u7F6E");
        }
        return this.configs.getValue(id);
    };
    // 添加配置
    BaseConfigRender.prototype.addConfig = function (config) {
        this.configs.add(config.id, config);
    };
    // 获取配置文件路径        
    BaseConfigRender.prototype.getConfigPath = function () {
        return "config/csv/" + this.tableName + ".csv";
    };
    // 加载配置
    BaseConfigRender.prototype.load = function (configLoader, onComplete) {
    };
    // 重新加载配置
    BaseConfigRender.prototype.reload = function (configLoader, onComplete) {
    };
    // 游戏加载完所有
    BaseConfigRender.prototype.onGameLoadedAll = function () {
    };
    // 清理
    BaseConfigRender.prototype.clear = function () {
        this.configs.clear();
    };
    return BaseConfigRender;
}());
exports.default = BaseConfigRender;
},{"../Libs/Helpers/Dictionary":679}],4:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActionConfigStruct_1 = require("../ConfigStructs/ActionConfigStruct");
var ActionConfig = /** @class */ (function (_super) {
    __extends(ActionConfig, _super);
    function ActionConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActionConfig;
}(ActionConfigStruct_1.default));
exports.default = ActionConfig;
},{"../ConfigStructs/ActionConfigStruct":155}],5:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActivitiesConfigStruct_1 = require("../ConfigStructs/ActivitiesConfigStruct");
var ActivitiesConfig = /** @class */ (function (_super) {
    __extends(ActivitiesConfig, _super);
    function ActivitiesConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActivitiesConfig;
}(ActivitiesConfigStruct_1.default));
exports.default = ActivitiesConfig;
},{"../ConfigStructs/ActivitiesConfigStruct":156}],6:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideConfigStruct_1 = require("../ConfigStructs/ActorAideConfigStruct");
var ActorAideConfig = /** @class */ (function (_super) {
    __extends(ActorAideConfig, _super);
    function ActorAideConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideConfig;
}(ActorAideConfigStruct_1.default));
exports.default = ActorAideConfig;
},{"../ConfigStructs/ActorAideConfigStruct":157}],7:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideIntimacyConfigStruct_1 = require("../ConfigStructs/ActorAideIntimacyConfigStruct");
var ActorAideIntimacyConfig = /** @class */ (function (_super) {
    __extends(ActorAideIntimacyConfig, _super);
    function ActorAideIntimacyConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideIntimacyConfig;
}(ActorAideIntimacyConfigStruct_1.default));
exports.default = ActorAideIntimacyConfig;
},{"../ConfigStructs/ActorAideIntimacyConfigStruct":158}],8:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideLvConfigStruct_1 = require("../ConfigStructs/ActorAideLvConfigStruct");
var ActorAideLvConfig = /** @class */ (function (_super) {
    __extends(ActorAideLvConfig, _super);
    function ActorAideLvConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideLvConfig;
}(ActorAideLvConfigStruct_1.default));
exports.default = ActorAideLvConfig;
},{"../ConfigStructs/ActorAideLvConfigStruct":159}],9:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideattachConfigStruct_1 = require("../ConfigStructs/ActorAideattachConfigStruct");
var ActorAideattachConfig = /** @class */ (function (_super) {
    __extends(ActorAideattachConfig, _super);
    function ActorAideattachConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideattachConfig;
}(ActorAideattachConfigStruct_1.default));
exports.default = ActorAideattachConfig;
},{"../ConfigStructs/ActorAideattachConfigStruct":160}],10:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAssetsConfigStruct_1 = require("../ConfigStructs/ActorAssetsConfigStruct");
var ActorAssetsConfig = /** @class */ (function (_super) {
    __extends(ActorAssetsConfig, _super);
    function ActorAssetsConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAssetsConfig;
}(ActorAssetsConfigStruct_1.default));
exports.default = ActorAssetsConfig;
},{"../ConfigStructs/ActorAssetsConfigStruct":161}],11:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAssetsLvConfigStruct_1 = require("../ConfigStructs/ActorAssetsLvConfigStruct");
var ActorAssetsLvConfig = /** @class */ (function (_super) {
    __extends(ActorAssetsLvConfig, _super);
    function ActorAssetsLvConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAssetsLvConfig;
}(ActorAssetsLvConfigStruct_1.default));
exports.default = ActorAssetsLvConfig;
},{"../ConfigStructs/ActorAssetsLvConfigStruct":162}],12:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorConfigStruct_1 = require("../ConfigStructs/ActorConfigStruct");
var ActorConfig = /** @class */ (function (_super) {
    __extends(ActorConfig, _super);
    function ActorConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorConfig;
}(ActorConfigStruct_1.default));
exports.default = ActorConfig;
},{"../ConfigStructs/ActorConfigStruct":163}],13:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorLevelConfigStruct_1 = require("../ConfigStructs/ActorLevelConfigStruct");
var ActorLevelConfig = /** @class */ (function (_super) {
    __extends(ActorLevelConfig, _super);
    function ActorLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorLevelConfig;
}(ActorLevelConfigStruct_1.default));
exports.default = ActorLevelConfig;
},{"../ConfigStructs/ActorLevelConfigStruct":164}],14:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorLoyaltyConfigStruct_1 = require("../ConfigStructs/ActorLoyaltyConfigStruct");
var ActorLoyaltyConfig = /** @class */ (function (_super) {
    __extends(ActorLoyaltyConfig, _super);
    function ActorLoyaltyConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorLoyaltyConfig;
}(ActorLoyaltyConfigStruct_1.default));
exports.default = ActorLoyaltyConfig;
},{"../ConfigStructs/ActorLoyaltyConfigStruct":165}],15:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorProficiencyConfigStruct_1 = require("../ConfigStructs/ActorProficiencyConfigStruct");
var ActorProficiencyConfig = /** @class */ (function (_super) {
    __extends(ActorProficiencyConfig, _super);
    function ActorProficiencyConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorProficiencyConfig;
}(ActorProficiencyConfigStruct_1.default));
exports.default = ActorProficiencyConfig;
},{"../ConfigStructs/ActorProficiencyConfigStruct":166}],16:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorTrainConfigStruct_1 = require("../ConfigStructs/ActorTrainConfigStruct");
var ActorTrainConfig = /** @class */ (function (_super) {
    __extends(ActorTrainConfig, _super);
    function ActorTrainConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorTrainConfig;
}(ActorTrainConfigStruct_1.default));
exports.default = ActorTrainConfig;
},{"../ConfigStructs/ActorTrainConfigStruct":167}],17:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorTrainLvConfigStruct_1 = require("../ConfigStructs/ActorTrainLvConfigStruct");
var ActorTrainLvConfig = /** @class */ (function (_super) {
    __extends(ActorTrainLvConfig, _super);
    function ActorTrainLvConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorTrainLvConfig;
}(ActorTrainLvConfigStruct_1.default));
exports.default = ActorTrainLvConfig;
},{"../ConfigStructs/ActorTrainLvConfigStruct":168}],18:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AvatarConfigStruct_1 = require("../ConfigStructs/AvatarConfigStruct");
var Game_1 = require("../../Game");
var LangType_1 = require("../LangType");
var AssetItemType_1 = require("../../GameFrame/AssetManagers/AssetItemType");
var AssetHelper_1 = require("../../GameFrame/AssetManagers/AssetHelper");
var Res_1 = require("../Keys/Res");
var AvatarConfig = /** @class */ (function (_super) {
    __extends(AvatarConfig, _super);
    function AvatarConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /* ---------------------------------------  我是漂亮的分割线  --------------------------------------- */
        _this._assetList = [];
        return _this;
    }
    Object.defineProperty(AvatarConfig.prototype, "icon", {
        get: function () {
            var value = this.zh_cn_icon;
            switch (Game_1.default.lang.lang) {
                case LangType_1.default.en:
                    value = this.en_icon;
                    break;
            }
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_icon;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelPath", {
        get: function () {
            var arr = this.model_skin.split("/");
            return this.model_skin.replace("Unit/", "") + "/" + arr[arr.length - 1];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelSkinUrl", {
        get: function () {
            if (!this.model_skin) {
                return null;
            }
            if (!this._modelSkinUrl) {
                this._modelSkinUrl = Res_1.default.getSpinePngPath(this.model_skin);
            }
            return this._modelSkinUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelBoneUrl", {
        get: function () {
            if (!this.model_bones) {
                return null;
            }
            if (!this._modelBoneUrl) {
                this._modelBoneUrl = Res_1.default.getSpineSKPath(this.model_bones);
            }
            return this._modelBoneUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "picUrl", {
        get: function () {
            if (!this.bg_pic) {
                return null;
            }
            if (!this._picUrl) {
                this._picUrl = Res_1.default.getSpritePath(this.bg_pic);
            }
            return this._picUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelSkinAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.model_skin)) {
                return null;
            }
            if (!this._modelSkinAssetItem) {
                this._modelSkinAssetItem = { url: this.modelSkinUrl, type: AssetItemType_1.AssetItemType.Image };
            }
            return this._modelSkinAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "modelBoneAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.model_bones)) {
                return null;
            }
            if (!this._modelBoneAssetItem) {
                this._modelBoneAssetItem = { url: this.modelBoneUrl, type: AssetItemType_1.AssetItemType.Buffer };
            }
            return this._modelBoneAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "picAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.bg_pic)) {
                return null;
            }
            if (!this._picAssetItem) {
                this._picAssetItem = { url: this.picUrl, type: AssetItemType_1.AssetItemType.Image };
            }
            return this._picAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    /* ---------------------------------------  我是漂亮的分割线  --------------------------------------- */
    AvatarConfig.prototype.getPackagenameByUrl = function (url) {
        return url.split("/")[0];
    };
    Object.defineProperty(AvatarConfig.prototype, "iconUrl", {
        get: function () {
            if (!this._iconUrl) {
                // let packageName = this.getPackagenameByUrl(this.icon);
                // if (packageName == "ActorBodyIcon")
                {
                    this._iconUrl = "res/fspriteassets/" + this.icon + ".png";
                }
                // else
                // {
                // 	this._iconUrl = "ui://" + this.icon;
                // }
            }
            return this._iconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "iconUrl2", {
        get: function () {
            if (!this._iconUrl2) {
                this._iconUrl2 = "res/fspriteassets/" + this.icon + "2.png";
            }
            return this._iconUrl2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "bodyIconUrl", {
        get: function () {
            if (!this._bodyIconUrl) {
                // let packageName = this.getPackagenameByUrl(this.body_icon);
                // if (packageName == "ActorBodyIcon")
                {
                    this._bodyIconUrl = "res/fspriteassets/" + this.body_icon + ".png";
                }
                // else
                // {
                // 	this._bodyIconUrl = "ui://" + this.body_icon;
                // }
            }
            return this._bodyIconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "pieceIconUrl", {
        get: function () {
            if (!this._pieceIconUrl) {
                this._pieceIconUrl = "res/fspriteassets/" + this.piece_icon + ".png";
                // this._pieceIconUrl = "ui://" + this.piece_icon;
            }
            return this._pieceIconUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "iconPackagename", {
        get: function () {
            if (isNullOrEmpty(this.icon)) {
                return null;
            }
            if (!this._iconPackagename) {
                this._iconPackagename = this.icon.split("/")[0];
            }
            return this._iconPackagename;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "bodyIconPackageName", {
        get: function () {
            if (isNullOrEmpty(this.body_icon)) {
                return null;
            }
            if (!this._bodyIconPackageName) {
                this._bodyIconPackageName = this.body_icon.split("/")[0];
            }
            return this._bodyIconPackageName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "pieceIconPackageName", {
        get: function () {
            if (isNullOrEmpty(this.piece_icon)) {
                return null;
            }
            if (!this._pieceIconPackageName) {
                this._pieceIconPackageName = this.piece_icon.split("/")[0];
            }
            return this._pieceIconPackageName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "iconAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.icon)) {
                return null;
            }
            if (!this._iconAssetItem) {
                this._iconAssetItem = { url: this.iconPackagename, type: AssetItemType_1.AssetItemType.FspritePackage };
            }
            return this._iconAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "bodyIconAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.body_icon)) {
                return null;
            }
            if (!this._bodyIconAssetItem) {
                this._bodyIconAssetItem = { url: this.bodyIconPackageName, type: AssetItemType_1.AssetItemType.FspritePackage };
            }
            return this._bodyIconAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "pieceIconAssetItem", {
        get: function () {
            if (isNullOrEmpty(this.piece_icon)) {
                return null;
            }
            if (!this._pieceIconAssetItem) {
                this._pieceIconAssetItem = { url: this.pieceIconPackageName, type: AssetItemType_1.AssetItemType.FspritePackage };
            }
            return this._pieceIconAssetItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvatarConfig.prototype, "assetList", {
        get: function () {
            if (!this._assetList) {
                this._assetList = [];
                if (this.iconAssetItem)
                    this._assetList.push(this.iconAssetItem);
                if (this.bodyIconAssetItem)
                    this._assetList.push(this.bodyIconAssetItem);
                if (this.pieceIconAssetItem)
                    this._assetList.push(this.pieceIconAssetItem);
                if (this.modelSkinAssetItem)
                    this._assetList.push(this.modelSkinAssetItem);
                if (this.modelBoneAssetItem)
                    this._assetList.push(this.modelBoneAssetItem);
                if (this.picAssetItem)
                    this._assetList.push(this.picAssetItem);
            }
            return this._assetList;
        },
        enumerable: true,
        configurable: true
    });
    // 获取预加载的资源列表
    AvatarConfig.prototype.getAllAssset = function (list, dict) {
        if (!list) {
            return this.assetList;
        }
        for (var i = 0; i < this.assetList.length; i++) {
            var item = this.assetList[i];
            if (dict) {
                var key = AssetHelper_1.default.getAssetItemKey(item);
                if (!dict.hasKey(key)) {
                    list.push(item);
                    dict.add(key, item);
                }
            }
            else {
                list.push(item);
            }
        }
        return list;
    };
    return AvatarConfig;
}(AvatarConfigStruct_1.default));
exports.default = AvatarConfig;
},{"../../Game":623,"../../GameFrame/AssetManagers/AssetHelper":626,"../../GameFrame/AssetManagers/AssetItemType":627,"../ConfigStructs/AvatarConfigStruct":169,"../Keys/Res":308,"../LangType":315}],19:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BattleLevelConfigStruct_1 = require("../ConfigStructs/BattleLevelConfigStruct");
var BattleLevelConfig = /** @class */ (function (_super) {
    __extends(BattleLevelConfig, _super);
    function BattleLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BattleLevelConfig;
}(BattleLevelConfigStruct_1.default));
exports.default = BattleLevelConfig;
},{"../ConfigStructs/BattleLevelConfigStruct":170}],20:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BattleShootTypeConfigStruct_1 = require("../ConfigStructs/BattleShootTypeConfigStruct");
var BattleShootTypeConfig = /** @class */ (function (_super) {
    __extends(BattleShootTypeConfig, _super);
    function BattleShootTypeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BattleShootTypeConfig;
}(BattleShootTypeConfigStruct_1.default));
exports.default = BattleShootTypeConfig;
},{"../ConfigStructs/BattleShootTypeConfigStruct":171}],21:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockLevelConfigStruct_1 = require("../ConfigStructs/BlockLevelConfigStruct");
var BlockLevelConfig = /** @class */ (function (_super) {
    __extends(BlockLevelConfig, _super);
    function BlockLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockLevelConfig;
}(BlockLevelConfigStruct_1.default));
exports.default = BlockLevelConfig;
},{"../ConfigStructs/BlockLevelConfigStruct":172}],22:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockRankingListConfigStruct_1 = require("../ConfigStructs/BlockRankingListConfigStruct");
var BlockRankingListConfig = /** @class */ (function (_super) {
    __extends(BlockRankingListConfig, _super);
    function BlockRankingListConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockRankingListConfig;
}(BlockRankingListConfigStruct_1.default));
exports.default = BlockRankingListConfig;
},{"../ConfigStructs/BlockRankingListConfigStruct":173}],23:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockWordsConfigStruct_1 = require("../ConfigStructs/BlockWordsConfigStruct");
var BlockWordsConfig = /** @class */ (function (_super) {
    __extends(BlockWordsConfig, _super);
    function BlockWordsConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockWordsConfig;
}(BlockWordsConfigStruct_1.default));
exports.default = BlockWordsConfig;
},{"../ConfigStructs/BlockWordsConfigStruct":174}],24:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockWordsIIConfigStruct_1 = require("../ConfigStructs/BlockWordsIIConfigStruct");
var BlockWordsIIConfig = /** @class */ (function (_super) {
    __extends(BlockWordsIIConfig, _super);
    function BlockWordsIIConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockWordsIIConfig;
}(BlockWordsIIConfigStruct_1.default));
exports.default = BlockWordsIIConfig;
},{"../ConfigStructs/BlockWordsIIConfigStruct":175}],25:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BoxTargetConfigStruct_1 = require("../ConfigStructs/BoxTargetConfigStruct");
var BoxTargetConfig = /** @class */ (function (_super) {
    __extends(BoxTargetConfig, _super);
    function BoxTargetConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BoxTargetConfig;
}(BoxTargetConfigStruct_1.default));
exports.default = BoxTargetConfig;
},{"../ConfigStructs/BoxTargetConfigStruct":176}],26:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingEffectConfigStruct_1 = require("../ConfigStructs/BuildingEffectConfigStruct");
var BuildingEffectConfig = /** @class */ (function (_super) {
    __extends(BuildingEffectConfig, _super);
    function BuildingEffectConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BuildingEffectConfig;
}(BuildingEffectConfigStruct_1.default));
exports.default = BuildingEffectConfig;
},{"../ConfigStructs/BuildingEffectConfigStruct":177}],27:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingLevelConfigStruct_1 = require("../ConfigStructs/BuildingLevelConfigStruct");
var BuildingLevelConfig = /** @class */ (function (_super) {
    __extends(BuildingLevelConfig, _super);
    function BuildingLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BuildingLevelConfig;
}(BuildingLevelConfigStruct_1.default));
exports.default = BuildingLevelConfig;
},{"../ConfigStructs/BuildingLevelConfigStruct":178}],28:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BusinessConfigStruct_1 = require("../ConfigStructs/BusinessConfigStruct");
var BusinessConfig = /** @class */ (function (_super) {
    __extends(BusinessConfig, _super);
    function BusinessConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BusinessConfig;
}(BusinessConfigStruct_1.default));
exports.default = BusinessConfig;
},{"../ConfigStructs/BusinessConfigStruct":179}],29:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CinemaConfigStruct_1 = require("../ConfigStructs/CinemaConfigStruct");
var CinemaConfig = /** @class */ (function (_super) {
    __extends(CinemaConfig, _super);
    function CinemaConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CinemaConfig;
}(CinemaConfigStruct_1.default));
exports.default = CinemaConfig;
},{"../ConfigStructs/CinemaConfigStruct":180}],30:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CityConfigStruct_1 = require("../ConfigStructs/CityConfigStruct");
var CityConfig = /** @class */ (function (_super) {
    __extends(CityConfig, _super);
    function CityConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CityConfig;
}(CityConfigStruct_1.default));
exports.default = CityConfig;
},{"../ConfigStructs/CityConfigStruct":181}],31:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CityPopularizeConfigStruct_1 = require("../ConfigStructs/CityPopularizeConfigStruct");
var CityPopularizeConfig = /** @class */ (function (_super) {
    __extends(CityPopularizeConfig, _super);
    function CityPopularizeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CityPopularizeConfig;
}(CityPopularizeConfigStruct_1.default));
exports.default = CityPopularizeConfig;
},{"../ConfigStructs/CityPopularizeConfigStruct":182}],32:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CompleteConfigStruct_1 = require("../ConfigStructs/CompleteConfigStruct");
var CompleteConfig = /** @class */ (function (_super) {
    __extends(CompleteConfig, _super);
    function CompleteConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompleteConfig;
}(CompleteConfigStruct_1.default));
exports.default = CompleteConfig;
},{"../ConfigStructs/CompleteConfigStruct":183}],33:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CompoundConfigStruct_1 = require("../ConfigStructs/CompoundConfigStruct");
var CompoundConfig = /** @class */ (function (_super) {
    __extends(CompoundConfig, _super);
    function CompoundConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompoundConfig;
}(CompoundConfigStruct_1.default));
exports.default = CompoundConfig;
},{"../ConfigStructs/CompoundConfigStruct":184}],34:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CooperateTaskConfigStruct_1 = require("../ConfigStructs/CooperateTaskConfigStruct");
var CooperateTaskConfig = /** @class */ (function (_super) {
    __extends(CooperateTaskConfig, _super);
    function CooperateTaskConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CooperateTaskConfig;
}(CooperateTaskConfigStruct_1.default));
exports.default = CooperateTaskConfig;
},{"../ConfigStructs/CooperateTaskConfigStruct":185}],35:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CountActivitiesConfigStruct_1 = require("../ConfigStructs/CountActivitiesConfigStruct");
var CountActivitiesConfig = /** @class */ (function (_super) {
    __extends(CountActivitiesConfig, _super);
    function CountActivitiesConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CountActivitiesConfig;
}(CountActivitiesConfigStruct_1.default));
exports.default = CountActivitiesConfig;
},{"../ConfigStructs/CountActivitiesConfigStruct":186}],36:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CountryConfigStruct_1 = require("../ConfigStructs/CountryConfigStruct");
var CountryConfig = /** @class */ (function (_super) {
    __extends(CountryConfig, _super);
    function CountryConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CountryConfig;
}(CountryConfigStruct_1.default));
exports.default = CountryConfig;
},{"../ConfigStructs/CountryConfigStruct":187}],37:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CupPackageConfigStruct_1 = require("../ConfigStructs/CupPackageConfigStruct");
var CupPackageConfig = /** @class */ (function (_super) {
    __extends(CupPackageConfig, _super);
    function CupPackageConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CupPackageConfig;
}(CupPackageConfigStruct_1.default));
exports.default = CupPackageConfig;
},{"../ConfigStructs/CupPackageConfigStruct":188}],38:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTActorCharacterStruct_1 = require("../ConfigStructs/DTActorCharacterStruct");
var DTActorCharacter = /** @class */ (function (_super) {
    __extends(DTActorCharacter, _super);
    function DTActorCharacter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTActorCharacter;
}(DTActorCharacterStruct_1.default));
exports.default = DTActorCharacter;
},{"../ConfigStructs/DTActorCharacterStruct":189}],39:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTActorFeatureStruct_1 = require("../ConfigStructs/DTActorFeatureStruct");
var DTActorFeature = /** @class */ (function (_super) {
    __extends(DTActorFeature, _super);
    function DTActorFeature() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTActorFeature;
}(DTActorFeatureStruct_1.default));
exports.default = DTActorFeature;
},{"../ConfigStructs/DTActorFeatureStruct":190}],40:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTActorSkillStruct_1 = require("../ConfigStructs/DTActorSkillStruct");
var DTActorSkill = /** @class */ (function (_super) {
    __extends(DTActorSkill, _super);
    function DTActorSkill() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTActorSkill;
}(DTActorSkillStruct_1.default));
exports.default = DTActorSkill;
},{"../ConfigStructs/DTActorSkillStruct":191}],41:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTActorStoryStruct_1 = require("../ConfigStructs/DTActorStoryStruct");
var DTActorStory = /** @class */ (function (_super) {
    __extends(DTActorStory, _super);
    function DTActorStory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTActorStory;
}(DTActorStoryStruct_1.default));
exports.default = DTActorStory;
},{"../ConfigStructs/DTActorStoryStruct":192}],42:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTBuildingReqStruct_1 = require("../ConfigStructs/DTBuildingReqStruct");
var DTBuildingReq = /** @class */ (function (_super) {
    __extends(DTBuildingReq, _super);
    function DTBuildingReq() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTBuildingReq;
}(DTBuildingReqStruct_1.default));
exports.default = DTBuildingReq;
},{"../ConfigStructs/DTBuildingReqStruct":193}],43:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTDateStruct_1 = require("../ConfigStructs/DTDateStruct");
var DTDate = /** @class */ (function (_super) {
    __extends(DTDate, _super);
    function DTDate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTDate;
}(DTDateStruct_1.default));
exports.default = DTDate;
},{"../ConfigStructs/DTDateStruct":194}],44:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTItemNumStruct_1 = require("../ConfigStructs/DTItemNumStruct");
var DTItemNum = /** @class */ (function (_super) {
    __extends(DTItemNum, _super);
    function DTItemNum() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTItemNum;
}(DTItemNumStruct_1.default));
exports.default = DTItemNum;
},{"../ConfigStructs/DTItemNumStruct":195}],45:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTPartsStruct_1 = require("../ConfigStructs/DTPartsStruct");
var DTParts = /** @class */ (function (_super) {
    __extends(DTParts, _super);
    function DTParts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTParts;
}(DTPartsStruct_1.default));
exports.default = DTParts;
},{"../ConfigStructs/DTPartsStruct":196}],46:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTPerformActoinStruct_1 = require("../ConfigStructs/DTPerformActoinStruct");
var DTPerformActoin = /** @class */ (function (_super) {
    __extends(DTPerformActoin, _super);
    function DTPerformActoin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTPerformActoin;
}(DTPerformActoinStruct_1.default));
exports.default = DTPerformActoin;
},{"../ConfigStructs/DTPerformActoinStruct":197}],47:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTPerformSpeakStruct_1 = require("../ConfigStructs/DTPerformSpeakStruct");
var DTPerformSpeak = /** @class */ (function (_super) {
    __extends(DTPerformSpeak, _super);
    function DTPerformSpeak() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTPerformSpeak;
}(DTPerformSpeakStruct_1.default));
exports.default = DTPerformSpeak;
},{"../ConfigStructs/DTPerformSpeakStruct":198}],48:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTProficiencyStruct_1 = require("../ConfigStructs/DTProficiencyStruct");
var DTProficiency = /** @class */ (function (_super) {
    __extends(DTProficiency, _super);
    function DTProficiency() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTProficiency;
}(DTProficiencyStruct_1.default));
exports.default = DTProficiency;
},{"../ConfigStructs/DTProficiencyStruct":199}],49:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTStoryEffectStruct_1 = require("../ConfigStructs/DTStoryEffectStruct");
var DTStoryEffect = /** @class */ (function (_super) {
    __extends(DTStoryEffect, _super);
    function DTStoryEffect() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTStoryEffect;
}(DTStoryEffectStruct_1.default));
exports.default = DTStoryEffect;
},{"../ConfigStructs/DTStoryEffectStruct":200}],50:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTStoryNumStruct_1 = require("../ConfigStructs/DTStoryNumStruct");
var DTStoryNum = /** @class */ (function (_super) {
    __extends(DTStoryNum, _super);
    function DTStoryNum() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTStoryNum;
}(DTStoryNumStruct_1.default));
exports.default = DTStoryNum;
},{"../ConfigStructs/DTStoryNumStruct":201}],51:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTVector2Struct_1 = require("../ConfigStructs/DTVector2Struct");
var DTVector2 = /** @class */ (function (_super) {
    __extends(DTVector2, _super);
    function DTVector2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTVector2;
}(DTVector2Struct_1.default));
exports.default = DTVector2;
},{"../ConfigStructs/DTVector2Struct":202}],52:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTlValue2Struct_1 = require("../ConfigStructs/DTlValue2Struct");
var DTlValue2 = /** @class */ (function (_super) {
    __extends(DTlValue2, _super);
    function DTlValue2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTlValue2;
}(DTlValue2Struct_1.default));
exports.default = DTlValue2;
},{"../ConfigStructs/DTlValue2Struct":203}],53:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DTlValue3Struct_1 = require("../ConfigStructs/DTlValue3Struct");
var DTlValue3 = /** @class */ (function (_super) {
    __extends(DTlValue3, _super);
    function DTlValue3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DTlValue3;
}(DTlValue3Struct_1.default));
exports.default = DTlValue3;
},{"../ConfigStructs/DTlValue3Struct":204}],54:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DailySignConfigStruct_1 = require("../ConfigStructs/DailySignConfigStruct");
var DailySignConfig = /** @class */ (function (_super) {
    __extends(DailySignConfig, _super);
    function DailySignConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DailySignConfig;
}(DailySignConfigStruct_1.default));
exports.default = DailySignConfig;
},{"../ConfigStructs/DailySignConfigStruct":205}],55:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DailySignTrailerConfigStruct_1 = require("../ConfigStructs/DailySignTrailerConfigStruct");
var DailySignTrailerConfig = /** @class */ (function (_super) {
    __extends(DailySignTrailerConfig, _super);
    function DailySignTrailerConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DailySignTrailerConfig;
}(DailySignTrailerConfigStruct_1.default));
exports.default = DailySignTrailerConfig;
},{"../ConfigStructs/DailySignTrailerConfigStruct":206}],56:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DialogueConfigStruct_1 = require("../ConfigStructs/DialogueConfigStruct");
var DialogueConfig = /** @class */ (function (_super) {
    __extends(DialogueConfig, _super);
    function DialogueConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DialogueConfig;
}(DialogueConfigStruct_1.default));
exports.default = DialogueConfig;
},{"../ConfigStructs/DialogueConfigStruct":207}],57:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var EventConfigStruct_1 = require("../ConfigStructs/EventConfigStruct");
var EventConfig = /** @class */ (function (_super) {
    __extends(EventConfig, _super);
    function EventConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EventConfig;
}(EventConfigStruct_1.default));
exports.default = EventConfig;
},{"../ConfigStructs/EventConfigStruct":208}],58:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var FloorConfigStruct_1 = require("../ConfigStructs/FloorConfigStruct");
var FloorConfig = /** @class */ (function (_super) {
    __extends(FloorConfig, _super);
    function FloorConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FloorConfig;
}(FloorConfigStruct_1.default));
exports.default = FloorConfig;
},{"../ConfigStructs/FloorConfigStruct":209}],59:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GameLevelConfigStruct_1 = require("../ConfigStructs/GameLevelConfigStruct");
var GameLevelConfig = /** @class */ (function (_super) {
    __extends(GameLevelConfig, _super);
    function GameLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameLevelConfig;
}(GameLevelConfigStruct_1.default));
exports.default = GameLevelConfig;
},{"../ConfigStructs/GameLevelConfigStruct":210}],60:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GameRandomNameConfigStruct_1 = require("../ConfigStructs/GameRandomNameConfigStruct");
var GameRandomNameConfig = /** @class */ (function (_super) {
    __extends(GameRandomNameConfig, _super);
    function GameRandomNameConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameRandomNameConfig;
}(GameRandomNameConfigStruct_1.default));
exports.default = GameRandomNameConfig;
},{"../ConfigStructs/GameRandomNameConfigStruct":211}],61:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GameVersionConfigStruct_1 = require("../ConfigStructs/GameVersionConfigStruct");
var GameVersionConfig = /** @class */ (function (_super) {
    __extends(GameVersionConfig, _super);
    function GameVersionConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameVersionConfig;
}(GameVersionConfigStruct_1.default));
exports.default = GameVersionConfig;
},{"../ConfigStructs/GameVersionConfigStruct":212}],62:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GiftPackageConfigStruct_1 = require("../ConfigStructs/GiftPackageConfigStruct");
var GiftPackageConfig = /** @class */ (function (_super) {
    __extends(GiftPackageConfig, _super);
    function GiftPackageConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GiftPackageConfig;
}(GiftPackageConfigStruct_1.default));
exports.default = GiftPackageConfig;
},{"../ConfigStructs/GiftPackageConfigStruct":213}],63:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalConfigStruct_1 = require("../ConfigStructs/GlobalConfigStruct");
var Game_1 = require("../../Game");
var GlobalConfig = /** @class */ (function (_super) {
    __extends(GlobalConfig, _super);
    function GlobalConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlobalConfig.getConfig = function (key) {
        return Game_1.default.config.global.getConfig(key);
    };
    // 获取一个整数
    GlobalConfig.getValue = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value;
        }
        return 0;
    };
    // 获取一维数组
    GlobalConfig.getValue1 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value1;
        }
        return [];
    };
    // 获取二维数组
    GlobalConfig.getValue2 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value2;
        }
        return [];
    };
    // 获取三维数组
    GlobalConfig.getValue3 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value3;
        }
        return [];
    };
    // 获取字符串
    GlobalConfig.getValue4 = function (key) {
        var config = GlobalConfig.getConfig(key);
        if (config) {
            return config.value4;
        }
        return "";
    };
    return GlobalConfig;
}(GlobalConfigStruct_1.default));
exports.default = GlobalConfig;
},{"../../Game":623,"../ConfigStructs/GlobalConfigStruct":214}],64:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuidePathConfigStruct_1 = require("../ConfigStructs/GuidePathConfigStruct");
var GuidePathConfig = /** @class */ (function (_super) {
    __extends(GuidePathConfig, _super);
    function GuidePathConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GuidePathConfig;
}(GuidePathConfigStruct_1.default));
exports.default = GuidePathConfig;
},{"../ConfigStructs/GuidePathConfigStruct":215}],65:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuidesystemConfigStruct_1 = require("../ConfigStructs/GuidesystemConfigStruct");
var GuidesystemConfig = /** @class */ (function (_super) {
    __extends(GuidesystemConfig, _super);
    function GuidesystemConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GuidesystemConfig;
}(GuidesystemConfigStruct_1.default));
exports.default = GuidesystemConfig;
},{"../ConfigStructs/GuidesystemConfigStruct":216}],66:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var HeadPortraitConfigStruct_1 = require("../ConfigStructs/HeadPortraitConfigStruct");
var HeadPortraitConfig = /** @class */ (function (_super) {
    __extends(HeadPortraitConfig, _super);
    function HeadPortraitConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return HeadPortraitConfig;
}(HeadPortraitConfigStruct_1.default));
exports.default = HeadPortraitConfig;
},{"../ConfigStructs/HeadPortraitConfigStruct":217}],67:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ImageConfigStruct_1 = require("../ConfigStructs/ImageConfigStruct");
var ImageConfig = /** @class */ (function (_super) {
    __extends(ImageConfig, _super);
    function ImageConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ImageConfig;
}(ImageConfigStruct_1.default));
exports.default = ImageConfig;
},{"../ConfigStructs/ImageConfigStruct":218}],68:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InitialActorConfigStruct_1 = require("../ConfigStructs/InitialActorConfigStruct");
var InitialActorConfig = /** @class */ (function (_super) {
    __extends(InitialActorConfig, _super);
    function InitialActorConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InitialActorConfig;
}(InitialActorConfigStruct_1.default));
exports.default = InitialActorConfig;
},{"../ConfigStructs/InitialActorConfigStruct":219}],69:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemConfigStruct_1 = require("../ConfigStructs/ItemConfigStruct");
var Game_1 = require("../../Game");
var ItemConfig = /** @class */ (function (_super) {
    __extends(ItemConfig, _super);
    function ItemConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ItemConfig.prototype, "avatarConfig", {
        get: function () {
            return Game_1.default.config.avatar.getConfig(this.icon);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfig.prototype, "iconUrl", {
        get: function () {
            if (this.avatarConfig) {
                if (this.type == 7) {
                    return this.avatarConfig.bodyIconUrl;
                }
                return this.avatarConfig.iconUrl;
            }
            return "";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfig.prototype, "itemStarNum", {
        /**
         * 物品星级 0,1,2,3,4,5
         */
        get: function () {
            if (this.star == 0) {
                return 0;
            }
            var propertyCfg = Game_1.default.config.property.getConfig(this.star);
            if (propertyCfg) {
                var star = Number(propertyCfg.zh_cn_name);
                if (star == null) {
                    console.log("Error Item Star");
                    return 0;
                }
                star = star < 0 ? 0 : star;
                star = star > 6 ? 6 : star;
                return star;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    return ItemConfig;
}(ItemConfigStruct_1.default));
exports.default = ItemConfig;
},{"../../Game":623,"../ConfigStructs/ItemConfigStruct":220}],70:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LanguageTypeConfigStruct_1 = require("../ConfigStructs/LanguageTypeConfigStruct");
var LanguageTypeConfig = /** @class */ (function (_super) {
    __extends(LanguageTypeConfig, _super);
    function LanguageTypeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LanguageTypeConfig;
}(LanguageTypeConfigStruct_1.default));
exports.default = LanguageTypeConfig;
},{"../ConfigStructs/LanguageTypeConfigStruct":221}],71:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LevelGiftPackageConfigStruct_1 = require("../ConfigStructs/LevelGiftPackageConfigStruct");
var LevelGiftPackageConfig = /** @class */ (function (_super) {
    __extends(LevelGiftPackageConfig, _super);
    function LevelGiftPackageConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LevelGiftPackageConfig;
}(LevelGiftPackageConfigStruct_1.default));
exports.default = LevelGiftPackageConfig;
},{"../ConfigStructs/LevelGiftPackageConfigStruct":222}],72:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LimitActorConfigStruct_1 = require("../ConfigStructs/LimitActorConfigStruct");
var LimitActorConfig = /** @class */ (function (_super) {
    __extends(LimitActorConfig, _super);
    function LimitActorConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LimitActorConfig;
}(LimitActorConfigStruct_1.default));
exports.default = LimitActorConfig;
},{"../ConfigStructs/LimitActorConfigStruct":223}],73:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderConfigStruct_1 = require("../ConfigStructs/LoaderConfigStruct");
var LoaderConfig = /** @class */ (function (_super) {
    __extends(LoaderConfig, _super);
    function LoaderConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoaderConfig;
}(LoaderConfigStruct_1.default));
exports.default = LoaderConfig;
},{"../ConfigStructs/LoaderConfigStruct":224}],74:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoadingConfigStruct_1 = require("../ConfigStructs/LoadingConfigStruct");
var LoadingConfig = /** @class */ (function (_super) {
    __extends(LoadingConfig, _super);
    function LoadingConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoadingConfig;
}(LoadingConfigStruct_1.default));
exports.default = LoadingConfig;
},{"../ConfigStructs/LoadingConfigStruct":225}],75:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailConfigStruct_1 = require("../ConfigStructs/MailConfigStruct");
var MailConfig = /** @class */ (function (_super) {
    __extends(MailConfig, _super);
    function MailConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MailConfig;
}(MailConfigStruct_1.default));
exports.default = MailConfig;
},{"../ConfigStructs/MailConfigStruct":226}],76:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MaintaskConfigStruct_1 = require("../ConfigStructs/MaintaskConfigStruct");
var MaintaskConfig = /** @class */ (function (_super) {
    __extends(MaintaskConfig, _super);
    function MaintaskConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MaintaskConfig;
}(MaintaskConfigStruct_1.default));
exports.default = MaintaskConfig;
},{"../ConfigStructs/MaintaskConfigStruct":227}],77:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MeetingGameConfigStruct_1 = require("../ConfigStructs/MeetingGameConfigStruct");
var MeetingGameConfig = /** @class */ (function (_super) {
    __extends(MeetingGameConfig, _super);
    function MeetingGameConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MeetingGameConfig;
}(MeetingGameConfigStruct_1.default));
exports.default = MeetingGameConfig;
},{"../ConfigStructs/MeetingGameConfigStruct":228}],78:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MeetingRewardsConfigStruct_1 = require("../ConfigStructs/MeetingRewardsConfigStruct");
var MeetingRewardsConfig = /** @class */ (function (_super) {
    __extends(MeetingRewardsConfig, _super);
    function MeetingRewardsConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MeetingRewardsConfig;
}(MeetingRewardsConfigStruct_1.default));
exports.default = MeetingRewardsConfig;
},{"../ConfigStructs/MeetingRewardsConfigStruct":229}],79:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuConfigStruct_1 = require("../ConfigStructs/MenuConfigStruct");
var MenuId_1 = require("../../GameModule/MenuId");
var Game_1 = require("../../Game");
var MenuValidateUnlock_1 = require("../../GameModule/MenuValidateUnlock");
var TEXT_1 = require("../Keys/TEXT");
var MenuValidateEnableOpen_1 = require("../../GameModule/MenuValidateEnableOpen");
var MenuValidateNew_1 = require("../../GameModule/MenuValidateNew");
var MenuWindows_1 = require("../../GameModule/MenuWindows");
var MenuConfig = /** @class */ (function (_super) {
    __extends(MenuConfig, _super);
    function MenuConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MenuConfig.prototype, "menuId", {
        // 模块ID
        get: function () {
            return this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "menuLayer", {
        // 层级
        get: function () {
            return this.layer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "menuCloseOtherType", {
        // 关闭其他类型
        get: function () {
            return this.closeOtherType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "menuLoaderId", {
        // 加载界面ID
        get: function () {
            return this.loaderId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "iconUrl", {
        // 	菜单图片	
        get: function () {
            var avatarConfig = Game_1.default.config.avatar.getConfig(this.icon);
            if (avatarConfig) {
                return avatarConfig.iconUrl;
            }
            else {
                return "";
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "isSubbarMainButton", {
        /**
         * 是否是子菜单栏的主菜单
         */
        get: function () {
            return this.menuId >= MenuId_1.MenuId.SubMenuButtonBegin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "isUnlock", {
        /**
         * 获取是否解锁
         */
        get: function () {
            return MenuValidateUnlock_1.default.getInstance().validate(this.menuId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "lockText", {
        /**
         * 获取未解锁文本
         */
        get: function () {
            var unlockConfig = Game_1.default.config.unlock.getUnlockConfig(this.menuId);
            if (unlockConfig) {
                return unlockConfig.touch_txt;
            }
            return TEXT_1.default.Lock;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "enableOpen", {
        /**
         * 是否可以打开
         */
        get: function () {
            return MenuValidateEnableOpen_1.default.getInstance().validate(this.menuId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuConfig.prototype, "isNew", {
        /**
         * 是否可以是新的
         */
        get: function () {
            return MenuValidateNew_1.default.getInstance().validate(this.menuId);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 前往
     */
    MenuConfig.prototype.openMenu = function () {
        if (this.menuId < MenuId_1.MenuId.SubMenuButtonBegin) {
            if (!this.isUnlock) {
                Game_1.default.system.toastText(this.lockText);
                return false;
            }
            if (!MenuWindows_1.default.get(this.menuId)) {
                Game_1.default.system.toastText(TEXT_1.default.Disable);
                return false;
            }
            if (this.enableOpen) {
                Game_1.default.menu.open(this.menuId);
                return true;
            }
        }
        return true;
    };
    return MenuConfig;
}(MenuConfigStruct_1.default));
exports.default = MenuConfig;
},{"../../Game":623,"../../GameModule/MenuId":662,"../../GameModule/MenuValidateEnableOpen":664,"../../GameModule/MenuValidateNew":665,"../../GameModule/MenuValidateUnlock":667,"../../GameModule/MenuWindows":668,"../ConfigStructs/MenuConfigStruct":230,"../Keys/TEXT":309}],80:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuIndexConfigStruct_1 = require("../ConfigStructs/MenuIndexConfigStruct");
var MenuIndexConfig = /** @class */ (function (_super) {
    __extends(MenuIndexConfig, _super);
    function MenuIndexConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuIndexConfig;
}(MenuIndexConfigStruct_1.default));
exports.default = MenuIndexConfig;
},{"../ConfigStructs/MenuIndexConfigStruct":231}],81:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MonthCardConfigStruct_1 = require("../ConfigStructs/MonthCardConfigStruct");
var MonthCardConfig = /** @class */ (function (_super) {
    __extends(MonthCardConfig, _super);
    function MonthCardConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MonthCardConfig;
}(MonthCardConfigStruct_1.default));
exports.default = MonthCardConfig;
},{"../ConfigStructs/MonthCardConfigStruct":232}],82:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieAdaptationMsgConfigStruct_1 = require("../ConfigStructs/MovieAdaptationMsgConfigStruct");
var MovieAdaptationMsgConfig = /** @class */ (function (_super) {
    __extends(MovieAdaptationMsgConfig, _super);
    function MovieAdaptationMsgConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieAdaptationMsgConfig;
}(MovieAdaptationMsgConfigStruct_1.default));
exports.default = MovieAdaptationMsgConfig;
},{"../ConfigStructs/MovieAdaptationMsgConfigStruct":233}],83:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieAudienceEvaluationConfigStruct_1 = require("../ConfigStructs/MovieAudienceEvaluationConfigStruct");
var MovieAudienceEvaluationConfig = /** @class */ (function (_super) {
    __extends(MovieAudienceEvaluationConfig, _super);
    function MovieAudienceEvaluationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieAudienceEvaluationConfig;
}(MovieAudienceEvaluationConfigStruct_1.default));
exports.default = MovieAudienceEvaluationConfig;
},{"../ConfigStructs/MovieAudienceEvaluationConfigStruct":234}],84:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieDropConfigStruct_1 = require("../ConfigStructs/MovieDropConfigStruct");
var MovieDropConfig = /** @class */ (function (_super) {
    __extends(MovieDropConfig, _super);
    function MovieDropConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieDropConfig;
}(MovieDropConfigStruct_1.default));
exports.default = MovieDropConfig;
},{"../ConfigStructs/MovieDropConfigStruct":235}],85:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieExpectConfigStruct_1 = require("../ConfigStructs/MovieExpectConfigStruct");
var MovieExpectConfig = /** @class */ (function (_super) {
    __extends(MovieExpectConfig, _super);
    function MovieExpectConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieExpectConfig;
}(MovieExpectConfigStruct_1.default));
exports.default = MovieExpectConfig;
},{"../ConfigStructs/MovieExpectConfigStruct":236}],86:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieLicenceConfigStruct_1 = require("../ConfigStructs/MovieLicenceConfigStruct");
var MovieLicenceConfig = /** @class */ (function (_super) {
    __extends(MovieLicenceConfig, _super);
    function MovieLicenceConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieLicenceConfig;
}(MovieLicenceConfigStruct_1.default));
exports.default = MovieLicenceConfig;
},{"../ConfigStructs/MovieLicenceConfigStruct":237}],87:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieMediaVisitConfigStruct_1 = require("../ConfigStructs/MovieMediaVisitConfigStruct");
var MovieMediaVisitConfig = /** @class */ (function (_super) {
    __extends(MovieMediaVisitConfig, _super);
    function MovieMediaVisitConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieMediaVisitConfig;
}(MovieMediaVisitConfigStruct_1.default));
exports.default = MovieMediaVisitConfig;
},{"../ConfigStructs/MovieMediaVisitConfigStruct":238}],88:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieMidiaEvaluationConfigStruct_1 = require("../ConfigStructs/MovieMidiaEvaluationConfigStruct");
var MovieMidiaEvaluationConfig = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationConfig, _super);
    function MovieMidiaEvaluationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieMidiaEvaluationConfig;
}(MovieMidiaEvaluationConfigStruct_1.default));
exports.default = MovieMidiaEvaluationConfig;
},{"../ConfigStructs/MovieMidiaEvaluationConfigStruct":239}],89:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieMidiaEvaluationMsgConfigStruct_1 = require("../ConfigStructs/MovieMidiaEvaluationMsgConfigStruct");
var MovieMidiaEvaluationMsgConfig = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationMsgConfig, _super);
    function MovieMidiaEvaluationMsgConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieMidiaEvaluationMsgConfig;
}(MovieMidiaEvaluationMsgConfigStruct_1.default));
exports.default = MovieMidiaEvaluationMsgConfig;
},{"../ConfigStructs/MovieMidiaEvaluationMsgConfigStruct":240}],90:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MoviePopularizeConfigStruct_1 = require("../ConfigStructs/MoviePopularizeConfigStruct");
var MoviePopularizeConfig = /** @class */ (function (_super) {
    __extends(MoviePopularizeConfig, _super);
    function MoviePopularizeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MoviePopularizeConfig;
}(MoviePopularizeConfigStruct_1.default));
exports.default = MoviePopularizeConfig;
},{"../ConfigStructs/MoviePopularizeConfigStruct":241}],91:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieShootTypeConfigStruct_1 = require("../ConfigStructs/MovieShootTypeConfigStruct");
var MovieShootTypeConfig = /** @class */ (function (_super) {
    __extends(MovieShootTypeConfig, _super);
    function MovieShootTypeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieShootTypeConfig;
}(MovieShootTypeConfigStruct_1.default));
exports.default = MovieShootTypeConfig;
},{"../ConfigStructs/MovieShootTypeConfigStruct":242}],92:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgChatConfigStruct_1 = require("../ConfigStructs/MsgChatConfigStruct");
var MsgChatConfig = /** @class */ (function (_super) {
    __extends(MsgChatConfig, _super);
    function MsgChatConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MsgChatConfig;
}(MsgChatConfigStruct_1.default));
exports.default = MsgChatConfig;
},{"../ConfigStructs/MsgChatConfigStruct":243}],93:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgConfigStruct_1 = require("../ConfigStructs/MsgConfigStruct");
var MsgConfig = /** @class */ (function (_super) {
    __extends(MsgConfig, _super);
    function MsgConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MsgConfig;
}(MsgConfigStruct_1.default));
exports.default = MsgConfig;
},{"../ConfigStructs/MsgConfigStruct":244}],94:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgProtoErrorConfigStruct_1 = require("../ConfigStructs/MsgProtoErrorConfigStruct");
var MsgProtoErrorConfig = /** @class */ (function (_super) {
    __extends(MsgProtoErrorConfig, _super);
    function MsgProtoErrorConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MsgProtoErrorConfig;
}(MsgProtoErrorConfigStruct_1.default));
exports.default = MsgProtoErrorConfig;
},{"../ConfigStructs/MsgProtoErrorConfigStruct":245}],95:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var NpcConfigStruct_1 = require("../ConfigStructs/NpcConfigStruct");
var NpcConfig = /** @class */ (function (_super) {
    __extends(NpcConfig, _super);
    function NpcConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return NpcConfig;
}(NpcConfigStruct_1.default));
exports.default = NpcConfig;
},{"../ConfigStructs/NpcConfigStruct":246}],96:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OperationTasksConfigStruct_1 = require("../ConfigStructs/OperationTasksConfigStruct");
var OperationTasksConfig = /** @class */ (function (_super) {
    __extends(OperationTasksConfig, _super);
    function OperationTasksConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksConfig;
}(OperationTasksConfigStruct_1.default));
exports.default = OperationTasksConfig;
},{"../ConfigStructs/OperationTasksConfigStruct":247}],97:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OperationTasksScoreConfigStruct_1 = require("../ConfigStructs/OperationTasksScoreConfigStruct");
var OperationTasksScoreConfig = /** @class */ (function (_super) {
    __extends(OperationTasksScoreConfig, _super);
    function OperationTasksScoreConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksScoreConfig;
}(OperationTasksScoreConfigStruct_1.default));
exports.default = OperationTasksScoreConfig;
},{"../ConfigStructs/OperationTasksScoreConfigStruct":248}],98:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OperationTasksTermsConfigStruct_1 = require("../ConfigStructs/OperationTasksTermsConfigStruct");
var OperationTasksTermsConfig = /** @class */ (function (_super) {
    __extends(OperationTasksTermsConfig, _super);
    function OperationTasksTermsConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksTermsConfig;
}(OperationTasksTermsConfigStruct_1.default));
exports.default = OperationTasksTermsConfig;
},{"../ConfigStructs/OperationTasksTermsConfigStruct":249}],99:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OrderConfigStruct_1 = require("../ConfigStructs/OrderConfigStruct");
var OrderConfig = /** @class */ (function (_super) {
    __extends(OrderConfig, _super);
    function OrderConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OrderConfig;
}(OrderConfigStruct_1.default));
exports.default = OrderConfig;
},{"../ConfigStructs/OrderConfigStruct":250}],100:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OscarConfigStruct_1 = require("../ConfigStructs/OscarConfigStruct");
var OscarConfig = /** @class */ (function (_super) {
    __extends(OscarConfig, _super);
    function OscarConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OscarConfig;
}(OscarConfigStruct_1.default));
exports.default = OscarConfig;
},{"../ConfigStructs/OscarConfigStruct":251}],101:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PerformConfigStruct_1 = require("../ConfigStructs/PerformConfigStruct");
var PerformConfig = /** @class */ (function (_super) {
    __extends(PerformConfig, _super);
    function PerformConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PerformConfig;
}(PerformConfigStruct_1.default));
exports.default = PerformConfig;
},{"../ConfigStructs/PerformConfigStruct":252}],102:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayActConfigStruct_1 = require("../ConfigStructs/PlayActConfigStruct");
var PlayActConfig = /** @class */ (function (_super) {
    __extends(PlayActConfig, _super);
    function PlayActConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayActConfig;
}(PlayActConfigStruct_1.default));
exports.default = PlayActConfig;
},{"../ConfigStructs/PlayActConfigStruct":253}],103:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerDefaultConfigStruct_1 = require("../ConfigStructs/PlayerDefaultConfigStruct");
var PlayerDefaultConfig = /** @class */ (function (_super) {
    __extends(PlayerDefaultConfig, _super);
    function PlayerDefaultConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerDefaultConfig;
}(PlayerDefaultConfigStruct_1.default));
exports.default = PlayerDefaultConfig;
},{"../ConfigStructs/PlayerDefaultConfigStruct":254}],104:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerLevelConfigStruct_1 = require("../ConfigStructs/PlayerLevelConfigStruct");
var PlayerLevelConfig = /** @class */ (function (_super) {
    __extends(PlayerLevelConfig, _super);
    function PlayerLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerLevelConfig;
}(PlayerLevelConfigStruct_1.default));
exports.default = PlayerLevelConfig;
},{"../ConfigStructs/PlayerLevelConfigStruct":255}],105:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PopUpConfigStruct_1 = require("../ConfigStructs/PopUpConfigStruct");
var PopUpConfig = /** @class */ (function (_super) {
    __extends(PopUpConfig, _super);
    function PopUpConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PopUpConfig;
}(PopUpConfigStruct_1.default));
exports.default = PopUpConfig;
},{"../ConfigStructs/PopUpConfigStruct":256}],106:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PositionConfigStruct_1 = require("../ConfigStructs/PositionConfigStruct");
var PositionConfig = /** @class */ (function (_super) {
    __extends(PositionConfig, _super);
    function PositionConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PositionConfig;
}(PositionConfigStruct_1.default));
exports.default = PositionConfig;
},{"../ConfigStructs/PositionConfigStruct":257}],107:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceConfigStruct_1 = require("../ConfigStructs/ProduceConfigStruct");
var ProduceConfig = /** @class */ (function (_super) {
    __extends(ProduceConfig, _super);
    function ProduceConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceConfig;
}(ProduceConfigStruct_1.default));
exports.default = ProduceConfig;
},{"../ConfigStructs/ProduceConfigStruct":258}],108:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceLevelConfigStruct_1 = require("../ConfigStructs/ProduceLevelConfigStruct");
var ProduceLevelConfig = /** @class */ (function (_super) {
    __extends(ProduceLevelConfig, _super);
    function ProduceLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceLevelConfig;
}(ProduceLevelConfigStruct_1.default));
exports.default = ProduceLevelConfig;
},{"../ConfigStructs/ProduceLevelConfigStruct":259}],109:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceLvConfigStruct_1 = require("../ConfigStructs/ProduceLvConfigStruct");
var ProduceLvConfig = /** @class */ (function (_super) {
    __extends(ProduceLvConfig, _super);
    function ProduceLvConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceLvConfig;
}(ProduceLvConfigStruct_1.default));
exports.default = ProduceLvConfig;
},{"../ConfigStructs/ProduceLvConfigStruct":260}],110:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceSouvenirConfigStruct_1 = require("../ConfigStructs/ProduceSouvenirConfigStruct");
var ProduceSouvenirConfig = /** @class */ (function (_super) {
    __extends(ProduceSouvenirConfig, _super);
    function ProduceSouvenirConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceSouvenirConfig;
}(ProduceSouvenirConfigStruct_1.default));
exports.default = ProduceSouvenirConfig;
},{"../ConfigStructs/ProduceSouvenirConfigStruct":261}],111:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PropertyConfigStruct_1 = require("../ConfigStructs/PropertyConfigStruct");
var PropertyConfig = /** @class */ (function (_super) {
    __extends(PropertyConfig, _super);
    function PropertyConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PropertyConfig;
}(PropertyConfigStruct_1.default));
exports.default = PropertyConfig;
},{"../ConfigStructs/PropertyConfigStruct":262}],112:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RandomNameConfigStruct_1 = require("../ConfigStructs/RandomNameConfigStruct");
var RandomNameConfig = /** @class */ (function (_super) {
    __extends(RandomNameConfig, _super);
    function RandomNameConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RandomNameConfig;
}(RandomNameConfigStruct_1.default));
exports.default = RandomNameConfig;
},{"../ConfigStructs/RandomNameConfigStruct":263}],113:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RandomSurnameConfigStruct_1 = require("../ConfigStructs/RandomSurnameConfigStruct");
var RandomSurnameConfig = /** @class */ (function (_super) {
    __extends(RandomSurnameConfig, _super);
    function RandomSurnameConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RandomSurnameConfig;
}(RandomSurnameConfigStruct_1.default));
exports.default = RandomSurnameConfig;
},{"../ConfigStructs/RandomSurnameConfigStruct":264}],114:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RechargeConfigStruct_1 = require("../ConfigStructs/RechargeConfigStruct");
var RechargeConfig = /** @class */ (function (_super) {
    __extends(RechargeConfig, _super);
    function RechargeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RechargeConfig;
}(RechargeConfigStruct_1.default));
exports.default = RechargeConfig;
},{"../ConfigStructs/RechargeConfigStruct":265}],115:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RoadshowConfigStruct_1 = require("../ConfigStructs/RoadshowConfigStruct");
var RoadshowConfig = /** @class */ (function (_super) {
    __extends(RoadshowConfig, _super);
    function RoadshowConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RoadshowConfig;
}(RoadshowConfigStruct_1.default));
exports.default = RoadshowConfig;
},{"../ConfigStructs/RoadshowConfigStruct":266}],116:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SecretaryConfigStruct_1 = require("../ConfigStructs/SecretaryConfigStruct");
var SecretaryConfig = /** @class */ (function (_super) {
    __extends(SecretaryConfig, _super);
    function SecretaryConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SecretaryConfig;
}(SecretaryConfigStruct_1.default));
exports.default = SecretaryConfig;
},{"../ConfigStructs/SecretaryConfigStruct":267}],117:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SecretaryGiftConfigStruct_1 = require("../ConfigStructs/SecretaryGiftConfigStruct");
var SecretaryGiftConfig = /** @class */ (function (_super) {
    __extends(SecretaryGiftConfig, _super);
    function SecretaryGiftConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SecretaryGiftConfig;
}(SecretaryGiftConfigStruct_1.default));
exports.default = SecretaryGiftConfig;
},{"../ConfigStructs/SecretaryGiftConfigStruct":268}],118:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SecretaryTypeConfigStruct_1 = require("../ConfigStructs/SecretaryTypeConfigStruct");
var SecretaryTypeConfig = /** @class */ (function (_super) {
    __extends(SecretaryTypeConfig, _super);
    function SecretaryTypeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SecretaryTypeConfig;
}(SecretaryTypeConfigStruct_1.default));
exports.default = SecretaryTypeConfig;
},{"../ConfigStructs/SecretaryTypeConfigStruct":269}],119:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ServerRankingListConfigStruct_1 = require("../ConfigStructs/ServerRankingListConfigStruct");
var ServerRankingListConfig = /** @class */ (function (_super) {
    __extends(ServerRankingListConfig, _super);
    function ServerRankingListConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ServerRankingListConfig;
}(ServerRankingListConfigStruct_1.default));
exports.default = ServerRankingListConfig;
},{"../ConfigStructs/ServerRankingListConfigStruct":270}],120:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SettingDefaultConfigStruct_1 = require("../ConfigStructs/SettingDefaultConfigStruct");
var SettingDefaultConfig = /** @class */ (function (_super) {
    __extends(SettingDefaultConfig, _super);
    function SettingDefaultConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SettingDefaultConfig;
}(SettingDefaultConfigStruct_1.default));
exports.default = SettingDefaultConfig;
},{"../ConfigStructs/SettingDefaultConfigStruct":271}],121:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShopConfigStruct_1 = require("../ConfigStructs/ShopConfigStruct");
var ShopConfig = /** @class */ (function (_super) {
    __extends(ShopConfig, _super);
    function ShopConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ShopConfig;
}(ShopConfigStruct_1.default));
exports.default = ShopConfig;
},{"../ConfigStructs/ShopConfigStruct":272}],122:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SkillConfigStruct_1 = require("../ConfigStructs/SkillConfigStruct");
var SkillConfig = /** @class */ (function (_super) {
    __extends(SkillConfig, _super);
    function SkillConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillConfig;
}(SkillConfigStruct_1.default));
exports.default = SkillConfig;
},{"../ConfigStructs/SkillConfigStruct":273}],123:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SkillEffectConfigStruct_1 = require("../ConfigStructs/SkillEffectConfigStruct");
var SkillEffectConfig = /** @class */ (function (_super) {
    __extends(SkillEffectConfig, _super);
    function SkillEffectConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillEffectConfig;
}(SkillEffectConfigStruct_1.default));
exports.default = SkillEffectConfig;
},{"../ConfigStructs/SkillEffectConfigStruct":274}],124:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SkillTriggerConfigStruct_1 = require("../ConfigStructs/SkillTriggerConfigStruct");
var SkillTriggerConfig = /** @class */ (function (_super) {
    __extends(SkillTriggerConfig, _super);
    function SkillTriggerConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillTriggerConfig;
}(SkillTriggerConfigStruct_1.default));
exports.default = SkillTriggerConfig;
},{"../ConfigStructs/SkillTriggerConfigStruct":275}],125:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SpeakConfigStruct_1 = require("../ConfigStructs/SpeakConfigStruct");
var SpeakConfig = /** @class */ (function (_super) {
    __extends(SpeakConfig, _super);
    function SpeakConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SpeakConfig;
}(SpeakConfigStruct_1.default));
exports.default = SpeakConfig;
},{"../ConfigStructs/SpeakConfigStruct":276}],126:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StarConConfigStruct_1 = require("../ConfigStructs/StarConConfigStruct");
var StarConConfig = /** @class */ (function (_super) {
    __extends(StarConConfig, _super);
    function StarConConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StarConConfig;
}(StarConConfigStruct_1.default));
exports.default = StarConConfig;
},{"../ConfigStructs/StarConConfigStruct":277}],127:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryCharactersConfigStruct_1 = require("../ConfigStructs/StoryCharactersConfigStruct");
var StoryCharactersConfig = /** @class */ (function (_super) {
    __extends(StoryCharactersConfig, _super);
    function StoryCharactersConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryCharactersConfig;
}(StoryCharactersConfigStruct_1.default));
exports.default = StoryCharactersConfig;
},{"../ConfigStructs/StoryCharactersConfigStruct":278}],128:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryConfigStruct_1 = require("../ConfigStructs/StoryConfigStruct");
var StoryConfig = /** @class */ (function (_super) {
    __extends(StoryConfig, _super);
    function StoryConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryConfig;
}(StoryConfigStruct_1.default));
exports.default = StoryConfig;
},{"../ConfigStructs/StoryConfigStruct":279}],129:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryGoalsConfigStruct_1 = require("../ConfigStructs/StoryGoalsConfigStruct");
var StoryGoalsConfig = /** @class */ (function (_super) {
    __extends(StoryGoalsConfig, _super);
    function StoryGoalsConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryGoalsConfig;
}(StoryGoalsConfigStruct_1.default));
exports.default = StoryGoalsConfig;
},{"../ConfigStructs/StoryGoalsConfigStruct":280}],130:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryRateConfigStruct_1 = require("../ConfigStructs/StoryRateConfigStruct");
var StoryRateConfig = /** @class */ (function (_super) {
    __extends(StoryRateConfig, _super);
    function StoryRateConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryRateConfig;
}(StoryRateConfigStruct_1.default));
exports.default = StoryRateConfig;
},{"../ConfigStructs/StoryRateConfigStruct":281}],131:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryRefreshPriceConfigStruct_1 = require("../ConfigStructs/StoryRefreshPriceConfigStruct");
var StoryRefreshPriceConfig = /** @class */ (function (_super) {
    __extends(StoryRefreshPriceConfig, _super);
    function StoryRefreshPriceConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryRefreshPriceConfig;
}(StoryRefreshPriceConfigStruct_1.default));
exports.default = StoryRefreshPriceConfig;
},{"../ConfigStructs/StoryRefreshPriceConfigStruct":282}],132:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryStackItemConfigStruct_1 = require("../ConfigStructs/StoryStackItemConfigStruct");
var StoryStackItemConfig = /** @class */ (function (_super) {
    __extends(StoryStackItemConfig, _super);
    function StoryStackItemConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryStackItemConfig;
}(StoryStackItemConfigStruct_1.default));
exports.default = StoryStackItemConfig;
},{"../ConfigStructs/StoryStackItemConfigStruct":283}],133:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryStackSortConfigStruct_1 = require("../ConfigStructs/StoryStackSortConfigStruct");
var StoryStackSortConfig = /** @class */ (function (_super) {
    __extends(StoryStackSortConfig, _super);
    function StoryStackSortConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryStackSortConfig;
}(StoryStackSortConfigStruct_1.default));
exports.default = StoryStackSortConfig;
},{"../ConfigStructs/StoryStackSortConfigStruct":284}],134:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StorylineConfigStruct_1 = require("../ConfigStructs/StorylineConfigStruct");
var StorylineConfig = /** @class */ (function (_super) {
    __extends(StorylineConfig, _super);
    function StorylineConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StorylineConfig;
}(StorylineConfigStruct_1.default));
exports.default = StorylineConfig;
},{"../ConfigStructs/StorylineConfigStruct":285}],135:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StreetConfigStruct_1 = require("../ConfigStructs/StreetConfigStruct");
var StreetConfig = /** @class */ (function (_super) {
    __extends(StreetConfig, _super);
    function StreetConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StreetConfig;
}(StreetConfigStruct_1.default));
exports.default = StreetConfig;
},{"../ConfigStructs/StreetConfigStruct":286}],136:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SysTimeConfigStruct_1 = require("../ConfigStructs/SysTimeConfigStruct");
var SysTimeConfig = /** @class */ (function (_super) {
    __extends(SysTimeConfig, _super);
    function SysTimeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SysTimeConfig;
}(SysTimeConfigStruct_1.default));
exports.default = SysTimeConfig;
},{"../ConfigStructs/SysTimeConfigStruct":287}],137:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TaskConfigStruct_1 = require("../ConfigStructs/TaskConfigStruct");
var TaskConfig = /** @class */ (function (_super) {
    __extends(TaskConfig, _super);
    function TaskConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TaskConfig;
}(TaskConfigStruct_1.default));
exports.default = TaskConfig;
},{"../ConfigStructs/TaskConfigStruct":288}],138:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TestConfigStruct_1 = require("../ConfigStructs/TestConfigStruct");
var TestConfig = /** @class */ (function (_super) {
    __extends(TestConfig, _super);
    function TestConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TestConfig;
}(TestConfigStruct_1.default));
exports.default = TestConfig;
},{"../ConfigStructs/TestConfigStruct":289}],139:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TurntableCompleteConfigStruct_1 = require("../ConfigStructs/TurntableCompleteConfigStruct");
var TurntableCompleteConfig = /** @class */ (function (_super) {
    __extends(TurntableCompleteConfig, _super);
    function TurntableCompleteConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TurntableCompleteConfig;
}(TurntableCompleteConfigStruct_1.default));
exports.default = TurntableCompleteConfig;
},{"../ConfigStructs/TurntableCompleteConfigStruct":290}],140:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TurntableRewardConfigStruct_1 = require("../ConfigStructs/TurntableRewardConfigStruct");
var TurntableRewardConfig = /** @class */ (function (_super) {
    __extends(TurntableRewardConfig, _super);
    function TurntableRewardConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TurntableRewardConfig;
}(TurntableRewardConfigStruct_1.default));
exports.default = TurntableRewardConfig;
},{"../ConfigStructs/TurntableRewardConfigStruct":291}],141:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TypeConfigStruct_1 = require("../ConfigStructs/TypeConfigStruct");
var TypeConfig = /** @class */ (function (_super) {
    __extends(TypeConfig, _super);
    function TypeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TypeConfig;
}(TypeConfigStruct_1.default));
exports.default = TypeConfig;
},{"../ConfigStructs/TypeConfigStruct":292}],142:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var UnlockConfigStruct_1 = require("../ConfigStructs/UnlockConfigStruct");
var Game_1 = require("../../Game");
var UnlockConfig = /** @class */ (function (_super) {
    __extends(UnlockConfig, _super);
    function UnlockConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(UnlockConfig.prototype, "menuConfig", {
        get: function () {
            return Game_1.default.config.menu.getConfig(this.menu_id);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "lockvisible", {
        get: function () {
            return this.show_type == 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isUnlock", {
        get: function () {
            var menuConfig = this.menuConfig;
            if (menuConfig) {
                return menuConfig.isUnlock;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isNew", {
        get: function () {
            var menuConfig = this.menuConfig;
            if (menuConfig) {
                return menuConfig.isNew;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "menuId", {
        get: function () {
            return this.menu_id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isOpenShow", {
        //是否展示
        get: function () {
            for (var index = 0; index < this.open_show.length; index++) {
                var element = this.open_show[index];
                if (element == 1) {
                    return true;
                }
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "isOpenShowMenu", {
        get: function () {
            for (var index = 0; index < this.open_show.length; index++) {
                var element = this.open_show[index];
                if (element == 2) {
                    return true;
                }
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfig.prototype, "iconUrl", {
        // 	菜单图片	
        get: function () {
            var url = "";
            if (this.item_id > 0) {
                url = Game_1.default.config.item.getItemIcon(this.item_id);
            }
            else if (this.menuConfig) {
                url = this.menuConfig.iconUrl;
            }
            return url;
        },
        enumerable: true,
        configurable: true
    });
    return UnlockConfig;
}(UnlockConfigStruct_1.default));
exports.default = UnlockConfig;
},{"../../Game":623,"../ConfigStructs/UnlockConfigStruct":293}],143:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var VisitConfigStruct_1 = require("../ConfigStructs/VisitConfigStruct");
var VisitConfig = /** @class */ (function (_super) {
    __extends(VisitConfig, _super);
    function VisitConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VisitConfig;
}(VisitConfigStruct_1.default));
exports.default = VisitConfig;
},{"../ConfigStructs/VisitConfigStruct":294}],144:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WeeklyQuestConfigStruct_1 = require("../ConfigStructs/WeeklyQuestConfigStruct");
var WeeklyQuestConfig = /** @class */ (function (_super) {
    __extends(WeeklyQuestConfig, _super);
    function WeeklyQuestConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WeeklyQuestConfig;
}(WeeklyQuestConfigStruct_1.default));
exports.default = WeeklyQuestConfig;
},{"../ConfigStructs/WeeklyQuestConfigStruct":295}],145:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WelfareConfigStruct_1 = require("../ConfigStructs/WelfareConfigStruct");
var WelfareConfig = /** @class */ (function (_super) {
    __extends(WelfareConfig, _super);
    function WelfareConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WelfareConfig;
}(WelfareConfigStruct_1.default));
exports.default = WelfareConfig;
},{"../ConfigStructs/WelfareConfigStruct":296}],146:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WheelDropConfigStruct_1 = require("../ConfigStructs/WheelDropConfigStruct");
var WheelDropConfig = /** @class */ (function (_super) {
    __extends(WheelDropConfig, _super);
    function WheelDropConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WheelDropConfig;
}(WheelDropConfigStruct_1.default));
exports.default = WheelDropConfig;
},{"../ConfigStructs/WheelDropConfigStruct":297}],147:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterAbilityConfigStruct_1 = require("../ConfigStructs/WriterAbilityConfigStruct");
var WriterAbilityConfig = /** @class */ (function (_super) {
    __extends(WriterAbilityConfig, _super);
    function WriterAbilityConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterAbilityConfig;
}(WriterAbilityConfigStruct_1.default));
exports.default = WriterAbilityConfig;
},{"../ConfigStructs/WriterAbilityConfigStruct":298}],148:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterAdaptEffectConfigStruct_1 = require("../ConfigStructs/WriterAdaptEffectConfigStruct");
var WriterAdaptEffectConfig = /** @class */ (function (_super) {
    __extends(WriterAdaptEffectConfig, _super);
    function WriterAdaptEffectConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterAdaptEffectConfig;
}(WriterAdaptEffectConfigStruct_1.default));
exports.default = WriterAdaptEffectConfig;
},{"../ConfigStructs/WriterAdaptEffectConfigStruct":299}],149:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterConfigStruct_1 = require("../ConfigStructs/WriterConfigStruct");
var WriterConfig = /** @class */ (function (_super) {
    __extends(WriterConfig, _super);
    function WriterConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterConfig;
}(WriterConfigStruct_1.default));
exports.default = WriterConfig;
},{"../ConfigStructs/WriterConfigStruct":300}],150:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterLevelConfigStruct_1 = require("../ConfigStructs/WriterLevelConfigStruct");
var WriterLevelConfig = /** @class */ (function (_super) {
    __extends(WriterLevelConfig, _super);
    function WriterLevelConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterLevelConfig;
}(WriterLevelConfigStruct_1.default));
exports.default = WriterLevelConfig;
},{"../ConfigStructs/WriterLevelConfigStruct":301}],151:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterSkillConfigStruct_1 = require("../ConfigStructs/WriterSkillConfigStruct");
var WriterSkillConfig = /** @class */ (function (_super) {
    __extends(WriterSkillConfig, _super);
    function WriterSkillConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterSkillConfig;
}(WriterSkillConfigStruct_1.default));
exports.default = WriterSkillConfig;
},{"../ConfigStructs/WriterSkillConfigStruct":302}],152:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterStationConfigStruct_1 = require("../ConfigStructs/WriterStationConfigStruct");
var WriterStationConfig = /** @class */ (function (_super) {
    __extends(WriterStationConfig, _super);
    function WriterStationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterStationConfig;
}(WriterStationConfigStruct_1.default));
exports.default = WriterStationConfig;
},{"../ConfigStructs/WriterStationConfigStruct":303}],153:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigManagerList_1 = require("./ConfigManagerList");
var Signal_1 = require("../Libs/signals/Signal");
var Typed3Signal_1 = require("../Libs/signals/Typed3Signal");
var ConfigManager = /** @class */ (function (_super) {
    __extends(ConfigManager, _super);
    function ConfigManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 消息--加载进度
        _this.sLoadProgress = new Typed3Signal_1.default();
        // 消息--加载完成
        _this.sLoaded = new Signal_1.default();
        // 加载进度
        _this.loadProgress = 0;
        return _this;
    }
    ConfigManager.prototype.loadAllAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.loadAll();
                        _this.sLoaded.addOnce(function () {
                            resolve();
                        }, _this);
                    })];
            });
        });
    };
    // 加载所有
    ConfigManager.prototype.loadAll = function () {
        var _this = this;
        this.loadProgress = 0;
        var count = this.renders.length;
        var loadedNum = 0;
        var onItemLoaded = function () {
            loadedNum++;
            _this.loadProgress = loadedNum / count;
            _this.sLoadProgress.dispatch(loadedNum, count, _this.loadProgress);
            if (loadedNum >= count) {
                _this.onGameLoadedAll();
            }
        };
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].load(this.configLoader, onItemLoaded);
        }
    };
    // 加载完成所有
    ConfigManager.prototype.onGameLoadedAll = function () {
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].onGameLoadedAll();
        }
        this.sLoaded.dispatch();
    };
    return ConfigManager;
}(ConfigManagerList_1.default));
exports.default = ConfigManager;
},{"../Libs/signals/Signal":683,"../Libs/signals/Typed3Signal":684,"./ConfigManagerList":154}],154:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActionConfigReader_1 = require("./ReaderExtends/ActionConfigReader");
var ActivitiesConfigReader_1 = require("./ReaderExtends/ActivitiesConfigReader");
var ActorConfigReader_1 = require("./ReaderExtends/ActorConfigReader");
var ActorAideConfigReader_1 = require("./ReaderExtends/ActorAideConfigReader");
var ActorAideattachConfigReader_1 = require("./ReaderExtends/ActorAideattachConfigReader");
var ActorAideIntimacyConfigReader_1 = require("./ReaderExtends/ActorAideIntimacyConfigReader");
var ActorAideLvConfigReader_1 = require("./ReaderExtends/ActorAideLvConfigReader");
var ActorAssetsConfigReader_1 = require("./ReaderExtends/ActorAssetsConfigReader");
var ActorAssetsLvConfigReader_1 = require("./ReaderExtends/ActorAssetsLvConfigReader");
var ActorLevelConfigReader_1 = require("./ReaderExtends/ActorLevelConfigReader");
var ActorLoyaltyConfigReader_1 = require("./ReaderExtends/ActorLoyaltyConfigReader");
var ActorProficiencyConfigReader_1 = require("./ReaderExtends/ActorProficiencyConfigReader");
var ActorTrainConfigReader_1 = require("./ReaderExtends/ActorTrainConfigReader");
var ActorTrainLvConfigReader_1 = require("./ReaderExtends/ActorTrainLvConfigReader");
var AvatarConfigReader_1 = require("./ReaderExtends/AvatarConfigReader");
var BattleLevelConfigReader_1 = require("./ReaderExtends/BattleLevelConfigReader");
var BattleShootTypeConfigReader_1 = require("./ReaderExtends/BattleShootTypeConfigReader");
var BlockLevelConfigReader_1 = require("./ReaderExtends/BlockLevelConfigReader");
var BlockRankingListConfigReader_1 = require("./ReaderExtends/BlockRankingListConfigReader");
var BlockWordsConfigReader_1 = require("./ReaderExtends/BlockWordsConfigReader");
var BlockWordsIIConfigReader_1 = require("./ReaderExtends/BlockWordsIIConfigReader");
var BoxTargetConfigReader_1 = require("./ReaderExtends/BoxTargetConfigReader");
var BuildingEffectConfigReader_1 = require("./ReaderExtends/BuildingEffectConfigReader");
var BuildingLevelConfigReader_1 = require("./ReaderExtends/BuildingLevelConfigReader");
var BusinessConfigReader_1 = require("./ReaderExtends/BusinessConfigReader");
var CinemaConfigReader_1 = require("./ReaderExtends/CinemaConfigReader");
var CityConfigReader_1 = require("./ReaderExtends/CityConfigReader");
var CityPopularizeConfigReader_1 = require("./ReaderExtends/CityPopularizeConfigReader");
var CompleteConfigReader_1 = require("./ReaderExtends/CompleteConfigReader");
var CompoundConfigReader_1 = require("./ReaderExtends/CompoundConfigReader");
var CooperateTaskConfigReader_1 = require("./ReaderExtends/CooperateTaskConfigReader");
var CountActivitiesConfigReader_1 = require("./ReaderExtends/CountActivitiesConfigReader");
var CountryConfigReader_1 = require("./ReaderExtends/CountryConfigReader");
var CupPackageConfigReader_1 = require("./ReaderExtends/CupPackageConfigReader");
var DailySignConfigReader_1 = require("./ReaderExtends/DailySignConfigReader");
var DailySignTrailerConfigReader_1 = require("./ReaderExtends/DailySignTrailerConfigReader");
var DialogueConfigReader_1 = require("./ReaderExtends/DialogueConfigReader");
var EventConfigReader_1 = require("./ReaderExtends/EventConfigReader");
var FloorConfigReader_1 = require("./ReaderExtends/FloorConfigReader");
var GameLevelConfigReader_1 = require("./ReaderExtends/GameLevelConfigReader");
var GameRandomNameConfigReader_1 = require("./ReaderExtends/GameRandomNameConfigReader");
var GameVersionConfigReader_1 = require("./ReaderExtends/GameVersionConfigReader");
var GiftPackageConfigReader_1 = require("./ReaderExtends/GiftPackageConfigReader");
var GlobalConfigReader_1 = require("./ReaderExtends/GlobalConfigReader");
var GuidePathConfigReader_1 = require("./ReaderExtends/GuidePathConfigReader");
var GuidesystemConfigReader_1 = require("./ReaderExtends/GuidesystemConfigReader");
var HeadPortraitConfigReader_1 = require("./ReaderExtends/HeadPortraitConfigReader");
var ImageConfigReader_1 = require("./ReaderExtends/ImageConfigReader");
var InitialActorConfigReader_1 = require("./ReaderExtends/InitialActorConfigReader");
var ItemConfigReader_1 = require("./ReaderExtends/ItemConfigReader");
var LanguageTypeConfigReader_1 = require("./ReaderExtends/LanguageTypeConfigReader");
var LevelGiftPackageConfigReader_1 = require("./ReaderExtends/LevelGiftPackageConfigReader");
var LimitActorConfigReader_1 = require("./ReaderExtends/LimitActorConfigReader");
var LoaderConfigReader_1 = require("./ReaderExtends/LoaderConfigReader");
var LoadingConfigReader_1 = require("./ReaderExtends/LoadingConfigReader");
var MailConfigReader_1 = require("./ReaderExtends/MailConfigReader");
var MaintaskConfigReader_1 = require("./ReaderExtends/MaintaskConfigReader");
var MeetingGameConfigReader_1 = require("./ReaderExtends/MeetingGameConfigReader");
var MeetingRewardsConfigReader_1 = require("./ReaderExtends/MeetingRewardsConfigReader");
var MenuConfigReader_1 = require("./ReaderExtends/MenuConfigReader");
var MenuIndexConfigReader_1 = require("./ReaderExtends/MenuIndexConfigReader");
var MonthCardConfigReader_1 = require("./ReaderExtends/MonthCardConfigReader");
var MovieAdaptationMsgConfigReader_1 = require("./ReaderExtends/MovieAdaptationMsgConfigReader");
var MovieAudienceEvaluationConfigReader_1 = require("./ReaderExtends/MovieAudienceEvaluationConfigReader");
var MovieDropConfigReader_1 = require("./ReaderExtends/MovieDropConfigReader");
var MovieExpectConfigReader_1 = require("./ReaderExtends/MovieExpectConfigReader");
var MovieLicenceConfigReader_1 = require("./ReaderExtends/MovieLicenceConfigReader");
var MovieMediaVisitConfigReader_1 = require("./ReaderExtends/MovieMediaVisitConfigReader");
var MovieMidiaEvaluationConfigReader_1 = require("./ReaderExtends/MovieMidiaEvaluationConfigReader");
var MovieMidiaEvaluationMsgConfigReader_1 = require("./ReaderExtends/MovieMidiaEvaluationMsgConfigReader");
var MoviePopularizeConfigReader_1 = require("./ReaderExtends/MoviePopularizeConfigReader");
var MovieShootTypeConfigReader_1 = require("./ReaderExtends/MovieShootTypeConfigReader");
var MsgConfigReader_1 = require("./ReaderExtends/MsgConfigReader");
var MsgChatConfigReader_1 = require("./ReaderExtends/MsgChatConfigReader");
var MsgProtoErrorConfigReader_1 = require("./ReaderExtends/MsgProtoErrorConfigReader");
var NpcConfigReader_1 = require("./ReaderExtends/NpcConfigReader");
var OperationTasksConfigReader_1 = require("./ReaderExtends/OperationTasksConfigReader");
var OperationTasksScoreConfigReader_1 = require("./ReaderExtends/OperationTasksScoreConfigReader");
var OperationTasksTermsConfigReader_1 = require("./ReaderExtends/OperationTasksTermsConfigReader");
var OrderConfigReader_1 = require("./ReaderExtends/OrderConfigReader");
var OscarConfigReader_1 = require("./ReaderExtends/OscarConfigReader");
var PerformConfigReader_1 = require("./ReaderExtends/PerformConfigReader");
var PlayActConfigReader_1 = require("./ReaderExtends/PlayActConfigReader");
var PlayerDefaultConfigReader_1 = require("./ReaderExtends/PlayerDefaultConfigReader");
var PlayerLevelConfigReader_1 = require("./ReaderExtends/PlayerLevelConfigReader");
var PopUpConfigReader_1 = require("./ReaderExtends/PopUpConfigReader");
var PositionConfigReader_1 = require("./ReaderExtends/PositionConfigReader");
var ProduceConfigReader_1 = require("./ReaderExtends/ProduceConfigReader");
var ProduceLevelConfigReader_1 = require("./ReaderExtends/ProduceLevelConfigReader");
var ProduceLvConfigReader_1 = require("./ReaderExtends/ProduceLvConfigReader");
var ProduceSouvenirConfigReader_1 = require("./ReaderExtends/ProduceSouvenirConfigReader");
var PropertyConfigReader_1 = require("./ReaderExtends/PropertyConfigReader");
var RandomNameConfigReader_1 = require("./ReaderExtends/RandomNameConfigReader");
var RandomSurnameConfigReader_1 = require("./ReaderExtends/RandomSurnameConfigReader");
var RechargeConfigReader_1 = require("./ReaderExtends/RechargeConfigReader");
var RoadshowConfigReader_1 = require("./ReaderExtends/RoadshowConfigReader");
var SecretaryConfigReader_1 = require("./ReaderExtends/SecretaryConfigReader");
var SecretaryGiftConfigReader_1 = require("./ReaderExtends/SecretaryGiftConfigReader");
var SecretaryTypeConfigReader_1 = require("./ReaderExtends/SecretaryTypeConfigReader");
var ServerRankingListConfigReader_1 = require("./ReaderExtends/ServerRankingListConfigReader");
var SettingDefaultConfigReader_1 = require("./ReaderExtends/SettingDefaultConfigReader");
var ShopConfigReader_1 = require("./ReaderExtends/ShopConfigReader");
var SkillConfigReader_1 = require("./ReaderExtends/SkillConfigReader");
var SkillEffectConfigReader_1 = require("./ReaderExtends/SkillEffectConfigReader");
var SkillTriggerConfigReader_1 = require("./ReaderExtends/SkillTriggerConfigReader");
var SpeakConfigReader_1 = require("./ReaderExtends/SpeakConfigReader");
var StarConConfigReader_1 = require("./ReaderExtends/StarConConfigReader");
var StoryConfigReader_1 = require("./ReaderExtends/StoryConfigReader");
var StoryCharactersConfigReader_1 = require("./ReaderExtends/StoryCharactersConfigReader");
var StoryGoalsConfigReader_1 = require("./ReaderExtends/StoryGoalsConfigReader");
var StorylineConfigReader_1 = require("./ReaderExtends/StorylineConfigReader");
var StoryRateConfigReader_1 = require("./ReaderExtends/StoryRateConfigReader");
var StoryRefreshPriceConfigReader_1 = require("./ReaderExtends/StoryRefreshPriceConfigReader");
var StoryStackItemConfigReader_1 = require("./ReaderExtends/StoryStackItemConfigReader");
var StoryStackSortConfigReader_1 = require("./ReaderExtends/StoryStackSortConfigReader");
var StreetConfigReader_1 = require("./ReaderExtends/StreetConfigReader");
var SysTimeConfigReader_1 = require("./ReaderExtends/SysTimeConfigReader");
var TaskConfigReader_1 = require("./ReaderExtends/TaskConfigReader");
var TestConfigReader_1 = require("./ReaderExtends/TestConfigReader");
var TurntableCompleteConfigReader_1 = require("./ReaderExtends/TurntableCompleteConfigReader");
var TurntableRewardConfigReader_1 = require("./ReaderExtends/TurntableRewardConfigReader");
var TypeConfigReader_1 = require("./ReaderExtends/TypeConfigReader");
var UnlockConfigReader_1 = require("./ReaderExtends/UnlockConfigReader");
var VisitConfigReader_1 = require("./ReaderExtends/VisitConfigReader");
var WeeklyQuestConfigReader_1 = require("./ReaderExtends/WeeklyQuestConfigReader");
var WelfareConfigReader_1 = require("./ReaderExtends/WelfareConfigReader");
var WheelDropConfigReader_1 = require("./ReaderExtends/WheelDropConfigReader");
var WriterConfigReader_1 = require("./ReaderExtends/WriterConfigReader");
var WriterAbilityConfigReader_1 = require("./ReaderExtends/WriterAbilityConfigReader");
var WriterAdaptEffectConfigReader_1 = require("./ReaderExtends/WriterAdaptEffectConfigReader");
var WriterLevelConfigReader_1 = require("./ReaderExtends/WriterLevelConfigReader");
var WriterSkillConfigReader_1 = require("./ReaderExtends/WriterSkillConfigReader");
var WriterStationConfigReader_1 = require("./ReaderExtends/WriterStationConfigReader");
/// 配置读取器列表
var ConfigManagerList = /** @class */ (function () {
    function ConfigManagerList() {
        // 读取器列表
        this.renders = [];
        this.action = new ActionConfigReader_1.default();
        this.activities = new ActivitiesConfigReader_1.default();
        this.actor = new ActorConfigReader_1.default();
        this.actorAide = new ActorAideConfigReader_1.default();
        this.actorAideattach = new ActorAideattachConfigReader_1.default();
        this.actorAideIntimacy = new ActorAideIntimacyConfigReader_1.default();
        this.actorAideLv = new ActorAideLvConfigReader_1.default();
        this.actorAssets = new ActorAssetsConfigReader_1.default();
        this.actorAssetsLv = new ActorAssetsLvConfigReader_1.default();
        this.actorLevel = new ActorLevelConfigReader_1.default();
        this.actorLoyalty = new ActorLoyaltyConfigReader_1.default();
        this.actorProficiency = new ActorProficiencyConfigReader_1.default();
        this.actorTrain = new ActorTrainConfigReader_1.default();
        this.actorTrainLv = new ActorTrainLvConfigReader_1.default();
        this.avatar = new AvatarConfigReader_1.default();
        this.battleLevel = new BattleLevelConfigReader_1.default();
        this.battleShootType = new BattleShootTypeConfigReader_1.default();
        this.blockLevel = new BlockLevelConfigReader_1.default();
        this.blockRankingList = new BlockRankingListConfigReader_1.default();
        this.blockWords = new BlockWordsConfigReader_1.default();
        this.blockWordsII = new BlockWordsIIConfigReader_1.default();
        this.boxTarget = new BoxTargetConfigReader_1.default();
        this.buildingEffect = new BuildingEffectConfigReader_1.default();
        this.buildingLevel = new BuildingLevelConfigReader_1.default();
        this.business = new BusinessConfigReader_1.default();
        this.cinema = new CinemaConfigReader_1.default();
        this.city = new CityConfigReader_1.default();
        this.cityPopularize = new CityPopularizeConfigReader_1.default();
        this.complete = new CompleteConfigReader_1.default();
        this.compound = new CompoundConfigReader_1.default();
        this.cooperateTask = new CooperateTaskConfigReader_1.default();
        this.countActivities = new CountActivitiesConfigReader_1.default();
        this.country = new CountryConfigReader_1.default();
        this.cupPackage = new CupPackageConfigReader_1.default();
        this.dailySign = new DailySignConfigReader_1.default();
        this.dailySignTrailer = new DailySignTrailerConfigReader_1.default();
        this.dialogue = new DialogueConfigReader_1.default();
        this.event = new EventConfigReader_1.default();
        this.floor = new FloorConfigReader_1.default();
        this.gameLevel = new GameLevelConfigReader_1.default();
        this.gameRandomName = new GameRandomNameConfigReader_1.default();
        this.gameVersion = new GameVersionConfigReader_1.default();
        this.giftPackage = new GiftPackageConfigReader_1.default();
        this.global = new GlobalConfigReader_1.default();
        this.guidePath = new GuidePathConfigReader_1.default();
        this.guidesystem = new GuidesystemConfigReader_1.default();
        this.headPortrait = new HeadPortraitConfigReader_1.default();
        this.image = new ImageConfigReader_1.default();
        this.initialActor = new InitialActorConfigReader_1.default();
        this.item = new ItemConfigReader_1.default();
        this.languageType = new LanguageTypeConfigReader_1.default();
        this.levelGiftPackage = new LevelGiftPackageConfigReader_1.default();
        this.limitActor = new LimitActorConfigReader_1.default();
        this.loader = new LoaderConfigReader_1.default();
        this.loading = new LoadingConfigReader_1.default();
        this.mail = new MailConfigReader_1.default();
        this.maintask = new MaintaskConfigReader_1.default();
        this.meetingGame = new MeetingGameConfigReader_1.default();
        this.meetingRewards = new MeetingRewardsConfigReader_1.default();
        this.menu = new MenuConfigReader_1.default();
        this.menuIndex = new MenuIndexConfigReader_1.default();
        this.monthCard = new MonthCardConfigReader_1.default();
        this.movieAdaptationMsg = new MovieAdaptationMsgConfigReader_1.default();
        this.movieAudienceEvaluation = new MovieAudienceEvaluationConfigReader_1.default();
        this.movieDrop = new MovieDropConfigReader_1.default();
        this.movieExpect = new MovieExpectConfigReader_1.default();
        this.movieLicence = new MovieLicenceConfigReader_1.default();
        this.movieMediaVisit = new MovieMediaVisitConfigReader_1.default();
        this.movieMidiaEvaluation = new MovieMidiaEvaluationConfigReader_1.default();
        this.movieMidiaEvaluationMsg = new MovieMidiaEvaluationMsgConfigReader_1.default();
        this.moviePopularize = new MoviePopularizeConfigReader_1.default();
        this.movieShootType = new MovieShootTypeConfigReader_1.default();
        this.msg = new MsgConfigReader_1.default();
        this.msgChat = new MsgChatConfigReader_1.default();
        this.msgProtoError = new MsgProtoErrorConfigReader_1.default();
        this.npc = new NpcConfigReader_1.default();
        this.operationTasks = new OperationTasksConfigReader_1.default();
        this.operationTasksScore = new OperationTasksScoreConfigReader_1.default();
        this.operationTasksTerms = new OperationTasksTermsConfigReader_1.default();
        this.order = new OrderConfigReader_1.default();
        this.oscar = new OscarConfigReader_1.default();
        this.perform = new PerformConfigReader_1.default();
        this.playAct = new PlayActConfigReader_1.default();
        this.playerDefault = new PlayerDefaultConfigReader_1.default();
        this.playerLevel = new PlayerLevelConfigReader_1.default();
        this.popUp = new PopUpConfigReader_1.default();
        this.position = new PositionConfigReader_1.default();
        this.produce = new ProduceConfigReader_1.default();
        this.produceLevel = new ProduceLevelConfigReader_1.default();
        this.produceLv = new ProduceLvConfigReader_1.default();
        this.produceSouvenir = new ProduceSouvenirConfigReader_1.default();
        this.property = new PropertyConfigReader_1.default();
        this.randomName = new RandomNameConfigReader_1.default();
        this.randomSurname = new RandomSurnameConfigReader_1.default();
        this.recharge = new RechargeConfigReader_1.default();
        this.roadshow = new RoadshowConfigReader_1.default();
        this.secretary = new SecretaryConfigReader_1.default();
        this.secretaryGift = new SecretaryGiftConfigReader_1.default();
        this.secretaryType = new SecretaryTypeConfigReader_1.default();
        this.serverRankingList = new ServerRankingListConfigReader_1.default();
        this.settingDefault = new SettingDefaultConfigReader_1.default();
        this.shop = new ShopConfigReader_1.default();
        this.skill = new SkillConfigReader_1.default();
        this.skillEffect = new SkillEffectConfigReader_1.default();
        this.skillTrigger = new SkillTriggerConfigReader_1.default();
        this.speak = new SpeakConfigReader_1.default();
        this.starCon = new StarConConfigReader_1.default();
        this.story = new StoryConfigReader_1.default();
        this.storyCharacters = new StoryCharactersConfigReader_1.default();
        this.storyGoals = new StoryGoalsConfigReader_1.default();
        this.storyline = new StorylineConfigReader_1.default();
        this.storyRate = new StoryRateConfigReader_1.default();
        this.storyRefreshPrice = new StoryRefreshPriceConfigReader_1.default();
        this.storyStackItem = new StoryStackItemConfigReader_1.default();
        this.storyStackSort = new StoryStackSortConfigReader_1.default();
        this.street = new StreetConfigReader_1.default();
        this.sysTime = new SysTimeConfigReader_1.default();
        this.task = new TaskConfigReader_1.default();
        this.test = new TestConfigReader_1.default();
        this.turntableComplete = new TurntableCompleteConfigReader_1.default();
        this.turntableReward = new TurntableRewardConfigReader_1.default();
        this.type = new TypeConfigReader_1.default();
        this.unlock = new UnlockConfigReader_1.default();
        this.visit = new VisitConfigReader_1.default();
        this.weeklyQuest = new WeeklyQuestConfigReader_1.default();
        this.welfare = new WelfareConfigReader_1.default();
        this.wheelDrop = new WheelDropConfigReader_1.default();
        this.writer = new WriterConfigReader_1.default();
        this.writerAbility = new WriterAbilityConfigReader_1.default();
        this.writerAdaptEffect = new WriterAdaptEffectConfigReader_1.default();
        this.writerLevel = new WriterLevelConfigReader_1.default();
        this.writerSkill = new WriterSkillConfigReader_1.default();
        this.writerStation = new WriterStationConfigReader_1.default();
    }
    // 初始化读取器列表
    ConfigManagerList.prototype.initList = function () {
        this.renders.push(this.action);
        this.renders.push(this.activities);
        this.renders.push(this.actor);
        this.renders.push(this.actorAide);
        this.renders.push(this.actorAideattach);
        this.renders.push(this.actorAideIntimacy);
        this.renders.push(this.actorAideLv);
        this.renders.push(this.actorAssets);
        this.renders.push(this.actorAssetsLv);
        this.renders.push(this.actorLevel);
        this.renders.push(this.actorLoyalty);
        this.renders.push(this.actorProficiency);
        this.renders.push(this.actorTrain);
        this.renders.push(this.actorTrainLv);
        this.renders.push(this.avatar);
        this.renders.push(this.battleLevel);
        this.renders.push(this.battleShootType);
        this.renders.push(this.blockLevel);
        this.renders.push(this.blockRankingList);
        this.renders.push(this.blockWords);
        this.renders.push(this.blockWordsII);
        this.renders.push(this.boxTarget);
        this.renders.push(this.buildingEffect);
        this.renders.push(this.buildingLevel);
        this.renders.push(this.business);
        this.renders.push(this.cinema);
        this.renders.push(this.city);
        this.renders.push(this.cityPopularize);
        this.renders.push(this.complete);
        this.renders.push(this.compound);
        this.renders.push(this.cooperateTask);
        this.renders.push(this.countActivities);
        this.renders.push(this.country);
        this.renders.push(this.cupPackage);
        this.renders.push(this.dailySign);
        this.renders.push(this.dailySignTrailer);
        this.renders.push(this.dialogue);
        this.renders.push(this.event);
        this.renders.push(this.floor);
        this.renders.push(this.gameLevel);
        this.renders.push(this.gameRandomName);
        this.renders.push(this.gameVersion);
        this.renders.push(this.giftPackage);
        this.renders.push(this.global);
        this.renders.push(this.guidePath);
        this.renders.push(this.guidesystem);
        this.renders.push(this.headPortrait);
        this.renders.push(this.image);
        this.renders.push(this.initialActor);
        this.renders.push(this.item);
        this.renders.push(this.languageType);
        this.renders.push(this.levelGiftPackage);
        this.renders.push(this.limitActor);
        this.renders.push(this.loader);
        this.renders.push(this.loading);
        this.renders.push(this.mail);
        this.renders.push(this.maintask);
        this.renders.push(this.meetingGame);
        this.renders.push(this.meetingRewards);
        this.renders.push(this.menu);
        this.renders.push(this.menuIndex);
        this.renders.push(this.monthCard);
        this.renders.push(this.movieAdaptationMsg);
        this.renders.push(this.movieAudienceEvaluation);
        this.renders.push(this.movieDrop);
        this.renders.push(this.movieExpect);
        this.renders.push(this.movieLicence);
        this.renders.push(this.movieMediaVisit);
        this.renders.push(this.movieMidiaEvaluation);
        this.renders.push(this.movieMidiaEvaluationMsg);
        this.renders.push(this.moviePopularize);
        this.renders.push(this.movieShootType);
        this.renders.push(this.msg);
        this.renders.push(this.msgChat);
        this.renders.push(this.msgProtoError);
        this.renders.push(this.npc);
        this.renders.push(this.operationTasks);
        this.renders.push(this.operationTasksScore);
        this.renders.push(this.operationTasksTerms);
        this.renders.push(this.order);
        this.renders.push(this.oscar);
        this.renders.push(this.perform);
        this.renders.push(this.playAct);
        this.renders.push(this.playerDefault);
        this.renders.push(this.playerLevel);
        this.renders.push(this.popUp);
        this.renders.push(this.position);
        this.renders.push(this.produce);
        this.renders.push(this.produceLevel);
        this.renders.push(this.produceLv);
        this.renders.push(this.produceSouvenir);
        this.renders.push(this.property);
        this.renders.push(this.randomName);
        this.renders.push(this.randomSurname);
        this.renders.push(this.recharge);
        this.renders.push(this.roadshow);
        this.renders.push(this.secretary);
        this.renders.push(this.secretaryGift);
        this.renders.push(this.secretaryType);
        this.renders.push(this.serverRankingList);
        this.renders.push(this.settingDefault);
        this.renders.push(this.shop);
        this.renders.push(this.skill);
        this.renders.push(this.skillEffect);
        this.renders.push(this.skillTrigger);
        this.renders.push(this.speak);
        this.renders.push(this.starCon);
        this.renders.push(this.story);
        this.renders.push(this.storyCharacters);
        this.renders.push(this.storyGoals);
        this.renders.push(this.storyline);
        this.renders.push(this.storyRate);
        this.renders.push(this.storyRefreshPrice);
        this.renders.push(this.storyStackItem);
        this.renders.push(this.storyStackSort);
        this.renders.push(this.street);
        this.renders.push(this.sysTime);
        this.renders.push(this.task);
        this.renders.push(this.test);
        this.renders.push(this.turntableComplete);
        this.renders.push(this.turntableReward);
        this.renders.push(this.type);
        this.renders.push(this.unlock);
        this.renders.push(this.visit);
        this.renders.push(this.weeklyQuest);
        this.renders.push(this.welfare);
        this.renders.push(this.wheelDrop);
        this.renders.push(this.writer);
        this.renders.push(this.writerAbility);
        this.renders.push(this.writerAdaptEffect);
        this.renders.push(this.writerLevel);
        this.renders.push(this.writerSkill);
        this.renders.push(this.writerStation);
    };
    return ConfigManagerList;
}());
exports.default = ConfigManagerList;
},{"./ReaderExtends/ActionConfigReader":316,"./ReaderExtends/ActivitiesConfigReader":317,"./ReaderExtends/ActorAideConfigReader":318,"./ReaderExtends/ActorAideIntimacyConfigReader":319,"./ReaderExtends/ActorAideLvConfigReader":320,"./ReaderExtends/ActorAideattachConfigReader":321,"./ReaderExtends/ActorAssetsConfigReader":322,"./ReaderExtends/ActorAssetsLvConfigReader":323,"./ReaderExtends/ActorConfigReader":324,"./ReaderExtends/ActorLevelConfigReader":325,"./ReaderExtends/ActorLoyaltyConfigReader":326,"./ReaderExtends/ActorProficiencyConfigReader":327,"./ReaderExtends/ActorTrainConfigReader":328,"./ReaderExtends/ActorTrainLvConfigReader":329,"./ReaderExtends/AvatarConfigReader":330,"./ReaderExtends/BattleLevelConfigReader":331,"./ReaderExtends/BattleShootTypeConfigReader":332,"./ReaderExtends/BlockLevelConfigReader":333,"./ReaderExtends/BlockRankingListConfigReader":334,"./ReaderExtends/BlockWordsConfigReader":335,"./ReaderExtends/BlockWordsIIConfigReader":336,"./ReaderExtends/BoxTargetConfigReader":337,"./ReaderExtends/BuildingEffectConfigReader":338,"./ReaderExtends/BuildingLevelConfigReader":339,"./ReaderExtends/BusinessConfigReader":340,"./ReaderExtends/CinemaConfigReader":341,"./ReaderExtends/CityConfigReader":342,"./ReaderExtends/CityPopularizeConfigReader":343,"./ReaderExtends/CompleteConfigReader":344,"./ReaderExtends/CompoundConfigReader":345,"./ReaderExtends/CooperateTaskConfigReader":346,"./ReaderExtends/CountActivitiesConfigReader":347,"./ReaderExtends/CountryConfigReader":348,"./ReaderExtends/CupPackageConfigReader":349,"./ReaderExtends/DailySignConfigReader":350,"./ReaderExtends/DailySignTrailerConfigReader":351,"./ReaderExtends/DialogueConfigReader":352,"./ReaderExtends/EventConfigReader":353,"./ReaderExtends/FloorConfigReader":354,"./ReaderExtends/GameLevelConfigReader":355,"./ReaderExtends/GameRandomNameConfigReader":356,"./ReaderExtends/GameVersionConfigReader":357,"./ReaderExtends/GiftPackageConfigReader":358,"./ReaderExtends/GlobalConfigReader":359,"./ReaderExtends/GuidePathConfigReader":360,"./ReaderExtends/GuidesystemConfigReader":361,"./ReaderExtends/HeadPortraitConfigReader":362,"./ReaderExtends/ImageConfigReader":363,"./ReaderExtends/InitialActorConfigReader":364,"./ReaderExtends/ItemConfigReader":365,"./ReaderExtends/LanguageTypeConfigReader":366,"./ReaderExtends/LevelGiftPackageConfigReader":367,"./ReaderExtends/LimitActorConfigReader":368,"./ReaderExtends/LoaderConfigReader":369,"./ReaderExtends/LoadingConfigReader":370,"./ReaderExtends/MailConfigReader":371,"./ReaderExtends/MaintaskConfigReader":372,"./ReaderExtends/MeetingGameConfigReader":373,"./ReaderExtends/MeetingRewardsConfigReader":374,"./ReaderExtends/MenuConfigReader":375,"./ReaderExtends/MenuIndexConfigReader":376,"./ReaderExtends/MonthCardConfigReader":377,"./ReaderExtends/MovieAdaptationMsgConfigReader":378,"./ReaderExtends/MovieAudienceEvaluationConfigReader":379,"./ReaderExtends/MovieDropConfigReader":380,"./ReaderExtends/MovieExpectConfigReader":381,"./ReaderExtends/MovieLicenceConfigReader":382,"./ReaderExtends/MovieMediaVisitConfigReader":383,"./ReaderExtends/MovieMidiaEvaluationConfigReader":384,"./ReaderExtends/MovieMidiaEvaluationMsgConfigReader":385,"./ReaderExtends/MoviePopularizeConfigReader":386,"./ReaderExtends/MovieShootTypeConfigReader":387,"./ReaderExtends/MsgChatConfigReader":388,"./ReaderExtends/MsgConfigReader":389,"./ReaderExtends/MsgProtoErrorConfigReader":390,"./ReaderExtends/NpcConfigReader":391,"./ReaderExtends/OperationTasksConfigReader":392,"./ReaderExtends/OperationTasksScoreConfigReader":393,"./ReaderExtends/OperationTasksTermsConfigReader":394,"./ReaderExtends/OrderConfigReader":395,"./ReaderExtends/OscarConfigReader":396,"./ReaderExtends/PerformConfigReader":397,"./ReaderExtends/PlayActConfigReader":398,"./ReaderExtends/PlayerDefaultConfigReader":399,"./ReaderExtends/PlayerLevelConfigReader":400,"./ReaderExtends/PopUpConfigReader":401,"./ReaderExtends/PositionConfigReader":402,"./ReaderExtends/ProduceConfigReader":403,"./ReaderExtends/ProduceLevelConfigReader":404,"./ReaderExtends/ProduceLvConfigReader":405,"./ReaderExtends/ProduceSouvenirConfigReader":406,"./ReaderExtends/PropertyConfigReader":407,"./ReaderExtends/RandomNameConfigReader":408,"./ReaderExtends/RandomSurnameConfigReader":409,"./ReaderExtends/RechargeConfigReader":410,"./ReaderExtends/RoadshowConfigReader":411,"./ReaderExtends/SecretaryConfigReader":412,"./ReaderExtends/SecretaryGiftConfigReader":413,"./ReaderExtends/SecretaryTypeConfigReader":414,"./ReaderExtends/ServerRankingListConfigReader":415,"./ReaderExtends/SettingDefaultConfigReader":416,"./ReaderExtends/ShopConfigReader":417,"./ReaderExtends/SkillConfigReader":418,"./ReaderExtends/SkillEffectConfigReader":419,"./ReaderExtends/SkillTriggerConfigReader":420,"./ReaderExtends/SpeakConfigReader":421,"./ReaderExtends/StarConConfigReader":422,"./ReaderExtends/StoryCharactersConfigReader":423,"./ReaderExtends/StoryConfigReader":424,"./ReaderExtends/StoryGoalsConfigReader":425,"./ReaderExtends/StoryRateConfigReader":426,"./ReaderExtends/StoryRefreshPriceConfigReader":427,"./ReaderExtends/StoryStackItemConfigReader":428,"./ReaderExtends/StoryStackSortConfigReader":429,"./ReaderExtends/StorylineConfigReader":430,"./ReaderExtends/StreetConfigReader":431,"./ReaderExtends/SysTimeConfigReader":432,"./ReaderExtends/TaskConfigReader":433,"./ReaderExtends/TestConfigReader":434,"./ReaderExtends/TurntableCompleteConfigReader":435,"./ReaderExtends/TurntableRewardConfigReader":436,"./ReaderExtends/TypeConfigReader":437,"./ReaderExtends/UnlockConfigReader":438,"./ReaderExtends/VisitConfigReader":439,"./ReaderExtends/WeeklyQuestConfigReader":440,"./ReaderExtends/WelfareConfigReader":441,"./ReaderExtends/WheelDropConfigReader":442,"./ReaderExtends/WriterAbilityConfigReader":443,"./ReaderExtends/WriterAdaptEffectConfigReader":444,"./ReaderExtends/WriterConfigReader":445,"./ReaderExtends/WriterLevelConfigReader":446,"./ReaderExtends/WriterSkillConfigReader":447,"./ReaderExtends/WriterStationConfigReader":448}],155:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActionConfigStruct = /** @class */ (function (_super) {
    __extends(ActionConfigStruct, _super);
    function ActionConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActionConfigStruct;
}(BaseConfig_1.default));
exports.default = ActionConfigStruct;
},{"../BaseConfig":2}],156:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ActivitiesConfigStruct = /** @class */ (function (_super) {
    __extends(ActivitiesConfigStruct, _super);
    function ActivitiesConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ActivitiesConfigStruct.prototype, "activities_name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_activities_name;
            var value = Game_1.default.lang.getValue("activities", this.id, "activities_name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_activities_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivitiesConfigStruct.prototype, "activities_info", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_activities_info;
            var value = Game_1.default.lang.getValue("activities", this.id, "activities_info");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_activities_info;
        },
        enumerable: true,
        configurable: true
    });
    return ActivitiesConfigStruct;
}(BaseConfig_1.default));
exports.default = ActivitiesConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],157:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ActorAideConfigStruct = /** @class */ (function (_super) {
    __extends(ActorAideConfigStruct, _super);
    function ActorAideConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ActorAideConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_name;
            var value = Game_1.default.lang.getValue("actorAide", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return ActorAideConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorAideConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],158:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorAideIntimacyConfigStruct = /** @class */ (function (_super) {
    __extends(ActorAideIntimacyConfigStruct, _super);
    function ActorAideIntimacyConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideIntimacyConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorAideIntimacyConfigStruct;
},{"../BaseConfig":2}],159:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorAideLvConfigStruct = /** @class */ (function (_super) {
    __extends(ActorAideLvConfigStruct, _super);
    function ActorAideLvConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideLvConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorAideLvConfigStruct;
},{"../BaseConfig":2}],160:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorAideattachConfigStruct = /** @class */ (function (_super) {
    __extends(ActorAideattachConfigStruct, _super);
    function ActorAideattachConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideattachConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorAideattachConfigStruct;
},{"../BaseConfig":2}],161:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorAssetsConfigStruct = /** @class */ (function (_super) {
    __extends(ActorAssetsConfigStruct, _super);
    function ActorAssetsConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAssetsConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorAssetsConfigStruct;
},{"../BaseConfig":2}],162:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorAssetsLvConfigStruct = /** @class */ (function (_super) {
    __extends(ActorAssetsLvConfigStruct, _super);
    function ActorAssetsLvConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAssetsLvConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorAssetsLvConfigStruct;
},{"../BaseConfig":2}],163:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ActorConfigStruct = /** @class */ (function (_super) {
    __extends(ActorConfigStruct, _super);
    function ActorConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ActorConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_name;
            var value = Game_1.default.lang.getValue("actor", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActorConfigStruct.prototype, "tips", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_tips;
            var value = Game_1.default.lang.getValue("actor", this.id, "tips");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_tips;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActorConfigStruct.prototype, "getway", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_getway;
            var value = Game_1.default.lang.getValue("actor", this.id, "getway");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_getway;
        },
        enumerable: true,
        configurable: true
    });
    return ActorConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],164:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorLevelConfigStruct = /** @class */ (function (_super) {
    __extends(ActorLevelConfigStruct, _super);
    function ActorLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorLevelConfigStruct;
},{"../BaseConfig":2}],165:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorLoyaltyConfigStruct = /** @class */ (function (_super) {
    __extends(ActorLoyaltyConfigStruct, _super);
    function ActorLoyaltyConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorLoyaltyConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorLoyaltyConfigStruct;
},{"../BaseConfig":2}],166:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorProficiencyConfigStruct = /** @class */ (function (_super) {
    __extends(ActorProficiencyConfigStruct, _super);
    function ActorProficiencyConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorProficiencyConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorProficiencyConfigStruct;
},{"../BaseConfig":2}],167:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ActorTrainConfigStruct = /** @class */ (function (_super) {
    __extends(ActorTrainConfigStruct, _super);
    function ActorTrainConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ActorTrainConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_name;
            var value = Game_1.default.lang.getValue("actorTrain", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActorTrainConfigStruct.prototype, "scene_name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_scene_name;
            var value = Game_1.default.lang.getValue("actorTrain", this.id, "scene_name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_scene_name;
        },
        enumerable: true,
        configurable: true
    });
    return ActorTrainConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorTrainConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],168:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ActorTrainLvConfigStruct = /** @class */ (function (_super) {
    __extends(ActorTrainLvConfigStruct, _super);
    function ActorTrainLvConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorTrainLvConfigStruct;
}(BaseConfig_1.default));
exports.default = ActorTrainLvConfigStruct;
},{"../BaseConfig":2}],169:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var AvatarConfigStruct = /** @class */ (function (_super) {
    __extends(AvatarConfigStruct, _super);
    function AvatarConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(AvatarConfigStruct.prototype, "icon", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_icon;
            var value = Game_1.default.lang.getValue("avatar", this.id, "icon");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_icon;
        },
        enumerable: true,
        configurable: true
    });
    return AvatarConfigStruct;
}(BaseConfig_1.default));
exports.default = AvatarConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],170:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var BattleLevelConfigStruct = /** @class */ (function (_super) {
    __extends(BattleLevelConfigStruct, _super);
    function BattleLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BattleLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = BattleLevelConfigStruct;
},{"../BaseConfig":2}],171:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var BattleShootTypeConfigStruct = /** @class */ (function (_super) {
    __extends(BattleShootTypeConfigStruct, _super);
    function BattleShootTypeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BattleShootTypeConfigStruct;
}(BaseConfig_1.default));
exports.default = BattleShootTypeConfigStruct;
},{"../BaseConfig":2}],172:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var BlockLevelConfigStruct = /** @class */ (function (_super) {
    __extends(BlockLevelConfigStruct, _super);
    function BlockLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BlockLevelConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("blockLevel", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BlockLevelConfigStruct.prototype, "current_msg", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_current_msg;
            var value = Game_1.default.lang.getValue("blockLevel", this.id, "current_msg");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_current_msg;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BlockLevelConfigStruct.prototype, "next_msg", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_next_msg;
            var value = Game_1.default.lang.getValue("blockLevel", this.id, "next_msg");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_next_msg;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BlockLevelConfigStruct.prototype, "name_tips", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name_tips;
            var value = Game_1.default.lang.getValue("blockLevel", this.id, "name_tips");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name_tips;
        },
        enumerable: true,
        configurable: true
    });
    return BlockLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = BlockLevelConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],173:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var BlockRankingListConfigStruct = /** @class */ (function (_super) {
    __extends(BlockRankingListConfigStruct, _super);
    function BlockRankingListConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockRankingListConfigStruct;
}(BaseConfig_1.default));
exports.default = BlockRankingListConfigStruct;
},{"../BaseConfig":2}],174:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var BlockWordsConfigStruct = /** @class */ (function (_super) {
    __extends(BlockWordsConfigStruct, _super);
    function BlockWordsConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockWordsConfigStruct;
}(BaseConfig_1.default));
exports.default = BlockWordsConfigStruct;
},{"../BaseConfig":2}],175:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var BlockWordsIIConfigStruct = /** @class */ (function (_super) {
    __extends(BlockWordsIIConfigStruct, _super);
    function BlockWordsIIConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockWordsIIConfigStruct;
}(BaseConfig_1.default));
exports.default = BlockWordsIIConfigStruct;
},{"../BaseConfig":2}],176:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var BoxTargetConfigStruct = /** @class */ (function (_super) {
    __extends(BoxTargetConfigStruct, _super);
    function BoxTargetConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BoxTargetConfigStruct.prototype, "dialog", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_dialog;
            var value = Game_1.default.lang.getValue("boxTarget", this.id, "dialog");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_dialog;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BoxTargetConfigStruct.prototype, "title", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_title;
            var value = Game_1.default.lang.getValue("boxTarget", this.id, "title");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BoxTargetConfigStruct.prototype, "targettext", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_targettext;
            var value = Game_1.default.lang.getValue("boxTarget", this.id, "targettext");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_targettext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BoxTargetConfigStruct.prototype, "timetext", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_timetext;
            var value = Game_1.default.lang.getValue("boxTarget", this.id, "timetext");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_timetext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BoxTargetConfigStruct.prototype, "reward", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_reward;
            var value = Game_1.default.lang.getValue("boxTarget", this.id, "reward");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_reward;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BoxTargetConfigStruct.prototype, "final", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_final;
            var value = Game_1.default.lang.getValue("boxTarget", this.id, "final");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_final;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BoxTargetConfigStruct.prototype, "button", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_button;
            var value = Game_1.default.lang.getValue("boxTarget", this.id, "button");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_button;
        },
        enumerable: true,
        configurable: true
    });
    return BoxTargetConfigStruct;
}(BaseConfig_1.default));
exports.default = BoxTargetConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],177:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var BuildingEffectConfigStruct = /** @class */ (function (_super) {
    __extends(BuildingEffectConfigStruct, _super);
    function BuildingEffectConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BuildingEffectConfigStruct.prototype, "effect_des", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_effect_des;
            var value = Game_1.default.lang.getValue("buildingEffect", this.id, "effect_des");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_effect_des;
        },
        enumerable: true,
        configurable: true
    });
    return BuildingEffectConfigStruct;
}(BaseConfig_1.default));
exports.default = BuildingEffectConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],178:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var BuildingLevelConfigStruct = /** @class */ (function (_super) {
    __extends(BuildingLevelConfigStruct, _super);
    function BuildingLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BuildingLevelConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("buildingLevel", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BuildingLevelConfigStruct.prototype, "effect_tips", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_effect_tips;
            var value = Game_1.default.lang.getValue("buildingLevel", this.id, "effect_tips");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_effect_tips;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BuildingLevelConfigStruct.prototype, "level_tips", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_level_tips;
            var value = Game_1.default.lang.getValue("buildingLevel", this.id, "level_tips");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_level_tips;
        },
        enumerable: true,
        configurable: true
    });
    return BuildingLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = BuildingLevelConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],179:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var BusinessConfigStruct = /** @class */ (function (_super) {
    __extends(BusinessConfigStruct, _super);
    function BusinessConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BusinessConfigStruct.prototype, "from", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_from;
            var value = Game_1.default.lang.getValue("business", this.id, "from");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_from;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BusinessConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("business", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BusinessConfigStruct.prototype, "description", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_description;
            var value = Game_1.default.lang.getValue("business", this.id, "description");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_description;
        },
        enumerable: true,
        configurable: true
    });
    return BusinessConfigStruct;
}(BaseConfig_1.default));
exports.default = BusinessConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],180:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var CinemaConfigStruct = /** @class */ (function (_super) {
    __extends(CinemaConfigStruct, _super);
    function CinemaConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CinemaConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("cinema", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return CinemaConfigStruct;
}(BaseConfig_1.default));
exports.default = CinemaConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],181:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var CityConfigStruct = /** @class */ (function (_super) {
    __extends(CityConfigStruct, _super);
    function CityConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CityConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("city", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return CityConfigStruct;
}(BaseConfig_1.default));
exports.default = CityConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],182:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var CityPopularizeConfigStruct = /** @class */ (function (_super) {
    __extends(CityPopularizeConfigStruct, _super);
    function CityPopularizeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CityPopularizeConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("cityPopularize", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return CityPopularizeConfigStruct;
}(BaseConfig_1.default));
exports.default = CityPopularizeConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],183:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var CompleteConfigStruct = /** @class */ (function (_super) {
    __extends(CompleteConfigStruct, _super);
    function CompleteConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompleteConfigStruct;
}(BaseConfig_1.default));
exports.default = CompleteConfigStruct;
},{"../BaseConfig":2}],184:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var CompoundConfigStruct = /** @class */ (function (_super) {
    __extends(CompoundConfigStruct, _super);
    function CompoundConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompoundConfigStruct;
}(BaseConfig_1.default));
exports.default = CompoundConfigStruct;
},{"../BaseConfig":2}],185:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var CooperateTaskConfigStruct = /** @class */ (function (_super) {
    __extends(CooperateTaskConfigStruct, _super);
    function CooperateTaskConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CooperateTaskConfigStruct;
}(BaseConfig_1.default));
exports.default = CooperateTaskConfigStruct;
},{"../BaseConfig":2}],186:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var CountActivitiesConfigStruct = /** @class */ (function (_super) {
    __extends(CountActivitiesConfigStruct, _super);
    function CountActivitiesConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CountActivitiesConfigStruct;
}(BaseConfig_1.default));
exports.default = CountActivitiesConfigStruct;
},{"../BaseConfig":2}],187:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var CountryConfigStruct = /** @class */ (function (_super) {
    __extends(CountryConfigStruct, _super);
    function CountryConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CountryConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("country", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return CountryConfigStruct;
}(BaseConfig_1.default));
exports.default = CountryConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],188:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var CupPackageConfigStruct = /** @class */ (function (_super) {
    __extends(CupPackageConfigStruct, _super);
    function CupPackageConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CupPackageConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("cupPackage", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CupPackageConfigStruct.prototype, "des", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_des;
            var value = Game_1.default.lang.getValue("cupPackage", this.id, "des");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_des;
        },
        enumerable: true,
        configurable: true
    });
    return CupPackageConfigStruct;
}(BaseConfig_1.default));
exports.default = CupPackageConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],189:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTActorCharacter_1 = require("../ConfigExtends/DTActorCharacter");
var DTActorCharacterStruct = /** @class */ (function (_super) {
    __extends(DTActorCharacterStruct, _super);
    function DTActorCharacterStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTActorCharacterStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTActorCharacter_1.default();
        config.character = csvGetInt(csv, 0);
        config.lv = csvGetInt(csv, 1);
        config.property = csvGetInt(csv, 2);
        return config;
    };
    DTActorCharacterStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTActorCharacter_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTActorCharacterStruct;
}(BaseConfig_1.default));
exports.default = DTActorCharacterStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTActorCharacter":38}],190:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTActorFeature_1 = require("../ConfigExtends/DTActorFeature");
var DTActorFeatureStruct = /** @class */ (function (_super) {
    __extends(DTActorFeatureStruct, _super);
    function DTActorFeatureStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTActorFeatureStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTActorFeature_1.default();
        config.feature = csvGetInt(csv, 0);
        config.lv = csvGetInt(csv, 1);
        config.property = csvGetInt(csv, 2);
        return config;
    };
    DTActorFeatureStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTActorFeature_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTActorFeatureStruct;
}(BaseConfig_1.default));
exports.default = DTActorFeatureStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTActorFeature":39}],191:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTActorSkill_1 = require("../ConfigExtends/DTActorSkill");
var DTActorSkillStruct = /** @class */ (function (_super) {
    __extends(DTActorSkillStruct, _super);
    function DTActorSkillStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTActorSkillStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTActorSkill_1.default();
        config.group_id = csvGetInt(csv, 0);
        config.lv = csvGetInt(csv, 1);
        return config;
    };
    DTActorSkillStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTActorSkill_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTActorSkillStruct;
}(BaseConfig_1.default));
exports.default = DTActorSkillStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTActorSkill":40}],192:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTActorStory_1 = require("../ConfigExtends/DTActorStory");
var DTActorStoryStruct = /** @class */ (function (_super) {
    __extends(DTActorStoryStruct, _super);
    function DTActorStoryStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTActorStoryStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTActorStory_1.default();
        config.story = csvGetInt(csv, 0);
        config.lv = csvGetInt(csv, 1);
        config.property = csvGetInt(csv, 2);
        return config;
    };
    DTActorStoryStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTActorStory_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTActorStoryStruct;
}(BaseConfig_1.default));
exports.default = DTActorStoryStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTActorStory":41}],193:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTBuildingReq_1 = require("../ConfigExtends/DTBuildingReq");
var DTBuildingReqStruct = /** @class */ (function (_super) {
    __extends(DTBuildingReqStruct, _super);
    function DTBuildingReqStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTBuildingReqStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTBuildingReq_1.default();
        config.type = csvGetInt(csv, 0);
        config.level = csvGetInt(csv, 1);
        return config;
    };
    DTBuildingReqStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTBuildingReq_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTBuildingReqStruct;
}(BaseConfig_1.default));
exports.default = DTBuildingReqStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTBuildingReq":42}],194:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTDate_1 = require("../ConfigExtends/DTDate");
var DTDateStruct = /** @class */ (function (_super) {
    __extends(DTDateStruct, _super);
    function DTDateStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTDateStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTDate_1.default();
        config.y = csvGetInt(csv, 0);
        config.m = csvGetInt(csv, 1);
        config.d = csvGetInt(csv, 2);
        return config;
    };
    DTDateStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTDate_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTDateStruct;
}(BaseConfig_1.default));
exports.default = DTDateStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTDate":43}],195:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var DTItemNumStruct = /** @class */ (function (_super) {
    __extends(DTItemNumStruct, _super);
    function DTItemNumStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTItemNumStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTItemNum_1.default();
        config.itemId = csvGetInt(csv, 0);
        config.itemNum = csvGetInt(csv, 1);
        return config;
    };
    DTItemNumStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTItemNum_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTItemNumStruct;
}(BaseConfig_1.default));
exports.default = DTItemNumStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTItemNum":44}],196:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTParts_1 = require("../ConfigExtends/DTParts");
var DTPartsStruct = /** @class */ (function (_super) {
    __extends(DTPartsStruct, _super);
    function DTPartsStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTPartsStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTParts_1.default();
        config.v1 = csvGetString(csv, 0);
        config.v2 = csvGetString(csv, 1);
        return config;
    };
    DTPartsStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTParts_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTPartsStruct;
}(BaseConfig_1.default));
exports.default = DTPartsStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTParts":45}],197:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTPerformActoin_1 = require("../ConfigExtends/DTPerformActoin");
var DTPerformActoinStruct = /** @class */ (function (_super) {
    __extends(DTPerformActoinStruct, _super);
    function DTPerformActoinStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTPerformActoinStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTPerformActoin_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        config.v3 = csvGetInt(csv, 2);
        return config;
    };
    DTPerformActoinStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTPerformActoin_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTPerformActoinStruct;
}(BaseConfig_1.default));
exports.default = DTPerformActoinStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTPerformActoin":46}],198:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTPerformSpeak_1 = require("../ConfigExtends/DTPerformSpeak");
var DTPerformSpeakStruct = /** @class */ (function (_super) {
    __extends(DTPerformSpeakStruct, _super);
    function DTPerformSpeakStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTPerformSpeakStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTPerformSpeak_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        config.v3 = csvGetInt(csv, 2);
        return config;
    };
    DTPerformSpeakStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTPerformSpeak_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTPerformSpeakStruct;
}(BaseConfig_1.default));
exports.default = DTPerformSpeakStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTPerformSpeak":47}],199:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTProficiency_1 = require("../ConfigExtends/DTProficiency");
var DTProficiencyStruct = /** @class */ (function (_super) {
    __extends(DTProficiencyStruct, _super);
    function DTProficiencyStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTProficiencyStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTProficiency_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        return config;
    };
    DTProficiencyStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTProficiency_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTProficiencyStruct;
}(BaseConfig_1.default));
exports.default = DTProficiencyStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTProficiency":48}],200:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTStoryEffect_1 = require("../ConfigExtends/DTStoryEffect");
var DTStoryEffectStruct = /** @class */ (function (_super) {
    __extends(DTStoryEffectStruct, _super);
    function DTStoryEffectStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTStoryEffectStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTStoryEffect_1.default();
        config.storyeffect = csvGetInt(csv, 0);
        config.rate = csvGetInt(csv, 1);
        return config;
    };
    DTStoryEffectStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTStoryEffect_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTStoryEffectStruct;
}(BaseConfig_1.default));
exports.default = DTStoryEffectStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTStoryEffect":49}],201:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTStoryNum_1 = require("../ConfigExtends/DTStoryNum");
var DTStoryNumStruct = /** @class */ (function (_super) {
    __extends(DTStoryNumStruct, _super);
    function DTStoryNumStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTStoryNumStruct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTStoryNum_1.default();
        config.star = csvGetInt(csv, 0);
        config.num = csvGetInt(csv, 1);
        return config;
    };
    DTStoryNumStruct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTStoryNum_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTStoryNumStruct;
}(BaseConfig_1.default));
exports.default = DTStoryNumStruct;
},{"../BaseConfig":2,"../ConfigExtends/DTStoryNum":50}],202:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTVector2_1 = require("../ConfigExtends/DTVector2");
var DTVector2Struct = /** @class */ (function (_super) {
    __extends(DTVector2Struct, _super);
    function DTVector2Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTVector2Struct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTVector2_1.default();
        config.x = csvGetFloat(csv, 0);
        config.y = csvGetFloat(csv, 1);
        return config;
    };
    DTVector2Struct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTVector2_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTVector2Struct;
}(BaseConfig_1.default));
exports.default = DTVector2Struct;
},{"../BaseConfig":2,"../ConfigExtends/DTVector2":51}],203:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTlValue2_1 = require("../ConfigExtends/DTlValue2");
var DTlValue2Struct = /** @class */ (function (_super) {
    __extends(DTlValue2Struct, _super);
    function DTlValue2Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTlValue2Struct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTlValue2_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        return config;
    };
    DTlValue2Struct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTlValue2_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTlValue2Struct;
}(BaseConfig_1.default));
exports.default = DTlValue2Struct;
},{"../BaseConfig":2,"../ConfigExtends/DTlValue2":52}],204:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DTlValue3_1 = require("../ConfigExtends/DTlValue3");
var DTlValue3Struct = /** @class */ (function (_super) {
    __extends(DTlValue3Struct, _super);
    function DTlValue3Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DTlValue3Struct.parse = function (txt) {
        var csv = toStringArray(txt);
        var config = new DTlValue3_1.default();
        config.v1 = csvGetInt(csv, 0);
        config.v2 = csvGetInt(csv, 1);
        config.v3 = csvGetInt(csv, 2);
        return config;
    };
    DTlValue3Struct.parseArray = function (txt) {
        var csv = toStringArray(txt, /[;]/);
        var list = [];
        for (var i = 0; i < csv.length; i++) {
            list.push(DTlValue3_1.default.parse(csv[i]));
        }
        return list;
    };
    return DTlValue3Struct;
}(BaseConfig_1.default));
exports.default = DTlValue3Struct;
},{"../BaseConfig":2,"../ConfigExtends/DTlValue3":53}],205:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var DailySignConfigStruct = /** @class */ (function (_super) {
    __extends(DailySignConfigStruct, _super);
    function DailySignConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DailySignConfigStruct;
}(BaseConfig_1.default));
exports.default = DailySignConfigStruct;
},{"../BaseConfig":2}],206:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var DailySignTrailerConfigStruct = /** @class */ (function (_super) {
    __extends(DailySignTrailerConfigStruct, _super);
    function DailySignTrailerConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DailySignTrailerConfigStruct.prototype, "info", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_info;
            var value = Game_1.default.lang.getValue("dailySignTrailer", this.id, "info");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_info;
        },
        enumerable: true,
        configurable: true
    });
    return DailySignTrailerConfigStruct;
}(BaseConfig_1.default));
exports.default = DailySignTrailerConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],207:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var DialogueConfigStruct = /** @class */ (function (_super) {
    __extends(DialogueConfigStruct, _super);
    function DialogueConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DialogueConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_content;
            var value = Game_1.default.lang.getValue("dialogue", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return DialogueConfigStruct;
}(BaseConfig_1.default));
exports.default = DialogueConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],208:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var EventConfigStruct = /** @class */ (function (_super) {
    __extends(EventConfigStruct, _super);
    function EventConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EventConfigStruct;
}(BaseConfig_1.default));
exports.default = EventConfigStruct;
},{"../BaseConfig":2}],209:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var FloorConfigStruct = /** @class */ (function (_super) {
    __extends(FloorConfigStruct, _super);
    function FloorConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FloorConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("floor", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return FloorConfigStruct;
}(BaseConfig_1.default));
exports.default = FloorConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],210:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var GameLevelConfigStruct = /** @class */ (function (_super) {
    __extends(GameLevelConfigStruct, _super);
    function GameLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(GameLevelConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("gameLevel", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return GameLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = GameLevelConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],211:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var GameRandomNameConfigStruct = /** @class */ (function (_super) {
    __extends(GameRandomNameConfigStruct, _super);
    function GameRandomNameConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(GameRandomNameConfigStruct.prototype, "names", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_names;
            var value = Game_1.default.lang.getValue("gameRandomName", this.id, "names");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_names;
        },
        enumerable: true,
        configurable: true
    });
    return GameRandomNameConfigStruct;
}(BaseConfig_1.default));
exports.default = GameRandomNameConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],212:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var GameVersionConfigStruct = /** @class */ (function (_super) {
    __extends(GameVersionConfigStruct, _super);
    function GameVersionConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameVersionConfigStruct;
}(BaseConfig_1.default));
exports.default = GameVersionConfigStruct;
},{"../BaseConfig":2}],213:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var GiftPackageConfigStruct = /** @class */ (function (_super) {
    __extends(GiftPackageConfigStruct, _super);
    function GiftPackageConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GiftPackageConfigStruct;
}(BaseConfig_1.default));
exports.default = GiftPackageConfigStruct;
},{"../BaseConfig":2}],214:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var GlobalConfigStruct = /** @class */ (function (_super) {
    __extends(GlobalConfigStruct, _super);
    function GlobalConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GlobalConfigStruct;
}(BaseConfig_1.default));
exports.default = GlobalConfigStruct;
},{"../BaseConfig":2}],215:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var GuidePathConfigStruct = /** @class */ (function (_super) {
    __extends(GuidePathConfigStruct, _super);
    function GuidePathConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GuidePathConfigStruct;
}(BaseConfig_1.default));
exports.default = GuidePathConfigStruct;
},{"../BaseConfig":2}],216:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var GuidesystemConfigStruct = /** @class */ (function (_super) {
    __extends(GuidesystemConfigStruct, _super);
    function GuidesystemConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(GuidesystemConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_content;
            var value = Game_1.default.lang.getValue("guidesystem", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return GuidesystemConfigStruct;
}(BaseConfig_1.default));
exports.default = GuidesystemConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],217:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var HeadPortraitConfigStruct = /** @class */ (function (_super) {
    __extends(HeadPortraitConfigStruct, _super);
    function HeadPortraitConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(HeadPortraitConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("headPortrait", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return HeadPortraitConfigStruct;
}(BaseConfig_1.default));
exports.default = HeadPortraitConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],218:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ImageConfigStruct = /** @class */ (function (_super) {
    __extends(ImageConfigStruct, _super);
    function ImageConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ImageConfigStruct;
}(BaseConfig_1.default));
exports.default = ImageConfigStruct;
},{"../BaseConfig":2}],219:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var InitialActorConfigStruct = /** @class */ (function (_super) {
    __extends(InitialActorConfigStruct, _super);
    function InitialActorConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InitialActorConfigStruct;
}(BaseConfig_1.default));
exports.default = InitialActorConfigStruct;
},{"../BaseConfig":2}],220:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ItemConfigStruct = /** @class */ (function (_super) {
    __extends(ItemConfigStruct, _super);
    function ItemConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ItemConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("item", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfigStruct.prototype, "item_des", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_item_des;
            var value = Game_1.default.lang.getValue("item", this.id, "item_des");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_item_des;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemConfigStruct.prototype, "get_way_explain", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_get_way_explain;
            var value = Game_1.default.lang.getValue("item", this.id, "get_way_explain");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_get_way_explain;
        },
        enumerable: true,
        configurable: true
    });
    return ItemConfigStruct;
}(BaseConfig_1.default));
exports.default = ItemConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],221:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var LanguageTypeConfigStruct = /** @class */ (function (_super) {
    __extends(LanguageTypeConfigStruct, _super);
    function LanguageTypeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LanguageTypeConfigStruct;
}(BaseConfig_1.default));
exports.default = LanguageTypeConfigStruct;
},{"../BaseConfig":2}],222:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var LevelGiftPackageConfigStruct = /** @class */ (function (_super) {
    __extends(LevelGiftPackageConfigStruct, _super);
    function LevelGiftPackageConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(LevelGiftPackageConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("levelGiftPackage", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return LevelGiftPackageConfigStruct;
}(BaseConfig_1.default));
exports.default = LevelGiftPackageConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],223:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var LimitActorConfigStruct = /** @class */ (function (_super) {
    __extends(LimitActorConfigStruct, _super);
    function LimitActorConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LimitActorConfigStruct;
}(BaseConfig_1.default));
exports.default = LimitActorConfigStruct;
},{"../BaseConfig":2}],224:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var LoaderConfigStruct = /** @class */ (function (_super) {
    __extends(LoaderConfigStruct, _super);
    function LoaderConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoaderConfigStruct;
}(BaseConfig_1.default));
exports.default = LoaderConfigStruct;
},{"../BaseConfig":2}],225:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var LoadingConfigStruct = /** @class */ (function (_super) {
    __extends(LoadingConfigStruct, _super);
    function LoadingConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoadingConfigStruct;
}(BaseConfig_1.default));
exports.default = LoadingConfigStruct;
},{"../BaseConfig":2}],226:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MailConfigStruct = /** @class */ (function (_super) {
    __extends(MailConfigStruct, _super);
    function MailConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MailConfigStruct.prototype, "title", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_title;
            var value = Game_1.default.lang.getValue("mail", this.id, "title");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MailConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_content;
            var value = Game_1.default.lang.getValue("mail", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return MailConfigStruct;
}(BaseConfig_1.default));
exports.default = MailConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],227:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MaintaskConfigStruct = /** @class */ (function (_super) {
    __extends(MaintaskConfigStruct, _super);
    function MaintaskConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MaintaskConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_name;
            var value = Game_1.default.lang.getValue("maintask", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MaintaskConfigStruct.prototype, "info", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_info;
            var value = Game_1.default.lang.getValue("maintask", this.id, "info");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_info;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MaintaskConfigStruct.prototype, "cinfo", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_cinfo;
            var value = Game_1.default.lang.getValue("maintask", this.id, "cinfo");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_cinfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MaintaskConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_content;
            var value = Game_1.default.lang.getValue("maintask", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return MaintaskConfigStruct;
}(BaseConfig_1.default));
exports.default = MaintaskConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],228:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MeetingGameConfigStruct = /** @class */ (function (_super) {
    __extends(MeetingGameConfigStruct, _super);
    function MeetingGameConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MeetingGameConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("meetingGame", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return MeetingGameConfigStruct;
}(BaseConfig_1.default));
exports.default = MeetingGameConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],229:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var MeetingRewardsConfigStruct = /** @class */ (function (_super) {
    __extends(MeetingRewardsConfigStruct, _super);
    function MeetingRewardsConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MeetingRewardsConfigStruct;
}(BaseConfig_1.default));
exports.default = MeetingRewardsConfigStruct;
},{"../BaseConfig":2}],230:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MenuConfigStruct = /** @class */ (function (_super) {
    __extends(MenuConfigStruct, _super);
    function MenuConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MenuConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("menu", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return MenuConfigStruct;
}(BaseConfig_1.default));
exports.default = MenuConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],231:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var MenuIndexConfigStruct = /** @class */ (function (_super) {
    __extends(MenuIndexConfigStruct, _super);
    function MenuIndexConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuIndexConfigStruct;
}(BaseConfig_1.default));
exports.default = MenuIndexConfigStruct;
},{"../BaseConfig":2}],232:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MonthCardConfigStruct = /** @class */ (function (_super) {
    __extends(MonthCardConfigStruct, _super);
    function MonthCardConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MonthCardConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("monthCard", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return MonthCardConfigStruct;
}(BaseConfig_1.default));
exports.default = MonthCardConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],233:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieAdaptationMsgConfigStruct = /** @class */ (function (_super) {
    __extends(MovieAdaptationMsgConfigStruct, _super);
    function MovieAdaptationMsgConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieAdaptationMsgConfigStruct.prototype, "msg1", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_msg1;
            var value = Game_1.default.lang.getValue("movieAdaptationMsg", this.id, "msg1");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_msg1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieAdaptationMsgConfigStruct.prototype, "msg2", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_msg2;
            var value = Game_1.default.lang.getValue("movieAdaptationMsg", this.id, "msg2");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_msg2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieAdaptationMsgConfigStruct.prototype, "msg3", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_msg3;
            var value = Game_1.default.lang.getValue("movieAdaptationMsg", this.id, "msg3");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_msg3;
        },
        enumerable: true,
        configurable: true
    });
    return MovieAdaptationMsgConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieAdaptationMsgConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],234:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieAudienceEvaluationConfigStruct = /** @class */ (function (_super) {
    __extends(MovieAudienceEvaluationConfigStruct, _super);
    function MovieAudienceEvaluationConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieAudienceEvaluationConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("movieAudienceEvaluation", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieAudienceEvaluationConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_content;
            var value = Game_1.default.lang.getValue("movieAudienceEvaluation", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return MovieAudienceEvaluationConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieAudienceEvaluationConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],235:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieDropConfigStruct = /** @class */ (function (_super) {
    __extends(MovieDropConfigStruct, _super);
    function MovieDropConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieDropConfigStruct.prototype, "gain_name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_gain_name;
            var value = Game_1.default.lang.getValue("movieDrop", this.id, "gain_name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_gain_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieDropConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("movieDrop", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return MovieDropConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieDropConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],236:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieExpectConfigStruct = /** @class */ (function (_super) {
    __extends(MovieExpectConfigStruct, _super);
    function MovieExpectConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieExpectConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("movieExpect", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieExpectConfigStruct.prototype, "pic_word", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_pic_word;
            var value = Game_1.default.lang.getValue("movieExpect", this.id, "pic_word");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_pic_word;
        },
        enumerable: true,
        configurable: true
    });
    return MovieExpectConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieExpectConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],237:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var MovieLicenceConfigStruct = /** @class */ (function (_super) {
    __extends(MovieLicenceConfigStruct, _super);
    function MovieLicenceConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieLicenceConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieLicenceConfigStruct;
},{"../BaseConfig":2}],238:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieMediaVisitConfigStruct = /** @class */ (function (_super) {
    __extends(MovieMediaVisitConfigStruct, _super);
    function MovieMediaVisitConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieMediaVisitConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("movieMediaVisit", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return MovieMediaVisitConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieMediaVisitConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],239:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieMidiaEvaluationConfigStruct = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationConfigStruct, _super);
    function MovieMidiaEvaluationConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieMidiaEvaluationConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("movieMidiaEvaluation", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieMidiaEvaluationConfigStruct.prototype, "commentators", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_commentators;
            var value = Game_1.default.lang.getValue("movieMidiaEvaluation", this.id, "commentators");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_commentators;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieMidiaEvaluationConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_content;
            var value = Game_1.default.lang.getValue("movieMidiaEvaluation", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return MovieMidiaEvaluationConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieMidiaEvaluationConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],240:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieMidiaEvaluationMsgConfigStruct = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationMsgConfigStruct, _super);
    function MovieMidiaEvaluationMsgConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieMidiaEvaluationMsgConfigStruct.prototype, "msg", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_msg;
            var value = Game_1.default.lang.getValue("movieMidiaEvaluationMsg", this.id, "msg");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_msg;
        },
        enumerable: true,
        configurable: true
    });
    return MovieMidiaEvaluationMsgConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieMidiaEvaluationMsgConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],241:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var MoviePopularizeConfigStruct = /** @class */ (function (_super) {
    __extends(MoviePopularizeConfigStruct, _super);
    function MoviePopularizeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MoviePopularizeConfigStruct;
}(BaseConfig_1.default));
exports.default = MoviePopularizeConfigStruct;
},{"../BaseConfig":2}],242:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MovieShootTypeConfigStruct = /** @class */ (function (_super) {
    __extends(MovieShootTypeConfigStruct, _super);
    function MovieShootTypeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MovieShootTypeConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("movieShootType", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MovieShootTypeConfigStruct.prototype, "type_des", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_type_des;
            var value = Game_1.default.lang.getValue("movieShootType", this.id, "type_des");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_type_des;
        },
        enumerable: true,
        configurable: true
    });
    return MovieShootTypeConfigStruct;
}(BaseConfig_1.default));
exports.default = MovieShootTypeConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],243:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MsgChatConfigStruct = /** @class */ (function (_super) {
    __extends(MsgChatConfigStruct, _super);
    function MsgChatConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MsgChatConfigStruct.prototype, "notice", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_notice;
            var value = Game_1.default.lang.getValue("msgChat", this.id, "notice");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_notice;
        },
        enumerable: true,
        configurable: true
    });
    return MsgChatConfigStruct;
}(BaseConfig_1.default));
exports.default = MsgChatConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],244:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MsgConfigStruct = /** @class */ (function (_super) {
    __extends(MsgConfigStruct, _super);
    function MsgConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MsgConfigStruct.prototype, "notice", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_notice;
            var value = Game_1.default.lang.getValue("msg", this.id, "notice");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_notice;
        },
        enumerable: true,
        configurable: true
    });
    return MsgConfigStruct;
}(BaseConfig_1.default));
exports.default = MsgConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],245:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var MsgProtoErrorConfigStruct = /** @class */ (function (_super) {
    __extends(MsgProtoErrorConfigStruct, _super);
    function MsgProtoErrorConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MsgProtoErrorConfigStruct.prototype, "notice", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_notice;
            var value = Game_1.default.lang.getValue("msgProtoError", this.id, "notice");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_notice;
        },
        enumerable: true,
        configurable: true
    });
    return MsgProtoErrorConfigStruct;
}(BaseConfig_1.default));
exports.default = MsgProtoErrorConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],246:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var NpcConfigStruct = /** @class */ (function (_super) {
    __extends(NpcConfigStruct, _super);
    function NpcConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(NpcConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_name;
            var value = Game_1.default.lang.getValue("npc", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return NpcConfigStruct;
}(BaseConfig_1.default));
exports.default = NpcConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],247:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var OperationTasksConfigStruct = /** @class */ (function (_super) {
    __extends(OperationTasksConfigStruct, _super);
    function OperationTasksConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(OperationTasksConfigStruct.prototype, "classname", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_classname;
            var value = Game_1.default.lang.getValue("operationTasks", this.id, "classname");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_classname;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OperationTasksConfigStruct.prototype, "description", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_description;
            var value = Game_1.default.lang.getValue("operationTasks", this.id, "description");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_description;
        },
        enumerable: true,
        configurable: true
    });
    return OperationTasksConfigStruct;
}(BaseConfig_1.default));
exports.default = OperationTasksConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],248:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var OperationTasksScoreConfigStruct = /** @class */ (function (_super) {
    __extends(OperationTasksScoreConfigStruct, _super);
    function OperationTasksScoreConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksScoreConfigStruct;
}(BaseConfig_1.default));
exports.default = OperationTasksScoreConfigStruct;
},{"../BaseConfig":2}],249:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var OperationTasksTermsConfigStruct = /** @class */ (function (_super) {
    __extends(OperationTasksTermsConfigStruct, _super);
    function OperationTasksTermsConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksTermsConfigStruct;
}(BaseConfig_1.default));
exports.default = OperationTasksTermsConfigStruct;
},{"../BaseConfig":2}],250:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var OrderConfigStruct = /** @class */ (function (_super) {
    __extends(OrderConfigStruct, _super);
    function OrderConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(OrderConfigStruct.prototype, "name1", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name1;
            var value = Game_1.default.lang.getValue("order", this.id, "name1");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrderConfigStruct.prototype, "name2", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name2;
            var value = Game_1.default.lang.getValue("order", this.id, "name2");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name2;
        },
        enumerable: true,
        configurable: true
    });
    return OrderConfigStruct;
}(BaseConfig_1.default));
exports.default = OrderConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],251:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var OscarConfigStruct = /** @class */ (function (_super) {
    __extends(OscarConfigStruct, _super);
    function OscarConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(OscarConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_content;
            var value = Game_1.default.lang.getValue("oscar", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_content;
        },
        enumerable: true,
        configurable: true
    });
    return OscarConfigStruct;
}(BaseConfig_1.default));
exports.default = OscarConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],252:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var PerformConfigStruct = /** @class */ (function (_super) {
    __extends(PerformConfigStruct, _super);
    function PerformConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PerformConfigStruct;
}(BaseConfig_1.default));
exports.default = PerformConfigStruct;
},{"../BaseConfig":2}],253:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var PlayActConfigStruct = /** @class */ (function (_super) {
    __extends(PlayActConfigStruct, _super);
    function PlayActConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayActConfigStruct;
}(BaseConfig_1.default));
exports.default = PlayActConfigStruct;
},{"../BaseConfig":2}],254:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var PlayerDefaultConfigStruct = /** @class */ (function (_super) {
    __extends(PlayerDefaultConfigStruct, _super);
    function PlayerDefaultConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerDefaultConfigStruct;
}(BaseConfig_1.default));
exports.default = PlayerDefaultConfigStruct;
},{"../BaseConfig":2}],255:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var PlayerLevelConfigStruct = /** @class */ (function (_super) {
    __extends(PlayerLevelConfigStruct, _super);
    function PlayerLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = PlayerLevelConfigStruct;
},{"../BaseConfig":2}],256:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var PopUpConfigStruct = /** @class */ (function (_super) {
    __extends(PopUpConfigStruct, _super);
    function PopUpConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PopUpConfigStruct;
}(BaseConfig_1.default));
exports.default = PopUpConfigStruct;
},{"../BaseConfig":2}],257:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var PositionConfigStruct = /** @class */ (function (_super) {
    __extends(PositionConfigStruct, _super);
    function PositionConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PositionConfigStruct;
}(BaseConfig_1.default));
exports.default = PositionConfigStruct;
},{"../BaseConfig":2}],258:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ProduceConfigStruct = /** @class */ (function (_super) {
    __extends(ProduceConfigStruct, _super);
    function ProduceConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ProduceConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("produce", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProduceConfigStruct.prototype, "tip", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_tip;
            var value = Game_1.default.lang.getValue("produce", this.id, "tip");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_tip;
        },
        enumerable: true,
        configurable: true
    });
    return ProduceConfigStruct;
}(BaseConfig_1.default));
exports.default = ProduceConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],259:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ProduceLevelConfigStruct = /** @class */ (function (_super) {
    __extends(ProduceLevelConfigStruct, _super);
    function ProduceLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = ProduceLevelConfigStruct;
},{"../BaseConfig":2}],260:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ProduceLvConfigStruct = /** @class */ (function (_super) {
    __extends(ProduceLvConfigStruct, _super);
    function ProduceLvConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceLvConfigStruct;
}(BaseConfig_1.default));
exports.default = ProduceLvConfigStruct;
},{"../BaseConfig":2}],261:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ProduceSouvenirConfigStruct = /** @class */ (function (_super) {
    __extends(ProduceSouvenirConfigStruct, _super);
    function ProduceSouvenirConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceSouvenirConfigStruct;
}(BaseConfig_1.default));
exports.default = ProduceSouvenirConfigStruct;
},{"../BaseConfig":2}],262:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var PropertyConfigStruct = /** @class */ (function (_super) {
    __extends(PropertyConfigStruct, _super);
    function PropertyConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PropertyConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("property", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return PropertyConfigStruct;
}(BaseConfig_1.default));
exports.default = PropertyConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],263:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var RandomNameConfigStruct = /** @class */ (function (_super) {
    __extends(RandomNameConfigStruct, _super);
    function RandomNameConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RandomNameConfigStruct;
}(BaseConfig_1.default));
exports.default = RandomNameConfigStruct;
},{"../BaseConfig":2}],264:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var RandomSurnameConfigStruct = /** @class */ (function (_super) {
    __extends(RandomSurnameConfigStruct, _super);
    function RandomSurnameConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RandomSurnameConfigStruct;
}(BaseConfig_1.default));
exports.default = RandomSurnameConfigStruct;
},{"../BaseConfig":2}],265:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var RechargeConfigStruct = /** @class */ (function (_super) {
    __extends(RechargeConfigStruct, _super);
    function RechargeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RechargeConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("recharge", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return RechargeConfigStruct;
}(BaseConfig_1.default));
exports.default = RechargeConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],266:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var RoadshowConfigStruct = /** @class */ (function (_super) {
    __extends(RoadshowConfigStruct, _super);
    function RoadshowConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RoadshowConfigStruct;
}(BaseConfig_1.default));
exports.default = RoadshowConfigStruct;
},{"../BaseConfig":2}],267:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var SecretaryConfigStruct = /** @class */ (function (_super) {
    __extends(SecretaryConfigStruct, _super);
    function SecretaryConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SecretaryConfigStruct.prototype, "info", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_info;
            var value = Game_1.default.lang.getValue("secretary", this.id, "info");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_info;
        },
        enumerable: true,
        configurable: true
    });
    return SecretaryConfigStruct;
}(BaseConfig_1.default));
exports.default = SecretaryConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],268:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var SecretaryGiftConfigStruct = /** @class */ (function (_super) {
    __extends(SecretaryGiftConfigStruct, _super);
    function SecretaryGiftConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SecretaryGiftConfigStruct;
}(BaseConfig_1.default));
exports.default = SecretaryGiftConfigStruct;
},{"../BaseConfig":2}],269:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var SecretaryTypeConfigStruct = /** @class */ (function (_super) {
    __extends(SecretaryTypeConfigStruct, _super);
    function SecretaryTypeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SecretaryTypeConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("secretaryType", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return SecretaryTypeConfigStruct;
}(BaseConfig_1.default));
exports.default = SecretaryTypeConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],270:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var ServerRankingListConfigStruct = /** @class */ (function (_super) {
    __extends(ServerRankingListConfigStruct, _super);
    function ServerRankingListConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ServerRankingListConfigStruct;
}(BaseConfig_1.default));
exports.default = ServerRankingListConfigStruct;
},{"../BaseConfig":2}],271:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var SettingDefaultConfigStruct = /** @class */ (function (_super) {
    __extends(SettingDefaultConfigStruct, _super);
    function SettingDefaultConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SettingDefaultConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("settingDefault", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return SettingDefaultConfigStruct;
}(BaseConfig_1.default));
exports.default = SettingDefaultConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],272:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var ShopConfigStruct = /** @class */ (function (_super) {
    __extends(ShopConfigStruct, _super);
    function ShopConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ShopConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("shop", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return ShopConfigStruct;
}(BaseConfig_1.default));
exports.default = ShopConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],273:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var SkillConfigStruct = /** @class */ (function (_super) {
    __extends(SkillConfigStruct, _super);
    function SkillConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SkillConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_name;
            var value = Game_1.default.lang.getValue("skill", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkillConfigStruct.prototype, "tips", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_tips;
            var value = Game_1.default.lang.getValue("skill", this.id, "tips");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_tips;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkillConfigStruct.prototype, "effecttext", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_effecttext;
            var value = Game_1.default.lang.getValue("skill", this.id, "effecttext");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_effecttext;
        },
        enumerable: true,
        configurable: true
    });
    return SkillConfigStruct;
}(BaseConfig_1.default));
exports.default = SkillConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],274:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var SkillEffectConfigStruct = /** @class */ (function (_super) {
    __extends(SkillEffectConfigStruct, _super);
    function SkillEffectConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillEffectConfigStruct;
}(BaseConfig_1.default));
exports.default = SkillEffectConfigStruct;
},{"../BaseConfig":2}],275:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var SkillTriggerConfigStruct = /** @class */ (function (_super) {
    __extends(SkillTriggerConfigStruct, _super);
    function SkillTriggerConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillTriggerConfigStruct;
}(BaseConfig_1.default));
exports.default = SkillTriggerConfigStruct;
},{"../BaseConfig":2}],276:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var SpeakConfigStruct = /** @class */ (function (_super) {
    __extends(SpeakConfigStruct, _super);
    function SpeakConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SpeakConfigStruct.prototype, "speak", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_speak;
            var value = Game_1.default.lang.getValue("speak", this.id, "speak");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_speak;
        },
        enumerable: true,
        configurable: true
    });
    return SpeakConfigStruct;
}(BaseConfig_1.default));
exports.default = SpeakConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],277:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var StarConConfigStruct = /** @class */ (function (_super) {
    __extends(StarConConfigStruct, _super);
    function StarConConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StarConConfigStruct;
}(BaseConfig_1.default));
exports.default = StarConConfigStruct;
},{"../BaseConfig":2}],278:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var StoryCharactersConfigStruct = /** @class */ (function (_super) {
    __extends(StoryCharactersConfigStruct, _super);
    function StoryCharactersConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StoryCharactersConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("storyCharacters", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StoryCharactersConfigStruct.prototype, "introduction", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_introduction;
            var value = Game_1.default.lang.getValue("storyCharacters", this.id, "introduction");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_introduction;
        },
        enumerable: true,
        configurable: true
    });
    return StoryCharactersConfigStruct;
}(BaseConfig_1.default));
exports.default = StoryCharactersConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],279:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var StoryConfigStruct = /** @class */ (function (_super) {
    __extends(StoryConfigStruct, _super);
    function StoryConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StoryConfigStruct.prototype, "story_name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_story_name;
            var value = Game_1.default.lang.getValue("story", this.id, "story_name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_story_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StoryConfigStruct.prototype, "introduction", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_introduction;
            var value = Game_1.default.lang.getValue("story", this.id, "introduction");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_introduction;
        },
        enumerable: true,
        configurable: true
    });
    return StoryConfigStruct;
}(BaseConfig_1.default));
exports.default = StoryConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],280:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var StoryGoalsConfigStruct = /** @class */ (function (_super) {
    __extends(StoryGoalsConfigStruct, _super);
    function StoryGoalsConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryGoalsConfigStruct;
}(BaseConfig_1.default));
exports.default = StoryGoalsConfigStruct;
},{"../BaseConfig":2}],281:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var StoryRateConfigStruct = /** @class */ (function (_super) {
    __extends(StoryRateConfigStruct, _super);
    function StoryRateConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryRateConfigStruct;
}(BaseConfig_1.default));
exports.default = StoryRateConfigStruct;
},{"../BaseConfig":2}],282:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var StoryRefreshPriceConfigStruct = /** @class */ (function (_super) {
    __extends(StoryRefreshPriceConfigStruct, _super);
    function StoryRefreshPriceConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryRefreshPriceConfigStruct;
}(BaseConfig_1.default));
exports.default = StoryRefreshPriceConfigStruct;
},{"../BaseConfig":2}],283:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var StoryStackItemConfigStruct = /** @class */ (function (_super) {
    __extends(StoryStackItemConfigStruct, _super);
    function StoryStackItemConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryStackItemConfigStruct;
}(BaseConfig_1.default));
exports.default = StoryStackItemConfigStruct;
},{"../BaseConfig":2}],284:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var StoryStackSortConfigStruct = /** @class */ (function (_super) {
    __extends(StoryStackSortConfigStruct, _super);
    function StoryStackSortConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StoryStackSortConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("storyStackSort", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return StoryStackSortConfigStruct;
}(BaseConfig_1.default));
exports.default = StoryStackSortConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],285:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var StorylineConfigStruct = /** @class */ (function (_super) {
    __extends(StorylineConfigStruct, _super);
    function StorylineConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StorylineConfigStruct.prototype, "ui_content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_ui_content;
            var value = Game_1.default.lang.getValue("storyline", this.id, "ui_content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_ui_content;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StorylineConfigStruct.prototype, "content", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_content;
            var value = Game_1.default.lang.getValue("storyline", this.id, "content");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_content;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StorylineConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.cn_name;
            var value = Game_1.default.lang.getValue("storyline", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return StorylineConfigStruct;
}(BaseConfig_1.default));
exports.default = StorylineConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],286:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var StreetConfigStruct = /** @class */ (function (_super) {
    __extends(StreetConfigStruct, _super);
    function StreetConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StreetConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("street", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return StreetConfigStruct;
}(BaseConfig_1.default));
exports.default = StreetConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],287:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var SysTimeConfigStruct = /** @class */ (function (_super) {
    __extends(SysTimeConfigStruct, _super);
    function SysTimeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SysTimeConfigStruct;
}(BaseConfig_1.default));
exports.default = SysTimeConfigStruct;
},{"../BaseConfig":2}],288:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var TaskConfigStruct = /** @class */ (function (_super) {
    __extends(TaskConfigStruct, _super);
    function TaskConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TaskConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("task", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return TaskConfigStruct;
}(BaseConfig_1.default));
exports.default = TaskConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],289:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var TestConfigStruct = /** @class */ (function (_super) {
    __extends(TestConfigStruct, _super);
    function TestConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TestConfigStruct;
}(BaseConfig_1.default));
exports.default = TestConfigStruct;
},{"../BaseConfig":2}],290:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var TurntableCompleteConfigStruct = /** @class */ (function (_super) {
    __extends(TurntableCompleteConfigStruct, _super);
    function TurntableCompleteConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TurntableCompleteConfigStruct;
}(BaseConfig_1.default));
exports.default = TurntableCompleteConfigStruct;
},{"../BaseConfig":2}],291:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var TurntableRewardConfigStruct = /** @class */ (function (_super) {
    __extends(TurntableRewardConfigStruct, _super);
    function TurntableRewardConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TurntableRewardConfigStruct;
}(BaseConfig_1.default));
exports.default = TurntableRewardConfigStruct;
},{"../BaseConfig":2}],292:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var TypeConfigStruct = /** @class */ (function (_super) {
    __extends(TypeConfigStruct, _super);
    function TypeConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TypeConfigStruct;
}(BaseConfig_1.default));
exports.default = TypeConfigStruct;
},{"../BaseConfig":2}],293:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var UnlockConfigStruct = /** @class */ (function (_super) {
    __extends(UnlockConfigStruct, _super);
    function UnlockConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(UnlockConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("unlock", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnlockConfigStruct.prototype, "touch_txt", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_touch_txt;
            var value = Game_1.default.lang.getValue("unlock", this.id, "touch_txt");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_touch_txt;
        },
        enumerable: true,
        configurable: true
    });
    return UnlockConfigStruct;
}(BaseConfig_1.default));
exports.default = UnlockConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],294:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var VisitConfigStruct = /** @class */ (function (_super) {
    __extends(VisitConfigStruct, _super);
    function VisitConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(VisitConfigStruct.prototype, "fans_speak0", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_fans_speak0;
            var value = Game_1.default.lang.getValue("visit", this.id, "fans_speak0");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_fans_speak0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisitConfigStruct.prototype, "actor_speak0", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_actor_speak0;
            var value = Game_1.default.lang.getValue("visit", this.id, "actor_speak0");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_actor_speak0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisitConfigStruct.prototype, "fans_speak1", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_fans_speak1;
            var value = Game_1.default.lang.getValue("visit", this.id, "fans_speak1");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_fans_speak1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisitConfigStruct.prototype, "actor_speak1", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_actor_speak1;
            var value = Game_1.default.lang.getValue("visit", this.id, "actor_speak1");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_actor_speak1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisitConfigStruct.prototype, "fans_speak2", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_fans_speak2;
            var value = Game_1.default.lang.getValue("visit", this.id, "fans_speak2");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_fans_speak2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisitConfigStruct.prototype, "actor_speak2", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_actor_speak2;
            var value = Game_1.default.lang.getValue("visit", this.id, "actor_speak2");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_actor_speak2;
        },
        enumerable: true,
        configurable: true
    });
    return VisitConfigStruct;
}(BaseConfig_1.default));
exports.default = VisitConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],295:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var WeeklyQuestConfigStruct = /** @class */ (function (_super) {
    __extends(WeeklyQuestConfigStruct, _super);
    function WeeklyQuestConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(WeeklyQuestConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("weeklyQuest", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WeeklyQuestConfigStruct.prototype, "des", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_des;
            var value = Game_1.default.lang.getValue("weeklyQuest", this.id, "des");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_des;
        },
        enumerable: true,
        configurable: true
    });
    return WeeklyQuestConfigStruct;
}(BaseConfig_1.default));
exports.default = WeeklyQuestConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],296:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var WelfareConfigStruct = /** @class */ (function (_super) {
    __extends(WelfareConfigStruct, _super);
    function WelfareConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(WelfareConfigStruct.prototype, "activities_name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_activities_name;
            var value = Game_1.default.lang.getValue("welfare", this.id, "activities_name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_activities_name;
        },
        enumerable: true,
        configurable: true
    });
    return WelfareConfigStruct;
}(BaseConfig_1.default));
exports.default = WelfareConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],297:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var WheelDropConfigStruct = /** @class */ (function (_super) {
    __extends(WheelDropConfigStruct, _super);
    function WheelDropConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WheelDropConfigStruct;
}(BaseConfig_1.default));
exports.default = WheelDropConfigStruct;
},{"../BaseConfig":2}],298:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var WriterAbilityConfigStruct = /** @class */ (function (_super) {
    __extends(WriterAbilityConfigStruct, _super);
    function WriterAbilityConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterAbilityConfigStruct;
}(BaseConfig_1.default));
exports.default = WriterAbilityConfigStruct;
},{"../BaseConfig":2}],299:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var WriterAdaptEffectConfigStruct = /** @class */ (function (_super) {
    __extends(WriterAdaptEffectConfigStruct, _super);
    function WriterAdaptEffectConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(WriterAdaptEffectConfigStruct.prototype, "adapt", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_adapt;
            var value = Game_1.default.lang.getValue("writerAdaptEffect", this.id, "adapt");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_adapt;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WriterAdaptEffectConfigStruct.prototype, "adapt_des", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_adapt_des;
            var value = Game_1.default.lang.getValue("writerAdaptEffect", this.id, "adapt_des");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_adapt_des;
        },
        enumerable: true,
        configurable: true
    });
    return WriterAdaptEffectConfigStruct;
}(BaseConfig_1.default));
exports.default = WriterAdaptEffectConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],300:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var WriterConfigStruct = /** @class */ (function (_super) {
    __extends(WriterConfigStruct, _super);
    function WriterConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(WriterConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("writer", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return WriterConfigStruct;
}(BaseConfig_1.default));
exports.default = WriterConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],301:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var Game_1 = require("../../Game");
var WriterLevelConfigStruct = /** @class */ (function (_super) {
    __extends(WriterLevelConfigStruct, _super);
    function WriterLevelConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(WriterLevelConfigStruct.prototype, "name", {
        get: function () {
            if (!Game_1.default.lang.isUseLang)
                return this.zh_cn_name;
            var value = Game_1.default.lang.getValue("writerLevel", this.id, "name");
            if (!isNullOrEmpty(value)) {
                return value;
            }
            return this.zh_cn_name;
        },
        enumerable: true,
        configurable: true
    });
    return WriterLevelConfigStruct;
}(BaseConfig_1.default));
exports.default = WriterLevelConfigStruct;
},{"../../Game":623,"../BaseConfig":2}],302:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var WriterSkillConfigStruct = /** @class */ (function (_super) {
    __extends(WriterSkillConfigStruct, _super);
    function WriterSkillConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterSkillConfigStruct;
}(BaseConfig_1.default));
exports.default = WriterSkillConfigStruct;
},{"../BaseConfig":2}],303:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("../BaseConfig");
var WriterStationConfigStruct = /** @class */ (function (_super) {
    __extends(WriterStationConfigStruct, _super);
    function WriterStationConfigStruct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterStationConfigStruct;
}(BaseConfig_1.default));
exports.default = WriterStationConfigStruct;
},{"../BaseConfig":2}],304:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfigRender_1 = require("./BaseConfigRender");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var CsvConfigRender = /** @class */ (function (_super) {
    __extends(CsvConfigRender, _super);
    function CsvConfigRender() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 单元格分隔符
        _this.csvDelimiter = "\t";
        // 单元格分隔符 替换
        _this.csvSeparatorReplace = null;
        // 行分隔符 替换
        _this.csvLineSeparatorReplace = "|n|";
        // 表头--类型
        _this.headTypes = new Dictionary_1.default();
        // 表头--索引
        _this.headKeyEns = new Dictionary_1.default();
        // 表头--字段
        _this.headKeyFields = new Dictionary_1.default();
        // 表头--中文
        _this.headKeyCns = new Dictionary_1.default();
        return _this;
    }
    // 替换分割符
    CsvConfigRender.prototype.ReplaceSpearator = function (txt) {
        if (this.tableName == "TextFgui" && txt.indexOf(this.csvLineSeparatorReplace) != -1) {
            var a = 1;
        }
        txt = txt.replace(/\|n\|/g, "\n");
        // if (!isNullOrEmpty(this.csvSeparatorReplace))
        // {
        //     txt = txt.replaceAll(this.csvSeparatorReplace, this.csvDelimiter);
        // }
        txt = txt.replace(/\r/g, "");
        return txt;
    };
    // 加载配置
    CsvConfigRender.prototype.load = function (configLoader, onComplete) {
        var _this = this;
        configLoader.loadConfig(this.getConfigPath(), function (txt, path) {
            _this.parse(txt);
            // console.log(`配置 ${this.path} 加载完成`);
            if (onComplete) {
                onComplete(_this);
            }
            configLoader.unloadConfig(_this.getConfigPath());
        });
    };
    // 重新加载配置
    CsvConfigRender.prototype.reload = function (configLoader, onComplete) {
        this.clear();
        this.load(configLoader, onComplete);
    };
    // 清理
    CsvConfigRender.prototype.clear = function () {
        this.headTypes.clear();
        this.headKeyEns.clear();
        this.headKeyFields.clear();
        this.headKeyCns.clear();
        _super.prototype.clear.call(this);
    };
    CsvConfigRender.prototype.parse = function (txt) {
        if (txt == null) {
            console.error(this.tableName + ": txt=" + txt);
            return;
        }
        var lines = txt.split('\n');
        var line;
        var csv;
        line = lines[0];
        csv = line.split(this.csvDelimiter);
        this.ParseHeadTypes(csv);
        line = lines[1];
        csv = line.split(this.csvDelimiter);
        this.ParseHeadKeyCN(csv);
        line = lines[2];
        csv = line.split(this.csvDelimiter);
        this.ParseHeadKeyEN(csv);
        for (var i = 3; i < lines.length; i++) {
            line = lines[i];
            if (isNullOrEmpty(line))
                continue;
            csv = line.split(this.csvDelimiter);
            for (var j = 0; j < csv.length; j++) {
                csv[j] = this.ReplaceSpearator(csv[j]);
            }
            this.ParseCsv(csv);
        }
    };
    CsvConfigRender.prototype.ParseHeadTypes = function (csv) {
        var key;
        for (var i = 0; i < csv.length; i++) {
            key = csv[i];
            if (!isNullOrEmpty(key)) {
                key = key.trim();
                this.headTypes.add(i, key);
            }
        }
    };
    CsvConfigRender.prototype.ParseHeadKeyCN = function (csv) {
        var key;
        for (var i = 0; i < csv.length; i++) {
            key = this.ReplaceSpearator(csv[i]);
            if (!isNullOrEmpty(key)) {
                key = key.trim();
                this.headKeyCns.add(i, key);
            }
        }
    };
    CsvConfigRender.prototype.ParseHeadKeyEN = function (csv) {
        var key;
        for (var i = 0; i < csv.length; i++) {
            key = csv[i];
            if (!isNullOrEmpty(key)) {
                key = key.trim();
                if (this.headKeyEns.hasKey(key)) {
                    console.error(this.tableName + ": ParseHeadKeyEN \u5DF2\u7ECF\u5B58\u5728key= " + key + ",  i = " + i);
                }
                this.headKeyEns.add(key, i);
                this.headKeyFields.add(i, key);
            }
        }
    };
    CsvConfigRender.prototype.ParseCsv = function (csv) {
    };
    CsvConfigRender.prototype.GetHeadType = function (index) {
        return this.headTypes.getValue(index);
    };
    CsvConfigRender.prototype.GetHeadField = function (index) {
        return this.headKeyFields.getValue(index);
    };
    CsvConfigRender.prototype.GetHeadIndex = function (enName) {
        if (this.headKeyEns.hasKey(enName)) {
            return this.headKeyEns.getValue(enName);
        }
        console.error(this.tableName + ": headKeyEns[" + enName + "] = -1");
        return -1;
    };
    /** 游戏所有配置加载完成 */
    CsvConfigRender.prototype.onGameLoadedAll = function () {
    };
    return CsvConfigRender;
}(BaseConfigRender_1.default));
exports.default = CsvConfigRender;
},{"../Libs/Helpers/Dictionary":679,"./BaseConfigRender":3}],305:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigFieldType = /** @class */ (function () {
    function ConfigFieldType() {
    }
    ConfigFieldType.MString = "string";
    ConfigFieldType.MStringArray = "string[]";
    return ConfigFieldType;
}());
exports.default = ConfigFieldType;
},{}],306:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 代码文本--启动游戏加载界面时用，这时还没有加载配置代码。
// 处理框架可以使用
// 其他模块不准在这里添加，可以到TEXT.TS里添加
// ---------------------------
var LaunchText = /** @class */ (function () {
    function LaunchText() {
        // 进度条提示
        this.tips = [
            "正在炸爆米花...",
            "正在驱赶放映泥棒...",
            "正在张贴海报...",
            "正在DIY特制3D眼镜...",
            "影院的负责人是个天才!"
        ];
        this.btnYes = "确定";
        this.LoadedConfig = "加载配置文件";
        this.LoadedUI = "加载UI";
        this.LoadedEnd = "加载完成";
    }
    //==============================================
    // 英文
    //----------------------------------------------
    LaunchText.prototype.setLangForEn = function () {
        this.tips =
            [
                "Hiring actors...",
                "Filming movies...",
                "Popping popcorn...",
                "Selling tickets...",
                "Owner of this cinema is a genius!"
            ];
        this.btnYes = "Ok";
        this.LoadedConfig = "Loading Config...";
        this.LoadedUI = "Loading UI...";
        this.LoadedEnd = "Loading Complete";
    };
    return LaunchText;
}());
exports.default = LaunchText;
},{}],307:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sprite = /** @class */ (function () {
    function Sprite() {
        this.Launch_launch = "Launch/launch.png";
    }
    return Sprite;
}());
var R = /** @class */ (function () {
    function R() {
    }
    R.sprite = new Sprite();
    return R;
}());
exports.default = R;
},{}],308:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Random_1 = require("../../Libs/Helpers/Random");
var Res = /** @class */ (function () {
    function Res() {
    }
    // 获取骨骼动画 -- 骨骼
    Res.getSpineSKPath = function (path) {
        return Res.root + "spine/" + path + ".sk";
    };
    // 获取骨骼动画 -- 皮肤
    Res.getSpinePngPath = function (path) {
        return Res.root + "spine/" + path + ".png";
    };
    //获取骨骼动画槽位部件
    Res.getSpineSoltPartPath = function (path) {
        return Res.root + "spine/SlotTexture/" + path + ".png";
    };
    // 获取Sprite图片
    Res.getSpritePath = function (path) {
        return Res.root + "sprite/" + path + ".png";
    };
    Res.getSpritePathHasExt = function (path) {
        return Res.root + "sprite/" + path;
    };
    Res.getRoom = function (id) {
        return Res.getSpritePath("Building/" + id);
    };
    //获取拍摄幕帘
    Res.getCinemaCanvasSK = function () {
        return Res.getSpineSKPath("Scene/Scene_SheYingpeng/Scene_SheYingpeng");
    };
    Res.getCinemaCanvasSkin = function () {
        return Res.getSpinePngPath("Scene/Scene_SheYingpeng/Scene_SheYingpeng");
    };
    //获取观众
    Res.getAudienceSK = function () {
        return Res.getSpineSKPath("Scene/Audience01/Audience01");
    };
    Res.getAudienceSkin = function () {
        var skinIndex = Random_1.default.rangeBoth(1, 4);
        return Res.getSpinePngPath("Scene/Audience01/Audience0" + skinIndex);
    };
    Object.defineProperty(Res, "cinemaHallActorSK", {
        //获取电影拍摄动画骨骼资源
        get: function () {
            return Res.getSpineSKPath("Scene/Cinema_Hall/Cinema_Hall1");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "cinemaHallActorSkin", {
        get: function () {
            return Res.getSpinePngPath("Scene/Cinema_Hall/Cinema_Hall1");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "cinemaHallDoorSK", {
        get: function () {
            return Res.getSpineSKPath("Scene/Cinema_Hall/Cinema_Hall2");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Res, "cinemaHallDoorSkin", {
        get: function () {
            return Res.getSpinePngPath("Scene/Cinema_Hall/Cinema_Hall2");
        },
        enumerable: true,
        configurable: true
    });
    //获取--特效路径
    Res.getFx = function (path) {
        return Res.rootFx + path + ".part";
    };
    Res.rootFx = "fx/";
    Res.root = "res/";
    return Res;
}());
exports.default = Res;
},{"../../Libs/Helpers/Random":681}],309:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 代码文本
// ---------------------------
var TEXT = /** @class */ (function () {
    function TEXT() {
    }
    TEXT.cannotRecharge = "游客不能充值";
    TEXT.cannotRechargeNoIos = "只支持ios内购";
    TEXT.rechargeError = "充值失败，请稍候重试";
    TEXT.systemTip = "系统提示";
    TEXT.LangSelectMsg = "语言需要重启游戏才有效!";
    TEXT.FunNoOpen = "此功能暂未开放，敬请期待！";
    TEXT.ButtonSelect = "选择";
    TEXT.ButtonOk = "确定";
    TEXT.ButtonCannel = "取消";
    TEXT.ButtonYes = "是";
    TEXT.ButtonNo = "否";
    TEXT.Complete = "完成";
    TEXT.Disable = "没有开放";
    TEXT.Lock = "没解锁";
    TEXT.TitleTip = "提示";
    TEXT.ErorNoInitProto = "没有初始化网络";
    TEXT.ErorRequestServerList = "请求服务器列表失败";
    TEXT.ErorAccountFrozen = "账号被冻结";
    TEXT.ErorAccountDropped = "账号被停用";
    TEXT.TipEnterRoleName = "输入你的名称";
    TEXT.ErrorNameEmpty = "名字不能是空的";
    TEXT.ErrorContentEmpty = "内容不能是空的";
    TEXT.ErrorNameUsed = "名称已经被使用";
    TEXT.ErrorHttpSendFail = "[Error] 发送请求失败";
    TEXT.HttpTimeOut = "网络超时! 当前设置的超时时间是{0}";
    TEXT.AlertTextBuyActor = "是否花费{0}{1}增加艺人数量";
    TEXT.AlertTextScountActor = "是否花费{0}{1} 探查艺人？";
    TEXT.ToastTextItemNotEnough = "{0}数量不足";
    TEXT.ToastTextItemNotEnough2 = "数量不足，需要{0} {1}";
    TEXT.AfterToScountActor = "{0}后探查次数加1";
    TEXT.AfterToClearNoseTimes = "星探今天已下班，{0}后即可在派他出去。\n也可消耗星探卡即刻派出";
    TEXT.ScountActor = "探查";
    TEXT.ActorMax = "艺人招募数量最大";
    TEXT.HideActorMax = "雪藏艺人数量达到最大,请升级公司等级或艺人教室等级";
    TEXT.DisHideAllActor = "无法雪藏全部艺人";
    TEXT.DisHideActorInUse = "无法雪藏正在使用的艺人";
    TEXT.SureHideActor = "是否确认雪藏{0}";
    TEXT.ActorWillLeave = "这些艺人将于{0}后离开";
    TEXT.ActorWillLeave1 = "艺人剩余离开时间：";
    TEXT.SureResetActors = "是否重新探查艺人？";
    TEXT.CostToResetActors = "探查次数已用完是否花费星探卡";
    TEXT.ResetNose = "重新探查";
    TEXT.TalentText = "星探";
    TEXT.HiddenText = "雪藏";
    TEXT.TalentTimes = "探查次数";
    TEXT.UnlockSkill = "艺人等级达到{0}级";
    TEXT.AlertNoseActor = "是否花费{0}{1}招募";
    TEXT.SrcActorName = "原艺名：{0}";
    TEXT.Lv = "{0}级";
    TEXT.LVDot = "LV.{0}";
    TEXT.CurNextLv = "等级：{0}/[color=#488fc1]{1}[/color]";
    TEXT.UpgradeNeedGold = "升级所需金币：{0}";
    TEXT.Upgrade = "升级";
    TEXT.RemainTimes = "剩余次数";
    TEXT.CanScountActor = "可招募：";
    TEXT.CanHideActorNums = "可雪藏{0}/{1}";
    TEXT.ActorTrain = "培养";
    TEXT.ActorTabBase = "基础";
    TEXT.ActorTabSkill = "技能";
    TEXT.ActorTabAsset = "资产";
    TEXT.ActorTabExport = "擅长";
    TEXT.ActorTabAgent = "助理";
    TEXT.PopularValue = "人气值";
    TEXT.RewardTitle = "奖励";
    TEXT.HideActor = "雪藏艺人";
    TEXT.HideActorDesc = "被雪藏的艺人无法工作，您可以在这里重新启用艺人";
    TEXT.RenameForActor = "给{0}起一个艺名吧？";
    TEXT.Rename = "改名";
    TEXT.Sure = "确定";
    TEXT.Num = "{0}个";
    TEXT.RenameDefault = "改名";
    TEXT.He = "他";
    TEXT.She = "她";
    TEXT.NewActorJoin = "新的艺人加入公司";
    TEXT.NoseSuccess = "招募成功";
    TEXT.SameActorJoin = "已有同名艺人";
    TEXT.SureUseDefaultName = "确认使用默认名字？";
    TEXT.RenameAnGoodName = "给{0}取个好名字吧";
    TEXT.NameDisNull = "名字不能为空";
    TEXT.Input4toNumChar = "输入4到{0}个字符";
    TEXT.NoseActor = "招募";
    TEXT.AliveAcotr = "是否确认花费{0}{1}复活该艺人";
    TEXT.Hour = "小时";
    TEXT.Minute = "分";
    TEXT.Second = "秒";
    TEXT.ActorRecoverToDealAsset = "已转化为艺人合同和艺人资产";
    TEXT.NoForzen = "[没有雪藏的艺人]";
    TEXT.ChooseSendAssetNum = "选择要赠送的资产数量";
    TEXT.GetAssetToGetProp = "每得到{0}个即可";
    TEXT.LoyaltyText = "忠诚度";
    TEXT.NeedLoyalty = "需要忠诚度{0}级";
    TEXT.LvUpMax = "等级达到最大";
    TEXT.UpLvLimit = "提高等级上限";
    TEXT.LvUpTo = "{0} 等级上限 {1} → {2}";
    TEXT.Send = "赠送";
    TEXT.ExpertStory = "擅长的剧本";
    TEXT.ExpertCharacter = "擅长的角色";
    TEXT.ExpertType = "擅长的类型";
    TEXT.SendAssetMax = "赠送数量达到上限";
    TEXT.LvMax = "等级已满";
    TEXT.SkillLvMaxTip = "技能等级已满，无法继续升级";
    TEXT.ExpCosts = "经验消耗";
    TEXT.SkillExpNotEnough = "技能经验不足";
    TEXT.GetRandomTrainAttr = "随机获取两种属性提升";
    TEXT.CompanyTodayTrain = "公司今日培养次数：";
    TEXT.ActorCanUseTrain = "艺人可用培训次数:";
    TEXT.ActorAutoVisit = "自动接待";
    TEXT.ActorBreakToLv = "该艺人等级限制突破到{0}";
    TEXT.CompanyTodayTrainMax = "公司今日培养次数达到上限";
    TEXT.ActorTrainMax = "艺人培养次数达到上限";
    TEXT.TrainCompleteRightNow = "立即完成培养";
    TEXT.HaveAgentCanComplete = "拥有终身秘书可立即完成";
    TEXT.HaveAgentCanAutoRead = "拥有终身秘书可自动批阅";
    TEXT.AutoRead = "自动批阅";
    TEXT.HaveAgentCanAutoPublicize = "拥有终身秘书可自动宣传";
    TEXT.TrainOpen = "艺人培养需先占领{0}";
    TEXT.SkillOpen = "艺人技能需要公司等级{0}";
    TEXT.AssetOpen = "艺人资产需要公司等级{0}";
    TEXT.AssistantOpen = "助理需要艺人等级{0}";
    TEXT.CompanySignAcotr = "{0}签约了新艺人";
    TEXT.ActorUpgradeAssetCount = "艺人资产上限增加{0}";
    TEXT.Use = "使用";
    TEXT.AssetSendMax = "赠送数量已达上限";
    TEXT.AssetSendMaxToExpend = "该艺人无法收下更多礼物了，可以通过提升艺人等级或使用忠诚卡增加上限?";
    TEXT.AssetExpend = "增加赠送上限";
    TEXT.AssetChooseCardNum = "选择需要使用忠诚卡的数量";
    TEXT.AssetArtistUpgrade = "艺人升级";
    TEXT.AssetUseCard = "使用忠诚卡";
    TEXT.ActorSkillExp = "技能经验:{0}";
    TEXT.age = "年龄";
    TEXT.sex = "性别";
    TEXT.country = "国籍";
    TEXT.type = "类型";
    TEXT.OldName = "原艺名：";
    TEXT.Level = "等级:";
    TEXT.RenameTip = "老板，要给我重新起个艺名吗?";
    TEXT.DiamondTrain = "钻石培养";
    TEXT.DiamondMustBeMax = "(钻石培养必然获得最大值)";
    TEXT.PropertyTipMsg = "在仓库可分解高星资产，或者用低星资产合成。";
    TEXT.ClickAnyWhereToClose = "点击任意位置关闭界面";
    TEXT.Year = "年";
    TEXT.Month = "月";
    TEXT.Day = "日";
    TEXT.MaxLevel = "满级";
    TEXT.SecondBuyArtistMsg = "您已经拥有此艺人了，是花费{0}{1}再次招募？(会转换得到该艺人的合同和资产)";
    TEXT.RelieveArtist = "启用";
    // 拍摄子窗口标题及相关提示文字
    TEXT.FilmProficiencyTitle = "艺人熟练度展示";
    TEXT.FilmSelectActorTitle = "艺人选择";
    TEXT.FilmCostViewTitle = "薪酬统计";
    TEXT.PleaseSelectActor = "Click assign artist.";
    TEXT.ActorForFilmTitle = "艺人对剧本和角色的发挥";
    TEXT.FilmTypeSelectTitle = "请选择本次拍摄的类型";
    TEXT.CurMarketTip = "当前市场情况";
    TEXT.FilmNoticeTitle = "通告选择";
    TEXT.FilmSQViewTitle = "杀青属性对比";
    TEXT.CinemaSelectionTitle = "院线选择";
    TEXT.FeedBackTitle = "媒体评分";
    TEXT.AudienceReputationTitle = "观众口碑";
    TEXT.SysTipTitle = "系统提示";
    TEXT.AllTempTip = "不能全部使用临时演员";
    // 拍摄相关
    TEXT.RefrushStory = "刷新剧本";
    TEXT.RefrushStoryTip = "是否花费{0}{1}刷新剧本？<br>今日还可刷新{2}次";
    TEXT.RefrushStoryTipOver = "刷新次数已用完";
    TEXT.NoStoryList = "未发现任何剧本，请稍候再试";
    TEXT.ChangeStoryName = "修改剧本名称";
    TEXT.StoryNameLimit = "剧本名称{0}个字符";
    TEXT.SelectTypeNone = "请选择类型";
    TEXT.NoticeScore = "{0}分";
    TEXT.CostFree = "free";
    TEXT.SYNTH = "SYNTH";
    TEXT.Play = "Play:";
    TEXT.NoAttAdd = "不加属性";
    TEXT.NameLV = "{0}\nLV.{1}";
    TEXT.FilmActor = "饰：{0}";
    TEXT.FilmProficiency = "熟练度{0}级： + {1}";
    TEXT.FilmAverage = "同档电影平均 {0}";
    TEXT.sexMan = "男";
    TEXT.sexWomen = "女";
    TEXT.sexChild = "儿童";
    TEXT.TotalFilm = "总票房：{0}";
    TEXT.filmOverMarketTip1 = "当前市场喜好导致 {0}% 票房提升，有超过 {1}% 的观众非常喜欢这个故事！";
    TEXT.filmOverMarketTip2 = "有 {0}% 还认为 {1} 电影非常适合此故事！";
    TEXT.filmOverMarketTip3 = "There're more";
    TEXT.filmOverMarketTip4 = "Now.";
    TEXT.filmJiesuanWin = "盈利：\n+ {0}%";
    TEXT.filmJiesuanFail = "亏损：\n- {0}%";
    TEXT.filmJiesuanRewardTip = "通过拍摄这部电影，我们获得以下奖励：";
    TEXT.filmOverTip = "收益已结束";
    TEXT.guanzhuduValue = "关注度：{0}";
    TEXT.guanzhuduOpenTip = "关注度{0}级解锁";
    TEXT.continueTip = "可能获得以下物品：";
    TEXT.TimeLeftTip = "剩余时间：";
    TEXT.EndingTitle = "正在运营的电影已满";
    TEXT.EndingTip = "最多只能有5部持续收益的电影";
    TEXT.promotionBtn = "提升";
    TEXT.gainEvaluationOver = "最终收益：{0}";
    TEXT.gainEvaluation = "收益评价：{0}/分钟";
    TEXT.GZMax = "已经提升到最大等级";
    TEXT.CinemaSignTip = "请先签约院线！";
    TEXT.NineToFiftyTip = "为保证比赛公平，21点55分开始将无法拍摄电影！请各位导演周知，以免造成不必要的损失！";
    TEXT.NineToFiftyFiveTip = "很抱歉，为保证比赛公平，21点55分后将无法进行电影拍摄";
    TEXT.GoldFilmActorTalk = ["金本爆发时的人物喊话1金本爆发时的人物喊话1金本爆发时的人物喊话1", "金本爆发时的人物喊话2金本爆发时的人物喊话2金本爆发时的人物喊话2", "金本爆发时的人物喊话3金本爆发时的人物喊话3金本爆发时的人物喊话3"];
    TEXT.FilmLongTime = "{0}分钟";
    TEXT.FilmKouBei = "观众口碑：{0}";
    TEXT.ActivityTitle = "活动大厅";
    TEXT.WelfTitle = "福利大厅";
    // seven
    TEXT.NoGetReward = "未登录";
    TEXT.GetReward = "领取";
    //secretary
    TEXT.Secretary_GetWelfare = "领取福利";
    TEXT.Secretary_DailyGiftTitle = "每日礼包";
    TEXT.Secretary_NeedBuySecretary = "你需要购买小秘书";
    TEXT.Secretary_GetRewardDailySecretary = "礼包每日购买一次";
    TEXT.Secretary_AlreadyPurchased = "已购买";
    TEXT.Buy = "购买";
    TEXT.SureBuy = "确认购买";
    TEXT.Buyed = "已购买";
    // static Secretary_GetWelfare = "领取福利";
    // static Secretary_GetWelfare = "领取福利";
    // 合作相关
    TEXT.CooperateTaskType10 = "拍摄一部电影";
    TEXT.CooperateTaskType11 = "\n类型：{0}";
    TEXT.CooperateTaskType12 = "\n媒体评分：{0}分";
    TEXT.CooperateTaskType13 = "\n口碑：{0}分";
    TEXT.CooperateTaskType14 = "\n剧本：{0}星";
    TEXT.CooperateTaskType15 = "\n收益：{0}";
    TEXT.CooperateTaskType20 = "完成{0}次会议、公务或粉丝探班";
    TEXT.CooperateTaskType30 = "完成{0}次订单";
    TEXT.CooperateTaskType40 = "领取{0}个{1}";
    TEXT.CooperateTaskType50 = "领取{0}个任意周边产品";
    TEXT.CooperateTaskType60 = "领取{0}次城市收益";
    TEXT.CooperateTaskType70 = "完成{0}次艺人培养";
    TEXT.CooperateTaskType80 = "消费{0}钻石";
    TEXT.CooperateTaskType90 = "完成{0}次星探搜索";
    TEXT.CooperateTaskType100 = "完成{0}次剧本搜罗";
    TEXT.CooperateTaskProgress = "\n（{0}/{1}）";
    TEXT.CooperateReceiveBtn = "接受";
    TEXT.CooperateassistBtn = "协助";
    TEXT.CooperategetBtn = "领取";
    TEXT.CooperateassitingText = "协助中";
    TEXT.CooperateHaveTaskText = "你已经接受任务了，请完成后再次领取任务";
    TEXT.CooperationApplyTitle = "合作请求";
    TEXT.CooperationremindTip = "每周最多能与3家不同公司合作";
    TEXT.CooperationrefuseBtn = "拒绝";
    TEXT.CooperationreceiveBtn = "同意";
    TEXT.CooperationApplyTip = "希望与你签署合作协议，是否同意?";
    TEXT.CooperationEndTitle = "解除合作";
    TEXT.CooperationEndTip1 = "是否解除合作关系？";
    TEXT.CooperationEndTip2 = "注意：每周只能和三家不同的公司进行合作。";
    TEXT.CooperationMainPanelTitle = "公司合作";
    TEXT.Cooperationtext1 = "首次建立合作关系可得：";
    TEXT.Cooperationtext2 = "与熟人之间建立合作：";
    TEXT.Cooperationtext3 = "公开寻找合作公司：";
    TEXT.Cooperationremind = "首次账号查找建立合作提示";
    TEXT.Cooperationintro = "填写对方ID";
    TEXT.CooperationinviteBtn1 = "发出邀请";
    TEXT.CooperationinviteBtn2 = "公开邀请";
    TEXT.CooperationdisinviteBtn = "取消邀请";
    TEXT.CooperationMainPanelTip1 = "请输入对方用户id";
    TEXT.CooperationMainPanelTip2 = "请稍候再次输入";
    TEXT.CooperationMainPanelID = "本地玩家ID： {0}";
    TEXT.CooperationRealtionshipTitle = "合作任务";
    TEXT.CooperationRealtionshipTip = "星级越高奖励越好！";
    TEXT.CooperationRealtionshiprelieveBtn = "解除";
    TEXT.CooperationGiveRewardDollar = "赠送美元";
    TEXT.CooperationGiveRewardGold = "赠送金币";
    //Build	
    TEXT.Floor = "第{0}层";
    TEXT.BuildFloor = "扩建第{0}层";
    TEXT.BuildUpgrade = "升级至 {0}级";
    TEXT.BuildUpgrade_UBB = "[color=#66ff66]升级至{0}级[/color]";
    TEXT.CompanyLevel = "LV.{0}解锁";
    TEXT.BuildEffect = "建筑作用：";
    TEXT.BuildLevelEffect = "升级效果：";
    TEXT.BuildLevelup = "升级";
    TEXT.BuildConfirm = "确认";
    TEXT.BuildLevel = "等级{0}";
    TEXT.BuildFloorAlert = "确认要扩建{0}层吗？";
    TEXT.BuildTitle = "建造";
    TEXT.ActorExperciseExpedite = "加速";
    TEXT.BuildFloorFailLevel = "需要公司等级达到：{0}";
    TEXT.BuildFloorFailCity = "需要占领城市：{0}. {1}";
    TEXT.BuildActorRoomTalentNpc = "星探"; //
    TEXT.BuildActorRoomTrainerNpc = "培训师";
    TEXT.TopFloor = "Top Floor";
    //
    TEXT.LincenceMax = "拍摄许可证达到上限";
    // 艺人名录
    TEXT.ArtistDicUITitle = "艺人名录";
    TEXT.ArtistDicUInotHired = "未获得此艺人";
    TEXT.ArtistDicUIStar = "星级";
    TEXT.ArtistDicUICountry = "国籍";
    TEXT.ArtistDicUISex = "性别";
    TEXT.ArtistDicUIAge = "年龄类型";
    TEXT.ArtistDicUIShow = "表演类型";
    TEXT.ArtistDicUIDefName = "原艺名：";
    TEXT.ArtistDicUIHowHave = "如何签约该艺人？";
    TEXT.ArtistDicUIPinglun = "请输入留言内容";
    TEXT.ArtistDicUINoActor = "没有符合筛选条件的艺人";
    TEXT.ArtistDicUINoPinglun = "暂时没有玩家留言";
    TEXT.ArtistDicUIPinglunTitle = "留言薄：";
    //PlayerInfo
    TEXT.PlayerUpgradeGetAward = "Recieve";
    TEXT.PlayerSelfSignature = "Edit Self-Introduction";
    TEXT.PlayerSignature = "This person didn't leave a messege, just like a closed book~";
    TEXT.ItemHave = "拥有：";
    TEXT.PlayerInfoTab0 = "HOME";
    TEXT.PlayerInfoTab1 = "CAREER";
    TEXT.PlayerInfoTab2 = "TROPHY";
    TEXT.PlayerInfoTab3 = "FILMS";
    TEXT.PlayerInfoTab4 = "ACTORS";
    //Home
    TEXT.PlayerInfoTabHome_Rank0 = "建筑层数";
    TEXT.PlayerInfoTabHome_Rank1 = "艺人数量";
    TEXT.PlayerInfoTabHome_Rank2 = "好友数量";
    TEXT.PlayerInfoTabHome_Rank3 = "市场占领";
    TEXT.PlayerInfoTabHome_Rank4 = "宝物数量";
    TEXT.PlayerInfoTabHome_Rank5 = "仓库容量";
    //CAREER
    TEXT.PlayerInfoTabCareer_Rank0 = "拍摄过的电影数";
    TEXT.PlayerInfoTabCareer_Rank1 = "上映电影总数";
    TEXT.PlayerInfoTabCareer_Rank2 = "得到的票房总数";
    TEXT.PlayerInfoTabCareer_Rank3 = "完成的订单数量";
    TEXT.PlayerInfoTabCareer_Rank4 = "解锁过的最高档生产线";
    TEXT.PlayerInfoTabCareer_Rank5 = "完成公务次数";
    TEXT.PlayerInfoTabCareer_Rank6 = "会议达成协议次数";
    TEXT.PlayerInfoTabCareer_Rank7 = "粉丝成功拜访次数";
    TEXT.PlayerInfoTabCareer_Rank8 = "得到过多少次分组第一";
    //TROPHY
    TEXT.PlayerInfoTabTrophy_Rank00 = "最佳男演员得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank11 = "最佳女演员得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank22 = "最佳表演电影得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank3 = "最佳艺术电影得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank4 = "最受欢迎电影得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank5 = "铁齿轮奖得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank6 = "金羊驼奖得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank7 = "火星人奖得奖次数";
    TEXT.PlayerInfoTabTrophy_Rank8 = "金月球奖得奖次数";
    //FILMS
    TEXT.PlayerInfoTabFilm_Rank0 = "大众口碑最高的电影";
    TEXT.PlayerInfoTabFilm_Rank1 = "票房最高的电影";
    TEXT.PlayerInfoTabFilm_Rank2 = "拍摄过的恐怖片数量";
    TEXT.PlayerInfoTabFilm_Rank3 = "拍摄过的悬疑片数量";
    TEXT.PlayerInfoTabFilm_Rank4 = "拍摄过的歌舞片数量";
    TEXT.PlayerInfoTabFilm_Rank5 = "拍摄过的喜剧片数量";
    TEXT.PlayerInfoTabFilm_Rank6 = "拍摄过的动画片数量";
    TEXT.PlayerInfoTabFilm_Rank7 = "拍摄过的叙事片数量";
    TEXT.PlayerInfoTabFilm_Rank8 = "拍摄过的爱情片数量";
    TEXT.PlayerInfoTabFilm_Rank9 = "拍摄过的动作片数量";
    //ACTORS
    TEXT.PlayerInfoTabActor_Rank0 = "票房号召力最强的艺人";
    TEXT.PlayerInfoTabActor_Rank1 = "得奖最多的艺人";
    TEXT.PlayerInfoTabActor_Rank1Value = "{0}次";
    TEXT.PlayerInfoTabActor_Rank2 = "拍摄电影最多的艺人";
    TEXT.PlayerInfoTabActor_Rank2Value = "{0}部";
    TEXT.PlayerInfoTabActor_Rank3 = "最偏爱的艺人";
    TEXT.PlayerInfoTabActor_Rank3Value = "赠送{0}个";
    TEXT.PlayerInfoTabActor_Rank4 = "最重视的艺人";
    TEXT.PlayerInfoTabActor_Rank4Value = "培养{0}次";
    TEXT.PlayerInfoTabActor_Rank5 = "最信赖的艺人";
    TEXT.PlayerInfoTabActor_Rank5Value = "技能共{0}级";
    //Story
    TEXT.StoryFindTime = "搜罗次数:";
    TEXT.StoryTitle = "剧本";
    TEXT.StoryCollect = "集齐剧本";
    TEXT.StoryFind = "收罗剧本";
    TEXT.StoryCompleteAllChallenge = "完成所有挑战";
    TEXT.StoryAchieve = "剧本成就";
    TEXT.ZuiGaoPiaoFang = "最高票房";
    TEXT.StoryDesc1 = "用本组剧本拍摄电影时{0}";
    TEXT.StoryDesc2 = "{0}属性增加{1}%";
    TEXT.StoryAchieveTarget1 = "剧本拍摄{0}/5次";
    TEXT.StoryAchieveTarget2 = "媒体评分8分或以上{0}/3次";
    TEXT.StoryAchieveTarget3 = "票房档次大卖或以上{0}/5次";
    TEXT.StorySou = "搜罗";
    TEXT.StoryRewardTitle = "奖励";
    TEXT.StoryRemainNotEnough = "剩余次数不足";
    TEXT.StoryContentEmpty = "内容不能是空的";
    TEXT.StoryContentToMax = "内容长度不得超过50";
    TEXT.StoryContentSpace = "内容开头结尾不能有空格";
    TEXT.StoryContentBlockWord = "内容中有屏蔽字符";
    TEXT.SendMsg = "发送";
    TEXT.StoryInputPromptText = "发表我的影评";
    TEXT.StoryAchievementDesc = "成就达成后拍摄时艺人可能会状态爆发";
    TEXT.StoryAchievementTitle = "成就目标";
    TEXT.StoryGetReward = "领取奖励";
    TEXT.CantGetReward = "未达到领取条件";
    TEXT.GetAllReward = "恭喜您已获得全部礼包";
    TEXT.NextRewardTip = "Unlock at LV.{0}";
    TEXT.GiftTipTitle = "LV.{0} Gift";
    //Produce
    TEXT.ProduceTime = "每次生产时间：{0}";
    TEXT.ProduceGrade = "第{0}档";
    TEXT.ProduceLevel = "等级{0}";
    TEXT.ProduceSkillType1 = "队列数量";
    TEXT.ProduceSkillType2 = "存储上限";
    TEXT.ProduceSkillType3 = "时长减免";
    TEXT.ProduceSkillType4 = "每次产出";
    TEXT.ProduceActorTitle = "请选择艺人";
    TEXT.ProduceOffActorTitle = "正在进行[{0}]的艺人";
    TEXT.ProduceQuickBtnName = "一键生产";
    TEXT.ProduceQuickAwardBtnName = "一键领取";
    TEXT.ProduceStart = "开始生产";
    TEXT.ProduceItemStore = "库存";
    TEXT.ProduceUnlock = "解锁";
    TEXT.ProduceActorBusy = "忙碌";
    TEXT.ProduceActorFree = "空闲";
    TEXT.ProduceOffActor = "取消派遣";
    //订单 rder
    TEXT.OrderNeedTitle = "满足粉丝会的需求会让他们更加沉迷";
    TEXT.OrderNeed = "订单需求";
    TEXT.OrderCompleteReward = "完成报酬";
    TEXT.OrderExtraReward = "额外效果";
    TEXT.OrderNoneOrder = "暂无更多订单";
    TEXT.OrderNewOrderWay = "拍电影、市场宣传，都可能获得新订单";
    TEXT.OrderSortOrder = "排队订单：{0}";
    TEXT.OrderCooperationComfirmTitle = "资助";
    TEXT.OrderTheBoxHasPut = "该箱子已装箱完毕";
    TEXT.OrderSureDeleteOrder = "我们要拒绝这个订单吗？需要过一段时间才能收到新的订单哦~~（已装箱资源会被扣除）";
    TEXT.OrderRefuseOrder = "拒绝订单";
    TEXT.OrderComplete = "完成";
    TEXT.OrderNeedCompleteBox = "需要先完成装箱";
    TEXT.OrderRewardTitle = "获得奖励";
    TEXT.OrderArealyGotReward = "已经领取过奖励";
    TEXT.OrderNeedCompleteBoxNum = "需要完成订单{0}个";
    TEXT.OrderCooperation = "合作者";
    //探班
    TEXT.VisitNextFansNum = "待接见粉丝数量：{0}/{1}";
    TEXT.VisitStartBtnOk = "嗯，去找";
    TEXT.VisitAutoReceive = "自动接待";
    TEXT.VisitFansTomeetActor = "老板，有粉丝想见我司艺人。";
    TEXT.VisitNextVisitActor = "接待室还有{0}名粉丝，是否现在接待";
    TEXT.VisitNextFans = "下一个粉丝";
    TEXT.VisitHaveOtherFansWaiting = "当前已经有粉丝正在等待";
    TEXT.VisitDonotHaveFans = "当前没有粉丝";
    TEXT.VisitFansWantMeet = "粉丝想见";
    //公务
    TEXT.BusinessRemainRead = "待批阅：{0}/{1}";
    TEXT.BusinessSendName = "发件人：{0}";
    TEXT.BusinessNextPage = "下一页";
    TEXT.BusinessReadNewMsg = "读取新任务";
    TEXT.BusinessDonotHaveBusiness = "没有公务";
    TEXT.BusinessGet = "获得";
    //会议
    TEXT.MeetingNextNum = "待接见会议数量{0}/{1}";
    TEXT.MeetingInMeeting = "在会议中";
    TEXT.MeetingVisitCompany = "老板{0}的谈判代表已等候多时了。";
    TEXT.MeetingStartOkBtnText = "嗯，开会";
    TEXT.MeetingStartCancelBtnText = "拒绝";
    TEXT.MeetingMantianYaojia = "漫天要价";
    TEXT.MeetingTaojiahuanjia = "讨价还价";
    TEXT.MeetingChengjiao = "成交";
    TEXT.MeetingChengjiaoSure = "成交确认";
    TEXT.MeetingHuijue = "回绝";
    TEXT.MeetingBye = "再见";
    TEXT.MeetingGameStop = "停";
    TEXT.MeetingRewardTitle = "奖励";
    TEXT.MeetingNext = "{0}的会议代表已在门外等候多时，是否马上接见？";
    TEXT.MeetingNextMeet = "下一个会议";
    TEXT.MeetingNeedAddPiece = "不太满意需要加价";
    TEXT.MettingTitle = "会议室";
    // 任务
    TEXT.TaskArrangement = "今天的日程安排";
    TEXT.TaskState = "完成度: [color=#488fc1]{0}[/color]";
    TEXT.ActorExperciser = "训练师";
    TEXT.ActorExperciserStart = "点击加号选择艺人进行训练";
    TEXT.ActorExperciserOn = "完成训练剩余时间";
    TEXT.ActorExperciseMaxLine = "训练队列已达到上限";
    TEXT.ActorExperciseUnlock = "开始新的训练需要";
    TEXT.ActorExperciseQuick = "加速训练需要";
    TEXT.ActorExperciceCompleteDesc = "点击完成训练";
    TEXT.ActorExperciceKey = "艺人经验";
    TEXT.MissionPanelTipMsg = "日程任务提示信息";
    //公告
    TEXT.NoticeTitle = "提示";
    TEXT.NoticeServerClose = "服务器开始维护， 请退出游戏";
    //排行榜
    TEXT.RankText = "第{0}名";
    //市场
    TEXT.MarketOccupe = "已占领城市{0}/{1}";
    TEXT.MarketChangeHomeContent = "只能在经营总部所在城市派驻形象大使，是否更换总部";
    TEXT.MarketChangeHomeTitle = "更换总部所在城市";
    TEXT.MarketAddFansTip = "得益于公司的市场推广";
    TEXT.MainTaskAddFansTip = "得益于主线任务奖励";
    TEXT.MarketAddFansInfo = "{0}粉丝数 +{1}";
    TEXT.MarketLvUpNeedFans = "公司还需要{0}个粉丝即可升级";
    TEXT.MarketShare = "市场占有率";
    TEXT.MarketReward = "获得奖励";
    TEXT.MarketActorPromot = "提升{0}";
    TEXT.MarketNoSecretary = "您还没有购买终身秘书，是否立即购买";
    TEXT.MarketPublicityInfo = "根据调查，当地观众比较青睐{0}若能找到相关艺人来进行市场代言，将会事半功倍！";
    TEXT.MarketSelectActor = "请选择代言人在 {0} 宣传";
    TEXT.MarketSelectActorForCity = "请选择 {0} 的形象大使";
    TEXT.MarketMaxAsset = "最多存储{0}小时收益";
    TEXT.MarketItemLockTitle = "未开始生产";
    TEXT.MarketItemLockTip = "需要派遣形象大使：{0}";
    TEXT.MarketHomeActorLock = "解锁第5位形象大使，需要升到{0}";
    TEXT.MarketCityTip = "全部街区都完成宣传后可占领当地市场并获得长期收益";
    //街区
    TEXT.StreetCinemaInfo = "{0}家电影院（{1}）";
    // static StreetTitle = "Match [color=#ffffff]group {0}[/color] on {1}";
    TEXT.StreetTitle = "{1}的第{0}组";
    TEXT.OscarTitle = "{1},{0}";
    TEXT.StreetCongratulateSelf = "不能祝贺自己";
    //仓库
    TEXT.BagSelectNum = "选择数量";
    TEXT.BagNeedMoreItem = "物品不足，还需要{0}个才能合成";
    TEXT.BagSelectCompoundNum = "选择要合成的数量";
    TEXT.BagCompound = "物品合成";
    TEXT.BagSelectGive = "选择赠送对象";
    TEXT.BagSelectGiveNum = "选择要赠送的数量";
    TEXT.BagGive = "物品赠送";
    TEXT.BagSelectResolveNum = "选择要拆分的数量";
    TEXT.BagResolve = "物品拆分";
    TEXT.BagSelectSaleNum = "选择要出售的数量";
    TEXT.BagSale = "物品出售";
    TEXT.BagSelectUseNum = "选择要使用的数量";
    TEXT.BagUse = "物品使用";
    TEXT.BagSelectActor = "请选择一名演员";
    TEXT.BagSelectItem = "请选择一件物品";
    //商城
    TEXT.ShopGive = "送";
    TEXT.ShopDayLimit = "今日限购";
    TEXT.ShopWeekLimit = "每周限购";
    TEXT.ShopRegistLimit = "永久限购";
    TEXT.RechargeTitle = "充值";
    TEXT.RechargeTipsMsg = "充值界面提示信息 提示信息 提示信息";
    TEXT.ShopAvailable = "有效期{0}天";
    TEXT.AfterTime = "{0}后可以购买";
    //奥斯卡
    TEXT.OscarName = "奥斯卡";
    TEXT.OscarRewardNameDesc_6 = "今日最佳：";
    TEXT.OscarRewardNameDesc_9 = "今日票房达到大卖：";
    TEXT.OscarRewardValueDesc_7 = "总票房第{0}名[color=#e3b121]（{1}）[/color]";
    TEXT.OscarRewardValueDesc_8 = "今日拍摄电影达到{0}部";
    TEXT.OscarRewardValueDesc_9 = "{0}部";
    TEXT.OscarRewardInfoDesc_6 = "票房第{0}名（{1}）";
    TEXT.OscarRewardInfoDesc_7 = "超过{0}%的{1}玩家（共{2}人）";
    TEXT.OscarRewardNoMovie = "未拍摄电影";
    TEXT.OscarDanmuLong = "弹幕规定长度为【4-100】";
    TEXT.OscarDanmuSpace = "弹幕开头和结尾不能有空格";
    TEXT.OscarDanmuBlockword = "弹幕中有非法字符";
    TEXT.OscarMovie = "我的《{0}》拍摄完成";
    TEXT.OscarInputTip = "Enter a barrage";
    TEXT.Today = "今天";
    TEXT.Yestoday = "昨天";
    //跳转
    TEXT.SystemGoOtherFunction_Title = "提示";
    TEXT.SystemGoOtherFunction_Desc_1 = "技能经验不足，可以安排艺人前往训练室训练已获得技能经验";
    TEXT.SystemGoOtherFunction_Desc_2 = "星探次数还在恢复或者今日次数已用完，可以使用星探卡立刻进行一次星探（使用后当前为招募的艺人会离开）";
    TEXT.SystemGoOtherFunction_Go_1 = "前往训练";
    TEXT.SystemGoOtherFunction_Go_2 = "星探卡";
    //小秘书
    TEXT.SecretaryRemainAutoReadNum = "自动批阅次数{0}";
    TEXT.SecretaryRemainAutoVisitNum = "自动接待次数{0}";
    TEXT.SecretaryRemainAutoPublicizeNum = "自动宣传次数{0}";
    TEXT.SecretaryForeverAgent = "终身秘书";
    //
    TEXT.SystemDisAllowHaveNumber = "不能含有数字";
    TEXT.SystemDisAllowHaveStartLastNumber = "开头结尾不能含有数字";
    //日程任务
    TEXT.StateText = "完成度:";
    TEXT.SexTip = "请选择你喜欢的艺人";
    //设置
    TEXT.LanguageSettings = "语言";
    TEXT.FeedBackSettings = "反馈";
    TEXT.SwitchAccount = "切换账号";
    TEXT.SwitchLanguage = "切换语言";
    TEXT.SureaSwitchAccount = "是否确认切换账号？";
    //邮件
    TEXT.MailTitle = "邮件";
    TEXT.DeleteRead = "删除已读";
    TEXT.ToReader = "致玩家：";
    TEXT.ReawrdMsg = "奖励内容：";
    //主线任务
    TEXT.TaskGetReward = "点击领取奖励";
    TEXT.Log = "记录";
    TEXT.Get = "领取";
    TEXT.Go = "前往";
    //金币兑换
    TEXT.GoldExchangeTitle = "金币兑换";
    TEXT.GoldExchangeRemainNum = "剩余可兑换次数：{0}";
    TEXT.GoldExchangeOne = "兑换1次";
    TEXT.GoldExchangeTen = "兑换10次";
    TEXT.GoldExchangeTimesNoEnough = "兑换次数不足";
    TEXT.GoldExchangeBuildingTitle = "金币兑换";
    TEXT.GoldExchangeOk = "兑换成功";
    // 游客绑定失败
    TEXT.GuestBindError_1 = "不是游客账号";
    TEXT.GuestBindError_2 = "绑定失败";
    TEXT.GuestBindError_3 = "账号已存在";
    //
    TEXT.SameActorName = "艺人的名字和原来一样";
    //
    //
    TEXT.AssistantDesc = "Greatly improved actor's {0}，slightly improved other attri bute.";
    TEXT.AssistantBaseDesc = "Everybody says I look like Jackie chan Everybody says Item ok.";
    //
    TEXT.AssistantTitle1 = "属性提升";
    //
    TEXT.AssistantTitle2 = "课程效果";
    //
    TEXT.AssistantTrainTimes = "培养次数：";
    //
    TEXT.AssistantUnlockTrain = "{0}级解锁";
    //
    TEXT.AssistantUnlockTag = "{0}级解锁";
    //
    TEXT.AssistantStudy = "学习";
    TEXT.AssistantUpgrade = "提升";
    //
    TEXT.AssistantUpgradeMax = "课程等级已达到上限，无法提升课程等级";
    //
    TEXT.GuideCompleteRewardTitle = "完成主线任务奖励";
    //
    TEXT.GuideCompleteGetBtnTitle = "领取";
    return TEXT;
}());
exports.default = TEXT;
},{}],310:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseConfig_1 = require("./BaseConfig");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var LangConfig = /** @class */ (function (_super) {
    __extends(LangConfig, _super);
    function LangConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dict = new Dictionary_1.default();
        return _this;
    }
    return LangConfig;
}(BaseConfig_1.default));
exports.default = LangConfig;
},{"../Libs/Helpers/Dictionary":679,"./BaseConfig":2}],311:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LangConfigLoaderList_1 = require("./LangConfigLoaderList");
var Signal_1 = require("../Libs/signals/Signal");
var Typed3Signal_1 = require("../Libs/signals/Typed3Signal");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var TEXT_1 = require("./Keys/TEXT");
var FguiHelper_1 = require("../Libs/Helpers/FguiHelper");
/// 配置读取器列表
var LangConfigLoader = /** @class */ (function (_super) {
    __extends(LangConfigLoader, _super);
    function LangConfigLoader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 消息--加载进度
        _this.sLoadProgress = new Typed3Signal_1.default();
        // 消息--加载完成
        _this.sLoaded = new Signal_1.default();
        // 加载进度
        _this.loadProgress = 0;
        // 是否已经加载完成
        _this.isLoadCompleted = false;
        _this.textRenders = [];
        // 消息--加载完成
        _this.sTextLoaded = new Signal_1.default();
        return _this;
    }
    LangConfigLoader.prototype.loadAllAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.loadAll();
                        _this.sLoaded.addOnce(function () {
                            resolve();
                        }, _this);
                    })];
            });
        });
    };
    // 加载所有
    LangConfigLoader.prototype.loadAll = function () {
        // if (this.renders.indexOf(this.textCode) != -1)
        // {
        // 	this.renders.slice(this.renders.indexOf(this.textCode), 1);
        // 	this.renders.slice(this.renders.indexOf(this.textFgui), 1);
        // }
        var _this = this;
        this.loadProgress = 0;
        var count = this.renders.length;
        var loadedNum = 0;
        var onItemLoaded = function () {
            loadedNum++;
            _this.loadProgress = loadedNum / count;
            _this.sLoadProgress.dispatch(loadedNum, count, _this.loadProgress);
            if (loadedNum >= count) {
                _this.onGameLoadedAll();
            }
        };
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].lang = this.lang;
            this.renders[i].load(this.configLoader, onItemLoaded);
        }
    };
    // 加载完成所有
    LangConfigLoader.prototype.onGameLoadedAll = function () {
        for (var i = 0; i < this.renders.length; i++) {
            this.renders[i].onGameLoadedAll();
        }
        // 设置代码文本	
        this.setCodeTEXT();
        // 设置fgui文本
        FguiHelper_1.default.setStringsSource(this.textFgui);
        this.isLoadCompleted = true;
        this.sLoaded.dispatch();
    };
    LangConfigLoader.prototype.loadText = function () {
        var _this = this;
        var renders = this.textRenders;
        if (renders.length == 0) {
            renders.push(this.textCode);
            renders.push(this.textFgui);
        }
        this.loadProgress = 0;
        var count = renders.length;
        var loadedNum = 0;
        var onItemLoaded = function () {
            loadedNum++;
            if (loadedNum >= count) {
                _this.onLoadTextComplte();
            }
        };
        for (var i = 0; i < renders.length; i++) {
            renders[i].lang = this.lang;
            renders[i].load(this.configLoader, onItemLoaded);
        }
    };
    // 加载完成TEXT
    LangConfigLoader.prototype.onLoadTextComplte = function () {
        var renders = this.textRenders;
        for (var i = 0; i < renders.length; i++) {
            renders[i].onGameLoadedAll();
        }
        // 设置代码文本	
        this.setCodeTEXT();
        // 设置fgui文本
        FguiHelper_1.default.setStringsSource(this.textFgui);
        this.sTextLoaded.dispatch();
    };
    // 设置代码文本		
    LangConfigLoader.prototype.setCodeTEXT = function () {
        if (!this._srcTEXT && TEXT_1.default) {
            this._srcTEXT = new Dictionary_1.default();
            for (var key in TEXT_1.default) {
                this._srcTEXT.add(key, TEXT_1.default[key]);
            }
        }
        var list = this.textCode.getConfigList();
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            var key = item.dict.getValue("key");
            var value = item.dict.getValue("value");
            if (!isNullOrEmpty(value)) {
                TEXT_1.default[key] = value;
            }
        }
    };
    return LangConfigLoader;
}(LangConfigLoaderList_1.default));
exports.default = LangConfigLoader;
},{"../Libs/Helpers/Dictionary":679,"../Libs/Helpers/FguiHelper":680,"../Libs/signals/Signal":683,"../Libs/signals/Typed3Signal":684,"./Keys/TEXT":309,"./LangConfigLoaderList":312}],312:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LangConfigReader_1 = require("./LangConfigReader");
/////////////////////////////////////
// ihaiu.Language生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
/// 配置读取器列表
var LangConfigLoaderList = /** @class */ (function () {
    function LangConfigLoaderList() {
        this.lang = "zh_cn";
        // 读取器列表
        this.renders = [];
        this.textCode = new LangConfigReader_1.default("TextCode");
        this.textFgui = new LangConfigReader_1.default("TextFgui");
    }
    // 初始化读取器列表
    LangConfigLoaderList.prototype.initList = function () {
    };
    return LangConfigLoaderList;
}());
exports.default = LangConfigLoaderList;
},{"./LangConfigReader":313}],313:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("./CsvConfigRender");
var LangConfig_1 = require("./LangConfig");
var ConfigFieldType_1 = require("./Interfaces/ConfigFieldType");
/** 多语言配置读取器 */
var LangConfigReader = /** @class */ (function (_super) {
    __extends(LangConfigReader, _super);
    function LangConfigReader(tableName) {
        var _this = _super.call(this) || this;
        // 语言
        _this.lang = "zh_cn";
        _this.tableName = tableName;
        return _this;
    }
    // 获取配置文件路径        
    LangConfigReader.prototype.getConfigPath = function () {
        return "config/lang/" + this.lang + "/" + this.tableName + ".csv";
    };
    Object.defineProperty(LangConfigReader.prototype, "headKeyFieldList", {
        get: function () {
            if (!this._headKeyFieldList) {
                this._headKeyFieldList = this.headKeyFields.getValues();
            }
            return this._headKeyFieldList;
        },
        enumerable: true,
        configurable: true
    });
    LangConfigReader.prototype.ParseCsv = function (csv) {
        var config = new LangConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        var fieldList = this.headKeyFieldList;
        for (var i = 0; i < fieldList.length; i++) {
            var txt = csvGetString(csv, this.GetHeadIndex(fieldList[i]));
            var headType = this.GetHeadType(i);
            switch (headType) {
                case ConfigFieldType_1.default.MStringArray:
                    config.dict.add(fieldList[i], toStringArray(txt));
                    break;
                default:
                    config.dict.add(fieldList[i], txt);
                    break;
            }
        }
        this.addConfig(config);
    };
    return LangConfigReader;
}(CsvConfigRender_1.default));
exports.default = LangConfigReader;
},{"./CsvConfigRender":304,"./Interfaces/ConfigFieldType":305,"./LangConfig":310}],314:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
var LangType_1 = require("./LangType");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var LangConfigLoader_1 = require("./LangConfigLoader");
/** 多语言配置管理器 */
var LangManager = /** @class */ (function () {
    function LangManager() {
        // 是否使用多语言
        this.isUseLang = false;
        this._lang = null;
        this.langListDict = new Dictionary_1.default();
    }
    Object.defineProperty(LangManager, "Instance", {
        get: function () {
            if (!LangManager._Instance) {
                LangManager._Instance = new LangManager();
            }
            return LangManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LangManager.prototype, "httpLang", {
        get: function () {
            if (!this._httpLang) {
                this.httpLang = this.lang;
            }
            return this._httpLang;
        },
        set: function (value) {
            value = value.replace("_", "-");
            if (value.indexOf("-")) {
                var arr = value.split("-");
                for (var i = 1; i < arr.length; i++) {
                    arr[i] = arr[i].toUpperCase();
                }
                value = arr.join("-");
            }
            this._httpLang = value;
            // if (window["frame"] && window["frame"]["comm"] && window["frame"]["comm"]["HttpComm"])
            // 	frame.comm.HttpComm.SetHeader("accept-language", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LangManager.prototype, "lang", {
        get: function () {
            if (!this._lang) {
                if (Game_1.default.localStorage.hasItem("_lang", true)) {
                    this._lang = Game_1.default.localStorage.getString("_lang", true);
                }
                else {
                    // let lang = navigator.language;
                    // if (!lang)
                    // {
                    // 	lang = navigator["browserLanguage"];
                    // }
                    // lang = LangType.toLang(lang);
                    // this._lang = lang;
                    this._lang = LangType_1.default.en;
                }
                this.httpLang = this._lang;
            }
            return this._lang;
        },
        set: function (value) {
            this._lang = value;
            this.httpLang = value;
            Game_1.default.localStorage.setString("_lang", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LangManager.prototype, "current", {
        get: function () {
            if (this._current) {
                return this._current;
            }
            if (!this.langListDict.hasKey(this.lang)) {
                var langList = new LangConfigLoader_1.default();
                langList.lang = this.lang;
                this.langListDict.add(langList.lang, langList);
                this._current = langList;
            }
            return this.langListDict.getValue(this.lang);
        },
        enumerable: true,
        configurable: true
    });
    LangManager.prototype.getValue = function (tableName, id, fieldName) {
        var langReader = this.current[tableName];
        if (langReader) {
            var config = langReader.getConfig(id);
            if (config) {
                return config.dict.getValue(fieldName);
            }
        }
        return null;
    };
    return LangManager;
}());
exports.default = LangManager;
},{"../Game":623,"../Libs/Helpers/Dictionary":679,"./LangConfigLoader":311,"./LangType":315}],315:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LangType = /** @class */ (function () {
    function LangType() {
    }
    LangType.toLang = function (httpLang) {
        httpLang = httpLang.replace("-", "_").toLowerCase();
        if (httpLang.indexOf("en") != -1)
            httpLang = LangType.en;
        // if (window["Game"])	
        // {
        // 	if (!Game.config.languageType.getConfigByValue(httpLang))
        // 	{
        // 		httpLang = LangType.en;
        // 	}
        // }
        // else
        {
            var has = false;
            for (var v in LangType) {
                if (v == httpLang) {
                    has = true;
                    break;
                }
            }
            if (!has) {
                httpLang = LangType.en;
            }
        }
        return httpLang;
    };
    LangType.zh_cn = "zh_cn";
    LangType.zh_tw = "zh_tw";
    LangType.en = "en";
    return LangType;
}());
exports.default = LangType;
},{}],316:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActionConfigReaderStruct_1 = require("../ReaderStructs/ActionConfigReaderStruct");
var ActionConfigReader = /** @class */ (function (_super) {
    __extends(ActionConfigReader, _super);
    function ActionConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActionConfigReader;
}(ActionConfigReaderStruct_1.default));
exports.default = ActionConfigReader;
},{"../ReaderStructs/ActionConfigReaderStruct":449}],317:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActivitiesConfigReaderStruct_1 = require("../ReaderStructs/ActivitiesConfigReaderStruct");
var ActivitiesConfigReader = /** @class */ (function (_super) {
    __extends(ActivitiesConfigReader, _super);
    function ActivitiesConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActivitiesConfigReader;
}(ActivitiesConfigReaderStruct_1.default));
exports.default = ActivitiesConfigReader;
},{"../ReaderStructs/ActivitiesConfigReaderStruct":450}],318:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideConfigReaderStruct_1 = require("../ReaderStructs/ActorAideConfigReaderStruct");
var ActorAideConfigReader = /** @class */ (function (_super) {
    __extends(ActorAideConfigReader, _super);
    function ActorAideConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideConfigReader;
}(ActorAideConfigReaderStruct_1.default));
exports.default = ActorAideConfigReader;
},{"../ReaderStructs/ActorAideConfigReaderStruct":451}],319:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideIntimacyConfigReaderStruct_1 = require("../ReaderStructs/ActorAideIntimacyConfigReaderStruct");
var ActorAideIntimacyConfigReader = /** @class */ (function (_super) {
    __extends(ActorAideIntimacyConfigReader, _super);
    function ActorAideIntimacyConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideIntimacyConfigReader;
}(ActorAideIntimacyConfigReaderStruct_1.default));
exports.default = ActorAideIntimacyConfigReader;
},{"../ReaderStructs/ActorAideIntimacyConfigReaderStruct":452}],320:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideLvConfigReaderStruct_1 = require("../ReaderStructs/ActorAideLvConfigReaderStruct");
var ActorAideLvConfigReader = /** @class */ (function (_super) {
    __extends(ActorAideLvConfigReader, _super);
    function ActorAideLvConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideLvConfigReader;
}(ActorAideLvConfigReaderStruct_1.default));
exports.default = ActorAideLvConfigReader;
},{"../ReaderStructs/ActorAideLvConfigReaderStruct":453}],321:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAideattachConfigReaderStruct_1 = require("../ReaderStructs/ActorAideattachConfigReaderStruct");
var ActorAideattachConfigReader = /** @class */ (function (_super) {
    __extends(ActorAideattachConfigReader, _super);
    function ActorAideattachConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAideattachConfigReader;
}(ActorAideattachConfigReaderStruct_1.default));
exports.default = ActorAideattachConfigReader;
},{"../ReaderStructs/ActorAideattachConfigReaderStruct":454}],322:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAssetsConfigReaderStruct_1 = require("../ReaderStructs/ActorAssetsConfigReaderStruct");
var ActorAssetsConfigReader = /** @class */ (function (_super) {
    __extends(ActorAssetsConfigReader, _super);
    function ActorAssetsConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAssetsConfigReader;
}(ActorAssetsConfigReaderStruct_1.default));
exports.default = ActorAssetsConfigReader;
},{"../ReaderStructs/ActorAssetsConfigReaderStruct":455}],323:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAssetsLvConfigReaderStruct_1 = require("../ReaderStructs/ActorAssetsLvConfigReaderStruct");
var ActorAssetsLvConfigReader = /** @class */ (function (_super) {
    __extends(ActorAssetsLvConfigReader, _super);
    function ActorAssetsLvConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorAssetsLvConfigReader;
}(ActorAssetsLvConfigReaderStruct_1.default));
exports.default = ActorAssetsLvConfigReader;
},{"../ReaderStructs/ActorAssetsLvConfigReaderStruct":456}],324:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorConfigReaderStruct_1 = require("../ReaderStructs/ActorConfigReaderStruct");
var ActorConfigReader = /** @class */ (function (_super) {
    __extends(ActorConfigReader, _super);
    function ActorConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorConfigReader;
}(ActorConfigReaderStruct_1.default));
exports.default = ActorConfigReader;
},{"../ReaderStructs/ActorConfigReaderStruct":457}],325:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorLevelConfigReaderStruct_1 = require("../ReaderStructs/ActorLevelConfigReaderStruct");
var ActorLevelConfigReader = /** @class */ (function (_super) {
    __extends(ActorLevelConfigReader, _super);
    function ActorLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorLevelConfigReader;
}(ActorLevelConfigReaderStruct_1.default));
exports.default = ActorLevelConfigReader;
},{"../ReaderStructs/ActorLevelConfigReaderStruct":458}],326:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorLoyaltyConfigReaderStruct_1 = require("../ReaderStructs/ActorLoyaltyConfigReaderStruct");
var ActorLoyaltyConfigReader = /** @class */ (function (_super) {
    __extends(ActorLoyaltyConfigReader, _super);
    function ActorLoyaltyConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorLoyaltyConfigReader;
}(ActorLoyaltyConfigReaderStruct_1.default));
exports.default = ActorLoyaltyConfigReader;
},{"../ReaderStructs/ActorLoyaltyConfigReaderStruct":459}],327:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorProficiencyConfigReaderStruct_1 = require("../ReaderStructs/ActorProficiencyConfigReaderStruct");
var ActorProficiencyConfigReader = /** @class */ (function (_super) {
    __extends(ActorProficiencyConfigReader, _super);
    function ActorProficiencyConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorProficiencyConfigReader;
}(ActorProficiencyConfigReaderStruct_1.default));
exports.default = ActorProficiencyConfigReader;
},{"../ReaderStructs/ActorProficiencyConfigReaderStruct":460}],328:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorTrainConfigReaderStruct_1 = require("../ReaderStructs/ActorTrainConfigReaderStruct");
var ActorTrainConfigReader = /** @class */ (function (_super) {
    __extends(ActorTrainConfigReader, _super);
    function ActorTrainConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorTrainConfigReader;
}(ActorTrainConfigReaderStruct_1.default));
exports.default = ActorTrainConfigReader;
},{"../ReaderStructs/ActorTrainConfigReaderStruct":461}],329:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ActorTrainLvConfigReaderStruct_1 = require("../ReaderStructs/ActorTrainLvConfigReaderStruct");
var ActorTrainLvConfigReader = /** @class */ (function (_super) {
    __extends(ActorTrainLvConfigReader, _super);
    function ActorTrainLvConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActorTrainLvConfigReader;
}(ActorTrainLvConfigReaderStruct_1.default));
exports.default = ActorTrainLvConfigReader;
},{"../ReaderStructs/ActorTrainLvConfigReaderStruct":462}],330:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AvatarConfigReaderStruct_1 = require("../ReaderStructs/AvatarConfigReaderStruct");
var AvatarConfigReader = /** @class */ (function (_super) {
    __extends(AvatarConfigReader, _super);
    function AvatarConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AvatarConfigReader;
}(AvatarConfigReaderStruct_1.default));
exports.default = AvatarConfigReader;
},{"../ReaderStructs/AvatarConfigReaderStruct":463}],331:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BattleLevelConfigReaderStruct_1 = require("../ReaderStructs/BattleLevelConfigReaderStruct");
var BattleLevelConfigReader = /** @class */ (function (_super) {
    __extends(BattleLevelConfigReader, _super);
    function BattleLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BattleLevelConfigReader;
}(BattleLevelConfigReaderStruct_1.default));
exports.default = BattleLevelConfigReader;
},{"../ReaderStructs/BattleLevelConfigReaderStruct":464}],332:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BattleShootTypeConfigReaderStruct_1 = require("../ReaderStructs/BattleShootTypeConfigReaderStruct");
var BattleShootTypeConfigReader = /** @class */ (function (_super) {
    __extends(BattleShootTypeConfigReader, _super);
    function BattleShootTypeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BattleShootTypeConfigReader;
}(BattleShootTypeConfigReaderStruct_1.default));
exports.default = BattleShootTypeConfigReader;
},{"../ReaderStructs/BattleShootTypeConfigReaderStruct":465}],333:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockLevelConfigReaderStruct_1 = require("../ReaderStructs/BlockLevelConfigReaderStruct");
var BlockLevelConfigReader = /** @class */ (function (_super) {
    __extends(BlockLevelConfigReader, _super);
    function BlockLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockLevelConfigReader;
}(BlockLevelConfigReaderStruct_1.default));
exports.default = BlockLevelConfigReader;
},{"../ReaderStructs/BlockLevelConfigReaderStruct":466}],334:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockRankingListConfigReaderStruct_1 = require("../ReaderStructs/BlockRankingListConfigReaderStruct");
var BlockRankingListConfigReader = /** @class */ (function (_super) {
    __extends(BlockRankingListConfigReader, _super);
    function BlockRankingListConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockRankingListConfigReader;
}(BlockRankingListConfigReaderStruct_1.default));
exports.default = BlockRankingListConfigReader;
},{"../ReaderStructs/BlockRankingListConfigReaderStruct":467}],335:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockWordsConfigReaderStruct_1 = require("../ReaderStructs/BlockWordsConfigReaderStruct");
var BlockWordsConfigReader = /** @class */ (function (_super) {
    __extends(BlockWordsConfigReader, _super);
    function BlockWordsConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockWordsConfigReader;
}(BlockWordsConfigReaderStruct_1.default));
exports.default = BlockWordsConfigReader;
},{"../ReaderStructs/BlockWordsConfigReaderStruct":468}],336:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BlockWordsIIConfigReaderStruct_1 = require("../ReaderStructs/BlockWordsIIConfigReaderStruct");
var BlockWordsIIConfigReader = /** @class */ (function (_super) {
    __extends(BlockWordsIIConfigReader, _super);
    function BlockWordsIIConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BlockWordsIIConfigReader;
}(BlockWordsIIConfigReaderStruct_1.default));
exports.default = BlockWordsIIConfigReader;
},{"../ReaderStructs/BlockWordsIIConfigReaderStruct":469}],337:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BoxTargetConfigReaderStruct_1 = require("../ReaderStructs/BoxTargetConfigReaderStruct");
var BoxTargetConfigReader = /** @class */ (function (_super) {
    __extends(BoxTargetConfigReader, _super);
    function BoxTargetConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BoxTargetConfigReader;
}(BoxTargetConfigReaderStruct_1.default));
exports.default = BoxTargetConfigReader;
},{"../ReaderStructs/BoxTargetConfigReaderStruct":470}],338:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingEffectConfigReaderStruct_1 = require("../ReaderStructs/BuildingEffectConfigReaderStruct");
var BuildingEffectConfigReader = /** @class */ (function (_super) {
    __extends(BuildingEffectConfigReader, _super);
    function BuildingEffectConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BuildingEffectConfigReader;
}(BuildingEffectConfigReaderStruct_1.default));
exports.default = BuildingEffectConfigReader;
},{"../ReaderStructs/BuildingEffectConfigReaderStruct":471}],339:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BuildingLevelConfigReaderStruct_1 = require("../ReaderStructs/BuildingLevelConfigReaderStruct");
var BuildingLevelConfigReader = /** @class */ (function (_super) {
    __extends(BuildingLevelConfigReader, _super);
    function BuildingLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BuildingLevelConfigReader;
}(BuildingLevelConfigReaderStruct_1.default));
exports.default = BuildingLevelConfigReader;
},{"../ReaderStructs/BuildingLevelConfigReaderStruct":472}],340:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BusinessConfigReaderStruct_1 = require("../ReaderStructs/BusinessConfigReaderStruct");
var BusinessConfigReader = /** @class */ (function (_super) {
    __extends(BusinessConfigReader, _super);
    function BusinessConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BusinessConfigReader;
}(BusinessConfigReaderStruct_1.default));
exports.default = BusinessConfigReader;
},{"../ReaderStructs/BusinessConfigReaderStruct":473}],341:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CinemaConfigReaderStruct_1 = require("../ReaderStructs/CinemaConfigReaderStruct");
var CinemaConfigReader = /** @class */ (function (_super) {
    __extends(CinemaConfigReader, _super);
    function CinemaConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CinemaConfigReader;
}(CinemaConfigReaderStruct_1.default));
exports.default = CinemaConfigReader;
},{"../ReaderStructs/CinemaConfigReaderStruct":474}],342:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CityConfigReaderStruct_1 = require("../ReaderStructs/CityConfigReaderStruct");
var CityConfigReader = /** @class */ (function (_super) {
    __extends(CityConfigReader, _super);
    function CityConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CityConfigReader;
}(CityConfigReaderStruct_1.default));
exports.default = CityConfigReader;
},{"../ReaderStructs/CityConfigReaderStruct":475}],343:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CityPopularizeConfigReaderStruct_1 = require("../ReaderStructs/CityPopularizeConfigReaderStruct");
var CityPopularizeConfigReader = /** @class */ (function (_super) {
    __extends(CityPopularizeConfigReader, _super);
    function CityPopularizeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CityPopularizeConfigReader;
}(CityPopularizeConfigReaderStruct_1.default));
exports.default = CityPopularizeConfigReader;
},{"../ReaderStructs/CityPopularizeConfigReaderStruct":476}],344:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CompleteConfigReaderStruct_1 = require("../ReaderStructs/CompleteConfigReaderStruct");
var CompleteConfigReader = /** @class */ (function (_super) {
    __extends(CompleteConfigReader, _super);
    function CompleteConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompleteConfigReader;
}(CompleteConfigReaderStruct_1.default));
exports.default = CompleteConfigReader;
},{"../ReaderStructs/CompleteConfigReaderStruct":477}],345:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CompoundConfigReaderStruct_1 = require("../ReaderStructs/CompoundConfigReaderStruct");
var CompoundConfigReader = /** @class */ (function (_super) {
    __extends(CompoundConfigReader, _super);
    function CompoundConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompoundConfigReader;
}(CompoundConfigReaderStruct_1.default));
exports.default = CompoundConfigReader;
},{"../ReaderStructs/CompoundConfigReaderStruct":478}],346:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CooperateTaskConfigReaderStruct_1 = require("../ReaderStructs/CooperateTaskConfigReaderStruct");
var CooperateTaskConfigReader = /** @class */ (function (_super) {
    __extends(CooperateTaskConfigReader, _super);
    function CooperateTaskConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CooperateTaskConfigReader;
}(CooperateTaskConfigReaderStruct_1.default));
exports.default = CooperateTaskConfigReader;
},{"../ReaderStructs/CooperateTaskConfigReaderStruct":479}],347:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CountActivitiesConfigReaderStruct_1 = require("../ReaderStructs/CountActivitiesConfigReaderStruct");
var CountActivitiesConfigReader = /** @class */ (function (_super) {
    __extends(CountActivitiesConfigReader, _super);
    function CountActivitiesConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CountActivitiesConfigReader;
}(CountActivitiesConfigReaderStruct_1.default));
exports.default = CountActivitiesConfigReader;
},{"../ReaderStructs/CountActivitiesConfigReaderStruct":480}],348:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CountryConfigReaderStruct_1 = require("../ReaderStructs/CountryConfigReaderStruct");
var CountryConfigReader = /** @class */ (function (_super) {
    __extends(CountryConfigReader, _super);
    function CountryConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CountryConfigReader;
}(CountryConfigReaderStruct_1.default));
exports.default = CountryConfigReader;
},{"../ReaderStructs/CountryConfigReaderStruct":481}],349:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CupPackageConfigReaderStruct_1 = require("../ReaderStructs/CupPackageConfigReaderStruct");
var CupPackageConfigReader = /** @class */ (function (_super) {
    __extends(CupPackageConfigReader, _super);
    function CupPackageConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CupPackageConfigReader;
}(CupPackageConfigReaderStruct_1.default));
exports.default = CupPackageConfigReader;
},{"../ReaderStructs/CupPackageConfigReaderStruct":482}],350:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DailySignConfigReaderStruct_1 = require("../ReaderStructs/DailySignConfigReaderStruct");
var DailySignConfigReader = /** @class */ (function (_super) {
    __extends(DailySignConfigReader, _super);
    function DailySignConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DailySignConfigReader;
}(DailySignConfigReaderStruct_1.default));
exports.default = DailySignConfigReader;
},{"../ReaderStructs/DailySignConfigReaderStruct":483}],351:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DailySignTrailerConfigReaderStruct_1 = require("../ReaderStructs/DailySignTrailerConfigReaderStruct");
var DailySignTrailerConfigReader = /** @class */ (function (_super) {
    __extends(DailySignTrailerConfigReader, _super);
    function DailySignTrailerConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DailySignTrailerConfigReader;
}(DailySignTrailerConfigReaderStruct_1.default));
exports.default = DailySignTrailerConfigReader;
},{"../ReaderStructs/DailySignTrailerConfigReaderStruct":484}],352:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DialogueConfigReaderStruct_1 = require("../ReaderStructs/DialogueConfigReaderStruct");
var DialogueConfigReader = /** @class */ (function (_super) {
    __extends(DialogueConfigReader, _super);
    function DialogueConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DialogueConfigReader;
}(DialogueConfigReaderStruct_1.default));
exports.default = DialogueConfigReader;
},{"../ReaderStructs/DialogueConfigReaderStruct":485}],353:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var EventConfigReaderStruct_1 = require("../ReaderStructs/EventConfigReaderStruct");
var EventConfigReader = /** @class */ (function (_super) {
    __extends(EventConfigReader, _super);
    function EventConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EventConfigReader;
}(EventConfigReaderStruct_1.default));
exports.default = EventConfigReader;
},{"../ReaderStructs/EventConfigReaderStruct":486}],354:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var FloorConfigReaderStruct_1 = require("../ReaderStructs/FloorConfigReaderStruct");
var FloorConfigReader = /** @class */ (function (_super) {
    __extends(FloorConfigReader, _super);
    function FloorConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FloorConfigReader;
}(FloorConfigReaderStruct_1.default));
exports.default = FloorConfigReader;
},{"../ReaderStructs/FloorConfigReaderStruct":487}],355:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GameLevelConfigReaderStruct_1 = require("../ReaderStructs/GameLevelConfigReaderStruct");
var GameLevelConfigReader = /** @class */ (function (_super) {
    __extends(GameLevelConfigReader, _super);
    function GameLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameLevelConfigReader;
}(GameLevelConfigReaderStruct_1.default));
exports.default = GameLevelConfigReader;
},{"../ReaderStructs/GameLevelConfigReaderStruct":488}],356:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GameRandomNameConfigReaderStruct_1 = require("../ReaderStructs/GameRandomNameConfigReaderStruct");
var GameRandomNameConfigReader = /** @class */ (function (_super) {
    __extends(GameRandomNameConfigReader, _super);
    function GameRandomNameConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameRandomNameConfigReader;
}(GameRandomNameConfigReaderStruct_1.default));
exports.default = GameRandomNameConfigReader;
},{"../ReaderStructs/GameRandomNameConfigReaderStruct":489}],357:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GameVersionConfigReaderStruct_1 = require("../ReaderStructs/GameVersionConfigReaderStruct");
var GameVersionConfigReader = /** @class */ (function (_super) {
    __extends(GameVersionConfigReader, _super);
    function GameVersionConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameVersionConfigReader;
}(GameVersionConfigReaderStruct_1.default));
exports.default = GameVersionConfigReader;
},{"../ReaderStructs/GameVersionConfigReaderStruct":490}],358:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GiftPackageConfigReaderStruct_1 = require("../ReaderStructs/GiftPackageConfigReaderStruct");
var GiftPackageConfigReader = /** @class */ (function (_super) {
    __extends(GiftPackageConfigReader, _super);
    function GiftPackageConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GiftPackageConfigReader;
}(GiftPackageConfigReaderStruct_1.default));
exports.default = GiftPackageConfigReader;
},{"../ReaderStructs/GiftPackageConfigReaderStruct":491}],359:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalConfigReaderStruct_1 = require("../ReaderStructs/GlobalConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var GlobalConfigReader = /** @class */ (function (_super) {
    __extends(GlobalConfigReader, _super);
    function GlobalConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 配置字典
        _this.configsByKey = new Dictionary_1.default();
        return _this;
    }
    GlobalConfigReader.prototype.onGameLoadedAll = function () {
        _super.prototype.onGameLoadedAll.call(this);
        var list = this.configs.getValues();
        for (var i = 0; i < list.length; i++) {
            var key = list[i].key;
            if (isNullOrEmpty(key)) {
                key = list[i].id;
            }
            this.configsByKey.add(key, list[i]);
        }
    };
    GlobalConfigReader.prototype.getConfig = function (key) {
        if (!this.configsByKey.hasKey(key)) {
            if (this.configs.hasKey(key)) {
                return this.configs.getValue(key);
            }
            console.log(this.tableName + " \u6CA1\u6709 key=" + key + " \u7684\u914D\u7F6E");
        }
        return this.configsByKey.getValue(key);
    };
    return GlobalConfigReader;
}(GlobalConfigReaderStruct_1.default));
exports.default = GlobalConfigReader;
},{"../../Libs/Helpers/Dictionary":679,"../ReaderStructs/GlobalConfigReaderStruct":492}],360:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuidePathConfigReaderStruct_1 = require("../ReaderStructs/GuidePathConfigReaderStruct");
var GuidePathConfigReader = /** @class */ (function (_super) {
    __extends(GuidePathConfigReader, _super);
    function GuidePathConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GuidePathConfigReader;
}(GuidePathConfigReaderStruct_1.default));
exports.default = GuidePathConfigReader;
},{"../ReaderStructs/GuidePathConfigReaderStruct":493}],361:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuidesystemConfigReaderStruct_1 = require("../ReaderStructs/GuidesystemConfigReaderStruct");
var GuidesystemConfigReader = /** @class */ (function (_super) {
    __extends(GuidesystemConfigReader, _super);
    function GuidesystemConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GuidesystemConfigReader;
}(GuidesystemConfigReaderStruct_1.default));
exports.default = GuidesystemConfigReader;
},{"../ReaderStructs/GuidesystemConfigReaderStruct":494}],362:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var HeadPortraitConfigReaderStruct_1 = require("../ReaderStructs/HeadPortraitConfigReaderStruct");
var HeadPortraitConfigReader = /** @class */ (function (_super) {
    __extends(HeadPortraitConfigReader, _super);
    function HeadPortraitConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return HeadPortraitConfigReader;
}(HeadPortraitConfigReaderStruct_1.default));
exports.default = HeadPortraitConfigReader;
},{"../ReaderStructs/HeadPortraitConfigReaderStruct":495}],363:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ImageConfigReaderStruct_1 = require("../ReaderStructs/ImageConfigReaderStruct");
var ImageConfigReader = /** @class */ (function (_super) {
    __extends(ImageConfigReader, _super);
    function ImageConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ImageConfigReader;
}(ImageConfigReaderStruct_1.default));
exports.default = ImageConfigReader;
},{"../ReaderStructs/ImageConfigReaderStruct":496}],364:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var InitialActorConfigReaderStruct_1 = require("../ReaderStructs/InitialActorConfigReaderStruct");
var InitialActorConfigReader = /** @class */ (function (_super) {
    __extends(InitialActorConfigReader, _super);
    function InitialActorConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InitialActorConfigReader;
}(InitialActorConfigReaderStruct_1.default));
exports.default = InitialActorConfigReader;
},{"../ReaderStructs/InitialActorConfigReaderStruct":497}],365:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ItemConfigReaderStruct_1 = require("../ReaderStructs/ItemConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var ItemConfigReader = /** @class */ (function (_super) {
    __extends(ItemConfigReader, _super);
    function ItemConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._dict = new Dictionary_1.default();
        return _this;
    }
    ItemConfigReader.prototype.addConfig = function (config) {
        _super.prototype.addConfig.call(this, config);
        if (config.actor_id > 0) {
            this._dict.add(config.actor_id, config);
        }
    };
    // 根据物品类型获取物品列表		
    ItemConfigReader.prototype.getConfigsByType = function () {
        var itemTypes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            itemTypes[_i] = arguments[_i];
        }
        var list = [];
        var items = this.getConfigList();
        for (var i = 0; i < items.length; i++) {
            for (var j = 0; j < itemTypes.length; j++) {
                if (items[i].type == itemTypes[j]) {
                    list.push(items[i]);
                    break;
                }
            }
        }
        return list;
    };
    ItemConfigReader.prototype.getType = function (id) {
        var cfg = this.getConfig(id);
        if (cfg) {
            return cfg.type;
        }
        return null;
    };
    ItemConfigReader.prototype.getItemIcon = function (itemId) {
        var cfg = this.getConfig(itemId);
        return cfg.iconUrl;
    };
    ItemConfigReader.prototype.getStarNum = function (itemId) {
        var cfg = this.getConfig(itemId);
        return cfg.itemStarNum;
    };
    ItemConfigReader.prototype.getItemByActorId = function (actorId) {
        return this._dict.getValue(actorId);
    };
    return ItemConfigReader;
}(ItemConfigReaderStruct_1.default));
exports.default = ItemConfigReader;
},{"../../Libs/Helpers/Dictionary":679,"../ReaderStructs/ItemConfigReaderStruct":498}],366:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LanguageTypeConfigReaderStruct_1 = require("../ReaderStructs/LanguageTypeConfigReaderStruct");
var LanguageTypeConfigReader = /** @class */ (function (_super) {
    __extends(LanguageTypeConfigReader, _super);
    function LanguageTypeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LanguageTypeConfigReader;
}(LanguageTypeConfigReaderStruct_1.default));
exports.default = LanguageTypeConfigReader;
},{"../ReaderStructs/LanguageTypeConfigReaderStruct":499}],367:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LevelGiftPackageConfigReaderStruct_1 = require("../ReaderStructs/LevelGiftPackageConfigReaderStruct");
var LevelGiftPackageConfigReader = /** @class */ (function (_super) {
    __extends(LevelGiftPackageConfigReader, _super);
    function LevelGiftPackageConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LevelGiftPackageConfigReader;
}(LevelGiftPackageConfigReaderStruct_1.default));
exports.default = LevelGiftPackageConfigReader;
},{"../ReaderStructs/LevelGiftPackageConfigReaderStruct":500}],368:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LimitActorConfigReaderStruct_1 = require("../ReaderStructs/LimitActorConfigReaderStruct");
var LimitActorConfigReader = /** @class */ (function (_super) {
    __extends(LimitActorConfigReader, _super);
    function LimitActorConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LimitActorConfigReader;
}(LimitActorConfigReaderStruct_1.default));
exports.default = LimitActorConfigReader;
},{"../ReaderStructs/LimitActorConfigReaderStruct":501}],369:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderConfigReaderStruct_1 = require("../ReaderStructs/LoaderConfigReaderStruct");
var LoaderConfigReader = /** @class */ (function (_super) {
    __extends(LoaderConfigReader, _super);
    function LoaderConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoaderConfigReader;
}(LoaderConfigReaderStruct_1.default));
exports.default = LoaderConfigReader;
},{"../ReaderStructs/LoaderConfigReaderStruct":502}],370:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoadingConfigReaderStruct_1 = require("../ReaderStructs/LoadingConfigReaderStruct");
var LoadingConfigReader = /** @class */ (function (_super) {
    __extends(LoadingConfigReader, _super);
    function LoadingConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoadingConfigReader;
}(LoadingConfigReaderStruct_1.default));
exports.default = LoadingConfigReader;
},{"../ReaderStructs/LoadingConfigReaderStruct":503}],371:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MailConfigReaderStruct_1 = require("../ReaderStructs/MailConfigReaderStruct");
var MailConfigReader = /** @class */ (function (_super) {
    __extends(MailConfigReader, _super);
    function MailConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MailConfigReader;
}(MailConfigReaderStruct_1.default));
exports.default = MailConfigReader;
},{"../ReaderStructs/MailConfigReaderStruct":504}],372:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MaintaskConfigReaderStruct_1 = require("../ReaderStructs/MaintaskConfigReaderStruct");
var MaintaskConfigReader = /** @class */ (function (_super) {
    __extends(MaintaskConfigReader, _super);
    function MaintaskConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MaintaskConfigReader;
}(MaintaskConfigReaderStruct_1.default));
exports.default = MaintaskConfigReader;
},{"../ReaderStructs/MaintaskConfigReaderStruct":505}],373:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MeetingGameConfigReaderStruct_1 = require("../ReaderStructs/MeetingGameConfigReaderStruct");
var MeetingGameConfigReader = /** @class */ (function (_super) {
    __extends(MeetingGameConfigReader, _super);
    function MeetingGameConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MeetingGameConfigReader;
}(MeetingGameConfigReaderStruct_1.default));
exports.default = MeetingGameConfigReader;
},{"../ReaderStructs/MeetingGameConfigReaderStruct":506}],374:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MeetingRewardsConfigReaderStruct_1 = require("../ReaderStructs/MeetingRewardsConfigReaderStruct");
var MeetingRewardsConfigReader = /** @class */ (function (_super) {
    __extends(MeetingRewardsConfigReader, _super);
    function MeetingRewardsConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MeetingRewardsConfigReader;
}(MeetingRewardsConfigReaderStruct_1.default));
exports.default = MeetingRewardsConfigReader;
},{"../ReaderStructs/MeetingRewardsConfigReaderStruct":507}],375:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuConfigReaderStruct_1 = require("../ReaderStructs/MenuConfigReaderStruct");
var MenuConfigReader = /** @class */ (function (_super) {
    __extends(MenuConfigReader, _super);
    function MenuConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuConfigReader;
}(MenuConfigReaderStruct_1.default));
exports.default = MenuConfigReader;
},{"../ReaderStructs/MenuConfigReaderStruct":508}],376:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MenuIndexConfigReaderStruct_1 = require("../ReaderStructs/MenuIndexConfigReaderStruct");
var MenuIndexConfigReader = /** @class */ (function (_super) {
    __extends(MenuIndexConfigReader, _super);
    function MenuIndexConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuIndexConfigReader;
}(MenuIndexConfigReaderStruct_1.default));
exports.default = MenuIndexConfigReader;
},{"../ReaderStructs/MenuIndexConfigReaderStruct":509}],377:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MonthCardConfigReaderStruct_1 = require("../ReaderStructs/MonthCardConfigReaderStruct");
var MonthCardConfigReader = /** @class */ (function (_super) {
    __extends(MonthCardConfigReader, _super);
    function MonthCardConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MonthCardConfigReader;
}(MonthCardConfigReaderStruct_1.default));
exports.default = MonthCardConfigReader;
},{"../ReaderStructs/MonthCardConfigReaderStruct":510}],378:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieAdaptationMsgConfigReaderStruct_1 = require("../ReaderStructs/MovieAdaptationMsgConfigReaderStruct");
var MovieAdaptationMsgConfigReader = /** @class */ (function (_super) {
    __extends(MovieAdaptationMsgConfigReader, _super);
    function MovieAdaptationMsgConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieAdaptationMsgConfigReader;
}(MovieAdaptationMsgConfigReaderStruct_1.default));
exports.default = MovieAdaptationMsgConfigReader;
},{"../ReaderStructs/MovieAdaptationMsgConfigReaderStruct":511}],379:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieAudienceEvaluationConfigReaderStruct_1 = require("../ReaderStructs/MovieAudienceEvaluationConfigReaderStruct");
var MovieAudienceEvaluationConfigReader = /** @class */ (function (_super) {
    __extends(MovieAudienceEvaluationConfigReader, _super);
    function MovieAudienceEvaluationConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieAudienceEvaluationConfigReader;
}(MovieAudienceEvaluationConfigReaderStruct_1.default));
exports.default = MovieAudienceEvaluationConfigReader;
},{"../ReaderStructs/MovieAudienceEvaluationConfigReaderStruct":512}],380:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieDropConfigReaderStruct_1 = require("../ReaderStructs/MovieDropConfigReaderStruct");
var MovieDropConfigReader = /** @class */ (function (_super) {
    __extends(MovieDropConfigReader, _super);
    function MovieDropConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieDropConfigReader;
}(MovieDropConfigReaderStruct_1.default));
exports.default = MovieDropConfigReader;
},{"../ReaderStructs/MovieDropConfigReaderStruct":513}],381:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieExpectConfigReaderStruct_1 = require("../ReaderStructs/MovieExpectConfigReaderStruct");
var MovieExpectConfigReader = /** @class */ (function (_super) {
    __extends(MovieExpectConfigReader, _super);
    function MovieExpectConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieExpectConfigReader;
}(MovieExpectConfigReaderStruct_1.default));
exports.default = MovieExpectConfigReader;
},{"../ReaderStructs/MovieExpectConfigReaderStruct":514}],382:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieLicenceConfigReaderStruct_1 = require("../ReaderStructs/MovieLicenceConfigReaderStruct");
var MovieLicenceConfigReader = /** @class */ (function (_super) {
    __extends(MovieLicenceConfigReader, _super);
    function MovieLicenceConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieLicenceConfigReader;
}(MovieLicenceConfigReaderStruct_1.default));
exports.default = MovieLicenceConfigReader;
},{"../ReaderStructs/MovieLicenceConfigReaderStruct":515}],383:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieMediaVisitConfigReaderStruct_1 = require("../ReaderStructs/MovieMediaVisitConfigReaderStruct");
var MovieMediaVisitConfigReader = /** @class */ (function (_super) {
    __extends(MovieMediaVisitConfigReader, _super);
    function MovieMediaVisitConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieMediaVisitConfigReader;
}(MovieMediaVisitConfigReaderStruct_1.default));
exports.default = MovieMediaVisitConfigReader;
},{"../ReaderStructs/MovieMediaVisitConfigReaderStruct":516}],384:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieMidiaEvaluationConfigReaderStruct_1 = require("../ReaderStructs/MovieMidiaEvaluationConfigReaderStruct");
var MovieMidiaEvaluationConfigReader = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationConfigReader, _super);
    function MovieMidiaEvaluationConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieMidiaEvaluationConfigReader;
}(MovieMidiaEvaluationConfigReaderStruct_1.default));
exports.default = MovieMidiaEvaluationConfigReader;
},{"../ReaderStructs/MovieMidiaEvaluationConfigReaderStruct":517}],385:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieMidiaEvaluationMsgConfigReaderStruct_1 = require("../ReaderStructs/MovieMidiaEvaluationMsgConfigReaderStruct");
var MovieMidiaEvaluationMsgConfigReader = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationMsgConfigReader, _super);
    function MovieMidiaEvaluationMsgConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieMidiaEvaluationMsgConfigReader;
}(MovieMidiaEvaluationMsgConfigReaderStruct_1.default));
exports.default = MovieMidiaEvaluationMsgConfigReader;
},{"../ReaderStructs/MovieMidiaEvaluationMsgConfigReaderStruct":518}],386:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MoviePopularizeConfigReaderStruct_1 = require("../ReaderStructs/MoviePopularizeConfigReaderStruct");
var MoviePopularizeConfigReader = /** @class */ (function (_super) {
    __extends(MoviePopularizeConfigReader, _super);
    function MoviePopularizeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MoviePopularizeConfigReader;
}(MoviePopularizeConfigReaderStruct_1.default));
exports.default = MoviePopularizeConfigReader;
},{"../ReaderStructs/MoviePopularizeConfigReaderStruct":519}],387:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MovieShootTypeConfigReaderStruct_1 = require("../ReaderStructs/MovieShootTypeConfigReaderStruct");
var MovieShootTypeConfigReader = /** @class */ (function (_super) {
    __extends(MovieShootTypeConfigReader, _super);
    function MovieShootTypeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MovieShootTypeConfigReader;
}(MovieShootTypeConfigReaderStruct_1.default));
exports.default = MovieShootTypeConfigReader;
},{"../ReaderStructs/MovieShootTypeConfigReaderStruct":520}],388:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgChatConfigReaderStruct_1 = require("../ReaderStructs/MsgChatConfigReaderStruct");
var MsgChatConfigReader = /** @class */ (function (_super) {
    __extends(MsgChatConfigReader, _super);
    function MsgChatConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MsgChatConfigReader;
}(MsgChatConfigReaderStruct_1.default));
exports.default = MsgChatConfigReader;
},{"../ReaderStructs/MsgChatConfigReaderStruct":521}],389:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgConfigReaderStruct_1 = require("../ReaderStructs/MsgConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MsgConfigReader = /** @class */ (function (_super) {
    __extends(MsgConfigReader, _super);
    function MsgConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 配置字典
        _this.configsByKey = new Dictionary_1.default();
        return _this;
    }
    MsgConfigReader.prototype.onGameLoadedAll = function () {
        _super.prototype.onGameLoadedAll.call(this);
        var list = this.configs.getValues();
        for (var i = 0; i < list.length; i++) {
            var key = list[i].key;
            if (isNullOrEmpty(key)) {
                key = list[i].id;
            }
            this.configsByKey.add(key, list[i]);
        }
    };
    MsgConfigReader.prototype.getConfig = function (key) {
        if (!this.configsByKey.hasKey(key)) {
            if (this.configs.hasKey(key)) {
                return this.configs.getValue(key);
            }
            console.log(this.tableName + " \u6CA1\u6709 key=" + key + " \u7684\u914D\u7F6E");
        }
        return this.configsByKey.getValue(key);
    };
    MsgConfigReader.prototype.getTxt = function (key) {
        var config = this.getConfig(key);
        if (!config) {
            return "[Error]" + this.tableName + " \u6CA1\u6709 key=" + key + " \u7684\u914D\u7F6E";
        }
        return config.notice;
    };
    MsgConfigReader.prototype.getTxtFormat = function (key) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var _a;
        var txt = (_a = this.getTxt(key)).format.apply(_a, args);
        return txt;
    };
    // 生成KEY 代码
    MsgConfigReader.prototype.outKeyCode = function () {
        console.log("");
        console.log("class MsgKey");
        console.log("{");
        var list = this.configsByKey.getValues();
        for (var i = 0; i < list.length; i++) {
            var key = list[i].key;
            var val = key;
            if (isNullOrEmpty(key)) {
                key = "KEY_" + list[i].id;
                val = list[i].id;
            }
            else {
                key = key.replace("-", "_");
            }
            console.log("\tstatic " + key + " = \"" + val + "\";");
        }
        console.log("}");
        console.log("");
        console.log("");
    };
    return MsgConfigReader;
}(MsgConfigReaderStruct_1.default));
exports.default = MsgConfigReader;
},{"../../Libs/Helpers/Dictionary":679,"../ReaderStructs/MsgConfigReaderStruct":522}],390:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var MsgProtoErrorConfigReaderStruct_1 = require("../ReaderStructs/MsgProtoErrorConfigReaderStruct");
var MsgProtoErrorConfigReader = /** @class */ (function (_super) {
    __extends(MsgProtoErrorConfigReader, _super);
    function MsgProtoErrorConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MsgProtoErrorConfigReader;
}(MsgProtoErrorConfigReaderStruct_1.default));
exports.default = MsgProtoErrorConfigReader;
},{"../ReaderStructs/MsgProtoErrorConfigReaderStruct":523}],391:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var NpcConfigReaderStruct_1 = require("../ReaderStructs/NpcConfigReaderStruct");
var NpcConfigReader = /** @class */ (function (_super) {
    __extends(NpcConfigReader, _super);
    function NpcConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return NpcConfigReader;
}(NpcConfigReaderStruct_1.default));
exports.default = NpcConfigReader;
},{"../ReaderStructs/NpcConfigReaderStruct":524}],392:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OperationTasksConfigReaderStruct_1 = require("../ReaderStructs/OperationTasksConfigReaderStruct");
var OperationTasksConfigReader = /** @class */ (function (_super) {
    __extends(OperationTasksConfigReader, _super);
    function OperationTasksConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksConfigReader;
}(OperationTasksConfigReaderStruct_1.default));
exports.default = OperationTasksConfigReader;
},{"../ReaderStructs/OperationTasksConfigReaderStruct":525}],393:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OperationTasksScoreConfigReaderStruct_1 = require("../ReaderStructs/OperationTasksScoreConfigReaderStruct");
var OperationTasksScoreConfigReader = /** @class */ (function (_super) {
    __extends(OperationTasksScoreConfigReader, _super);
    function OperationTasksScoreConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksScoreConfigReader;
}(OperationTasksScoreConfigReaderStruct_1.default));
exports.default = OperationTasksScoreConfigReader;
},{"../ReaderStructs/OperationTasksScoreConfigReaderStruct":526}],394:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OperationTasksTermsConfigReaderStruct_1 = require("../ReaderStructs/OperationTasksTermsConfigReaderStruct");
var OperationTasksTermsConfigReader = /** @class */ (function (_super) {
    __extends(OperationTasksTermsConfigReader, _super);
    function OperationTasksTermsConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OperationTasksTermsConfigReader;
}(OperationTasksTermsConfigReaderStruct_1.default));
exports.default = OperationTasksTermsConfigReader;
},{"../ReaderStructs/OperationTasksTermsConfigReaderStruct":527}],395:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OrderConfigReaderStruct_1 = require("../ReaderStructs/OrderConfigReaderStruct");
var OrderConfigReader = /** @class */ (function (_super) {
    __extends(OrderConfigReader, _super);
    function OrderConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OrderConfigReader;
}(OrderConfigReaderStruct_1.default));
exports.default = OrderConfigReader;
},{"../ReaderStructs/OrderConfigReaderStruct":528}],396:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var OscarConfigReaderStruct_1 = require("../ReaderStructs/OscarConfigReaderStruct");
var OscarConfigReader = /** @class */ (function (_super) {
    __extends(OscarConfigReader, _super);
    function OscarConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OscarConfigReader;
}(OscarConfigReaderStruct_1.default));
exports.default = OscarConfigReader;
},{"../ReaderStructs/OscarConfigReaderStruct":529}],397:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PerformConfigReaderStruct_1 = require("../ReaderStructs/PerformConfigReaderStruct");
var PerformConfigReader = /** @class */ (function (_super) {
    __extends(PerformConfigReader, _super);
    function PerformConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PerformConfigReader;
}(PerformConfigReaderStruct_1.default));
exports.default = PerformConfigReader;
},{"../ReaderStructs/PerformConfigReaderStruct":530}],398:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayActConfigReaderStruct_1 = require("../ReaderStructs/PlayActConfigReaderStruct");
var PlayActConfigReader = /** @class */ (function (_super) {
    __extends(PlayActConfigReader, _super);
    function PlayActConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayActConfigReader;
}(PlayActConfigReaderStruct_1.default));
exports.default = PlayActConfigReader;
},{"../ReaderStructs/PlayActConfigReaderStruct":531}],399:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerDefaultConfigReaderStruct_1 = require("../ReaderStructs/PlayerDefaultConfigReaderStruct");
var PlayerDefaultConfigReader = /** @class */ (function (_super) {
    __extends(PlayerDefaultConfigReader, _super);
    function PlayerDefaultConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerDefaultConfigReader;
}(PlayerDefaultConfigReaderStruct_1.default));
exports.default = PlayerDefaultConfigReader;
},{"../ReaderStructs/PlayerDefaultConfigReaderStruct":532}],400:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerLevelConfigReaderStruct_1 = require("../ReaderStructs/PlayerLevelConfigReaderStruct");
var PlayerLevelConfigReader = /** @class */ (function (_super) {
    __extends(PlayerLevelConfigReader, _super);
    function PlayerLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlayerLevelConfigReader;
}(PlayerLevelConfigReaderStruct_1.default));
exports.default = PlayerLevelConfigReader;
},{"../ReaderStructs/PlayerLevelConfigReaderStruct":533}],401:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PopUpConfigReaderStruct_1 = require("../ReaderStructs/PopUpConfigReaderStruct");
var PopUpConfigReader = /** @class */ (function (_super) {
    __extends(PopUpConfigReader, _super);
    function PopUpConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PopUpConfigReader;
}(PopUpConfigReaderStruct_1.default));
exports.default = PopUpConfigReader;
},{"../ReaderStructs/PopUpConfigReaderStruct":534}],402:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PositionConfigReaderStruct_1 = require("../ReaderStructs/PositionConfigReaderStruct");
var PositionConfigReader = /** @class */ (function (_super) {
    __extends(PositionConfigReader, _super);
    function PositionConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PositionConfigReader;
}(PositionConfigReaderStruct_1.default));
exports.default = PositionConfigReader;
},{"../ReaderStructs/PositionConfigReaderStruct":535}],403:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceConfigReaderStruct_1 = require("../ReaderStructs/ProduceConfigReaderStruct");
var ProduceConfigReader = /** @class */ (function (_super) {
    __extends(ProduceConfigReader, _super);
    function ProduceConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceConfigReader;
}(ProduceConfigReaderStruct_1.default));
exports.default = ProduceConfigReader;
},{"../ReaderStructs/ProduceConfigReaderStruct":536}],404:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceLevelConfigReaderStruct_1 = require("../ReaderStructs/ProduceLevelConfigReaderStruct");
var ProduceLevelConfigReader = /** @class */ (function (_super) {
    __extends(ProduceLevelConfigReader, _super);
    function ProduceLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceLevelConfigReader;
}(ProduceLevelConfigReaderStruct_1.default));
exports.default = ProduceLevelConfigReader;
},{"../ReaderStructs/ProduceLevelConfigReaderStruct":537}],405:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceLvConfigReaderStruct_1 = require("../ReaderStructs/ProduceLvConfigReaderStruct");
var ProduceLvConfigReader = /** @class */ (function (_super) {
    __extends(ProduceLvConfigReader, _super);
    function ProduceLvConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceLvConfigReader;
}(ProduceLvConfigReaderStruct_1.default));
exports.default = ProduceLvConfigReader;
},{"../ReaderStructs/ProduceLvConfigReaderStruct":538}],406:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ProduceSouvenirConfigReaderStruct_1 = require("../ReaderStructs/ProduceSouvenirConfigReaderStruct");
var ProduceSouvenirConfigReader = /** @class */ (function (_super) {
    __extends(ProduceSouvenirConfigReader, _super);
    function ProduceSouvenirConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ProduceSouvenirConfigReader;
}(ProduceSouvenirConfigReaderStruct_1.default));
exports.default = ProduceSouvenirConfigReader;
},{"../ReaderStructs/ProduceSouvenirConfigReaderStruct":539}],407:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PropertyConfigReaderStruct_1 = require("../ReaderStructs/PropertyConfigReaderStruct");
var PropertyConfigReader = /** @class */ (function (_super) {
    __extends(PropertyConfigReader, _super);
    function PropertyConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PropertyConfigReader;
}(PropertyConfigReaderStruct_1.default));
exports.default = PropertyConfigReader;
},{"../ReaderStructs/PropertyConfigReaderStruct":540}],408:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RandomNameConfigReaderStruct_1 = require("../ReaderStructs/RandomNameConfigReaderStruct");
var RandomNameConfigReader = /** @class */ (function (_super) {
    __extends(RandomNameConfigReader, _super);
    function RandomNameConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RandomNameConfigReader;
}(RandomNameConfigReaderStruct_1.default));
exports.default = RandomNameConfigReader;
},{"../ReaderStructs/RandomNameConfigReaderStruct":541}],409:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RandomSurnameConfigReaderStruct_1 = require("../ReaderStructs/RandomSurnameConfigReaderStruct");
var RandomSurnameConfigReader = /** @class */ (function (_super) {
    __extends(RandomSurnameConfigReader, _super);
    function RandomSurnameConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RandomSurnameConfigReader;
}(RandomSurnameConfigReaderStruct_1.default));
exports.default = RandomSurnameConfigReader;
},{"../ReaderStructs/RandomSurnameConfigReaderStruct":542}],410:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RechargeConfigReaderStruct_1 = require("../ReaderStructs/RechargeConfigReaderStruct");
var RechargeConfigReader = /** @class */ (function (_super) {
    __extends(RechargeConfigReader, _super);
    function RechargeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RechargeConfigReader;
}(RechargeConfigReaderStruct_1.default));
exports.default = RechargeConfigReader;
},{"../ReaderStructs/RechargeConfigReaderStruct":543}],411:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RoadshowConfigReaderStruct_1 = require("../ReaderStructs/RoadshowConfigReaderStruct");
var RoadshowConfigReader = /** @class */ (function (_super) {
    __extends(RoadshowConfigReader, _super);
    function RoadshowConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RoadshowConfigReader;
}(RoadshowConfigReaderStruct_1.default));
exports.default = RoadshowConfigReader;
},{"../ReaderStructs/RoadshowConfigReaderStruct":544}],412:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SecretaryConfigReaderStruct_1 = require("../ReaderStructs/SecretaryConfigReaderStruct");
var SecretaryConfigReader = /** @class */ (function (_super) {
    __extends(SecretaryConfigReader, _super);
    function SecretaryConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SecretaryConfigReader;
}(SecretaryConfigReaderStruct_1.default));
exports.default = SecretaryConfigReader;
},{"../ReaderStructs/SecretaryConfigReaderStruct":545}],413:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SecretaryGiftConfigReaderStruct_1 = require("../ReaderStructs/SecretaryGiftConfigReaderStruct");
var SecretaryGiftConfigReader = /** @class */ (function (_super) {
    __extends(SecretaryGiftConfigReader, _super);
    function SecretaryGiftConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SecretaryGiftConfigReader;
}(SecretaryGiftConfigReaderStruct_1.default));
exports.default = SecretaryGiftConfigReader;
},{"../ReaderStructs/SecretaryGiftConfigReaderStruct":546}],414:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SecretaryTypeConfigReaderStruct_1 = require("../ReaderStructs/SecretaryTypeConfigReaderStruct");
var SecretaryTypeConfigReader = /** @class */ (function (_super) {
    __extends(SecretaryTypeConfigReader, _super);
    function SecretaryTypeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SecretaryTypeConfigReader;
}(SecretaryTypeConfigReaderStruct_1.default));
exports.default = SecretaryTypeConfigReader;
},{"../ReaderStructs/SecretaryTypeConfigReaderStruct":547}],415:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ServerRankingListConfigReaderStruct_1 = require("../ReaderStructs/ServerRankingListConfigReaderStruct");
var ServerRankingListConfigReader = /** @class */ (function (_super) {
    __extends(ServerRankingListConfigReader, _super);
    function ServerRankingListConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ServerRankingListConfigReader;
}(ServerRankingListConfigReaderStruct_1.default));
exports.default = ServerRankingListConfigReader;
},{"../ReaderStructs/ServerRankingListConfigReaderStruct":548}],416:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SettingDefaultConfigReaderStruct_1 = require("../ReaderStructs/SettingDefaultConfigReaderStruct");
var SettingDefaultConfigReader = /** @class */ (function (_super) {
    __extends(SettingDefaultConfigReader, _super);
    function SettingDefaultConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SettingDefaultConfigReader;
}(SettingDefaultConfigReaderStruct_1.default));
exports.default = SettingDefaultConfigReader;
},{"../ReaderStructs/SettingDefaultConfigReaderStruct":549}],417:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ShopConfigReaderStruct_1 = require("../ReaderStructs/ShopConfigReaderStruct");
var ShopConfigReader = /** @class */ (function (_super) {
    __extends(ShopConfigReader, _super);
    function ShopConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ShopConfigReader;
}(ShopConfigReaderStruct_1.default));
exports.default = ShopConfigReader;
},{"../ReaderStructs/ShopConfigReaderStruct":550}],418:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SkillConfigReaderStruct_1 = require("../ReaderStructs/SkillConfigReaderStruct");
var SkillConfigReader = /** @class */ (function (_super) {
    __extends(SkillConfigReader, _super);
    function SkillConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillConfigReader;
}(SkillConfigReaderStruct_1.default));
exports.default = SkillConfigReader;
},{"../ReaderStructs/SkillConfigReaderStruct":551}],419:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SkillEffectConfigReaderStruct_1 = require("../ReaderStructs/SkillEffectConfigReaderStruct");
var SkillEffectConfigReader = /** @class */ (function (_super) {
    __extends(SkillEffectConfigReader, _super);
    function SkillEffectConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillEffectConfigReader;
}(SkillEffectConfigReaderStruct_1.default));
exports.default = SkillEffectConfigReader;
},{"../ReaderStructs/SkillEffectConfigReaderStruct":552}],420:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SkillTriggerConfigReaderStruct_1 = require("../ReaderStructs/SkillTriggerConfigReaderStruct");
var SkillTriggerConfigReader = /** @class */ (function (_super) {
    __extends(SkillTriggerConfigReader, _super);
    function SkillTriggerConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SkillTriggerConfigReader;
}(SkillTriggerConfigReaderStruct_1.default));
exports.default = SkillTriggerConfigReader;
},{"../ReaderStructs/SkillTriggerConfigReaderStruct":553}],421:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SpeakConfigReaderStruct_1 = require("../ReaderStructs/SpeakConfigReaderStruct");
var SpeakConfigReader = /** @class */ (function (_super) {
    __extends(SpeakConfigReader, _super);
    function SpeakConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SpeakConfigReader;
}(SpeakConfigReaderStruct_1.default));
exports.default = SpeakConfigReader;
},{"../ReaderStructs/SpeakConfigReaderStruct":554}],422:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StarConConfigReaderStruct_1 = require("../ReaderStructs/StarConConfigReaderStruct");
var StarConConfigReader = /** @class */ (function (_super) {
    __extends(StarConConfigReader, _super);
    function StarConConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StarConConfigReader;
}(StarConConfigReaderStruct_1.default));
exports.default = StarConConfigReader;
},{"../ReaderStructs/StarConConfigReaderStruct":555}],423:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryCharactersConfigReaderStruct_1 = require("../ReaderStructs/StoryCharactersConfigReaderStruct");
var StoryCharactersConfigReader = /** @class */ (function (_super) {
    __extends(StoryCharactersConfigReader, _super);
    function StoryCharactersConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryCharactersConfigReader;
}(StoryCharactersConfigReaderStruct_1.default));
exports.default = StoryCharactersConfigReader;
},{"../ReaderStructs/StoryCharactersConfigReaderStruct":556}],424:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryConfigReaderStruct_1 = require("../ReaderStructs/StoryConfigReaderStruct");
var StoryConfigReader = /** @class */ (function (_super) {
    __extends(StoryConfigReader, _super);
    function StoryConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryConfigReader;
}(StoryConfigReaderStruct_1.default));
exports.default = StoryConfigReader;
},{"../ReaderStructs/StoryConfigReaderStruct":557}],425:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryGoalsConfigReaderStruct_1 = require("../ReaderStructs/StoryGoalsConfigReaderStruct");
var StoryGoalsConfigReader = /** @class */ (function (_super) {
    __extends(StoryGoalsConfigReader, _super);
    function StoryGoalsConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryGoalsConfigReader;
}(StoryGoalsConfigReaderStruct_1.default));
exports.default = StoryGoalsConfigReader;
},{"../ReaderStructs/StoryGoalsConfigReaderStruct":558}],426:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryRateConfigReaderStruct_1 = require("../ReaderStructs/StoryRateConfigReaderStruct");
var StoryRateConfigReader = /** @class */ (function (_super) {
    __extends(StoryRateConfigReader, _super);
    function StoryRateConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryRateConfigReader;
}(StoryRateConfigReaderStruct_1.default));
exports.default = StoryRateConfigReader;
},{"../ReaderStructs/StoryRateConfigReaderStruct":559}],427:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryRefreshPriceConfigReaderStruct_1 = require("../ReaderStructs/StoryRefreshPriceConfigReaderStruct");
var StoryRefreshPriceConfigReader = /** @class */ (function (_super) {
    __extends(StoryRefreshPriceConfigReader, _super);
    function StoryRefreshPriceConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryRefreshPriceConfigReader;
}(StoryRefreshPriceConfigReaderStruct_1.default));
exports.default = StoryRefreshPriceConfigReader;
},{"../ReaderStructs/StoryRefreshPriceConfigReaderStruct":560}],428:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryStackItemConfigReaderStruct_1 = require("../ReaderStructs/StoryStackItemConfigReaderStruct");
var StoryStackItemConfigReader = /** @class */ (function (_super) {
    __extends(StoryStackItemConfigReader, _super);
    function StoryStackItemConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryStackItemConfigReader;
}(StoryStackItemConfigReaderStruct_1.default));
exports.default = StoryStackItemConfigReader;
},{"../ReaderStructs/StoryStackItemConfigReaderStruct":561}],429:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StoryStackSortConfigReaderStruct_1 = require("../ReaderStructs/StoryStackSortConfigReaderStruct");
var StoryStackSortConfigReader = /** @class */ (function (_super) {
    __extends(StoryStackSortConfigReader, _super);
    function StoryStackSortConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StoryStackSortConfigReader;
}(StoryStackSortConfigReaderStruct_1.default));
exports.default = StoryStackSortConfigReader;
},{"../ReaderStructs/StoryStackSortConfigReaderStruct":562}],430:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StorylineConfigReaderStruct_1 = require("../ReaderStructs/StorylineConfigReaderStruct");
var StorylineConfigReader = /** @class */ (function (_super) {
    __extends(StorylineConfigReader, _super);
    function StorylineConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StorylineConfigReader;
}(StorylineConfigReaderStruct_1.default));
exports.default = StorylineConfigReader;
},{"../ReaderStructs/StorylineConfigReaderStruct":563}],431:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var StreetConfigReaderStruct_1 = require("../ReaderStructs/StreetConfigReaderStruct");
var StreetConfigReader = /** @class */ (function (_super) {
    __extends(StreetConfigReader, _super);
    function StreetConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StreetConfigReader;
}(StreetConfigReaderStruct_1.default));
exports.default = StreetConfigReader;
},{"../ReaderStructs/StreetConfigReaderStruct":564}],432:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SysTimeConfigReaderStruct_1 = require("../ReaderStructs/SysTimeConfigReaderStruct");
var SysTimeConfigReader = /** @class */ (function (_super) {
    __extends(SysTimeConfigReader, _super);
    function SysTimeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SysTimeConfigReader;
}(SysTimeConfigReaderStruct_1.default));
exports.default = SysTimeConfigReader;
},{"../ReaderStructs/SysTimeConfigReaderStruct":565}],433:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TaskConfigReaderStruct_1 = require("../ReaderStructs/TaskConfigReaderStruct");
var TaskConfigReader = /** @class */ (function (_super) {
    __extends(TaskConfigReader, _super);
    function TaskConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TaskConfigReader;
}(TaskConfigReaderStruct_1.default));
exports.default = TaskConfigReader;
},{"../ReaderStructs/TaskConfigReaderStruct":566}],434:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TestConfigReaderStruct_1 = require("../ReaderStructs/TestConfigReaderStruct");
var TestConfigReader = /** @class */ (function (_super) {
    __extends(TestConfigReader, _super);
    function TestConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TestConfigReader;
}(TestConfigReaderStruct_1.default));
exports.default = TestConfigReader;
},{"../ReaderStructs/TestConfigReaderStruct":567}],435:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TurntableCompleteConfigReaderStruct_1 = require("../ReaderStructs/TurntableCompleteConfigReaderStruct");
var TurntableCompleteConfigReader = /** @class */ (function (_super) {
    __extends(TurntableCompleteConfigReader, _super);
    function TurntableCompleteConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TurntableCompleteConfigReader;
}(TurntableCompleteConfigReaderStruct_1.default));
exports.default = TurntableCompleteConfigReader;
},{"../ReaderStructs/TurntableCompleteConfigReaderStruct":568}],436:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TurntableRewardConfigReaderStruct_1 = require("../ReaderStructs/TurntableRewardConfigReaderStruct");
var TurntableRewardConfigReader = /** @class */ (function (_super) {
    __extends(TurntableRewardConfigReader, _super);
    function TurntableRewardConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TurntableRewardConfigReader;
}(TurntableRewardConfigReaderStruct_1.default));
exports.default = TurntableRewardConfigReader;
},{"../ReaderStructs/TurntableRewardConfigReaderStruct":569}],437:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var TypeConfigReaderStruct_1 = require("../ReaderStructs/TypeConfigReaderStruct");
var TypeConfigReader = /** @class */ (function (_super) {
    __extends(TypeConfigReader, _super);
    function TypeConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TypeConfigReader;
}(TypeConfigReaderStruct_1.default));
exports.default = TypeConfigReader;
},{"../ReaderStructs/TypeConfigReaderStruct":570}],438:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var UnlockConfigReaderStruct_1 = require("../ReaderStructs/UnlockConfigReaderStruct");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var UnlockConfigReader = /** @class */ (function (_super) {
    __extends(UnlockConfigReader, _super);
    function UnlockConfigReader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //
        _this.menuConfigs = new Dictionary_1.default();
        //
        _this.menuGroups = new Dictionary_1.default();
        //
        _this.unlockGroups = new Dictionary_1.default();
        //
        _this.sortMenus = new Dictionary_1.default();
        return _this;
    }
    UnlockConfigReader.prototype.addConfig = function (config) {
        _super.prototype.addConfig.call(this, config);
        this.menuConfigs.add(config.menu_id, config);
        var list, group;
        group = config.group;
        if (this.menuGroups.hasKey(group)) {
            list = this.menuGroups.getValue(group);
        }
        else {
            list = [];
            this.menuGroups.add(group, list);
        }
        list.push(config);
        //
        var openList, type;
        type = config.open_type;
        if (this.unlockGroups.hasKey(type)) {
            openList = this.unlockGroups.getValue(type);
        }
        else {
            openList = [];
            this.unlockGroups.add(type, openList);
        }
        openList.push(config);
    };
    /**
     * 获取解锁数据
     * @param menuId
     */
    UnlockConfigReader.prototype.getUnlockConfig = function (menuId) {
        return this.menuConfigs.getValue(menuId);
    };
    /**
     *
     * @param barType
     */
    UnlockConfigReader.prototype.getBarMenus = function (barType) {
        var list = this.menuGroups.getValue(barType);
        if (this.sortMenus.hasKey(barType) == false) {
            list.sort(function (a, b) { return a.group_id - b.group_id; });
            this.sortMenus.add(barType, true);
        }
        return list;
    };
    //获取解锁
    UnlockConfigReader.prototype.getUnlocks = function (openType) {
        var list = this.unlockGroups.getValue(openType);
        return list;
    };
    /** 游戏所有配置加载完成 */
    UnlockConfigReader.prototype.onGameLoadedAll = function () {
    };
    return UnlockConfigReader;
}(UnlockConfigReaderStruct_1.default));
exports.default = UnlockConfigReader;
},{"../../Libs/Helpers/Dictionary":679,"../ReaderStructs/UnlockConfigReaderStruct":571}],439:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var VisitConfigReaderStruct_1 = require("../ReaderStructs/VisitConfigReaderStruct");
var VisitConfigReader = /** @class */ (function (_super) {
    __extends(VisitConfigReader, _super);
    function VisitConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VisitConfigReader;
}(VisitConfigReaderStruct_1.default));
exports.default = VisitConfigReader;
},{"../ReaderStructs/VisitConfigReaderStruct":572}],440:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WeeklyQuestConfigReaderStruct_1 = require("../ReaderStructs/WeeklyQuestConfigReaderStruct");
var WeeklyQuestConfigReader = /** @class */ (function (_super) {
    __extends(WeeklyQuestConfigReader, _super);
    function WeeklyQuestConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WeeklyQuestConfigReader;
}(WeeklyQuestConfigReaderStruct_1.default));
exports.default = WeeklyQuestConfigReader;
},{"../ReaderStructs/WeeklyQuestConfigReaderStruct":573}],441:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WelfareConfigReaderStruct_1 = require("../ReaderStructs/WelfareConfigReaderStruct");
var WelfareConfigReader = /** @class */ (function (_super) {
    __extends(WelfareConfigReader, _super);
    function WelfareConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WelfareConfigReader;
}(WelfareConfigReaderStruct_1.default));
exports.default = WelfareConfigReader;
},{"../ReaderStructs/WelfareConfigReaderStruct":574}],442:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WheelDropConfigReaderStruct_1 = require("../ReaderStructs/WheelDropConfigReaderStruct");
var WheelDropConfigReader = /** @class */ (function (_super) {
    __extends(WheelDropConfigReader, _super);
    function WheelDropConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WheelDropConfigReader;
}(WheelDropConfigReaderStruct_1.default));
exports.default = WheelDropConfigReader;
},{"../ReaderStructs/WheelDropConfigReaderStruct":575}],443:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterAbilityConfigReaderStruct_1 = require("../ReaderStructs/WriterAbilityConfigReaderStruct");
var WriterAbilityConfigReader = /** @class */ (function (_super) {
    __extends(WriterAbilityConfigReader, _super);
    function WriterAbilityConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterAbilityConfigReader;
}(WriterAbilityConfigReaderStruct_1.default));
exports.default = WriterAbilityConfigReader;
},{"../ReaderStructs/WriterAbilityConfigReaderStruct":576}],444:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterAdaptEffectConfigReaderStruct_1 = require("../ReaderStructs/WriterAdaptEffectConfigReaderStruct");
var WriterAdaptEffectConfigReader = /** @class */ (function (_super) {
    __extends(WriterAdaptEffectConfigReader, _super);
    function WriterAdaptEffectConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterAdaptEffectConfigReader;
}(WriterAdaptEffectConfigReaderStruct_1.default));
exports.default = WriterAdaptEffectConfigReader;
},{"../ReaderStructs/WriterAdaptEffectConfigReaderStruct":577}],445:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterConfigReaderStruct_1 = require("../ReaderStructs/WriterConfigReaderStruct");
var WriterConfigReader = /** @class */ (function (_super) {
    __extends(WriterConfigReader, _super);
    function WriterConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterConfigReader;
}(WriterConfigReaderStruct_1.default));
exports.default = WriterConfigReader;
},{"../ReaderStructs/WriterConfigReaderStruct":578}],446:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterLevelConfigReaderStruct_1 = require("../ReaderStructs/WriterLevelConfigReaderStruct");
var WriterLevelConfigReader = /** @class */ (function (_super) {
    __extends(WriterLevelConfigReader, _super);
    function WriterLevelConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterLevelConfigReader;
}(WriterLevelConfigReaderStruct_1.default));
exports.default = WriterLevelConfigReader;
},{"../ReaderStructs/WriterLevelConfigReaderStruct":579}],447:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterSkillConfigReaderStruct_1 = require("../ReaderStructs/WriterSkillConfigReaderStruct");
var WriterSkillConfigReader = /** @class */ (function (_super) {
    __extends(WriterSkillConfigReader, _super);
    function WriterSkillConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterSkillConfigReader;
}(WriterSkillConfigReaderStruct_1.default));
exports.default = WriterSkillConfigReader;
},{"../ReaderStructs/WriterSkillConfigReaderStruct":580}],448:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WriterStationConfigReaderStruct_1 = require("../ReaderStructs/WriterStationConfigReaderStruct");
var WriterStationConfigReader = /** @class */ (function (_super) {
    __extends(WriterStationConfigReader, _super);
    function WriterStationConfigReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WriterStationConfigReader;
}(WriterStationConfigReaderStruct_1.default));
exports.default = WriterStationConfigReader;
},{"../ReaderStructs/WriterStationConfigReaderStruct":581}],449:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActionConfig_1 = require("../ConfigExtends/ActionConfig");
var DTParts_1 = require("../ConfigExtends/DTParts");
var ActionConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActionConfigReaderStruct, _super);
    function ActionConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Action";
        return _this;
    }
    ActionConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActionConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.action = csvGetString(csv, this.GetHeadIndex("action"));
        config.parts = DTParts_1.default.parse(csvGetString(csv, this.GetHeadIndex("parts")));
        config.loop = csvGetInt(csv, this.GetHeadIndex("loop"));
        config.Connect = csvGetInt(csv, this.GetHeadIndex("Connect"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActionConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActionConfigReaderStruct;
},{"../ConfigExtends/ActionConfig":4,"../ConfigExtends/DTParts":45,"../CsvConfigRender":304}],450:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActivitiesConfig_1 = require("../ConfigExtends/ActivitiesConfig");
var ActivitiesConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActivitiesConfigReaderStruct, _super);
    function ActivitiesConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Activities";
        return _this;
    }
    ActivitiesConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActivitiesConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.zh_cn_activities_name = csvGetString(csv, this.GetHeadIndex("zh_cn_activities_name"));
        config.start_type = csvGetInt(csv, this.GetHeadIndex("start_type"));
        config.level_req = csvGetInt(csv, this.GetHeadIndex("level_req"));
        config.block_req = csvGetInt(csv, this.GetHeadIndex("block_req"));
        config.start = csvGetInt(csv, this.GetHeadIndex("start"));
        config.duration = csvGetInt(csv, this.GetHeadIndex("duration"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.icon_chosen = csvGetInt(csv, this.GetHeadIndex("icon_chosen"));
        config.zh_cn_activities_info = csvGetString(csv, this.GetHeadIndex("zh_cn_activities_info"));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return ActivitiesConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActivitiesConfigReaderStruct;
},{"../ConfigExtends/ActivitiesConfig":5,"../CsvConfigRender":304}],451:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorAideConfig_1 = require("../ConfigExtends/ActorAideConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ActorAideConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorAideConfigReaderStruct, _super);
    function ActorAideConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorAide";
        return _this;
    }
    ActorAideConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorAideConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.star = csvGetInt(csv, this.GetHeadIndex("star"));
        config.aide_type = csvGetInt(csv, this.GetHeadIndex("aide_type"));
        config.number = csvGetInt(csv, this.GetHeadIndex("number"));
        config.lv = csvGetInt(csv, this.GetHeadIndex("lv"));
        config.cost = csvGetInt(csv, this.GetHeadIndex("cost"));
        config.introduction = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("introduction")));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.cn_name = csvGetString(csv, this.GetHeadIndex("cn_name"));
        config.avatar = csvGetInt(csv, this.GetHeadIndex("avatar"));
        config.secondary_property = csvGetInt(csv, this.GetHeadIndex("secondary_property"));
        config.main_property = csvGetInt(csv, this.GetHeadIndex("main_property"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActorAideConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorAideConfigReaderStruct;
},{"../ConfigExtends/ActorAideConfig":6,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],452:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorAideIntimacyConfig_1 = require("../ConfigExtends/ActorAideIntimacyConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ActorAideIntimacyConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorAideIntimacyConfigReaderStruct, _super);
    function ActorAideIntimacyConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorAideIntimacy";
        return _this;
    }
    ActorAideIntimacyConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorAideIntimacyConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.percent = csvGetInt(csv, this.GetHeadIndex("percent"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActorAideIntimacyConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorAideIntimacyConfigReaderStruct;
},{"../ConfigExtends/ActorAideIntimacyConfig":7,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],453:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorAideLvConfig_1 = require("../ConfigExtends/ActorAideLvConfig");
var ActorAideLvConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorAideLvConfigReaderStruct, _super);
    function ActorAideLvConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorAideLv";
        return _this;
    }
    ActorAideLvConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorAideLvConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.lv = toIntArray(csvGetString(csv, this.GetHeadIndex("lv")));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActorAideLvConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorAideLvConfigReaderStruct;
},{"../ConfigExtends/ActorAideLvConfig":8,"../CsvConfigRender":304}],454:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorAideattachConfig_1 = require("../ConfigExtends/ActorAideattachConfig");
var ActorAideattachConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorAideattachConfigReaderStruct, _super);
    function ActorAideattachConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorAideattach";
        return _this;
    }
    ActorAideattachConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorAideattachConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.actor = csvGetInt(csv, this.GetHeadIndex("actor"));
        config.aide_type = csvGetInt(csv, this.GetHeadIndex("aide_type"));
        config.attach_type = csvGetInt(csv, this.GetHeadIndex("attach_type"));
        config.value = csvGetInt(csv, this.GetHeadIndex("value"));
        config.lv = csvGetInt(csv, this.GetHeadIndex("lv"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActorAideattachConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorAideattachConfigReaderStruct;
},{"../ConfigExtends/ActorAideattachConfig":9,"../CsvConfigRender":304}],455:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorAssetsConfig_1 = require("../ConfigExtends/ActorAssetsConfig");
var ActorAssetsConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorAssetsConfigReaderStruct, _super);
    function ActorAssetsConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorAssets";
        return _this;
    }
    ActorAssetsConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorAssetsConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.actor_property = csvGetInt(csv, this.GetHeadIndex("actor_property"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActorAssetsConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorAssetsConfigReaderStruct;
},{"../ConfigExtends/ActorAssetsConfig":10,"../CsvConfigRender":304}],456:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorAssetsLvConfig_1 = require("../ConfigExtends/ActorAssetsLvConfig");
var ActorAssetsLvConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorAssetsLvConfigReaderStruct, _super);
    function ActorAssetsLvConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorAssetsLv";
        return _this;
    }
    ActorAssetsLvConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorAssetsLvConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.star1_num = csvGetInt(csv, this.GetHeadIndex("star1_num"));
        config.star2_num = csvGetInt(csv, this.GetHeadIndex("star2_num"));
        config.star3_num = csvGetInt(csv, this.GetHeadIndex("star3_num"));
        config.star4_num = csvGetInt(csv, this.GetHeadIndex("star4_num"));
        config.star5_num = csvGetInt(csv, this.GetHeadIndex("star5_num"));
        config.star6_num = csvGetInt(csv, this.GetHeadIndex("star6_num"));
        config.star1_value = csvGetInt(csv, this.GetHeadIndex("star1_value"));
        config.star2_value = csvGetInt(csv, this.GetHeadIndex("star2_value"));
        config.star3_value = csvGetInt(csv, this.GetHeadIndex("star3_value"));
        config.star4_value = csvGetInt(csv, this.GetHeadIndex("star4_value"));
        config.star5_value = csvGetInt(csv, this.GetHeadIndex("star5_value"));
        config.star6_value = csvGetInt(csv, this.GetHeadIndex("star6_value"));
        config.sex_1101 = csvGetInt(csv, this.GetHeadIndex("sex_1101"));
        config.sex_1102 = csvGetInt(csv, this.GetHeadIndex("sex_1102"));
        config.c_1201 = csvGetInt(csv, this.GetHeadIndex("c_1201"));
        config.c_1202 = csvGetInt(csv, this.GetHeadIndex("c_1202"));
        config.c_1203 = csvGetInt(csv, this.GetHeadIndex("c_1203"));
        config.p_1401 = csvGetInt(csv, this.GetHeadIndex("p_1401"));
        config.p_1402 = csvGetInt(csv, this.GetHeadIndex("p_1402"));
        config.y_1501 = csvGetInt(csv, this.GetHeadIndex("y_1501"));
        config.y_1502 = csvGetInt(csv, this.GetHeadIndex("y_1502"));
        config.star1_max = csvGetInt(csv, this.GetHeadIndex("star1_max"));
        config.star2_max = csvGetInt(csv, this.GetHeadIndex("star2_max"));
        config.star3_max = csvGetInt(csv, this.GetHeadIndex("star3_max"));
        config.star4_max = csvGetInt(csv, this.GetHeadIndex("star4_max"));
        config.star5_max = csvGetInt(csv, this.GetHeadIndex("star5_max"));
        config.star6_max = csvGetInt(csv, this.GetHeadIndex("star6_max"));
        this.addConfig(config);
    };
    return ActorAssetsLvConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorAssetsLvConfigReaderStruct;
},{"../ConfigExtends/ActorAssetsLvConfig":11,"../CsvConfigRender":304}],457:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorConfig_1 = require("../ConfigExtends/ActorConfig");
var DTActorSkill_1 = require("../ConfigExtends/DTActorSkill");
var DTActorStory_1 = require("../ConfigExtends/DTActorStory");
var DTActorFeature_1 = require("../ConfigExtends/DTActorFeature");
var DTActorCharacter_1 = require("../ConfigExtends/DTActorCharacter");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ActorConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorConfigReaderStruct, _super);
    function ActorConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Actor";
        return _this;
    }
    ActorConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.cn_name = csvGetString(csv, this.GetHeadIndex("cn_name"));
        config.random_name = csvGetInt(csv, this.GetHeadIndex("random_name"));
        config.star = csvGetInt(csv, this.GetHeadIndex("star"));
        config.sex = csvGetInt(csv, this.GetHeadIndex("sex"));
        config.country = csvGetInt(csv, this.GetHeadIndex("country"));
        config.show_type = csvGetInt(csv, this.GetHeadIndex("show_type"));
        config.age_type = csvGetInt(csv, this.GetHeadIndex("age_type"));
        config.avatar = csvGetInt(csv, this.GetHeadIndex("avatar"));
        config.spectacle = csvGetInt(csv, this.GetHeadIndex("spectacle"));
        config.perform = csvGetInt(csv, this.GetHeadIndex("perform"));
        config.plot = csvGetInt(csv, this.GetHeadIndex("plot"));
        config.art = csvGetInt(csv, this.GetHeadIndex("art"));
        config.entertainment = csvGetInt(csv, this.GetHeadIndex("entertainment"));
        config.main_id = csvGetInt(csv, this.GetHeadIndex("main_id"));
        config.skill = DTActorSkill_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("skill")));
        config.story_type = DTActorStory_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("story_type")));
        config.story_feature = DTActorFeature_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("story_feature")));
        config.character = DTActorCharacter_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("character")));
        config.surprise = csvGetInt(csv, this.GetHeadIndex("surprise"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.recruit_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("recruit_reward")));
        config.enable_cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("enable_cost")));
        config.random_value = csvGetInt(csv, this.GetHeadIndex("random_value"));
        config.exp = csvGetInt(csv, this.GetHeadIndex("exp"));
        config.paycheck = csvGetInt(csv, this.GetHeadIndex("paycheck"));
        config.stamina = csvGetInt(csv, this.GetHeadIndex("stamina"));
        config.culture = csvGetInt(csv, this.GetHeadIndex("culture"));
        config.assets = csvGetInt(csv, this.GetHeadIndex("assets"));
        config.en_tips = csvGetString(csv, this.GetHeadIndex("en_tips"));
        config.cn_tips = csvGetString(csv, this.GetHeadIndex("cn_tips"));
        config.en_getway = csvGetString(csv, this.GetHeadIndex("en_getway"));
        config.cn_getway = csvGetString(csv, this.GetHeadIndex("cn_getway"));
        this.addConfig(config);
    };
    return ActorConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorConfigReaderStruct;
},{"../ConfigExtends/ActorConfig":12,"../ConfigExtends/DTActorCharacter":38,"../ConfigExtends/DTActorFeature":39,"../ConfigExtends/DTActorSkill":40,"../ConfigExtends/DTActorStory":41,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],458:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorLevelConfig_1 = require("../ConfigExtends/ActorLevelConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ActorLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorLevelConfigReaderStruct, _super);
    function ActorLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorLevel";
        return _this;
    }
    ActorLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.star1_vice = csvGetInt(csv, this.GetHeadIndex("star1_vice"));
        config.star1_main = csvGetInt(csv, this.GetHeadIndex("star1_main"));
        config.star2_vice = csvGetInt(csv, this.GetHeadIndex("star2_vice"));
        config.star2_main = csvGetInt(csv, this.GetHeadIndex("star2_main"));
        config.star3_vice = csvGetInt(csv, this.GetHeadIndex("star3_vice"));
        config.star3_main = csvGetInt(csv, this.GetHeadIndex("star3_main"));
        config.star4_vice = csvGetInt(csv, this.GetHeadIndex("star4_vice"));
        config.star4_main = csvGetInt(csv, this.GetHeadIndex("star4_main"));
        config.star5_vice = csvGetInt(csv, this.GetHeadIndex("star5_vice"));
        config.star5_main = csvGetInt(csv, this.GetHeadIndex("star5_main"));
        config.star6_vice = csvGetInt(csv, this.GetHeadIndex("star6_vice"));
        config.star6_main = csvGetInt(csv, this.GetHeadIndex("star6_main"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.star1_paycheck = csvGetInt(csv, this.GetHeadIndex("star1_paycheck"));
        config.star2_paycheck = csvGetInt(csv, this.GetHeadIndex("star2_paycheck"));
        config.star3_paycheck = csvGetInt(csv, this.GetHeadIndex("star3_paycheck"));
        config.star4_paycheck = csvGetInt(csv, this.GetHeadIndex("star4_paycheck"));
        config.star5_paycheck = csvGetInt(csv, this.GetHeadIndex("star5_paycheck"));
        config.star6_paycheck = csvGetInt(csv, this.GetHeadIndex("star6_paycheck"));
        config.star1_assets = csvGetInt(csv, this.GetHeadIndex("star1_assets"));
        config.star2_assets = csvGetInt(csv, this.GetHeadIndex("star2_assets"));
        config.star3_assets = csvGetInt(csv, this.GetHeadIndex("star3_assets"));
        config.star4_assets = csvGetInt(csv, this.GetHeadIndex("star4_assets"));
        config.star5_assets = csvGetInt(csv, this.GetHeadIndex("star5_assets"));
        config.star6_assets = csvGetInt(csv, this.GetHeadIndex("star6_assets"));
        config.star1_stamina = csvGetInt(csv, this.GetHeadIndex("star1_stamina"));
        config.star2_stamina = csvGetInt(csv, this.GetHeadIndex("star2_stamina"));
        config.star3_stamina = csvGetInt(csv, this.GetHeadIndex("star3_stamina"));
        config.star4_stamina = csvGetInt(csv, this.GetHeadIndex("star4_stamina"));
        config.star5_stamina = csvGetInt(csv, this.GetHeadIndex("star5_stamina"));
        config.star6_stamina = csvGetInt(csv, this.GetHeadIndex("star6_stamina"));
        config.culture = csvGetInt(csv, this.GetHeadIndex("culture"));
        config.star1_paycheck_max = csvGetInt(csv, this.GetHeadIndex("star1_paycheck_max"));
        config.star2_paycheck_max = csvGetInt(csv, this.GetHeadIndex("star2_paycheck_max"));
        config.star3_paycheck_max = csvGetInt(csv, this.GetHeadIndex("star3_paycheck_max"));
        config.star4_paycheck_max = csvGetInt(csv, this.GetHeadIndex("star4_paycheck_max"));
        config.star5_paycheck_max = csvGetInt(csv, this.GetHeadIndex("star5_paycheck_max"));
        config.star6_paycheck_max = csvGetInt(csv, this.GetHeadIndex("star6_paycheck_max"));
        this.addConfig(config);
    };
    return ActorLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorLevelConfigReaderStruct;
},{"../ConfigExtends/ActorLevelConfig":13,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],459:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorLoyaltyConfig_1 = require("../ConfigExtends/ActorLoyaltyConfig");
var ActorLoyaltyConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorLoyaltyConfigReaderStruct, _super);
    function ActorLoyaltyConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorLoyalty";
        return _this;
    }
    ActorLoyaltyConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorLoyaltyConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.lv = csvGetInt(csv, this.GetHeadIndex("lv"));
        config.exp = csvGetInt(csv, this.GetHeadIndex("exp"));
        config.max_lv = csvGetInt(csv, this.GetHeadIndex("max_lv"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActorLoyaltyConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorLoyaltyConfigReaderStruct;
},{"../ConfigExtends/ActorLoyaltyConfig":14,"../CsvConfigRender":304}],460:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorProficiencyConfig_1 = require("../ConfigExtends/ActorProficiencyConfig");
var DTProficiency_1 = require("../ConfigExtends/DTProficiency");
var ActorProficiencyConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorProficiencyConfigReaderStruct, _super);
    function ActorProficiencyConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorProficiency";
        return _this;
    }
    ActorProficiencyConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorProficiencyConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.shoot_type = csvGetInt(csv, this.GetHeadIndex("shoot_type"));
        config.lv = csvGetInt(csv, this.GetHeadIndex("lv"));
        config.shoot_exp = csvGetInt(csv, this.GetHeadIndex("shoot_exp"));
        config.exp = csvGetInt(csv, this.GetHeadIndex("exp"));
        config.proficiency = DTProficiency_1.default.parse(csvGetString(csv, this.GetHeadIndex("proficiency")));
        this.addConfig(config);
    };
    return ActorProficiencyConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorProficiencyConfigReaderStruct;
},{"../ConfigExtends/ActorProficiencyConfig":15,"../ConfigExtends/DTProficiency":48,"../CsvConfigRender":304}],461:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorTrainConfig_1 = require("../ConfigExtends/ActorTrainConfig");
var ActorTrainConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorTrainConfigReaderStruct, _super);
    function ActorTrainConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorTrain";
        return _this;
    }
    ActorTrainConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorTrainConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.train_type = csvGetInt(csv, this.GetHeadIndex("train_type"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.cn_name = csvGetString(csv, this.GetHeadIndex("cn_name"));
        config.property = toIntArray(csvGetString(csv, this.GetHeadIndex("property")));
        config.en_scene_name = csvGetString(csv, this.GetHeadIndex("en_scene_name"));
        config.cn_scene_name = csvGetString(csv, this.GetHeadIndex("cn_scene_name"));
        config.action = csvGetInt(csv, this.GetHeadIndex("action"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ActorTrainConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorTrainConfigReaderStruct;
},{"../ConfigExtends/ActorTrainConfig":16,"../CsvConfigRender":304}],462:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ActorTrainLvConfig_1 = require("../ConfigExtends/ActorTrainLvConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ActorTrainLvConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ActorTrainLvConfigReaderStruct, _super);
    function ActorTrainLvConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ActorTrainLv";
        return _this;
    }
    ActorTrainLvConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ActorTrainLvConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.star1_vice = toIntArray(csvGetString(csv, this.GetHeadIndex("star1_vice")));
        config.star1_main = toIntArray(csvGetString(csv, this.GetHeadIndex("star1_main")));
        config.star2_vice = toIntArray(csvGetString(csv, this.GetHeadIndex("star2_vice")));
        config.star2_main = toIntArray(csvGetString(csv, this.GetHeadIndex("star2_main")));
        config.star3_vice = toIntArray(csvGetString(csv, this.GetHeadIndex("star3_vice")));
        config.star3_main = toIntArray(csvGetString(csv, this.GetHeadIndex("star3_main")));
        config.star4_vice = toIntArray(csvGetString(csv, this.GetHeadIndex("star4_vice")));
        config.star4_main = toIntArray(csvGetString(csv, this.GetHeadIndex("star4_main")));
        config.star5_vice = toIntArray(csvGetString(csv, this.GetHeadIndex("star5_vice")));
        config.star5_main = toIntArray(csvGetString(csv, this.GetHeadIndex("star5_main")));
        config.star6_vice = toIntArray(csvGetString(csv, this.GetHeadIndex("star6_vice")));
        config.star6_main = toIntArray(csvGetString(csv, this.GetHeadIndex("star6_main")));
        config.cost = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("cost")));
        config.diamonds_cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("diamonds_cost")));
        this.addConfig(config);
    };
    return ActorTrainLvConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ActorTrainLvConfigReaderStruct;
},{"../ConfigExtends/ActorTrainLvConfig":17,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],463:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var AvatarConfig_1 = require("../ConfigExtends/AvatarConfig");
var DTVector2_1 = require("../ConfigExtends/DTVector2");
var AvatarConfigReaderStruct = /** @class */ (function (_super) {
    __extends(AvatarConfigReaderStruct, _super);
    function AvatarConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Avatar";
        return _this;
    }
    AvatarConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new AvatarConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name_e = csvGetString(csv, this.GetHeadIndex("name_e"));
        config.name_c = csvGetString(csv, this.GetHeadIndex("name_c"));
        config.body_icon = csvGetString(csv, this.GetHeadIndex("body_icon"));
        config.zh_cn_icon = csvGetString(csv, this.GetHeadIndex("zh_cn_icon"));
        config.en_icon = csvGetString(csv, this.GetHeadIndex("en_icon"));
        config.piece_icon = csvGetString(csv, this.GetHeadIndex("piece_icon"));
        config.model_skin = csvGetString(csv, this.GetHeadIndex("model_skin"));
        config.model_bones = csvGetString(csv, this.GetHeadIndex("model_bones"));
        config.bg_pic = csvGetString(csv, this.GetHeadIndex("bg_pic"));
        config.co_vector = DTVector2_1.default.parse(csvGetString(csv, this.GetHeadIndex("co_vector")));
        this.addConfig(config);
    };
    return AvatarConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = AvatarConfigReaderStruct;
},{"../ConfigExtends/AvatarConfig":18,"../ConfigExtends/DTVector2":51,"../CsvConfigRender":304}],464:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BattleLevelConfig_1 = require("../ConfigExtends/BattleLevelConfig");
var BattleLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BattleLevelConfigReaderStruct, _super);
    function BattleLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BattleLevel";
        return _this;
    }
    BattleLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BattleLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type_con = csvGetInt(csv, this.GetHeadIndex("type_con"));
        config.tag_con = csvGetInt(csv, this.GetHeadIndex("tag_con"));
        config.character_con = csvGetInt(csv, this.GetHeadIndex("character_con"));
        this.addConfig(config);
    };
    return BattleLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BattleLevelConfigReaderStruct;
},{"../ConfigExtends/BattleLevelConfig":19,"../CsvConfigRender":304}],465:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BattleShootTypeConfig_1 = require("../ConfigExtends/BattleShootTypeConfig");
var BattleShootTypeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BattleShootTypeConfigReaderStruct, _super);
    function BattleShootTypeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BattleShootType";
        return _this;
    }
    BattleShootTypeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BattleShootTypeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.man = csvGetInt(csv, this.GetHeadIndex("man"));
        config.woman = csvGetInt(csv, this.GetHeadIndex("woman"));
        config.child = csvGetInt(csv, this.GetHeadIndex("child"));
        this.addConfig(config);
    };
    return BattleShootTypeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BattleShootTypeConfigReaderStruct;
},{"../ConfigExtends/BattleShootTypeConfig":20,"../CsvConfigRender":304}],466:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BlockLevelConfig_1 = require("../ConfigExtends/BlockLevelConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var BlockLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BlockLevelConfigReaderStruct, _super);
    function BlockLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BlockLevel";
        return _this;
    }
    BlockLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BlockLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        config.upgrade_req = csvGetInt(csv, this.GetHeadIndex("upgrade_req"));
        config.upgrade_menu = toIntArray(csvGetString(csv, this.GetHeadIndex("upgrade_menu")));
        config.upgrade_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("upgrade_reward")));
        config.daily_reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("daily_reward")));
        config.cinema = toIntArray(csvGetString(csv, this.GetHeadIndex("cinema")));
        config.storysearchcost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("storysearchcost")));
        config.storysearchdollar = csvGetInt(csv, this.GetHeadIndex("storysearchdollar"));
        config.level_multiple = csvGetInt(csv, this.GetHeadIndex("level_multiple"));
        config.level_con = csvGetInt(csv, this.GetHeadIndex("level_con"));
        config.theater_level_con = csvGetInt(csv, this.GetHeadIndex("theater_level_con"));
        config.good = csvGetInt(csv, this.GetHeadIndex("good"));
        config.big_sell = csvGetInt(csv, this.GetHeadIndex("big_sell"));
        config.great_sell = csvGetInt(csv, this.GetHeadIndex("great_sell"));
        config.myth_sell = csvGetInt(csv, this.GetHeadIndex("myth_sell"));
        config.marvel_sell = csvGetInt(csv, this.GetHeadIndex("marvel_sell"));
        config.zh_cn_current_msg = toStringArray(csvGetString(csv, this.GetHeadIndex("zh_cn_current_msg")));
        config.zh_cn_next_msg = toStringArray(csvGetString(csv, this.GetHeadIndex("zh_cn_next_msg")));
        config.movie_daily_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("movie_daily_reward")));
        config.task_cd = csvGetInt(csv, this.GetHeadIndex("task_cd"));
        config.city_gold = csvGetInt(csv, this.GetHeadIndex("city_gold"));
        config.city_fans = csvGetInt(csv, this.GetHeadIndex("city_fans"));
        config.party_guest = csvGetInt(csv, this.GetHeadIndex("party_guest"));
        config.story_num = csvGetInt(csv, this.GetHeadIndex("story_num"));
        config.city_envoy_max = csvGetInt(csv, this.GetHeadIndex("city_envoy_max"));
        config.finance_exchange = csvGetInt(csv, this.GetHeadIndex("finance_exchange"));
        config.actor_max = csvGetInt(csv, this.GetHeadIndex("actor_max"));
        config.certificate = csvGetInt(csv, this.GetHeadIndex("certificate"));
        config.sequel_max = csvGetInt(csv, this.GetHeadIndex("sequel_max"));
        config.screenwriter_max = csvGetInt(csv, this.GetHeadIndex("screenwriter_max"));
        config.story_refresh_times = csvGetInt(csv, this.GetHeadIndex("story_refresh_times"));
        config.box_target1 = csvGetInt(csv, this.GetHeadIndex("box_target1"));
        config.box_target1_reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("box_target1_reward")));
        config.box_target2 = csvGetInt(csv, this.GetHeadIndex("box_target2"));
        config.box_target2_reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("box_target2_reward")));
        config.box_target3 = csvGetInt(csv, this.GetHeadIndex("box_target3"));
        config.box_target3_reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("box_target3_reward")));
        config.box_target_all = csvGetInt(csv, this.GetHeadIndex("box_target_all"));
        config.box_target_all_reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("box_target_all_reward")));
        config.new_effect = csvGetBoolean(csv, this.GetHeadIndex("new_effect"));
        config.zh_cn_name_tips = csvGetString(csv, this.GetHeadIndex("zh_cn_name_tips"));
        this.addConfig(config);
    };
    return BlockLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BlockLevelConfigReaderStruct;
},{"../ConfigExtends/BlockLevelConfig":21,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],467:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BlockRankingListConfig_1 = require("../ConfigExtends/BlockRankingListConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var BlockRankingListConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BlockRankingListConfigReaderStruct, _super);
    function BlockRankingListConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BlockRankingList";
        return _this;
    }
    BlockRankingListConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BlockRankingListConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.rank = csvGetInt(csv, this.GetHeadIndex("rank"));
        config.movie_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("movie_reward")));
        config.box_office_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("box_office_reward")));
        config.extra_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("extra_reward")));
        config.congratulate_switch = csvGetBoolean(csv, this.GetHeadIndex("congratulate_switch"));
        config.congratulate_reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("congratulate_reward")));
        this.addConfig(config);
    };
    return BlockRankingListConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BlockRankingListConfigReaderStruct;
},{"../ConfigExtends/BlockRankingListConfig":22,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],468:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BlockWordsConfig_1 = require("../ConfigExtends/BlockWordsConfig");
var BlockWordsConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BlockWordsConfigReaderStruct, _super);
    function BlockWordsConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BlockWords";
        return _this;
    }
    BlockWordsConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BlockWordsConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.text = csvGetString(csv, this.GetHeadIndex("text"));
        this.addConfig(config);
    };
    return BlockWordsConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BlockWordsConfigReaderStruct;
},{"../ConfigExtends/BlockWordsConfig":23,"../CsvConfigRender":304}],469:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BlockWordsIIConfig_1 = require("../ConfigExtends/BlockWordsIIConfig");
var BlockWordsIIConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BlockWordsIIConfigReaderStruct, _super);
    function BlockWordsIIConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BlockWordsII";
        return _this;
    }
    BlockWordsIIConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BlockWordsIIConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.text = csvGetString(csv, this.GetHeadIndex("text"));
        this.addConfig(config);
    };
    return BlockWordsIIConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BlockWordsIIConfigReaderStruct;
},{"../ConfigExtends/BlockWordsIIConfig":24,"../CsvConfigRender":304}],470:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BoxTargetConfig_1 = require("../ConfigExtends/BoxTargetConfig");
var BoxTargetConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BoxTargetConfigReaderStruct, _super);
    function BoxTargetConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BoxTarget";
        return _this;
    }
    BoxTargetConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BoxTargetConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.target = csvGetInt(csv, this.GetHeadIndex("target"));
        config.zh_cn_dialog = csvGetString(csv, this.GetHeadIndex("zh_cn_dialog"));
        config.zh_cn_title = csvGetString(csv, this.GetHeadIndex("zh_cn_title"));
        config.zh_cn_targettext = csvGetString(csv, this.GetHeadIndex("zh_cn_targettext"));
        config.zh_cn_timetext = csvGetString(csv, this.GetHeadIndex("zh_cn_timetext"));
        config.time = csvGetInt(csv, this.GetHeadIndex("time"));
        config.zh_cn_reward = csvGetString(csv, this.GetHeadIndex("zh_cn_reward"));
        config.zh_cn_final = csvGetString(csv, this.GetHeadIndex("zh_cn_final"));
        config.zh_cn_button = csvGetString(csv, this.GetHeadIndex("zh_cn_button"));
        this.addConfig(config);
    };
    return BoxTargetConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BoxTargetConfigReaderStruct;
},{"../ConfigExtends/BoxTargetConfig":25,"../CsvConfigRender":304}],471:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BuildingEffectConfig_1 = require("../ConfigExtends/BuildingEffectConfig");
var BuildingEffectConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BuildingEffectConfigReaderStruct, _super);
    function BuildingEffectConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BuildingEffect";
        return _this;
    }
    BuildingEffectConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BuildingEffectConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.level = csvGetInt(csv, this.GetHeadIndex("level"));
        config.zh_cn_effect_des = csvGetString(csv, this.GetHeadIndex("zh_cn_effect_des"));
        config.effect = csvGetInt(csv, this.GetHeadIndex("effect"));
        config.par1 = csvGetFloat(csv, this.GetHeadIndex("par1"));
        config.par2 = csvGetFloat(csv, this.GetHeadIndex("par2"));
        config.par3 = csvGetFloat(csv, this.GetHeadIndex("par3"));
        config.par4 = csvGetFloat(csv, this.GetHeadIndex("par4"));
        config.par5 = csvGetFloat(csv, this.GetHeadIndex("par5"));
        this.addConfig(config);
    };
    return BuildingEffectConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BuildingEffectConfigReaderStruct;
},{"../ConfigExtends/BuildingEffectConfig":26,"../CsvConfigRender":304}],472:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BuildingLevelConfig_1 = require("../ConfigExtends/BuildingLevelConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var DTBuildingReq_1 = require("../ConfigExtends/DTBuildingReq");
var BuildingLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BuildingLevelConfigReaderStruct, _super);
    function BuildingLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "BuildingLevel";
        return _this;
    }
    BuildingLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BuildingLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.level = csvGetInt(csv, this.GetHeadIndex("level"));
        config.cost = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("cost")));
        config.level_req = csvGetInt(csv, this.GetHeadIndex("level_req"));
        config.type_level = DTBuildingReq_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("type_level")));
        config.block_req = csvGetInt(csv, this.GetHeadIndex("block_req"));
        config.function_open = toIntArray(csvGetString(csv, this.GetHeadIndex("function_open")));
        config.UI = csvGetBoolean(csv, this.GetHeadIndex("UI"));
        config.effect_id = toIntArray(csvGetString(csv, this.GetHeadIndex("effect_id")));
        config.zh_cn_effect_tips = csvGetString(csv, this.GetHeadIndex("zh_cn_effect_tips"));
        config.zh_cn_level_tips = csvGetString(csv, this.GetHeadIndex("zh_cn_level_tips"));
        config.building_small = csvGetInt(csv, this.GetHeadIndex("building_small"));
        this.addConfig(config);
    };
    return BuildingLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BuildingLevelConfigReaderStruct;
},{"../ConfigExtends/BuildingLevelConfig":27,"../ConfigExtends/DTBuildingReq":42,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],473:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var BusinessConfig_1 = require("../ConfigExtends/BusinessConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var BusinessConfigReaderStruct = /** @class */ (function (_super) {
    __extends(BusinessConfigReaderStruct, _super);
    function BusinessConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Business";
        return _this;
    }
    BusinessConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new BusinessConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_from = csvGetString(csv, this.GetHeadIndex("zh_cn_from"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_description = csvGetString(csv, this.GetHeadIndex("zh_cn_description"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.expect = csvGetInt(csv, this.GetHeadIndex("expect"));
        this.addConfig(config);
    };
    return BusinessConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = BusinessConfigReaderStruct;
},{"../ConfigExtends/BusinessConfig":28,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],474:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CinemaConfig_1 = require("../ConfigExtends/CinemaConfig");
var CinemaConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CinemaConfigReaderStruct, _super);
    function CinemaConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Cinema";
        return _this;
    }
    CinemaConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CinemaConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.level = csvGetInt(csv, this.GetHeadIndex("level"));
        config.sign_level = csvGetInt(csv, this.GetHeadIndex("sign_level"));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        config.num = csvGetInt(csv, this.GetHeadIndex("num"));
        config.proportion = csvGetFloat(csv, this.GetHeadIndex("proportion"));
        config.favorite_actor = csvGetInt(csv, this.GetHeadIndex("favorite_actor"));
        config.increase = csvGetInt(csv, this.GetHeadIndex("increase"));
        config.unlock = csvGetInt(csv, this.GetHeadIndex("unlock"));
        this.addConfig(config);
    };
    return CinemaConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CinemaConfigReaderStruct;
},{"../ConfigExtends/CinemaConfig":29,"../CsvConfigRender":304}],475:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CityConfig_1 = require("../ConfigExtends/CityConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CityConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CityConfigReaderStruct, _super);
    function CityConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "City";
        return _this;
    }
    CityConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CityConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.city_num = csvGetInt(csv, this.GetHeadIndex("city_num"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.street_num = csvGetInt(csv, this.GetHeadIndex("street_num"));
        config.street_id = toIntArray(csvGetString(csv, this.GetHeadIndex("street_id")));
        config.show_cost = csvGetInt(csv, this.GetHeadIndex("show_cost"));
        config.show_need = csvGetInt(csv, this.GetHeadIndex("show_need"));
        config.hold_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("hold_reward")));
        config.envoy1_sex = csvGetInt(csv, this.GetHeadIndex("envoy1_sex"));
        config.envoy1_Continents = csvGetInt(csv, this.GetHeadIndex("envoy1_Continents"));
        config.envoy1_type = csvGetInt(csv, this.GetHeadIndex("envoy1_type"));
        config.envoy1_age = csvGetInt(csv, this.GetHeadIndex("envoy1_age"));
        config.envoy1_scene = csvGetInt(csv, this.GetHeadIndex("envoy1_scene"));
        config.envoy1_performance = csvGetInt(csv, this.GetHeadIndex("envoy1_performance"));
        config.envoy1_plot = csvGetInt(csv, this.GetHeadIndex("envoy1_plot"));
        config.envoy1_art = csvGetInt(csv, this.GetHeadIndex("envoy1_art"));
        config.envoy1_entertainment = csvGetInt(csv, this.GetHeadIndex("envoy1_entertainment"));
        config.envoy2_sex = csvGetInt(csv, this.GetHeadIndex("envoy2_sex"));
        config.envoy2_Continents = csvGetInt(csv, this.GetHeadIndex("envoy2_Continents"));
        config.envoy2_type = csvGetInt(csv, this.GetHeadIndex("envoy2_type"));
        config.envoy2_age = csvGetInt(csv, this.GetHeadIndex("envoy2_age"));
        config.envoy2_scene = csvGetInt(csv, this.GetHeadIndex("envoy2_scene"));
        config.envoy2_performance = csvGetInt(csv, this.GetHeadIndex("envoy2_performance"));
        config.envoy2_plot = csvGetInt(csv, this.GetHeadIndex("envoy2_plot"));
        config.envoy2_art = csvGetInt(csv, this.GetHeadIndex("envoy2_art"));
        config.envoy2_entertainment = csvGetInt(csv, this.GetHeadIndex("envoy2_entertainment"));
        config.envoy3_sex = csvGetInt(csv, this.GetHeadIndex("envoy3_sex"));
        config.envoy3_Continents = csvGetInt(csv, this.GetHeadIndex("envoy3_Continents"));
        config.envoy3_type = csvGetInt(csv, this.GetHeadIndex("envoy3_type"));
        config.envoy3_age = csvGetInt(csv, this.GetHeadIndex("envoy3_age"));
        config.envoy3_scene = csvGetInt(csv, this.GetHeadIndex("envoy3_scene"));
        config.envoy3_performance = csvGetInt(csv, this.GetHeadIndex("envoy3_performance"));
        config.envoy3_plot = csvGetInt(csv, this.GetHeadIndex("envoy3_plot"));
        config.envoy3_art = csvGetInt(csv, this.GetHeadIndex("envoy3_art"));
        config.envoy3_entertainment = csvGetInt(csv, this.GetHeadIndex("envoy3_entertainment"));
        config.envoy4_sex = csvGetInt(csv, this.GetHeadIndex("envoy4_sex"));
        config.envoy4_Continents = csvGetInt(csv, this.GetHeadIndex("envoy4_Continents"));
        config.envoy4_type = csvGetInt(csv, this.GetHeadIndex("envoy4_type"));
        config.envoy4_age = csvGetInt(csv, this.GetHeadIndex("envoy4_age"));
        config.envoy4_scene = csvGetInt(csv, this.GetHeadIndex("envoy4_scene"));
        config.envoy4_performance = csvGetInt(csv, this.GetHeadIndex("envoy4_performance"));
        config.envoy4_plot = csvGetInt(csv, this.GetHeadIndex("envoy4_plot"));
        config.envoy4_art = csvGetInt(csv, this.GetHeadIndex("envoy4_art"));
        config.envoy4_entertainment = csvGetInt(csv, this.GetHeadIndex("envoy4_entertainment"));
        config.envoy5_sex = csvGetInt(csv, this.GetHeadIndex("envoy5_sex"));
        config.envoy5_Continents = csvGetInt(csv, this.GetHeadIndex("envoy5_Continents"));
        config.envoy5_type = csvGetInt(csv, this.GetHeadIndex("envoy5_type"));
        config.envoy5_age = csvGetInt(csv, this.GetHeadIndex("envoy5_age"));
        config.envoy5_scene = csvGetInt(csv, this.GetHeadIndex("envoy5_scene"));
        config.envoy5_performance = csvGetInt(csv, this.GetHeadIndex("envoy5_performance"));
        config.envoy5_plot = csvGetInt(csv, this.GetHeadIndex("envoy5_plot"));
        config.envoy5_art = csvGetInt(csv, this.GetHeadIndex("envoy5_art"));
        config.envoy5_entertainment = csvGetInt(csv, this.GetHeadIndex("envoy5_entertainment"));
        config.drop_out = toIntArray(csvGetString(csv, this.GetHeadIndex("drop_out")));
        config.random_out = toIntArray(csvGetString(csv, this.GetHeadIndex("random_out")));
        config.order_qua = toIntArray(csvGetString(csv, this.GetHeadIndex("order_qua")));
        config.order_num = csvGetInt(csv, this.GetHeadIndex("order_num"));
        config.expect = csvGetInt(csv, this.GetHeadIndex("expect"));
        config.pre_id = csvGetInt(csv, this.GetHeadIndex("pre_id"));
        config.next_city = csvGetInt(csv, this.GetHeadIndex("next_city"));
        config.cut_scene = csvGetInt(csv, this.GetHeadIndex("cut_scene"));
        config.new_user_guide = csvGetInt(csv, this.GetHeadIndex("new_user_guide"));
        config.country = csvGetInt(csv, this.GetHeadIndex("country"));
        config.popularize_id = csvGetInt(csv, this.GetHeadIndex("popularize_id"));
        this.addConfig(config);
    };
    return CityConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CityConfigReaderStruct;
},{"../ConfigExtends/CityConfig":30,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],476:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CityPopularizeConfig_1 = require("../ConfigExtends/CityPopularizeConfig");
var CityPopularizeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CityPopularizeConfigReaderStruct, _super);
    function CityPopularizeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "CityPopularize";
        return _this;
    }
    CityPopularizeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CityPopularizeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.level_out_3 = csvGetInt(csv, this.GetHeadIndex("level_out_3"));
        config.level_num_3 = csvGetInt(csv, this.GetHeadIndex("level_num_3"));
        config.level_chance_3 = csvGetInt(csv, this.GetHeadIndex("level_chance_3"));
        config.level_out_7 = csvGetInt(csv, this.GetHeadIndex("level_out_7"));
        config.level_num_7 = csvGetInt(csv, this.GetHeadIndex("level_num_7"));
        config.level_chance_7 = csvGetInt(csv, this.GetHeadIndex("level_chance_7"));
        config.level_out_10 = csvGetInt(csv, this.GetHeadIndex("level_out_10"));
        config.level_num_10 = csvGetInt(csv, this.GetHeadIndex("level_num_10"));
        config.level_chance_10 = csvGetInt(csv, this.GetHeadIndex("level_chance_10"));
        config.level_out_15 = csvGetInt(csv, this.GetHeadIndex("level_out_15"));
        config.level_num_15 = csvGetInt(csv, this.GetHeadIndex("level_num_15"));
        config.level_chance_15 = csvGetInt(csv, this.GetHeadIndex("level_chance_15"));
        config.level_out_20 = csvGetInt(csv, this.GetHeadIndex("level_out_20"));
        config.level_num_20 = csvGetInt(csv, this.GetHeadIndex("level_num_20"));
        config.level_chance_20 = csvGetInt(csv, this.GetHeadIndex("level_chance_20"));
        this.addConfig(config);
    };
    return CityPopularizeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CityPopularizeConfigReaderStruct;
},{"../ConfigExtends/CityPopularizeConfig":31,"../CsvConfigRender":304}],477:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CompleteConfig_1 = require("../ConfigExtends/CompleteConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CompleteConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CompleteConfigReaderStruct, _super);
    function CompleteConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Complete";
        return _this;
    }
    CompleteConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CompleteConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.module = csvGetString(csv, this.GetHeadIndex("module"));
        config.completion = csvGetInt(csv, this.GetHeadIndex("completion"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        this.addConfig(config);
    };
    return CompleteConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CompleteConfigReaderStruct;
},{"../ConfigExtends/CompleteConfig":32,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],478:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CompoundConfig_1 = require("../ConfigExtends/CompoundConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CompoundConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CompoundConfigReaderStruct, _super);
    function CompoundConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Compound";
        return _this;
    }
    CompoundConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CompoundConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name_tips = csvGetString(csv, this.GetHeadIndex("name_tips"));
        config.syn_item = csvGetInt(csv, this.GetHeadIndex("syn_item"));
        config.num_req = csvGetInt(csv, this.GetHeadIndex("num_req"));
        config.split_list = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("split_list")));
        this.addConfig(config);
    };
    return CompoundConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CompoundConfigReaderStruct;
},{"../ConfigExtends/CompoundConfig":33,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],479:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CooperateTaskConfig_1 = require("../ConfigExtends/CooperateTaskConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CooperateTaskConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CooperateTaskConfigReaderStruct, _super);
    function CooperateTaskConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "CooperateTask";
        return _this;
    }
    CooperateTaskConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CooperateTaskConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.task_name = csvGetString(csv, this.GetHeadIndex("task_name"));
        config.task_star = csvGetInt(csv, this.GetHeadIndex("task_star"));
        config.task_type = csvGetInt(csv, this.GetHeadIndex("task_type"));
        config.parameter1 = toIntArray(csvGetString(csv, this.GetHeadIndex("parameter1")));
        config.parameter2 = toIntArray(csvGetString(csv, this.GetHeadIndex("parameter2")));
        config.parameter3 = toIntArray(csvGetString(csv, this.GetHeadIndex("parameter3")));
        config.parameter4 = toIntArray(csvGetString(csv, this.GetHeadIndex("parameter4")));
        config.parameter5 = toIntArray(csvGetString(csv, this.GetHeadIndex("parameter5")));
        config.reward_id = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward_id")));
        this.addConfig(config);
    };
    return CooperateTaskConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CooperateTaskConfigReaderStruct;
},{"../ConfigExtends/CooperateTaskConfig":34,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],480:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CountActivitiesConfig_1 = require("../ConfigExtends/CountActivitiesConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CountActivitiesConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CountActivitiesConfigReaderStruct, _super);
    function CountActivitiesConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "CountActivities";
        return _this;
    }
    CountActivitiesConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CountActivitiesConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.count = csvGetInt(csv, this.GetHeadIndex("count"));
        config.special_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("special_reward")));
        config.image = csvGetString(csv, this.GetHeadIndex("image"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return CountActivitiesConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CountActivitiesConfigReaderStruct;
},{"../ConfigExtends/CountActivitiesConfig":35,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],481:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CountryConfig_1 = require("../ConfigExtends/CountryConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CountryConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CountryConfigReaderStruct, _super);
    function CountryConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Country";
        return _this;
    }
    CountryConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CountryConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.number = csvGetInt(csv, this.GetHeadIndex("number"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.city_num = csvGetInt(csv, this.GetHeadIndex("city_num"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.flag = csvGetInt(csv, this.GetHeadIndex("flag"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.pre_id = csvGetInt(csv, this.GetHeadIndex("pre_id"));
        config.next_country = csvGetInt(csv, this.GetHeadIndex("next_country"));
        this.addConfig(config);
    };
    return CountryConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CountryConfigReaderStruct;
},{"../ConfigExtends/CountryConfig":36,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],482:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var CupPackageConfig_1 = require("../ConfigExtends/CupPackageConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var CupPackageConfigReaderStruct = /** @class */ (function (_super) {
    __extends(CupPackageConfigReaderStruct, _super);
    function CupPackageConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "CupPackage";
        return _this;
    }
    CupPackageConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new CupPackageConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_des = csvGetString(csv, this.GetHeadIndex("zh_cn_des"));
        config.target_type = toIntArray(csvGetString(csv, this.GetHeadIndex("target_type")));
        config.target_num = csvGetInt(csv, this.GetHeadIndex("target_num"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.limit_time = csvGetInt(csv, this.GetHeadIndex("limit_time"));
        config.image = csvGetString(csv, this.GetHeadIndex("image"));
        this.addConfig(config);
    };
    return CupPackageConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = CupPackageConfigReaderStruct;
},{"../ConfigExtends/CupPackageConfig":37,"../ConfigExtends/DTItemNum":44,"../CsvConfigRender":304}],483:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var DailySignConfig_1 = require("../ConfigExtends/DailySignConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var DailySignConfigReaderStruct = /** @class */ (function (_super) {
    __extends(DailySignConfigReaderStruct, _super);
    function DailySignConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "DailySign";
        return _this;
    }
    DailySignConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new DailySignConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.cycle = csvGetInt(csv, this.GetHeadIndex("cycle"));
        config.day = csvGetInt(csv, this.GetHeadIndex("day"));
        config.reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("reward")));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return DailySignConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = DailySignConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/DailySignConfig":54,"../CsvConfigRender":304}],484:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var DailySignTrailerConfig_1 = require("../ConfigExtends/DailySignTrailerConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var DailySignTrailerConfigReaderStruct = /** @class */ (function (_super) {
    __extends(DailySignTrailerConfigReaderStruct, _super);
    function DailySignTrailerConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "DailySignTrailer";
        return _this;
    }
    DailySignTrailerConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new DailySignTrailerConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.day = csvGetInt(csv, this.GetHeadIndex("day"));
        config.reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("reward")));
        config.zh_cn_info = csvGetString(csv, this.GetHeadIndex("zh_cn_info"));
        this.addConfig(config);
    };
    return DailySignTrailerConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = DailySignTrailerConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/DailySignTrailerConfig":55,"../CsvConfigRender":304}],485:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var DialogueConfig_1 = require("../ConfigExtends/DialogueConfig");
var DialogueConfigReaderStruct = /** @class */ (function (_super) {
    __extends(DialogueConfigReaderStruct, _super);
    function DialogueConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Dialogue";
        return _this;
    }
    DialogueConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new DialogueConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.face = csvGetInt(csv, this.GetHeadIndex("face"));
        config.zh_cn_content = csvGetString(csv, this.GetHeadIndex("zh_cn_content"));
        this.addConfig(config);
    };
    return DialogueConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = DialogueConfigReaderStruct;
},{"../ConfigExtends/DialogueConfig":56,"../CsvConfigRender":304}],486:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var EventConfig_1 = require("../ConfigExtends/EventConfig");
var DTPerformActoin_1 = require("../ConfigExtends/DTPerformActoin");
var DTPerformSpeak_1 = require("../ConfigExtends/DTPerformSpeak");
var EventConfigReaderStruct = /** @class */ (function (_super) {
    __extends(EventConfigReaderStruct, _super);
    function EventConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Event";
        return _this;
    }
    EventConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new EventConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.model = csvGetInt(csv, this.GetHeadIndex("model"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.action = DTPerformActoin_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("action")));
        config.speak = DTPerformSpeak_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("speak")));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return EventConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = EventConfigReaderStruct;
},{"../ConfigExtends/DTPerformActoin":46,"../ConfigExtends/DTPerformSpeak":47,"../ConfigExtends/EventConfig":57,"../CsvConfigRender":304}],487:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var FloorConfig_1 = require("../ConfigExtends/FloorConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var FloorConfigReaderStruct = /** @class */ (function (_super) {
    __extends(FloorConfigReaderStruct, _super);
    function FloorConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Floor";
        return _this;
    }
    FloorConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new FloorConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.level_req = csvGetInt(csv, this.GetHeadIndex("level_req"));
        config.city_req = csvGetInt(csv, this.GetHeadIndex("city_req"));
        this.addConfig(config);
    };
    return FloorConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = FloorConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/FloorConfig":58,"../CsvConfigRender":304}],488:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GameLevelConfig_1 = require("../ConfigExtends/GameLevelConfig");
var GameLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GameLevelConfigReaderStruct, _super);
    function GameLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "GameLevel";
        return _this;
    }
    GameLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GameLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.stall = csvGetInt(csv, this.GetHeadIndex("stall"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.pre_id = csvGetInt(csv, this.GetHeadIndex("pre_id"));
        config.next_level = csvGetInt(csv, this.GetHeadIndex("next_level"));
        this.addConfig(config);
    };
    return GameLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GameLevelConfigReaderStruct;
},{"../ConfigExtends/GameLevelConfig":59,"../CsvConfigRender":304}],489:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GameRandomNameConfig_1 = require("../ConfigExtends/GameRandomNameConfig");
var GameRandomNameConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GameRandomNameConfigReaderStruct, _super);
    function GameRandomNameConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "GameRandomName";
        return _this;
    }
    GameRandomNameConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GameRandomNameConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.zh_cn_names = toStringArray(csvGetString(csv, this.GetHeadIndex("zh_cn_names")));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return GameRandomNameConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GameRandomNameConfigReaderStruct;
},{"../ConfigExtends/GameRandomNameConfig":60,"../CsvConfigRender":304}],490:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GameVersionConfig_1 = require("../ConfigExtends/GameVersionConfig");
var GameVersionConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GameVersionConfigReaderStruct, _super);
    function GameVersionConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "GameVersion";
        return _this;
    }
    GameVersionConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GameVersionConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.Platform = csvGetString(csv, this.GetHeadIndex("Platform"));
        config.ApplicationId = csvGetString(csv, this.GetHeadIndex("ApplicationId"));
        config.ResWeb = csvGetString(csv, this.GetHeadIndex("ResWeb"));
        config.AppVersion = csvGetString(csv, this.GetHeadIndex("AppVersion"));
        config.PartialVersion = csvGetString(csv, this.GetHeadIndex("PartialVersion"));
        config.PartialFolder = csvGetString(csv, this.GetHeadIndex("PartialFolder"));
        config.PatchVersion = csvGetString(csv, this.GetHeadIndex("PatchVersion"));
        config.PatchFolder = csvGetString(csv, this.GetHeadIndex("PatchFolder"));
        config.IsPartialAlert = csvGetBoolean(csv, this.GetHeadIndex("IsPartialAlert"));
        config.IsPatchAlert = csvGetBoolean(csv, this.GetHeadIndex("IsPatchAlert"));
        config.VisiableGM = csvGetBoolean(csv, this.GetHeadIndex("VisiableGM"));
        config.IsErrorAlert = csvGetBoolean(csv, this.GetHeadIndex("IsErrorAlert"));
        config.AppDownloadWeb = csvGetString(csv, this.GetHeadIndex("AppDownloadWeb"));
        this.addConfig(config);
    };
    return GameVersionConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GameVersionConfigReaderStruct;
},{"../ConfigExtends/GameVersionConfig":61,"../CsvConfigRender":304}],491:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GiftPackageConfig_1 = require("../ConfigExtends/GiftPackageConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var GiftPackageConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GiftPackageConfigReaderStruct, _super);
    function GiftPackageConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "GiftPackage";
        return _this;
    }
    GiftPackageConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GiftPackageConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.plat = csvGetInt(csv, this.GetHeadIndex("plat"));
        config.country = csvGetInt(csv, this.GetHeadIndex("country"));
        config.gift = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("gift")));
        config.cn = csvGetString(csv, this.GetHeadIndex("cn"));
        this.addConfig(config);
    };
    return GiftPackageConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GiftPackageConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/GiftPackageConfig":62,"../CsvConfigRender":304}],492:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GlobalConfig_1 = require("../ConfigExtends/GlobalConfig");
var DTlValue2_1 = require("../ConfigExtends/DTlValue2");
var DTlValue3_1 = require("../ConfigExtends/DTlValue3");
var DTPerformActoin_1 = require("../ConfigExtends/DTPerformActoin");
var GlobalConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GlobalConfigReaderStruct, _super);
    function GlobalConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Global";
        return _this;
    }
    GlobalConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GlobalConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.value = csvGetInt(csv, this.GetHeadIndex("value"));
        config.value4 = csvGetString(csv, this.GetHeadIndex("value4"));
        config.value1 = toIntArray(csvGetString(csv, this.GetHeadIndex("value1")));
        config.value2 = DTlValue2_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("value2")));
        config.value3 = DTlValue3_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("value3")));
        config.value5 = DTPerformActoin_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("value5")));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return GlobalConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GlobalConfigReaderStruct;
},{"../ConfigExtends/DTPerformActoin":46,"../ConfigExtends/DTlValue2":52,"../ConfigExtends/DTlValue3":53,"../ConfigExtends/GlobalConfig":63,"../CsvConfigRender":304}],493:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GuidePathConfig_1 = require("../ConfigExtends/GuidePathConfig");
var GuidePathConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GuidePathConfigReaderStruct, _super);
    function GuidePathConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "GuidePath";
        return _this;
    }
    GuidePathConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GuidePathConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.find_ui_type = csvGetInt(csv, this.GetHeadIndex("find_ui_type"));
        config.menuid = csvGetInt(csv, this.GetHeadIndex("menuid"));
        config.path = csvGetString(csv, this.GetHeadIndex("path"));
        config.list_path = csvGetString(csv, this.GetHeadIndex("list_path"));
        config.sub_id = csvGetInt(csv, this.GetHeadIndex("sub_id"));
        config.list_index = csvGetInt(csv, this.GetHeadIndex("list_index"));
        config.add_btn = csvGetInt(csv, this.GetHeadIndex("add_btn"));
        config.tip = csvGetString(csv, this.GetHeadIndex("tip"));
        this.addConfig(config);
    };
    return GuidePathConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GuidePathConfigReaderStruct;
},{"../ConfigExtends/GuidePathConfig":64,"../CsvConfigRender":304}],494:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var GuidesystemConfig_1 = require("../ConfigExtends/GuidesystemConfig");
var DTVector2_1 = require("../ConfigExtends/DTVector2");
var GuidesystemConfigReaderStruct = /** @class */ (function (_super) {
    __extends(GuidesystemConfigReaderStruct, _super);
    function GuidesystemConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Guidesystem";
        return _this;
    }
    GuidesystemConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new GuidesystemConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.group = csvGetInt(csv, this.GetHeadIndex("group"));
        config.order = csvGetInt(csv, this.GetHeadIndex("order"));
        config.finish_type = csvGetInt(csv, this.GetHeadIndex("finish_type"));
        config.finish_value_1 = csvGetInt(csv, this.GetHeadIndex("finish_value_1"));
        config.finish_value_2 = csvGetInt(csv, this.GetHeadIndex("finish_value_2"));
        config.trigger_type = csvGetInt(csv, this.GetHeadIndex("trigger_type"));
        config.trigger_value = csvGetInt(csv, this.GetHeadIndex("trigger_value"));
        config.break_guide = csvGetInt(csv, this.GetHeadIndex("break_guide"));
        config.next_guide = csvGetInt(csv, this.GetHeadIndex("next_guide"));
        config.path_id = csvGetInt(csv, this.GetHeadIndex("path_id"));
        config.path_par1 = csvGetInt(csv, this.GetHeadIndex("path_par1"));
        config.assistant = csvGetBoolean(csv, this.GetHeadIndex("assistant"));
        config.position = DTVector2_1.default.parse(csvGetString(csv, this.GetHeadIndex("position")));
        config.cn_content = csvGetString(csv, this.GetHeadIndex("cn_content"));
        config.en_content = csvGetString(csv, this.GetHeadIndex("en_content"));
        config.f_direction = csvGetInt(csv, this.GetHeadIndex("f_direction"));
        config.halo = csvGetBoolean(csv, this.GetHeadIndex("halo"));
        config.radius = csvGetInt(csv, this.GetHeadIndex("radius"));
        config.storyline = csvGetBoolean(csv, this.GetHeadIndex("storyline"));
        config.storyline_id = csvGetInt(csv, this.GetHeadIndex("storyline_id"));
        config.force = csvGetBoolean(csv, this.GetHeadIndex("force"));
        config.stay = csvGetBoolean(csv, this.GetHeadIndex("stay"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.tips2 = csvGetString(csv, this.GetHeadIndex("tips2"));
        this.addConfig(config);
    };
    return GuidesystemConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = GuidesystemConfigReaderStruct;
},{"../ConfigExtends/DTVector2":51,"../ConfigExtends/GuidesystemConfig":65,"../CsvConfigRender":304}],495:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var HeadPortraitConfig_1 = require("../ConfigExtends/HeadPortraitConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var HeadPortraitConfigReaderStruct = /** @class */ (function (_super) {
    __extends(HeadPortraitConfigReaderStruct, _super);
    function HeadPortraitConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "HeadPortrait";
        return _this;
    }
    HeadPortraitConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new HeadPortraitConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.sex = csvGetInt(csv, this.GetHeadIndex("sex"));
        config.unlock = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("unlock")));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        this.addConfig(config);
    };
    return HeadPortraitConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = HeadPortraitConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/HeadPortraitConfig":66,"../CsvConfigRender":304}],496:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ImageConfig_1 = require("../ConfigExtends/ImageConfig");
var ImageConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ImageConfigReaderStruct, _super);
    function ImageConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Image";
        return _this;
    }
    ImageConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ImageConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.tip = csvGetString(csv, this.GetHeadIndex("tip"));
        this.addConfig(config);
    };
    return ImageConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ImageConfigReaderStruct;
},{"../ConfigExtends/ImageConfig":67,"../CsvConfigRender":304}],497:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var InitialActorConfig_1 = require("../ConfigExtends/InitialActorConfig");
var InitialActorConfigReaderStruct = /** @class */ (function (_super) {
    __extends(InitialActorConfigReaderStruct, _super);
    function InitialActorConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "InitialActor";
        return _this;
    }
    InitialActorConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new InitialActorConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.actor_id = csvGetInt(csv, this.GetHeadIndex("actor_id"));
        this.addConfig(config);
    };
    return InitialActorConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = InitialActorConfigReaderStruct;
},{"../ConfigExtends/InitialActorConfig":68,"../CsvConfigRender":304}],498:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ItemConfig_1 = require("../ConfigExtends/ItemConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ItemConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ItemConfigReaderStruct, _super);
    function ItemConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Item";
        return _this;
    }
    ItemConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ItemConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_item_des = csvGetString(csv, this.GetHeadIndex("zh_cn_item_des"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.star = csvGetInt(csv, this.GetHeadIndex("star"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.max_num = csvGetInt(csv, this.GetHeadIndex("max_num"));
        config.get_way = toIntArray(csvGetString(csv, this.GetHeadIndex("get_way")));
        config.can_use = csvGetBoolean(csv, this.GetHeadIndex("can_use"));
        config.use_type = csvGetInt(csv, this.GetHeadIndex("use_type"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.can_sell = csvGetBoolean(csv, this.GetHeadIndex("can_sell"));
        config.price = csvGetInt(csv, this.GetHeadIndex("price"));
        config.syn_id = csvGetInt(csv, this.GetHeadIndex("syn_id"));
        config.actor_id = csvGetInt(csv, this.GetHeadIndex("actor_id"));
        config.actor_num = csvGetInt(csv, this.GetHeadIndex("actor_num"));
        config.zh_cn_get_way_explain = csvGetString(csv, this.GetHeadIndex("zh_cn_get_way_explain"));
        config.User_item_info = csvGetInt(csv, this.GetHeadIndex("User_item_info"));
        this.addConfig(config);
    };
    return ItemConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ItemConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/ItemConfig":69,"../CsvConfigRender":304}],499:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var LanguageTypeConfig_1 = require("../ConfigExtends/LanguageTypeConfig");
var LanguageTypeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(LanguageTypeConfigReaderStruct, _super);
    function LanguageTypeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "LanguageType";
        return _this;
    }
    LanguageTypeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new LanguageTypeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetString(csv, this.GetHeadIndex("type"));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        config.value = csvGetString(csv, this.GetHeadIndex("value"));
        config.languageswitch = csvGetInt(csv, this.GetHeadIndex("languageswitch"));
        this.addConfig(config);
    };
    return LanguageTypeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = LanguageTypeConfigReaderStruct;
},{"../ConfigExtends/LanguageTypeConfig":70,"../CsvConfigRender":304}],500:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var LevelGiftPackageConfig_1 = require("../ConfigExtends/LevelGiftPackageConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var LevelGiftPackageConfigReaderStruct = /** @class */ (function (_super) {
    __extends(LevelGiftPackageConfigReaderStruct, _super);
    function LevelGiftPackageConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "LevelGiftPackage";
        return _this;
    }
    LevelGiftPackageConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new LevelGiftPackageConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.player_level = csvGetInt(csv, this.GetHeadIndex("player_level"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.next_id = csvGetInt(csv, this.GetHeadIndex("next_id"));
        config.image = csvGetString(csv, this.GetHeadIndex("image"));
        this.addConfig(config);
    };
    return LevelGiftPackageConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = LevelGiftPackageConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/LevelGiftPackageConfig":71,"../CsvConfigRender":304}],501:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var LimitActorConfig_1 = require("../ConfigExtends/LimitActorConfig");
var LimitActorConfigReaderStruct = /** @class */ (function (_super) {
    __extends(LimitActorConfigReaderStruct, _super);
    function LimitActorConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "LimitActor";
        return _this;
    }
    LimitActorConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new LimitActorConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.lv = csvGetInt(csv, this.GetHeadIndex("lv"));
        config.Asset_type_num_1 = csvGetInt(csv, this.GetHeadIndex("Asset_type_num_1"));
        config.Asset_type_num_2 = csvGetInt(csv, this.GetHeadIndex("Asset_type_num_2"));
        config.Asset_type_num_3 = csvGetInt(csv, this.GetHeadIndex("Asset_type_num_3"));
        config.Asset_type_num_4 = csvGetInt(csv, this.GetHeadIndex("Asset_type_num_4"));
        config.time_limit = csvGetInt(csv, this.GetHeadIndex("time_limit"));
        this.addConfig(config);
    };
    return LimitActorConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = LimitActorConfigReaderStruct;
},{"../ConfigExtends/LimitActorConfig":72,"../CsvConfigRender":304}],502:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var LoaderConfig_1 = require("../ConfigExtends/LoaderConfig");
var LoaderConfigReaderStruct = /** @class */ (function (_super) {
    __extends(LoaderConfigReaderStruct, _super);
    function LoaderConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Loader";
        return _this;
    }
    LoaderConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new LoaderConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.isShowCircle = csvGetBoolean(csv, this.GetHeadIndex("isShowCircle"));
        this.addConfig(config);
    };
    return LoaderConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = LoaderConfigReaderStruct;
},{"../ConfigExtends/LoaderConfig":73,"../CsvConfigRender":304}],503:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var LoadingConfig_1 = require("../ConfigExtends/LoadingConfig");
var LoadingConfigReaderStruct = /** @class */ (function (_super) {
    __extends(LoadingConfigReaderStruct, _super);
    function LoadingConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Loading";
        return _this;
    }
    LoadingConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new LoadingConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.text = csvGetString(csv, this.GetHeadIndex("text"));
        this.addConfig(config);
    };
    return LoadingConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = LoadingConfigReaderStruct;
},{"../ConfigExtends/LoadingConfig":74,"../CsvConfigRender":304}],504:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MailConfig_1 = require("../ConfigExtends/MailConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var MailConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MailConfigReaderStruct, _super);
    function MailConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Mail";
        return _this;
    }
    MailConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MailConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.tip = csvGetString(csv, this.GetHeadIndex("tip"));
        config.life_time = csvGetInt(csv, this.GetHeadIndex("life_time"));
        config.zh_cn_title = csvGetString(csv, this.GetHeadIndex("zh_cn_title"));
        config.en_title = csvGetString(csv, this.GetHeadIndex("en_title"));
        config.zh_tw_title = csvGetString(csv, this.GetHeadIndex("zh_tw_title"));
        config.item = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("item")));
        config.zh_cn_content = csvGetString(csv, this.GetHeadIndex("zh_cn_content"));
        config.en_content = csvGetString(csv, this.GetHeadIndex("en_content"));
        config.zh_tw_content = csvGetString(csv, this.GetHeadIndex("zh_tw_content"));
        this.addConfig(config);
    };
    return MailConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MailConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/MailConfig":75,"../CsvConfigRender":304}],505:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MaintaskConfig_1 = require("../ConfigExtends/MaintaskConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var MaintaskConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MaintaskConfigReaderStruct, _super);
    function MaintaskConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Maintask";
        return _this;
    }
    MaintaskConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MaintaskConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.cn_name = csvGetString(csv, this.GetHeadIndex("cn_name"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.trigger = csvGetInt(csv, this.GetHeadIndex("trigger"));
        config.t_value = csvGetInt(csv, this.GetHeadIndex("t_value"));
        config.require = csvGetInt(csv, this.GetHeadIndex("require"));
        config.r_value = csvGetInt(csv, this.GetHeadIndex("r_value"));
        config.s_r_value = csvGetInt(csv, this.GetHeadIndex("s_r_value"));
        config.goal = csvGetInt(csv, this.GetHeadIndex("goal"));
        config.cn_info = csvGetString(csv, this.GetHeadIndex("cn_info"));
        config.en_info = csvGetString(csv, this.GetHeadIndex("en_info"));
        config.cn_cinfo = csvGetString(csv, this.GetHeadIndex("cn_cinfo"));
        config.en_cinfo = csvGetString(csv, this.GetHeadIndex("en_cinfo"));
        config.cn_content = csvGetString(csv, this.GetHeadIndex("cn_content"));
        config.en_content = csvGetString(csv, this.GetHeadIndex("en_content"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.pre_quest = csvGetInt(csv, this.GetHeadIndex("pre_quest"));
        config.guide = csvGetBoolean(csv, this.GetHeadIndex("guide"));
        config.guide_id = csvGetInt(csv, this.GetHeadIndex("guide_id"));
        this.addConfig(config);
    };
    return MaintaskConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MaintaskConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/MaintaskConfig":76,"../CsvConfigRender":304}],506:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MeetingGameConfig_1 = require("../ConfigExtends/MeetingGameConfig");
var DTlValue2_1 = require("../ConfigExtends/DTlValue2");
var MeetingGameConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MeetingGameConfigReaderStruct, _super);
    function MeetingGameConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MeetingGame";
        return _this;
    }
    MeetingGameConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MeetingGameConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetString(csv, this.GetHeadIndex("type"));
        config.result = csvGetInt(csv, this.GetHeadIndex("result"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.times = DTlValue2_1.default.parse(csvGetString(csv, this.GetHeadIndex("times")));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return MeetingGameConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MeetingGameConfigReaderStruct;
},{"../ConfigExtends/DTlValue2":52,"../ConfigExtends/MeetingGameConfig":77,"../CsvConfigRender":304}],507:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MeetingRewardsConfig_1 = require("../ConfigExtends/MeetingRewardsConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var MeetingRewardsConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MeetingRewardsConfigReaderStruct, _super);
    function MeetingRewardsConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MeetingRewards";
        return _this;
    }
    MeetingRewardsConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MeetingRewardsConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.rewards = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("rewards")));
        config.expect = csvGetInt(csv, this.GetHeadIndex("expect"));
        config.rate = csvGetInt(csv, this.GetHeadIndex("rate"));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return MeetingRewardsConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MeetingRewardsConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/MeetingRewardsConfig":78,"../CsvConfigRender":304}],508:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MenuConfig_1 = require("../ConfigExtends/MenuConfig");
var MenuConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MenuConfigReaderStruct, _super);
    function MenuConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Menu";
        return _this;
    }
    MenuConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MenuConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.moduleName = csvGetString(csv, this.GetHeadIndex("moduleName"));
        config.layer = csvGetInt(csv, this.GetHeadIndex("layer"));
        config.closeOtherType = csvGetInt(csv, this.GetHeadIndex("closeOtherType"));
        config.closeHomeWindow = csvGetBoolean(csv, this.GetHeadIndex("closeHomeWindow"));
        config.isAutoOpenHomeWindow = csvGetBoolean(csv, this.GetHeadIndex("isAutoOpenHomeWindow"));
        config.cacheTime = csvGetInt(csv, this.GetHeadIndex("cacheTime"));
        config.loaderId = csvGetInt(csv, this.GetHeadIndex("loaderId"));
        config.barType = csvGetInt(csv, this.GetHeadIndex("barType"));
        config.barIndex = csvGetInt(csv, this.GetHeadIndex("barIndex"));
        config.openAnimation = csvGetInt(csv, this.GetHeadIndex("openAnimation"));
        config.closeAnimation = csvGetInt(csv, this.GetHeadIndex("closeAnimation"));
        this.addConfig(config);
    };
    return MenuConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MenuConfigReaderStruct;
},{"../ConfigExtends/MenuConfig":79,"../CsvConfigRender":304}],509:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MenuIndexConfig_1 = require("../ConfigExtends/MenuIndexConfig");
var MenuIndexConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MenuIndexConfigReaderStruct, _super);
    function MenuIndexConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MenuIndex";
        return _this;
    }
    MenuIndexConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MenuIndexConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.menuId = csvGetInt(csv, this.GetHeadIndex("menuId"));
        config.openType = csvGetInt(csv, this.GetHeadIndex("openType"));
        config.menuIndex = csvGetInt(csv, this.GetHeadIndex("menuIndex"));
        this.addConfig(config);
    };
    return MenuIndexConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MenuIndexConfigReaderStruct;
},{"../ConfigExtends/MenuIndexConfig":80,"../CsvConfigRender":304}],510:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MonthCardConfig_1 = require("../ConfigExtends/MonthCardConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var MonthCardConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MonthCardConfigReaderStruct, _super);
    function MonthCardConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MonthCard";
        return _this;
    }
    MonthCardConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MonthCardConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.serial = csvGetInt(csv, this.GetHeadIndex("serial"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.actor = csvGetInt(csv, this.GetHeadIndex("actor"));
        config.daily_gift_resource = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("daily_gift_resource")));
        config.daily_gift_contract1 = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("daily_gift_contract1")));
        config.daily_gift_contract2 = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("daily_gift_contract2")));
        config.gift_crystal = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("gift_crystal")));
        config.gift_item = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("gift_item")));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return MonthCardConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MonthCardConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/MonthCardConfig":81,"../CsvConfigRender":304}],511:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieAdaptationMsgConfig_1 = require("../ConfigExtends/MovieAdaptationMsgConfig");
var MovieAdaptationMsgConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieAdaptationMsgConfigReaderStruct, _super);
    function MovieAdaptationMsgConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieAdaptationMsg";
        return _this;
    }
    MovieAdaptationMsgConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieAdaptationMsgConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.adaptation_min = csvGetInt(csv, this.GetHeadIndex("adaptation_min"));
        config.adaptation_max = csvGetInt(csv, this.GetHeadIndex("adaptation_max"));
        config.zh_cn_msg1 = csvGetString(csv, this.GetHeadIndex("zh_cn_msg1"));
        config.zh_cn_msg2 = csvGetString(csv, this.GetHeadIndex("zh_cn_msg2"));
        config.zh_cn_msg3 = csvGetString(csv, this.GetHeadIndex("zh_cn_msg3"));
        this.addConfig(config);
    };
    return MovieAdaptationMsgConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieAdaptationMsgConfigReaderStruct;
},{"../ConfigExtends/MovieAdaptationMsgConfig":82,"../CsvConfigRender":304}],512:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieAudienceEvaluationConfig_1 = require("../ConfigExtends/MovieAudienceEvaluationConfig");
var MovieAudienceEvaluationConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieAudienceEvaluationConfigReaderStruct, _super);
    function MovieAudienceEvaluationConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieAudienceEvaluation";
        return _this;
    }
    MovieAudienceEvaluationConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieAudienceEvaluationConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.sex = csvGetInt(csv, this.GetHeadIndex("sex"));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.min_score = csvGetFloat(csv, this.GetHeadIndex("min_score"));
        config.max_score = csvGetFloat(csv, this.GetHeadIndex("max_score"));
        config.zh_cn_content = csvGetString(csv, this.GetHeadIndex("zh_cn_content"));
        this.addConfig(config);
    };
    return MovieAudienceEvaluationConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieAudienceEvaluationConfigReaderStruct;
},{"../ConfigExtends/MovieAudienceEvaluationConfig":83,"../CsvConfigRender":304}],513:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieDropConfig_1 = require("../ConfigExtends/MovieDropConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var MovieDropConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieDropConfigReaderStruct, _super);
    function MovieDropConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieDrop";
        return _this;
    }
    MovieDropConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieDropConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.gain_level = csvGetInt(csv, this.GetHeadIndex("gain_level"));
        config.zh_cn_gain_name = csvGetString(csv, this.GetHeadIndex("zh_cn_gain_name"));
        config.gain_pic = csvGetInt(csv, this.GetHeadIndex("gain_pic"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.order_num = csvGetInt(csv, this.GetHeadIndex("order_num"));
        config.oreder_qua = toIntArray(csvGetString(csv, this.GetHeadIndex("oreder_qua")));
        config.expect = csvGetInt(csv, this.GetHeadIndex("expect"));
        config.fixed_drop = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("fixed_drop")));
        config.drop_num = csvGetInt(csv, this.GetHeadIndex("drop_num"));
        config.drop_item = toIntArray(csvGetString(csv, this.GetHeadIndex("drop_item")));
        config.item_num = toIntArray(csvGetString(csv, this.GetHeadIndex("item_num")));
        config.base_fans = csvGetInt(csv, this.GetHeadIndex("base_fans"));
        this.addConfig(config);
    };
    return MovieDropConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieDropConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/MovieDropConfig":84,"../CsvConfigRender":304}],514:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieExpectConfig_1 = require("../ConfigExtends/MovieExpectConfig");
var MovieExpectConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieExpectConfigReaderStruct, _super);
    function MovieExpectConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieExpect";
        return _this;
    }
    MovieExpectConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieExpectConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.expect_req_min = csvGetInt(csv, this.GetHeadIndex("expect_req_min"));
        config.expect_req_max = csvGetInt(csv, this.GetHeadIndex("expect_req_max"));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        config.gain_up = csvGetInt(csv, this.GetHeadIndex("gain_up"));
        config.zh_cn_pic_word = csvGetString(csv, this.GetHeadIndex("zh_cn_pic_word"));
        this.addConfig(config);
    };
    return MovieExpectConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieExpectConfigReaderStruct;
},{"../ConfigExtends/MovieExpectConfig":85,"../CsvConfigRender":304}],515:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieLicenceConfig_1 = require("../ConfigExtends/MovieLicenceConfig");
var MovieLicenceConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieLicenceConfigReaderStruct, _super);
    function MovieLicenceConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieLicence";
        return _this;
    }
    MovieLicenceConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieLicenceConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.cool_down = csvGetInt(csv, this.GetHeadIndex("cool_down"));
        this.addConfig(config);
    };
    return MovieLicenceConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieLicenceConfigReaderStruct;
},{"../ConfigExtends/MovieLicenceConfig":86,"../CsvConfigRender":304}],516:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieMediaVisitConfig_1 = require("../ConfigExtends/MovieMediaVisitConfig");
var MovieMediaVisitConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieMediaVisitConfigReaderStruct, _super);
    function MovieMediaVisitConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieMediaVisit";
        return _this;
    }
    MovieMediaVisitConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieMediaVisitConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.mediaId = csvGetInt(csv, this.GetHeadIndex("mediaId"));
        config.level = csvGetInt(csv, this.GetHeadIndex("level"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.levelup_req = csvGetInt(csv, this.GetHeadIndex("levelup_req"));
        config.cost_id = csvGetInt(csv, this.GetHeadIndex("cost_id"));
        config.cost_num = csvGetInt(csv, this.GetHeadIndex("cost_num"));
        config.min_expection = csvGetInt(csv, this.GetHeadIndex("min_expection"));
        config.max_expection = csvGetInt(csv, this.GetHeadIndex("max_expection"));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        this.addConfig(config);
    };
    return MovieMediaVisitConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieMediaVisitConfigReaderStruct;
},{"../ConfigExtends/MovieMediaVisitConfig":87,"../CsvConfigRender":304}],517:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieMidiaEvaluationConfig_1 = require("../ConfigExtends/MovieMidiaEvaluationConfig");
var MovieMidiaEvaluationConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationConfigReaderStruct, _super);
    function MovieMidiaEvaluationConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieMidiaEvaluation";
        return _this;
    }
    MovieMidiaEvaluationConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieMidiaEvaluationConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.media_id = csvGetInt(csv, this.GetHeadIndex("media_id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_commentators = csvGetString(csv, this.GetHeadIndex("zh_cn_commentators"));
        config.min_score = csvGetFloat(csv, this.GetHeadIndex("min_score"));
        config.max_score = csvGetFloat(csv, this.GetHeadIndex("max_score"));
        config.zh_cn_content = csvGetString(csv, this.GetHeadIndex("zh_cn_content"));
        config.praise = toIntArray(csvGetString(csv, this.GetHeadIndex("praise")));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        this.addConfig(config);
    };
    return MovieMidiaEvaluationConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieMidiaEvaluationConfigReaderStruct;
},{"../ConfigExtends/MovieMidiaEvaluationConfig":88,"../CsvConfigRender":304}],518:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieMidiaEvaluationMsgConfig_1 = require("../ConfigExtends/MovieMidiaEvaluationMsgConfig");
var MovieMidiaEvaluationMsgConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieMidiaEvaluationMsgConfigReaderStruct, _super);
    function MovieMidiaEvaluationMsgConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieMidiaEvaluationMsg";
        return _this;
    }
    MovieMidiaEvaluationMsgConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieMidiaEvaluationMsgConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.score_min = csvGetInt(csv, this.GetHeadIndex("score_min"));
        config.scor_max = csvGetInt(csv, this.GetHeadIndex("scor_max"));
        config.zh_cn_msg = csvGetString(csv, this.GetHeadIndex("zh_cn_msg"));
        this.addConfig(config);
    };
    return MovieMidiaEvaluationMsgConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieMidiaEvaluationMsgConfigReaderStruct;
},{"../ConfigExtends/MovieMidiaEvaluationMsgConfig":89,"../CsvConfigRender":304}],519:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MoviePopularizeConfig_1 = require("../ConfigExtends/MoviePopularizeConfig");
var MoviePopularizeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MoviePopularizeConfigReaderStruct, _super);
    function MoviePopularizeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MoviePopularize";
        return _this;
    }
    MoviePopularizeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MoviePopularizeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.cost_id = csvGetInt(csv, this.GetHeadIndex("cost_id"));
        config.cost_num = csvGetInt(csv, this.GetHeadIndex("cost_num"));
        config.increase = csvGetFloat(csv, this.GetHeadIndex("increase"));
        this.addConfig(config);
    };
    return MoviePopularizeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MoviePopularizeConfigReaderStruct;
},{"../ConfigExtends/MoviePopularizeConfig":90,"../CsvConfigRender":304}],520:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MovieShootTypeConfig_1 = require("../ConfigExtends/MovieShootTypeConfig");
var MovieShootTypeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MovieShootTypeConfigReaderStruct, _super);
    function MovieShootTypeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MovieShootType";
        return _this;
    }
    MovieShootTypeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MovieShootTypeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_type_des = csvGetString(csv, this.GetHeadIndex("zh_cn_type_des"));
        config.item_id = csvGetInt(csv, this.GetHeadIndex("item_id"));
        config.item_num = csvGetInt(csv, this.GetHeadIndex("item_num"));
        config.pic = csvGetInt(csv, this.GetHeadIndex("pic"));
        this.addConfig(config);
    };
    return MovieShootTypeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MovieShootTypeConfigReaderStruct;
},{"../ConfigExtends/MovieShootTypeConfig":91,"../CsvConfigRender":304}],521:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MsgChatConfig_1 = require("../ConfigExtends/MsgChatConfig");
var DTlValue2_1 = require("../ConfigExtends/DTlValue2");
var MsgChatConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MsgChatConfigReaderStruct, _super);
    function MsgChatConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MsgChat";
        return _this;
    }
    MsgChatConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MsgChatConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        config.zh_cn_notice = csvGetString(csv, this.GetHeadIndex("zh_cn_notice"));
        config.parameter = DTlValue2_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("parameter")));
        config.popup = DTlValue2_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("popup")));
        this.addConfig(config);
    };
    return MsgChatConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MsgChatConfigReaderStruct;
},{"../ConfigExtends/DTlValue2":52,"../ConfigExtends/MsgChatConfig":92,"../CsvConfigRender":304}],522:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MsgConfig_1 = require("../ConfigExtends/MsgConfig");
var MsgConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MsgConfigReaderStruct, _super);
    function MsgConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Msg";
        return _this;
    }
    MsgConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MsgConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.module = csvGetString(csv, this.GetHeadIndex("module"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.zh_cn_notice = csvGetString(csv, this.GetHeadIndex("zh_cn_notice"));
        config.en_notice = csvGetString(csv, this.GetHeadIndex("en_notice"));
        this.addConfig(config);
    };
    return MsgConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MsgConfigReaderStruct;
},{"../ConfigExtends/MsgConfig":93,"../CsvConfigRender":304}],523:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var MsgProtoErrorConfig_1 = require("../ConfigExtends/MsgProtoErrorConfig");
var MsgProtoErrorConfigReaderStruct = /** @class */ (function (_super) {
    __extends(MsgProtoErrorConfigReaderStruct, _super);
    function MsgProtoErrorConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "MsgProtoError";
        return _this;
    }
    MsgProtoErrorConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new MsgProtoErrorConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.module = csvGetString(csv, this.GetHeadIndex("module"));
        config.zh_cn_notice = csvGetString(csv, this.GetHeadIndex("zh_cn_notice"));
        this.addConfig(config);
    };
    return MsgProtoErrorConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = MsgProtoErrorConfigReaderStruct;
},{"../ConfigExtends/MsgProtoErrorConfig":94,"../CsvConfigRender":304}],524:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var NpcConfig_1 = require("../ConfigExtends/NpcConfig");
var NpcConfigReaderStruct = /** @class */ (function (_super) {
    __extends(NpcConfigReaderStruct, _super);
    function NpcConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Npc";
        return _this;
    }
    NpcConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new NpcConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.cn_name = csvGetString(csv, this.GetHeadIndex("cn_name"));
        config.sex = csvGetInt(csv, this.GetHeadIndex("sex"));
        config.avatar = csvGetInt(csv, this.GetHeadIndex("avatar"));
        this.addConfig(config);
    };
    return NpcConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = NpcConfigReaderStruct;
},{"../ConfigExtends/NpcConfig":95,"../CsvConfigRender":304}],525:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var OperationTasksConfig_1 = require("../ConfigExtends/OperationTasksConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var OperationTasksConfigReaderStruct = /** @class */ (function (_super) {
    __extends(OperationTasksConfigReaderStruct, _super);
    function OperationTasksConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "OperationTasks";
        return _this;
    }
    OperationTasksConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new OperationTasksConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.starttime = csvGetInt(csv, this.GetHeadIndex("starttime"));
        config.endtime = csvGetInt(csv, this.GetHeadIndex("endtime"));
        config.country = csvGetInt(csv, this.GetHeadIndex("country"));
        config.plate = csvGetInt(csv, this.GetHeadIndex("plate"));
        config.functionid = csvGetInt(csv, this.GetHeadIndex("functionid"));
        config.parameter = csvGetInt(csv, this.GetHeadIndex("parameter"));
        config.typename = csvGetInt(csv, this.GetHeadIndex("typename"));
        config.counts = csvGetInt(csv, this.GetHeadIndex("counts"));
        config.actors = csvGetInt(csv, this.GetHeadIndex("actors"));
        config.actor_nation = csvGetInt(csv, this.GetHeadIndex("actor_nation"));
        config.actor_sex = csvGetInt(csv, this.GetHeadIndex("actor_sex"));
        config.actor_type = csvGetInt(csv, this.GetHeadIndex("actor_type"));
        config.box_level = csvGetInt(csv, this.GetHeadIndex("box_level"));
        config.movie_type = csvGetInt(csv, this.GetHeadIndex("movie_type"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.zh_cn_classname = csvGetString(csv, this.GetHeadIndex("zh_cn_classname"));
        config.zh_cn_description = csvGetString(csv, this.GetHeadIndex("zh_cn_description"));
        this.addConfig(config);
    };
    return OperationTasksConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = OperationTasksConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/OperationTasksConfig":96,"../CsvConfigRender":304}],526:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var OperationTasksScoreConfig_1 = require("../ConfigExtends/OperationTasksScoreConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var OperationTasksScoreConfigReaderStruct = /** @class */ (function (_super) {
    __extends(OperationTasksScoreConfigReaderStruct, _super);
    function OperationTasksScoreConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "OperationTasksScore";
        return _this;
    }
    OperationTasksScoreConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new OperationTasksScoreConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.score = csvGetInt(csv, this.GetHeadIndex("score"));
        config.rewards = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("rewards")));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return OperationTasksScoreConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = OperationTasksScoreConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/OperationTasksScoreConfig":97,"../CsvConfigRender":304}],527:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var OperationTasksTermsConfig_1 = require("../ConfigExtends/OperationTasksTermsConfig");
var OperationTasksTermsConfigReaderStruct = /** @class */ (function (_super) {
    __extends(OperationTasksTermsConfigReaderStruct, _super);
    function OperationTasksTermsConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "OperationTasksTerms";
        return _this;
    }
    OperationTasksTermsConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new OperationTasksTermsConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.counts = csvGetInt(csv, this.GetHeadIndex("counts"));
        config.actors = csvGetInt(csv, this.GetHeadIndex("actors"));
        config.actor_nation = csvGetInt(csv, this.GetHeadIndex("actor_nation"));
        config.actor_sex = csvGetInt(csv, this.GetHeadIndex("actor_sex"));
        config.actor_type = csvGetInt(csv, this.GetHeadIndex("actor_type"));
        config.box_level = csvGetInt(csv, this.GetHeadIndex("box_level"));
        config.movie_type = csvGetInt(csv, this.GetHeadIndex("movie_type"));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return OperationTasksTermsConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = OperationTasksTermsConfigReaderStruct;
},{"../ConfigExtends/OperationTasksTermsConfig":98,"../CsvConfigRender":304}],528:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var OrderConfig_1 = require("../ConfigExtends/OrderConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var OrderConfigReaderStruct = /** @class */ (function (_super) {
    __extends(OrderConfigReaderStruct, _super);
    function OrderConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Order";
        return _this;
    }
    OrderConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new OrderConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name1 = csvGetString(csv, this.GetHeadIndex("zh_cn_name1"));
        config.zh_cn_name2 = csvGetString(csv, this.GetHeadIndex("zh_cn_name2"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.block = csvGetInt(csv, this.GetHeadIndex("block"));
        config.need = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("need")));
        config.quality = csvGetInt(csv, this.GetHeadIndex("quality"));
        config.reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("reward")));
        config.expect = csvGetInt(csv, this.GetHeadIndex("expect"));
        this.addConfig(config);
    };
    return OrderConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = OrderConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/OrderConfig":99,"../CsvConfigRender":304}],529:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var OscarConfig_1 = require("../ConfigExtends/OscarConfig");
var OscarConfigReaderStruct = /** @class */ (function (_super) {
    __extends(OscarConfigReaderStruct, _super);
    function OscarConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Oscar";
        return _this;
    }
    OscarConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new OscarConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.oscar_type = csvGetInt(csv, this.GetHeadIndex("oscar_type"));
        config.compere_type = csvGetInt(csv, this.GetHeadIndex("compere_type"));
        config.zh_cn_content = csvGetString(csv, this.GetHeadIndex("zh_cn_content"));
        config.content_duration = csvGetInt(csv, this.GetHeadIndex("content_duration"));
        config.act = csvGetString(csv, this.GetHeadIndex("act"));
        config.act_duration = csvGetInt(csv, this.GetHeadIndex("act_duration"));
        this.addConfig(config);
    };
    return OscarConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = OscarConfigReaderStruct;
},{"../ConfigExtends/OscarConfig":100,"../CsvConfigRender":304}],530:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PerformConfig_1 = require("../ConfigExtends/PerformConfig");
var PerformConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PerformConfigReaderStruct, _super);
    function PerformConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Perform";
        return _this;
    }
    PerformConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PerformConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.building = csvGetInt(csv, this.GetHeadIndex("building"));
        config.weight = csvGetInt(csv, this.GetHeadIndex("weight"));
        config.event = toIntArray(csvGetString(csv, this.GetHeadIndex("event")));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return PerformConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PerformConfigReaderStruct;
},{"../ConfigExtends/PerformConfig":101,"../CsvConfigRender":304}],531:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PlayActConfig_1 = require("../ConfigExtends/PlayActConfig");
var PlayActConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PlayActConfigReaderStruct, _super);
    function PlayActConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "PlayAct";
        return _this;
    }
    PlayActConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PlayActConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.data = csvGetInt(csv, this.GetHeadIndex("data"));
        config.event = toIntArray(csvGetString(csv, this.GetHeadIndex("event")));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return PlayActConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PlayActConfigReaderStruct;
},{"../ConfigExtends/PlayActConfig":102,"../CsvConfigRender":304}],532:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PlayerDefaultConfig_1 = require("../ConfigExtends/PlayerDefaultConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var PlayerDefaultConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PlayerDefaultConfigReaderStruct, _super);
    function PlayerDefaultConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "PlayerDefault";
        return _this;
    }
    PlayerDefaultConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PlayerDefaultConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.actors = toIntArray(csvGetString(csv, this.GetHeadIndex("actors")));
        config.items = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("items")));
        this.addConfig(config);
    };
    return PlayerDefaultConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PlayerDefaultConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/PlayerDefaultConfig":103,"../CsvConfigRender":304}],533:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PlayerLevelConfig_1 = require("../ConfigExtends/PlayerLevelConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var PlayerLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PlayerLevelConfigReaderStruct, _super);
    function PlayerLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "PlayerLevel";
        return _this;
    }
    PlayerLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PlayerLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.fans = csvGetInt(csv, this.GetHeadIndex("fans"));
        config.story = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("story")));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.order_qua = toIntArray(csvGetString(csv, this.GetHeadIndex("order_qua")));
        config.order_num = csvGetInt(csv, this.GetHeadIndex("order_num"));
        config.train_max = csvGetInt(csv, this.GetHeadIndex("train_max"));
        config.train_count = csvGetInt(csv, this.GetHeadIndex("train_count"));
        config.actor_max = csvGetInt(csv, this.GetHeadIndex("actor_max"));
        config.actor_count = csvGetInt(csv, this.GetHeadIndex("actor_count"));
        config.hide_max = csvGetInt(csv, this.GetHeadIndex("hide_max"));
        config.hide_count = csvGetInt(csv, this.GetHeadIndex("hide_count"));
        config.day_max = csvGetInt(csv, this.GetHeadIndex("day_max"));
        config.day = csvGetInt(csv, this.GetHeadIndex("day"));
        config.meeting_cd = csvGetInt(csv, this.GetHeadIndex("meeting_cd"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.mc_special_package1 = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("mc_special_package1")));
        config.mc_special_package2 = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("mc_special_package2")));
        config.shop_1003 = csvGetInt(csv, this.GetHeadIndex("shop_1003"));
        config.shop_1004 = csvGetInt(csv, this.GetHeadIndex("shop_1004"));
        config.Turntable_min = csvGetInt(csv, this.GetHeadIndex("Turntable_min"));
        config.Turntable_max = csvGetInt(csv, this.GetHeadIndex("Turntable_max"));
        this.addConfig(config);
    };
    return PlayerLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PlayerLevelConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/PlayerLevelConfig":104,"../CsvConfigRender":304}],534:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PopUpConfig_1 = require("../ConfigExtends/PopUpConfig");
var DTDate_1 = require("../ConfigExtends/DTDate");
var PopUpConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PopUpConfigReaderStruct, _super);
    function PopUpConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "PopUp";
        return _this;
    }
    PopUpConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PopUpConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.start_type = csvGetInt(csv, this.GetHeadIndex("start_type"));
        config.start_par1 = csvGetInt(csv, this.GetHeadIndex("start_par1"));
        config.start_par2 = DTDate_1.default.parse(csvGetString(csv, this.GetHeadIndex("start_par2")));
        config.start_par3 = csvGetInt(csv, this.GetHeadIndex("start_par3"));
        config.image = csvGetString(csv, this.GetHeadIndex("image"));
        config.priority = csvGetInt(csv, this.GetHeadIndex("priority"));
        this.addConfig(config);
    };
    return PopUpConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PopUpConfigReaderStruct;
},{"../ConfigExtends/DTDate":43,"../ConfigExtends/PopUpConfig":105,"../CsvConfigRender":304}],535:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PositionConfig_1 = require("../ConfigExtends/PositionConfig");
var PositionConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PositionConfigReaderStruct, _super);
    function PositionConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Position";
        return _this;
    }
    PositionConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PositionConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.position_cost_con = csvGetInt(csv, this.GetHeadIndex("position_cost_con"));
        config.position_con = csvGetInt(csv, this.GetHeadIndex("position_con"));
        this.addConfig(config);
    };
    return PositionConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PositionConfigReaderStruct;
},{"../ConfigExtends/PositionConfig":106,"../CsvConfigRender":304}],536:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ProduceConfig_1 = require("../ConfigExtends/ProduceConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ProduceConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ProduceConfigReaderStruct, _super);
    function ProduceConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Produce";
        return _this;
    }
    ProduceConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ProduceConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.item = csvGetInt(csv, this.GetHeadIndex("item"));
        config.zh_cn_tip = csvGetString(csv, this.GetHeadIndex("zh_cn_tip"));
        config.grade = csvGetInt(csv, this.GetHeadIndex("grade"));
        config.unlock_level = csvGetInt(csv, this.GetHeadIndex("unlock_level"));
        config.unlock_building = csvGetInt(csv, this.GetHeadIndex("unlock_building"));
        config.unlock_gold = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("unlock_gold")));
        config.unlock_reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("unlock_reward")));
        config.cd = csvGetInt(csv, this.GetHeadIndex("cd"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.cheer_sex = csvGetInt(csv, this.GetHeadIndex("cheer_sex"));
        config.cheer_continents = csvGetInt(csv, this.GetHeadIndex("cheer_continents"));
        config.cheer_type = csvGetInt(csv, this.GetHeadIndex("cheer_type"));
        config.cheer_age = csvGetInt(csv, this.GetHeadIndex("cheer_age"));
        config.pre_id = csvGetInt(csv, this.GetHeadIndex("pre_id"));
        config.next_line = csvGetInt(csv, this.GetHeadIndex("next_line"));
        this.addConfig(config);
    };
    return ProduceConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ProduceConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/ProduceConfig":107,"../CsvConfigRender":304}],537:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ProduceLevelConfig_1 = require("../ConfigExtends/ProduceLevelConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ProduceLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ProduceLevelConfigReaderStruct, _super);
    function ProduceLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ProduceLevel";
        return _this;
    }
    ProduceLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ProduceLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.limit_grade = toIntArray(csvGetString(csv, this.GetHeadIndex("limit_grade")));
        this.addConfig(config);
    };
    return ProduceLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ProduceLevelConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/ProduceLevelConfig":108,"../CsvConfigRender":304}],538:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ProduceLvConfig_1 = require("../ConfigExtends/ProduceLvConfig");
var ProduceLvConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ProduceLvConfigReaderStruct, _super);
    function ProduceLvConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ProduceLv";
        return _this;
    }
    ProduceLvConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ProduceLvConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.lv = csvGetInt(csv, this.GetHeadIndex("lv"));
        config.effect = toIntArray(csvGetString(csv, this.GetHeadIndex("effect")));
        config.produce_lv = csvGetInt(csv, this.GetHeadIndex("produce_lv"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return ProduceLvConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ProduceLvConfigReaderStruct;
},{"../ConfigExtends/ProduceLvConfig":109,"../CsvConfigRender":304}],539:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ProduceSouvenirConfig_1 = require("../ConfigExtends/ProduceSouvenirConfig");
var ProduceSouvenirConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ProduceSouvenirConfigReaderStruct, _super);
    function ProduceSouvenirConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ProduceSouvenir";
        return _this;
    }
    ProduceSouvenirConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ProduceSouvenirConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.once = csvGetInt(csv, this.GetHeadIndex("once"));
        config.max = csvGetInt(csv, this.GetHeadIndex("max"));
        this.addConfig(config);
    };
    return ProduceSouvenirConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ProduceSouvenirConfigReaderStruct;
},{"../ConfigExtends/ProduceSouvenirConfig":110,"../CsvConfigRender":304}],540:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var PropertyConfig_1 = require("../ConfigExtends/PropertyConfig");
var PropertyConfigReaderStruct = /** @class */ (function (_super) {
    __extends(PropertyConfigReaderStruct, _super);
    function PropertyConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Property";
        return _this;
    }
    PropertyConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new PropertyConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.field = csvGetString(csv, this.GetHeadIndex("field"));
        config.enName = csvGetString(csv, this.GetHeadIndex("enName"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.tip = csvGetString(csv, this.GetHeadIndex("tip"));
        this.addConfig(config);
    };
    return PropertyConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = PropertyConfigReaderStruct;
},{"../ConfigExtends/PropertyConfig":111,"../CsvConfigRender":304}],541:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var RandomNameConfig_1 = require("../ConfigExtends/RandomNameConfig");
var RandomNameConfigReaderStruct = /** @class */ (function (_super) {
    __extends(RandomNameConfigReaderStruct, _super);
    function RandomNameConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "RandomName";
        return _this;
    }
    RandomNameConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new RandomNameConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.text = csvGetString(csv, this.GetHeadIndex("text"));
        this.addConfig(config);
    };
    return RandomNameConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = RandomNameConfigReaderStruct;
},{"../ConfigExtends/RandomNameConfig":112,"../CsvConfigRender":304}],542:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var RandomSurnameConfig_1 = require("../ConfigExtends/RandomSurnameConfig");
var RandomSurnameConfigReaderStruct = /** @class */ (function (_super) {
    __extends(RandomSurnameConfigReaderStruct, _super);
    function RandomSurnameConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "RandomSurname";
        return _this;
    }
    RandomSurnameConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new RandomSurnameConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.text = csvGetString(csv, this.GetHeadIndex("text"));
        this.addConfig(config);
    };
    return RandomSurnameConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = RandomSurnameConfigReaderStruct;
},{"../ConfigExtends/RandomSurnameConfig":113,"../CsvConfigRender":304}],543:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var RechargeConfig_1 = require("../ConfigExtends/RechargeConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var RechargeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(RechargeConfigReaderStruct, _super);
    function RechargeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Recharge";
        return _this;
    }
    RechargeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new RechargeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.product_name = csvGetString(csv, this.GetHeadIndex("product_name"));
        config.product_id = csvGetString(csv, this.GetHeadIndex("product_id"));
        config.cost_dollar = csvGetFloat(csv, this.GetHeadIndex("cost_dollar"));
        config.item = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("item")));
        config.gift = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("gift")));
        config.double = csvGetInt(csv, this.GetHeadIndex("double"));
        config.go = csvGetInt(csv, this.GetHeadIndex("go"));
        config.term = csvGetInt(csv, this.GetHeadIndex("term"));
        config.is_show = csvGetBoolean(csv, this.GetHeadIndex("is_show"));
        config.limit = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("limit")));
        this.addConfig(config);
    };
    return RechargeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = RechargeConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/RechargeConfig":114,"../CsvConfigRender":304}],544:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var RoadshowConfig_1 = require("../ConfigExtends/RoadshowConfig");
var RoadshowConfigReaderStruct = /** @class */ (function (_super) {
    __extends(RoadshowConfigReaderStruct, _super);
    function RoadshowConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Roadshow";
        return _this;
    }
    RoadshowConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new RoadshowConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.compere_type = csvGetInt(csv, this.GetHeadIndex("compere_type"));
        config.content = csvGetString(csv, this.GetHeadIndex("content"));
        config.remaks = csvGetString(csv, this.GetHeadIndex("remaks"));
        config.content_duration = csvGetInt(csv, this.GetHeadIndex("content_duration"));
        config.act = csvGetString(csv, this.GetHeadIndex("act"));
        config.act_duration = csvGetInt(csv, this.GetHeadIndex("act_duration"));
        this.addConfig(config);
    };
    return RoadshowConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = RoadshowConfigReaderStruct;
},{"../ConfigExtends/RoadshowConfig":115,"../CsvConfigRender":304}],545:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SecretaryConfig_1 = require("../ConfigExtends/SecretaryConfig");
var SecretaryConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SecretaryConfigReaderStruct, _super);
    function SecretaryConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Secretary";
        return _this;
    }
    SecretaryConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SecretaryConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.zh_cn_info = csvGetString(csv, this.GetHeadIndex("zh_cn_info"));
        config.par = csvGetInt(csv, this.GetHeadIndex("par"));
        config.description = csvGetString(csv, this.GetHeadIndex("description"));
        this.addConfig(config);
    };
    return SecretaryConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SecretaryConfigReaderStruct;
},{"../ConfigExtends/SecretaryConfig":116,"../CsvConfigRender":304}],546:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SecretaryGiftConfig_1 = require("../ConfigExtends/SecretaryGiftConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var SecretaryGiftConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SecretaryGiftConfigReaderStruct, _super);
    function SecretaryGiftConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "SecretaryGift";
        return _this;
    }
    SecretaryGiftConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SecretaryGiftConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.items = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("items")));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return SecretaryGiftConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SecretaryGiftConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/SecretaryGiftConfig":117,"../CsvConfigRender":304}],547:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SecretaryTypeConfig_1 = require("../ConfigExtends/SecretaryTypeConfig");
var SecretaryTypeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SecretaryTypeConfigReaderStruct, _super);
    function SecretaryTypeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "SecretaryType";
        return _this;
    }
    SecretaryTypeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SecretaryTypeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.sex = csvGetString(csv, this.GetHeadIndex("sex"));
        config.pic = csvGetString(csv, this.GetHeadIndex("pic"));
        config.picid = csvGetInt(csv, this.GetHeadIndex("picid"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        this.addConfig(config);
    };
    return SecretaryTypeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SecretaryTypeConfigReaderStruct;
},{"../ConfigExtends/SecretaryTypeConfig":118,"../CsvConfigRender":304}],548:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ServerRankingListConfig_1 = require("../ConfigExtends/ServerRankingListConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ServerRankingListConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ServerRankingListConfigReaderStruct, _super);
    function ServerRankingListConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "ServerRankingList";
        return _this;
    }
    ServerRankingListConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ServerRankingListConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.rank = toIntArray(csvGetString(csv, this.GetHeadIndex("rank")));
        config.normal_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("normal_reward")));
        config.spec_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("spec_reward")));
        this.addConfig(config);
    };
    return ServerRankingListConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ServerRankingListConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/ServerRankingListConfig":119,"../CsvConfigRender":304}],549:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SettingDefaultConfig_1 = require("../ConfigExtends/SettingDefaultConfig");
var SettingDefaultConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SettingDefaultConfigReaderStruct, _super);
    function SettingDefaultConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "SettingDefault";
        return _this;
    }
    SettingDefaultConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SettingDefaultConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.key = csvGetString(csv, this.GetHeadIndex("key"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.default = csvGetInt(csv, this.GetHeadIndex("default"));
        config.switch = csvGetBoolean(csv, this.GetHeadIndex("switch"));
        config.popup = csvGetString(csv, this.GetHeadIndex("popup"));
        this.addConfig(config);
    };
    return SettingDefaultConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SettingDefaultConfigReaderStruct;
},{"../ConfigExtends/SettingDefaultConfig":120,"../CsvConfigRender":304}],550:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var ShopConfig_1 = require("../ConfigExtends/ShopConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var ShopConfigReaderStruct = /** @class */ (function (_super) {
    __extends(ShopConfigReaderStruct, _super);
    function ShopConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Shop";
        return _this;
    }
    ShopConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new ShopConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.item = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("item")));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.period = csvGetString(csv, this.GetHeadIndex("period"));
        config.limit = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("limit")));
        config.special = csvGetInt(csv, this.GetHeadIndex("special"));
        config.delay = csvGetInt(csv, this.GetHeadIndex("delay"));
        this.addConfig(config);
    };
    return ShopConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = ShopConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/ShopConfig":121,"../CsvConfigRender":304}],551:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SkillConfig_1 = require("../ConfigExtends/SkillConfig");
var SkillConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SkillConfigReaderStruct, _super);
    function SkillConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Skill";
        return _this;
    }
    SkillConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SkillConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.group_id = csvGetInt(csv, this.GetHeadIndex("group_id"));
        config.lv = csvGetInt(csv, this.GetHeadIndex("lv"));
        config.exp = csvGetInt(csv, this.GetHeadIndex("exp"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.cn_name = csvGetString(csv, this.GetHeadIndex("cn_name"));
        config.en_tips = csvGetString(csv, this.GetHeadIndex("en_tips"));
        config.cn_tips = csvGetString(csv, this.GetHeadIndex("cn_tips"));
        config.en_effecttext = csvGetString(csv, this.GetHeadIndex("en_effecttext"));
        config.cn_effecttext = csvGetString(csv, this.GetHeadIndex("cn_effecttext"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.trigger = toIntArray(csvGetString(csv, this.GetHeadIndex("trigger")));
        config.effect = csvGetInt(csv, this.GetHeadIndex("effect"));
        config.value = csvGetFloat(csv, this.GetHeadIndex("value"));
        config.stamina = csvGetInt(csv, this.GetHeadIndex("stamina"));
        this.addConfig(config);
    };
    return SkillConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SkillConfigReaderStruct;
},{"../ConfigExtends/SkillConfig":122,"../CsvConfigRender":304}],552:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SkillEffectConfig_1 = require("../ConfigExtends/SkillEffectConfig");
var SkillEffectConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SkillEffectConfigReaderStruct, _super);
    function SkillEffectConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "SkillEffect";
        return _this;
    }
    SkillEffectConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SkillEffectConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.effect = csvGetInt(csv, this.GetHeadIndex("effect"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return SkillEffectConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SkillEffectConfigReaderStruct;
},{"../ConfigExtends/SkillEffectConfig":123,"../CsvConfigRender":304}],553:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SkillTriggerConfig_1 = require("../ConfigExtends/SkillTriggerConfig");
var SkillTriggerConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SkillTriggerConfigReaderStruct, _super);
    function SkillTriggerConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "SkillTrigger";
        return _this;
    }
    SkillTriggerConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SkillTriggerConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.trigger = csvGetInt(csv, this.GetHeadIndex("trigger"));
        config.value = csvGetInt(csv, this.GetHeadIndex("value"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return SkillTriggerConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SkillTriggerConfigReaderStruct;
},{"../ConfigExtends/SkillTriggerConfig":124,"../CsvConfigRender":304}],554:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SpeakConfig_1 = require("../ConfigExtends/SpeakConfig");
var SpeakConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SpeakConfigReaderStruct, _super);
    function SpeakConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Speak";
        return _this;
    }
    SpeakConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SpeakConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.en_speak = csvGetString(csv, this.GetHeadIndex("en_speak"));
        config.cn_speak = csvGetString(csv, this.GetHeadIndex("cn_speak"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return SpeakConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SpeakConfigReaderStruct;
},{"../ConfigExtends/SpeakConfig":125,"../CsvConfigRender":304}],555:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StarConConfig_1 = require("../ConfigExtends/StarConConfig");
var StarConConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StarConConfigReaderStruct, _super);
    function StarConConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "StarCon";
        return _this;
    }
    StarConConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StarConConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.story_star_con = csvGetInt(csv, this.GetHeadIndex("story_star_con"));
        config.att_con = csvGetInt(csv, this.GetHeadIndex("att_con"));
        config.count = csvGetInt(csv, this.GetHeadIndex("count"));
        config.evaluate_protect = csvGetInt(csv, this.GetHeadIndex("evaluate_protect"));
        config.opinions_protect = csvGetInt(csv, this.GetHeadIndex("opinions_protect"));
        this.addConfig(config);
    };
    return StarConConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StarConConfigReaderStruct;
},{"../ConfigExtends/StarConConfig":126,"../CsvConfigRender":304}],556:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StoryCharactersConfig_1 = require("../ConfigExtends/StoryCharactersConfig");
var StoryCharactersConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StoryCharactersConfigReaderStruct, _super);
    function StoryCharactersConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "StoryCharacters";
        return _this;
    }
    StoryCharactersConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StoryCharactersConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.story_id = csvGetInt(csv, this.GetHeadIndex("story_id"));
        config.character_num = csvGetInt(csv, this.GetHeadIndex("character_num"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.type_pic = csvGetInt(csv, this.GetHeadIndex("type_pic"));
        config.sex = csvGetInt(csv, this.GetHeadIndex("sex"));
        config.country = csvGetInt(csv, this.GetHeadIndex("country"));
        config.show_type = csvGetInt(csv, this.GetHeadIndex("show_type"));
        config.age_type = csvGetInt(csv, this.GetHeadIndex("age_type"));
        config.tags = toIntArray(csvGetString(csv, this.GetHeadIndex("tags")));
        config.effect = toIntArray(csvGetString(csv, this.GetHeadIndex("effect")));
        config.zh_cn_introduction = csvGetString(csv, this.GetHeadIndex("zh_cn_introduction"));
        this.addConfig(config);
    };
    return StoryCharactersConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StoryCharactersConfigReaderStruct;
},{"../ConfigExtends/StoryCharactersConfig":127,"../CsvConfigRender":304}],557:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StoryConfig_1 = require("../ConfigExtends/StoryConfig");
var DTStoryEffect_1 = require("../ConfigExtends/DTStoryEffect");
var StoryConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StoryConfigReaderStruct, _super);
    function StoryConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Story";
        return _this;
    }
    StoryConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StoryConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.story_num = csvGetInt(csv, this.GetHeadIndex("story_num"));
        config.stack_sort = csvGetInt(csv, this.GetHeadIndex("stack_sort"));
        config.zh_cn_story_name = csvGetString(csv, this.GetHeadIndex("zh_cn_story_name"));
        config.name_tips = csvGetString(csv, this.GetHeadIndex("name_tips"));
        config.poster_name = csvGetInt(csv, this.GetHeadIndex("poster_name"));
        config.zh_cn_introduction = csvGetString(csv, this.GetHeadIndex("zh_cn_introduction"));
        config.introduction_tips = csvGetString(csv, this.GetHeadIndex("introduction_tips"));
        config.length = csvGetInt(csv, this.GetHeadIndex("length"));
        config.cost = csvGetInt(csv, this.GetHeadIndex("cost"));
        config.stars = csvGetInt(csv, this.GetHeadIndex("stars"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.tags = toIntArray(csvGetString(csv, this.GetHeadIndex("tags")));
        config.hidden_tags = toIntArray(csvGetString(csv, this.GetHeadIndex("hidden_tags")));
        config.shoot_type = csvGetInt(csv, this.GetHeadIndex("shoot_type"));
        config.property = toIntArray(csvGetString(csv, this.GetHeadIndex("property")));
        config.target_mark = csvGetBoolean(csv, this.GetHeadIndex("target_mark"));
        config.male_percent = csvGetInt(csv, this.GetHeadIndex("male_percent"));
        config.female_percent = csvGetInt(csv, this.GetHeadIndex("female_percent"));
        config.child_percent = csvGetInt(csv, this.GetHeadIndex("child_percent"));
        config.reward = DTStoryEffect_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.sequel_mark = csvGetBoolean(csv, this.GetHeadIndex("sequel_mark"));
        config.random_name = csvGetInt(csv, this.GetHeadIndex("random_name"));
        config.box_office_story_con = csvGetInt(csv, this.GetHeadIndex("box_office_story_con"));
        this.addConfig(config);
    };
    return StoryConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StoryConfigReaderStruct;
},{"../ConfigExtends/DTStoryEffect":49,"../ConfigExtends/StoryConfig":128,"../CsvConfigRender":304}],558:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StoryGoalsConfig_1 = require("../ConfigExtends/StoryGoalsConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var StoryGoalsConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StoryGoalsConfigReaderStruct, _super);
    function StoryGoalsConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "StoryGoals";
        return _this;
    }
    StoryGoalsConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StoryGoalsConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.storyid = csvGetInt(csv, this.GetHeadIndex("storyid"));
        config.rank = csvGetInt(csv, this.GetHeadIndex("rank"));
        config.property1 = csvGetInt(csv, this.GetHeadIndex("property1"));
        config.value1 = csvGetInt(csv, this.GetHeadIndex("value1"));
        config.property2 = csvGetInt(csv, this.GetHeadIndex("property2"));
        config.value2 = csvGetInt(csv, this.GetHeadIndex("value2"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return StoryGoalsConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StoryGoalsConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/StoryGoalsConfig":129,"../CsvConfigRender":304}],559:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StoryRateConfig_1 = require("../ConfigExtends/StoryRateConfig");
var StoryRateConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StoryRateConfigReaderStruct, _super);
    function StoryRateConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "StoryRate";
        return _this;
    }
    StoryRateConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StoryRateConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.rate = csvGetInt(csv, this.GetHeadIndex("rate"));
        this.addConfig(config);
    };
    return StoryRateConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StoryRateConfigReaderStruct;
},{"../ConfigExtends/StoryRateConfig":130,"../CsvConfigRender":304}],560:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StoryRefreshPriceConfig_1 = require("../ConfigExtends/StoryRefreshPriceConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var StoryRefreshPriceConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StoryRefreshPriceConfigReaderStruct, _super);
    function StoryRefreshPriceConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "StoryRefreshPrice";
        return _this;
    }
    StoryRefreshPriceConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StoryRefreshPriceConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.price = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("price")));
        this.addConfig(config);
    };
    return StoryRefreshPriceConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StoryRefreshPriceConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/StoryRefreshPriceConfig":131,"../CsvConfigRender":304}],561:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StoryStackItemConfig_1 = require("../ConfigExtends/StoryStackItemConfig");
var StoryStackItemConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StoryStackItemConfigReaderStruct, _super);
    function StoryStackItemConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "StoryStackItem";
        return _this;
    }
    StoryStackItemConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StoryStackItemConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.num = csvGetInt(csv, this.GetHeadIndex("num"));
        config.rate = csvGetInt(csv, this.GetHeadIndex("rate"));
        this.addConfig(config);
    };
    return StoryStackItemConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StoryStackItemConfigReaderStruct;
},{"../ConfigExtends/StoryStackItemConfig":132,"../CsvConfigRender":304}],562:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StoryStackSortConfig_1 = require("../ConfigExtends/StoryStackSortConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var DTStoryEffect_1 = require("../ConfigExtends/DTStoryEffect");
var StoryStackSortConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StoryStackSortConfigReaderStruct, _super);
    function StoryStackSortConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "StoryStackSort";
        return _this;
    }
    StoryStackSortConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StoryStackSortConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.scripts = toIntArray(csvGetString(csv, this.GetHeadIndex("scripts")));
        config.rewards = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("rewards")));
        config.addition_scene = DTStoryEffect_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("addition_scene")));
        this.addConfig(config);
    };
    return StoryStackSortConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StoryStackSortConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/DTStoryEffect":49,"../ConfigExtends/StoryStackSortConfig":133,"../CsvConfigRender":304}],563:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StorylineConfig_1 = require("../ConfigExtends/StorylineConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var StorylineConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StorylineConfigReaderStruct, _super);
    function StorylineConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Storyline";
        return _this;
    }
    StorylineConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StorylineConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.trigger = csvGetInt(csv, this.GetHeadIndex("trigger"));
        config.value = csvGetInt(csv, this.GetHeadIndex("value"));
        config.guide_type = csvGetInt(csv, this.GetHeadIndex("guide_type"));
        config.guide_id = csvGetInt(csv, this.GetHeadIndex("guide_id"));
        config.group = csvGetInt(csv, this.GetHeadIndex("group"));
        config.order = csvGetInt(csv, this.GetHeadIndex("order"));
        config.type_id = csvGetString(csv, this.GetHeadIndex("type_id"));
        config.ui_type = csvGetInt(csv, this.GetHeadIndex("ui_type"));
        config.cn_ui_content = csvGetString(csv, this.GetHeadIndex("cn_ui_content"));
        config.en_ui_content = csvGetString(csv, this.GetHeadIndex("en_ui_content"));
        config.cn_content = csvGetString(csv, this.GetHeadIndex("cn_content"));
        config.en_content = csvGetString(csv, this.GetHeadIndex("en_content"));
        config.cn_name = csvGetString(csv, this.GetHeadIndex("cn_name"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.anchor = csvGetInt(csv, this.GetHeadIndex("anchor"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        this.addConfig(config);
    };
    return StorylineConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StorylineConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/StorylineConfig":134,"../CsvConfigRender":304}],564:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var StreetConfig_1 = require("../ConfigExtends/StreetConfig");
var DTVector2_1 = require("../ConfigExtends/DTVector2");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var StreetConfigReaderStruct = /** @class */ (function (_super) {
    __extends(StreetConfigReaderStruct, _super);
    function StreetConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Street";
        return _this;
    }
    StreetConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new StreetConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.en_name = csvGetString(csv, this.GetHeadIndex("en_name"));
        config.city_schedule = csvGetInt(csv, this.GetHeadIndex("city_schedule"));
        config.position = DTVector2_1.default.parse(csvGetString(csv, this.GetHeadIndex("position")));
        config.spokesperson_sex = csvGetInt(csv, this.GetHeadIndex("spokesperson_sex"));
        config.spokesperson_Continents = csvGetInt(csv, this.GetHeadIndex("spokesperson_Continents"));
        config.spokesperson_type = csvGetInt(csv, this.GetHeadIndex("spokesperson_type"));
        config.spokesperson_age = csvGetInt(csv, this.GetHeadIndex("spokesperson_age"));
        config.spokesperson_scene = csvGetInt(csv, this.GetHeadIndex("spokesperson_scene"));
        config.spokesperson_performance = csvGetInt(csv, this.GetHeadIndex("spokesperson_performance"));
        config.spokesperson_plot = csvGetInt(csv, this.GetHeadIndex("spokesperson_plot"));
        config.spokesperson_art = csvGetInt(csv, this.GetHeadIndex("spokesperson_art"));
        config.spokesperson_entertainment = csvGetInt(csv, this.GetHeadIndex("spokesperson_entertainment"));
        config.publicize_schedule = csvGetInt(csv, this.GetHeadIndex("publicize_schedule"));
        config.publicize_cost = csvGetInt(csv, this.GetHeadIndex("publicize_cost"));
        config.once_reward = csvGetInt(csv, this.GetHeadIndex("once_reward"));
        config.finale_reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("finale_reward")));
        config.expect = csvGetInt(csv, this.GetHeadIndex("expect"));
        config.pre_id = csvGetInt(csv, this.GetHeadIndex("pre_id"));
        config.next_stage = csvGetInt(csv, this.GetHeadIndex("next_stage"));
        config.city = csvGetInt(csv, this.GetHeadIndex("city"));
        this.addConfig(config);
    };
    return StreetConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = StreetConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/DTVector2":51,"../ConfigExtends/StreetConfig":135,"../CsvConfigRender":304}],565:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var SysTimeConfig_1 = require("../ConfigExtends/SysTimeConfig");
var SysTimeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(SysTimeConfigReaderStruct, _super);
    function SysTimeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "SysTime";
        return _this;
    }
    SysTimeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new SysTimeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.hour = csvGetInt(csv, this.GetHeadIndex("hour"));
        config.min = csvGetInt(csv, this.GetHeadIndex("min"));
        config.sec = csvGetInt(csv, this.GetHeadIndex("sec"));
        this.addConfig(config);
    };
    return SysTimeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = SysTimeConfigReaderStruct;
},{"../ConfigExtends/SysTimeConfig":136,"../CsvConfigRender":304}],566:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var TaskConfig_1 = require("../ConfigExtends/TaskConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var TaskConfigReaderStruct = /** @class */ (function (_super) {
    __extends(TaskConfigReaderStruct, _super);
    function TaskConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Task";
        return _this;
    }
    TaskConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new TaskConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.unlock = csvGetInt(csv, this.GetHeadIndex("unlock"));
        config.require = csvGetInt(csv, this.GetHeadIndex("require"));
        config.goal = csvGetInt(csv, this.GetHeadIndex("goal"));
        config.s_goal = csvGetInt(csv, this.GetHeadIndex("s_goal"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.Complete = csvGetInt(csv, this.GetHeadIndex("Complete"));
        config.pre_id = csvGetInt(csv, this.GetHeadIndex("pre_id"));
        config.guide = csvGetInt(csv, this.GetHeadIndex("guide"));
        this.addConfig(config);
    };
    return TaskConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = TaskConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/TaskConfig":137,"../CsvConfigRender":304}],567:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var TestConfig_1 = require("../ConfigExtends/TestConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var DTVector2_1 = require("../ConfigExtends/DTVector2");
var DTStoryNum_1 = require("../ConfigExtends/DTStoryNum");
var TestConfigReaderStruct = /** @class */ (function (_super) {
    __extends(TestConfigReaderStruct, _super);
    function TestConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Test";
        return _this;
    }
    TestConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new TestConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.age = csvGetInt(csv, this.GetHeadIndex("age"));
        config.intArray = toIntArray(csvGetString(csv, this.GetHeadIndex("intArray")));
        config.coin = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("coin")));
        config.items = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("items")));
        config.position = DTVector2_1.default.parse(csvGetString(csv, this.GetHeadIndex("position")));
        config.story = DTStoryNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("story")));
        this.addConfig(config);
    };
    return TestConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = TestConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/DTStoryNum":50,"../ConfigExtends/DTVector2":51,"../ConfigExtends/TestConfig":138,"../CsvConfigRender":304}],568:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var TurntableCompleteConfig_1 = require("../ConfigExtends/TurntableCompleteConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var TurntableCompleteConfigReaderStruct = /** @class */ (function (_super) {
    __extends(TurntableCompleteConfigReaderStruct, _super);
    function TurntableCompleteConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "TurntableComplete";
        return _this;
    }
    TurntableCompleteConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new TurntableCompleteConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.start = toIntArray(csvGetString(csv, this.GetHeadIndex("start")));
        config.end = toIntArray(csvGetString(csv, this.GetHeadIndex("end")));
        config.Reception = csvGetInt(csv, this.GetHeadIndex("Reception"));
        config.actor1 = toIntArray(csvGetString(csv, this.GetHeadIndex("actor1")));
        config.actor2 = toIntArray(csvGetString(csv, this.GetHeadIndex("actor2")));
        config.integral = csvGetInt(csv, this.GetHeadIndex("integral"));
        config.reward = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("reward")));
        this.addConfig(config);
    };
    return TurntableCompleteConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = TurntableCompleteConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/TurntableCompleteConfig":139,"../CsvConfigRender":304}],569:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var TurntableRewardConfig_1 = require("../ConfigExtends/TurntableRewardConfig");
var TurntableRewardConfigReaderStruct = /** @class */ (function (_super) {
    __extends(TurntableRewardConfigReaderStruct, _super);
    function TurntableRewardConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "TurntableReward";
        return _this;
    }
    TurntableRewardConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new TurntableRewardConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.itemtype = csvGetInt(csv, this.GetHeadIndex("itemtype"));
        config.itme = csvGetInt(csv, this.GetHeadIndex("itme"));
        config.quantity = csvGetInt(csv, this.GetHeadIndex("quantity"));
        config.weights = csvGetInt(csv, this.GetHeadIndex("weights"));
        this.addConfig(config);
    };
    return TurntableRewardConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = TurntableRewardConfigReaderStruct;
},{"../ConfigExtends/TurntableRewardConfig":140,"../CsvConfigRender":304}],570:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var TypeConfig_1 = require("../ConfigExtends/TypeConfig");
var TypeConfigReaderStruct = /** @class */ (function (_super) {
    __extends(TypeConfigReaderStruct, _super);
    function TypeConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Type";
        return _this;
    }
    TypeConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new TypeConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.field = csvGetString(csv, this.GetHeadIndex("field"));
        config.enName = csvGetString(csv, this.GetHeadIndex("enName"));
        config.cnName = csvGetString(csv, this.GetHeadIndex("cnName"));
        config.tip = csvGetString(csv, this.GetHeadIndex("tip"));
        this.addConfig(config);
    };
    return TypeConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = TypeConfigReaderStruct;
},{"../ConfigExtends/TypeConfig":141,"../CsvConfigRender":304}],571:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var UnlockConfig_1 = require("../ConfigExtends/UnlockConfig");
var UnlockConfigReaderStruct = /** @class */ (function (_super) {
    __extends(UnlockConfigReaderStruct, _super);
    function UnlockConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Unlock";
        return _this;
    }
    UnlockConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new UnlockConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.icon_type = csvGetInt(csv, this.GetHeadIndex("icon_type"));
        config.menu_id = csvGetInt(csv, this.GetHeadIndex("menu_id"));
        config.item_id = csvGetInt(csv, this.GetHeadIndex("item_id"));
        config.show_type = csvGetInt(csv, this.GetHeadIndex("show_type"));
        config.group = csvGetInt(csv, this.GetHeadIndex("group"));
        config.group_id = csvGetInt(csv, this.GetHeadIndex("group_id"));
        config.position = csvGetInt(csv, this.GetHeadIndex("position"));
        config.open_type = csvGetInt(csv, this.GetHeadIndex("open_type"));
        config.open_data = csvGetInt(csv, this.GetHeadIndex("open_data"));
        config.open_show = toIntArray(csvGetString(csv, this.GetHeadIndex("open_show")));
        config.plot = csvGetInt(csv, this.GetHeadIndex("plot"));
        config.time = csvGetInt(csv, this.GetHeadIndex("time"));
        config.close_type = csvGetInt(csv, this.GetHeadIndex("close_type"));
        config.close_data = csvGetInt(csv, this.GetHeadIndex("close_data"));
        config.continue = csvGetInt(csv, this.GetHeadIndex("continue"));
        config.is_new = csvGetBoolean(csv, this.GetHeadIndex("is_new"));
        config.zh_cn_touch_txt = csvGetString(csv, this.GetHeadIndex("zh_cn_touch_txt"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        this.addConfig(config);
    };
    return UnlockConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = UnlockConfigReaderStruct;
},{"../ConfigExtends/UnlockConfig":142,"../CsvConfigRender":304}],572:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var VisitConfig_1 = require("../ConfigExtends/VisitConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var VisitConfigReaderStruct = /** @class */ (function (_super) {
    __extends(VisitConfigReaderStruct, _super);
    function VisitConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Visit";
        return _this;
    }
    VisitConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new VisitConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.fans = csvGetInt(csv, this.GetHeadIndex("fans"));
        config.flower = csvGetInt(csv, this.GetHeadIndex("flower"));
        config.zh_cn_fans_speak0 = csvGetString(csv, this.GetHeadIndex("zh_cn_fans_speak0"));
        config.zh_cn_actor_speak0 = csvGetString(csv, this.GetHeadIndex("zh_cn_actor_speak0"));
        config.zh_cn_fans_speak1 = csvGetString(csv, this.GetHeadIndex("zh_cn_fans_speak1"));
        config.zh_cn_actor_speak1 = csvGetString(csv, this.GetHeadIndex("zh_cn_actor_speak1"));
        config.zh_cn_fans_speak2 = csvGetString(csv, this.GetHeadIndex("zh_cn_fans_speak2"));
        config.zh_cn_actor_speak2 = csvGetString(csv, this.GetHeadIndex("zh_cn_actor_speak2"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        config.expect = csvGetInt(csv, this.GetHeadIndex("expect"));
        this.addConfig(config);
    };
    return VisitConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = VisitConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/VisitConfig":143,"../CsvConfigRender":304}],573:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WeeklyQuestConfig_1 = require("../ConfigExtends/WeeklyQuestConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var WeeklyQuestConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WeeklyQuestConfigReaderStruct, _super);
    function WeeklyQuestConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "WeeklyQuest";
        return _this;
    }
    WeeklyQuestConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WeeklyQuestConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.zh_cn_des = csvGetString(csv, this.GetHeadIndex("zh_cn_des"));
        config.target_score = csvGetInt(csv, this.GetHeadIndex("target_score"));
        config.target_days = csvGetInt(csv, this.GetHeadIndex("target_days"));
        config.reward = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("reward")));
        this.addConfig(config);
    };
    return WeeklyQuestConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WeeklyQuestConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/WeeklyQuestConfig":144,"../CsvConfigRender":304}],574:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WelfareConfig_1 = require("../ConfigExtends/WelfareConfig");
var WelfareConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WelfareConfigReaderStruct, _super);
    function WelfareConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Welfare";
        return _this;
    }
    WelfareConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WelfareConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.type = csvGetInt(csv, this.GetHeadIndex("type"));
        config.icon = csvGetInt(csv, this.GetHeadIndex("icon"));
        config.icon_chosen = csvGetInt(csv, this.GetHeadIndex("icon_chosen"));
        config.zh_cn_activities_name = csvGetString(csv, this.GetHeadIndex("zh_cn_activities_name"));
        config.info = csvGetString(csv, this.GetHeadIndex("info"));
        this.addConfig(config);
    };
    return WelfareConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WelfareConfigReaderStruct;
},{"../ConfigExtends/WelfareConfig":145,"../CsvConfigRender":304}],575:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WheelDropConfig_1 = require("../ConfigExtends/WheelDropConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var WheelDropConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WheelDropConfigReaderStruct, _super);
    function WheelDropConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "WheelDrop";
        return _this;
    }
    WheelDropConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WheelDropConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.wheel_type = csvGetInt(csv, this.GetHeadIndex("wheel_type"));
        config.priority = csvGetInt(csv, this.GetHeadIndex("priority"));
        config.drop_item = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("drop_item")));
        config.label_id = csvGetInt(csv, this.GetHeadIndex("label_id"));
        config.weight = csvGetInt(csv, this.GetHeadIndex("weight"));
        this.addConfig(config);
    };
    return WheelDropConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WheelDropConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/WheelDropConfig":146,"../CsvConfigRender":304}],576:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WriterAbilityConfig_1 = require("../ConfigExtends/WriterAbilityConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var WriterAbilityConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WriterAbilityConfigReaderStruct, _super);
    function WriterAbilityConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "WriterAbility";
        return _this;
    }
    WriterAbilityConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WriterAbilityConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.advanced_level = csvGetInt(csv, this.GetHeadIndex("advanced_level"));
        config.increase = csvGetInt(csv, this.GetHeadIndex("increase"));
        config.train_time = csvGetInt(csv, this.GetHeadIndex("train_time"));
        config.train_cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("train_cost")));
        this.addConfig(config);
    };
    return WriterAbilityConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WriterAbilityConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/WriterAbilityConfig":147,"../CsvConfigRender":304}],577:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WriterAdaptEffectConfig_1 = require("../ConfigExtends/WriterAdaptEffectConfig");
var WriterAdaptEffectConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WriterAdaptEffectConfigReaderStruct, _super);
    function WriterAdaptEffectConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "WriterAdaptEffect";
        return _this;
    }
    WriterAdaptEffectConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WriterAdaptEffectConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_adapt = csvGetString(csv, this.GetHeadIndex("zh_cn_adapt"));
        config.zh_cn_adapt_des = csvGetString(csv, this.GetHeadIndex("zh_cn_adapt_des"));
        config.effect1 = csvGetInt(csv, this.GetHeadIndex("effect1"));
        config.effect1_weight = csvGetInt(csv, this.GetHeadIndex("effect1_weight"));
        config.effect2 = csvGetInt(csv, this.GetHeadIndex("effect2"));
        config.effect2_weight = csvGetInt(csv, this.GetHeadIndex("effect2_weight"));
        config.effect3 = csvGetInt(csv, this.GetHeadIndex("effect3"));
        config.effect3_weight = csvGetInt(csv, this.GetHeadIndex("effect3_weight"));
        config.effect4 = csvGetInt(csv, this.GetHeadIndex("effect4"));
        config.effect4_weight = csvGetInt(csv, this.GetHeadIndex("effect4_weight"));
        this.addConfig(config);
    };
    return WriterAdaptEffectConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WriterAdaptEffectConfigReaderStruct;
},{"../ConfigExtends/WriterAdaptEffectConfig":148,"../CsvConfigRender":304}],578:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WriterConfig_1 = require("../ConfigExtends/WriterConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var WriterConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WriterConfigReaderStruct, _super);
    function WriterConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "Writer";
        return _this;
    }
    WriterConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WriterConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.quality = csvGetInt(csv, this.GetHeadIndex("quality"));
        config.head = csvGetInt(csv, this.GetHeadIndex("head"));
        config.advanced_ability = csvGetInt(csv, this.GetHeadIndex("advanced_ability"));
        config.special_skill = toIntArray(csvGetString(csv, this.GetHeadIndex("special_skill")));
        config.skill_level = toIntArray(csvGetString(csv, this.GetHeadIndex("skill_level")));
        config.employee_cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("employee_cost")));
        this.addConfig(config);
    };
    return WriterConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WriterConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/WriterConfig":149,"../CsvConfigRender":304}],579:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WriterLevelConfig_1 = require("../ConfigExtends/WriterLevelConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var WriterLevelConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WriterLevelConfigReaderStruct, _super);
    function WriterLevelConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "WriterLevel";
        return _this;
    }
    WriterLevelConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WriterLevelConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.zh_cn_name = csvGetString(csv, this.GetHeadIndex("zh_cn_name"));
        config.level = csvGetInt(csv, this.GetHeadIndex("level"));
        config.ability = csvGetInt(csv, this.GetHeadIndex("ability"));
        config.levelup_cost = DTItemNum_1.default.parseArray(csvGetString(csv, this.GetHeadIndex("levelup_cost")));
        this.addConfig(config);
    };
    return WriterLevelConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WriterLevelConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/WriterLevelConfig":150,"../CsvConfigRender":304}],580:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WriterSkillConfig_1 = require("../ConfigExtends/WriterSkillConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var WriterSkillConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WriterSkillConfigReaderStruct, _super);
    function WriterSkillConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "WriterSkill";
        return _this;
    }
    WriterSkillConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WriterSkillConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.name = csvGetString(csv, this.GetHeadIndex("name"));
        config.skill_level = csvGetInt(csv, this.GetHeadIndex("skill_level"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.req_level = csvGetInt(csv, this.GetHeadIndex("req_level"));
        config.label = toIntArray(csvGetString(csv, this.GetHeadIndex("label")));
        this.addConfig(config);
    };
    return WriterSkillConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WriterSkillConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/WriterSkillConfig":151,"../CsvConfigRender":304}],581:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var CsvConfigRender_1 = require("../CsvConfigRender");
var WriterStationConfig_1 = require("../ConfigExtends/WriterStationConfig");
var DTItemNum_1 = require("../ConfigExtends/DTItemNum");
var WriterStationConfigReaderStruct = /** @class */ (function (_super) {
    __extends(WriterStationConfigReaderStruct, _super);
    function WriterStationConfigReaderStruct() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableName = "WriterStation";
        return _this;
    }
    WriterStationConfigReaderStruct.prototype.ParseCsv = function (csv) {
        var config = new WriterStationConfig_1.default();
        config.id = csvGetInt(csv, this.GetHeadIndex("id"));
        config.tips = csvGetString(csv, this.GetHeadIndex("tips"));
        config.cost = DTItemNum_1.default.parse(csvGetString(csv, this.GetHeadIndex("cost")));
        config.req_block = csvGetInt(csv, this.GetHeadIndex("req_block"));
        this.addConfig(config);
    };
    return WriterStationConfigReaderStruct;
}(CsvConfigRender_1.default));
exports.default = WriterStationConfigReaderStruct;
},{"../ConfigExtends/DTItemNum":44,"../ConfigExtends/WriterStationConfig":152,"../CsvConfigRender":304}],582:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BGModelStruct_1 = require("../../Generates/GameLaunch/BGModelStruct");
var BGModel = /** @class */ (function (_super) {
    __extends(BGModel, _super);
    function BGModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BGModel;
}(BGModelStruct_1.default));
exports.default = BGModel;
},{"../../Generates/GameLaunch/BGModelStruct":598}],583:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DialogCloseWindowStruct_1 = require("../../Generates/GameLaunch/DialogCloseWindowStruct");
var DialogCloseWindow = /** @class */ (function (_super) {
    __extends(DialogCloseWindow, _super);
    function DialogCloseWindow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DialogCloseWindow;
}(DialogCloseWindowStruct_1.default));
exports.default = DialogCloseWindow;
},{"../../Generates/GameLaunch/DialogCloseWindowStruct":599}],584:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalModalWaitingStruct_1 = require("../../Generates/GameLaunch/GlobalModalWaitingStruct");
var GlobalModalWaiting = /** @class */ (function (_super) {
    __extends(GlobalModalWaiting, _super);
    function GlobalModalWaiting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GlobalModalWaiting;
}(GlobalModalWaitingStruct_1.default));
exports.default = GlobalModalWaiting;
},{"../../Generates/GameLaunch/GlobalModalWaitingStruct":601}],585:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LaunchLoaderPanelStruct_1 = require("../../Generates/GameLaunch/LaunchLoaderPanelStruct");
var Res_1 = require("../../../Config/Keys/Res");
var R_1 = require("../../../Config/Keys/R");
var LaunchLoaderPanel = /** @class */ (function (_super) {
    __extends(LaunchLoaderPanel, _super);
    function LaunchLoaderPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LaunchLoaderPanel.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_screenBG.m_icon.url = Res_1.default.getSpritePathHasExt(R_1.default.sprite.Launch_launch);
    };
    return LaunchLoaderPanel;
}(LaunchLoaderPanelStruct_1.default));
exports.default = LaunchLoaderPanel;
},{"../../../Config/Keys/R":307,"../../../Config/Keys/Res":308,"../../Generates/GameLaunch/LaunchLoaderPanelStruct":602}],586:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ScreenBGStruct_1 = require("../../Generates/GameLaunch/ScreenBGStruct");
var ScreenBG = /** @class */ (function (_super) {
    __extends(ScreenBG, _super);
    function ScreenBG() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ScreenBG;
}(ScreenBGStruct_1.default));
exports.default = ScreenBG;
},{"../../Generates/GameLaunch/ScreenBGStruct":603}],587:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemAlertMessageStruct_1 = require("../../Generates/GameLaunch/SystemAlertMessageStruct");
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var Ease = Laya.Ease;
var Tween = Laya.Tween;
var Handler = Laya.Handler;
var SystemAlertMessage = /** @class */ (function (_super) {
    __extends(SystemAlertMessage, _super);
    function SystemAlertMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SystemAlertMessage.prototype, "closeButton", {
        get: function () {
            return this.m_dialog.m_closeButton;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 对话框消息,一个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param yesObj 点击yes按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param buttonEnable 按钮是否可以点击
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemAlertMessage.prototype.open = function (txt, title, yesObj, yesFun, yesTxt, closeButtonVisiable, buttonEnable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (yesObj === void 0) { yesObj = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (buttonEnable === void 0) { buttonEnable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(title)) {
            title = "";
        }
        this.yesFun = yesFun;
        this.yesObj = yesObj;
        this.isClickButtonAutoClose = isClickButtonAutoClose;
        this.m_content.text = txt;
        this.m_title.text = title;
        this.m_okBtn.title = yesTxt;
        this.m_okBtn.enabled = buttonEnable;
        this.closeButton.enabled = buttonEnable;
        this.closeButton.visible = closeButtonVisiable;
        this.m_okBtn.onClick(this, this.onClickYes);
        this.closeButton.onClick(this, this.onClickYes);
        MenuLayer_1.default.showDialogModel();
        FguiHelper_1.default.centerScreen(this);
        this.scaleX = 0;
        this.scaleY = 0;
        Tween.to(this, { scaleX: 1, scaleY: 1 }, 500, Ease.backInOut);
        MenuLayer_1.default.floatMsg.addChild(this);
    };
    SystemAlertMessage.prototype.close = function () {
        MenuLayer_1.default.hideDialogModel();
        Tween.to(this, { scaleX: 0, scaleY: 0 }, 500, Ease.quadInOut, Handler.create(this, this.onHide));
    };
    SystemAlertMessage.prototype.onHide = function () {
        this.removeFromParent();
    };
    SystemAlertMessage.prototype.onClickYes = function () {
        if (this.isClickButtonAutoClose) {
            this.close();
        }
        if (this.yesFun) {
            if (this.yesObj) {
                this.yesFun.apply(this.yesObj);
            }
            else {
                this.yesFun();
            }
        }
    };
    return SystemAlertMessage;
}(SystemAlertMessageStruct_1.default));
exports.default = SystemAlertMessage;
},{"../../../GameFrame/Menu/MenuLayer":644,"../../../Libs/Helpers/FguiHelper":680,"../../Generates/GameLaunch/SystemAlertMessageStruct":604}],588:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemConfirmMessageStruct_1 = require("../../Generates/GameLaunch/SystemConfirmMessageStruct");
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var Ease = Laya.Ease;
var Tween = Laya.Tween;
var Handler = Laya.Handler;
var SystemConfirmMessage = /** @class */ (function (_super) {
    __extends(SystemConfirmMessage, _super);
    function SystemConfirmMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SystemConfirmMessage.prototype, "closeButton", {
        get: function () {
            return this.m_dialog.m_closeButton;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 对话框消息,一个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param caller 点击按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param yesObj 点击yes按钮回调对象
     * @param noFun 点击no按钮回调函数
     * @param noFun 点击no按钮回调对象
     * @param yesTxt yes按钮 文本
     * @param noTxt no按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemConfirmMessage.prototype.open = function (txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (caller === void 0) { caller = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (noFun === void 0) { noFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (noTxt === void 0) { noTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(title)) {
            title = "";
        }
        this.caller = caller;
        this.yesFun = yesFun;
        this.noFun = noFun;
        this.isClickButtonAutoClose = isClickButtonAutoClose;
        this.m_content.text = txt;
        this.m_title.text = title;
        this.m_okBtn.title = yesTxt;
        this.m_cancleBtn.title = noTxt;
        this.closeButton.visible = closeButtonVisiable;
        this.m_okBtn.onClick(this, this.onClickYes);
        this.m_cancleBtn.onClick(this, this.onClickNo);
        this.closeButton.onClick(this, this.onClickClose);
        MenuLayer_1.default.showDialogModel();
        MenuLayer_1.default.floatMsg.addChild(this);
        FguiHelper_1.default.centerScreen(this);
        Tween.clearAll(this);
        this.scaleX = 0;
        this.scaleY = 0;
        Tween.to(this, { scaleX: 1, scaleY: 1 }, 500, Ease.backInOut);
    };
    SystemConfirmMessage.prototype.close = function () {
        MenuLayer_1.default.hideDialogModel();
        Tween.to(this, { scaleX: 0, scaleY: 0 }, 500, Ease.quadInOut, Handler.create(this, this.onHide));
    };
    SystemConfirmMessage.prototype.onHide = function () {
        this.removeFromParent();
    };
    SystemConfirmMessage.prototype.onClickYes = function () {
        if (this.isClickButtonAutoClose) {
            this.close();
        }
        if (this.yesFun) {
            if (this.caller) {
                this.yesFun.apply(this.caller);
            }
            else {
                this.yesFun();
            }
        }
    };
    SystemConfirmMessage.prototype.onClickNo = function () {
        if (this.isClickButtonAutoClose) {
            this.close();
        }
        if (this.noFun) {
            if (this.caller) {
                this.noFun.apply(this.caller);
            }
            else {
                this.noFun();
            }
        }
    };
    SystemConfirmMessage.prototype.onClickClose = function () {
        this.close();
    };
    return SystemConfirmMessage;
}(SystemConfirmMessageStruct_1.default));
exports.default = SystemConfirmMessage;
},{"../../../GameFrame/Menu/MenuLayer":644,"../../../Libs/Helpers/FguiHelper":680,"../../Generates/GameLaunch/SystemConfirmMessageStruct":605}],589:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemToastMessageStruct_1 = require("../../Generates/GameLaunch/SystemToastMessageStruct");
var Ease = Laya.Ease;
var Tween = Laya.Tween;
var Handler = Laya.Handler;
var MenuLayer_1 = require("../../../GameFrame/Menu/MenuLayer");
var FguiHelper_1 = require("../../../Libs/Helpers/FguiHelper");
var SystemToastMessage = /** @class */ (function (_super) {
    __extends(SystemToastMessage, _super);
    function SystemToastMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemToastMessage.prototype.play = function (txt, onComplete) {
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        this._onCompleteHandler = onComplete;
        this.m_title.text = txt;
        Tween.clearAll(this);
        MenuLayer_1.default.floatMsg.addChild(this);
        FguiHelper_1.default.centerScreen(this);
        this.alpha = 0;
        Tween.to(this, { y: this.y - 100, alpha: 1 }, 500, Ease.quadInOut);
        Tween.to(this, { y: this.y - 200, alpha: 0 }, 500, Ease.quadInOut, Handler.create(this, this.onComplete), 1000);
    };
    SystemToastMessage.prototype.onComplete = function () {
        this.removeFromParent();
        if (this._onCompleteHandler) {
            this._onCompleteHandler.runWith(this);
            this._onCompleteHandler.recover();
            this._onCompleteHandler = null;
        }
    };
    return SystemToastMessage;
}(SystemToastMessageStruct_1.default));
exports.default = SystemToastMessage;
},{"../../../GameFrame/Menu/MenuLayer":644,"../../../Libs/Helpers/FguiHelper":680,"../../Generates/GameLaunch/SystemToastMessageStruct":606}],590:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WindowModalWaitingStruct_1 = require("../../Generates/GameLaunch/WindowModalWaitingStruct");
var WindowModalWaiting = /** @class */ (function (_super) {
    __extends(WindowModalWaiting, _super);
    function WindowModalWaiting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WindowModalWaiting;
}(WindowModalWaitingStruct_1.default));
exports.default = WindowModalWaiting;
},{"../../Generates/GameLaunch/WindowModalWaitingStruct":607}],591:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AccountInputStruct_1 = require("../../Generates/ModuleLogin/AccountInputStruct");
var AccountInput = /** @class */ (function (_super) {
    __extends(AccountInput, _super);
    function AccountInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AccountInput;
}(AccountInputStruct_1.default));
exports.default = AccountInput;
},{"../../Generates/ModuleLogin/AccountInputStruct":610}],592:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuestPanelStruct_1 = require("../../Generates/ModuleLogin/GuestPanelStruct");
var GuestPanel = /** @class */ (function (_super) {
    __extends(GuestPanel, _super);
    function GuestPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GuestPanel;
}(GuestPanelStruct_1.default));
exports.default = GuestPanel;
},{"../../Generates/ModuleLogin/GuestPanelStruct":611}],593:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginPanelStruct_1 = require("../../Generates/ModuleLogin/LoginPanelStruct");
var LoginPanel = /** @class */ (function (_super) {
    __extends(LoginPanel, _super);
    function LoginPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LoginPanel;
}(LoginPanelStruct_1.default));
exports.default = LoginPanel;
},{"../../Generates/ModuleLogin/LoginPanelStruct":612}],594:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginWindowUIStruct_1 = require("../../Generates/ModuleLogin/LoginWindowUIStruct");
var Res_1 = require("../../../Config/Keys/Res");
var R_1 = require("../../../Config/Keys/R");
var Game_1 = require("../../../Game");
var LoginWindowUI = /** @class */ (function (_super) {
    __extends(LoginWindowUI, _super);
    function LoginWindowUI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LoginWindowUI.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_screenBG.m_icon.url = Res_1.default.getSpritePathHasExt(R_1.default.sprite.Launch_launch);
    };
    // 如果定义了该方法，主窗口显示时将被调
    LoginWindowUI.prototype.onWindowShow = function () {
        this.m_txt_gamever.text = "GameVersion:" + Game_1.default.version.localAppVersionData.toString();
        this.m_txt_resVer.text = "ResVersion:" + Game_1.default.version.localResVersionData.toString();
    };
    // 如果定义了该方法,主窗口关闭时将被调
    LoginWindowUI.prototype.onWindowHide = function () {
    };
    return LoginWindowUI;
}(LoginWindowUIStruct_1.default));
exports.default = LoginWindowUI;
},{"../../../Config/Keys/R":307,"../../../Config/Keys/Res":308,"../../../Game":623,"../../Generates/ModuleLogin/LoginWindowUIStruct":613}],595:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PasswordInputStruct_1 = require("../../Generates/ModuleLogin/PasswordInputStruct");
var PasswordInput = /** @class */ (function (_super) {
    __extends(PasswordInput, _super);
    function PasswordInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PasswordInput;
}(PasswordInputStruct_1.default));
exports.default = PasswordInput;
},{"../../Generates/ModuleLogin/PasswordInputStruct":615}],596:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RegisterPanelStruct_1 = require("../../Generates/ModuleLogin/RegisterPanelStruct");
var RegisterPanel = /** @class */ (function (_super) {
    __extends(RegisterPanel, _super);
    function RegisterPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RegisterPanel;
}(RegisterPanelStruct_1.default));
exports.default = RegisterPanel;
},{"../../Generates/ModuleLogin/RegisterPanelStruct":616}],597:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Game_1 = require("../Game");
var FGLoader = /** @class */ (function (_super) {
    __extends(FGLoader, _super);
    function FGLoader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FGLoader, "freeList", {
        get: function () {
            if (FGLoader._freeList.length > 0) {
                FGLoader._freeList.length = 0;
            }
            var dict = FGLoader.freeDictForNum.__getDict();
            for (var url in dict) {
                // console.log(FGLoader.freeDictForNum.getValue(url) + " " + url);
                if (FGLoader.freeDictForNum.getValue(url) <= 0) {
                    FGLoader._freeList.push(url);
                }
            }
            return FGLoader._freeList;
        },
        enumerable: true,
        configurable: true
    });
    FGLoader.setUse = function (url) {
        var num = FGLoader.freeDictForNum.hasKey(url) ? FGLoader.freeDictForNum.getValue(url) + 1 : 1;
        FGLoader.freeDictForNum.add(url, num);
    };
    FGLoader.setFree = function (url) {
        if (url.indexOf("/MenuIcon/") != -1)
            return;
        FGLoader.freeDictForTime.add(url, Game_1.default.time.localTime);
        var num = FGLoader.freeDictForNum.hasKey(url) ? FGLoader.freeDictForNum.getValue(url) - 1 : 0;
        if (num < 0)
            num = 0;
        FGLoader.freeDictForNum.add(url, num);
    };
    FGLoader.removeFree = function (url) {
        FGLoader.freeDictForTime.remove(url);
        FGLoader.freeDictForNum.remove(url);
    };
    /**
     * 清理所有没有使用的
     */
    FGLoader.clearAllFree = function (list) {
        if (!list)
            list = FGLoader.freeList;
        while (list.length > 0) {
            var url = list.pop();
            // console.log("--ClearRes:" + url);
            FGLoader.removeFree(url);
            Laya.loader.clearRes(url);
        }
    };
    /**
     * 清理长时间没有使用的
     */
    FGLoader.clearFreeLong = function () {
        if (FGLoader.freeDictForNum.count <= Game_1.default.deviceSetting.fguiLoaderCacheNum)
            return;
        FGLoader._freeLongList.length = 0;
        var dict = FGLoader.freeDictForNum.__getDict();
        for (var url in dict) {
            // console.log(FGLoader.freeDictForNum.getValue(url) + " " + url);
            if (FGLoader.freeDictForNum.getValue(url) <= 0) {
                var time = Game_1.default.time.localTime - FGLoader.freeDictForTime.getValueOrDefault(url, 0);
                if (time > Game_1.default.deviceSetting.fguiLoaderCacheTime)
                    FGLoader._freeLongList.push(url);
            }
        }
        FGLoader.clearAllFree(FGLoader._freeLongList);
    };
    FGLoader.prototype.loadContent = function () {
        _super.prototype.loadContent.call(this);
    };
    FGLoader.prototype.getPackagenameByUrl = function (url) {
        return url.replace("ui://", "").split("/")[0];
    };
    FGLoader.prototype.loadFromPackage = function (itemURL) {
        // console.log("loadFromPackage:" + itemURL);
        var packageItem = fairygui.UIPackage.getItemByURL(itemURL);
        if (packageItem) {
            _super.prototype.loadFromPackage.call(this, itemURL);
        }
        else {
            var packagename = this.getPackagenameByUrl(itemURL);
            var config = Game_1.default.spriteRes.getconfig(packagename);
            if (!config) {
                config = Game_1.default.guiRes.getconfig(packagename);
            }
            if (config) {
                Game_1.default.asset.loadFgui(config, this, this.onLoadPackage);
            }
        }
    };
    FGLoader.prototype.onLoadPackage = function () {
        // console.log("onLoadPackage:" + this.url);
        _super.prototype.loadFromPackage.call(this, this.url);
    };
    FGLoader.prototype.loadExternal = function () {
        /*
        开始外部载入，地址在url属性
        载入完成后调用OnExternalLoadSuccess
        载入失败调用OnExternalLoadFailed
        注意：如果是外部载入，在载入结束后，调用OnExternalLoadSuccess或OnExternalLoadFailed前，
        比较严谨的做法是先检查url属性是否已经和这个载入的内容不相符。
        如果不相符，表示loader已经被修改了。
        这种情况下应该放弃调用OnExternalLoadSuccess或OnExternalLoadFailed。
        */
        // console.log("loadExternal:" + this.url);
        FGLoader.setUse(this.url);
        _super.prototype.loadExternal.call(this);
    };
    //释放外部载入的资源
    FGLoader.prototype.freeExternal = function (texture) {
        // console.log("freeExternal:" + this.url + "  " + texture.url);
        _super.prototype.freeExternal.call(this, texture);
        if (!isNullOrEmpty(texture.url)) {
            FGLoader.setFree(texture.url);
            texture.url = "";
        }
        // Laya.loader.clearRes(texture.url);
    };
    // 载入完成后调用
    FGLoader.prototype.onExternalLoadSuccess = function (texture) {
        // console.log("onExternalLoadSuccess:" + this.url);
        _super.prototype.onExternalLoadSuccess.call(this, texture);
    };
    // 载入失败调用
    FGLoader.prototype.onExternalLoadFailed = function () {
        _super.prototype.onExternalLoadFailed.call(this);
    };
    // 最后一次没有设置引用的时间
    FGLoader.freeDictForTime = new Dictionary_1.default();
    // 引用次数
    FGLoader.freeDictForNum = new Dictionary_1.default();
    FGLoader._freeList = [];
    FGLoader._freeLongList = [];
    return FGLoader;
}(fairygui.GLoader));
exports.default = FGLoader;
},{"../Game":623,"../Libs/Helpers/Dictionary":679}],598:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var BGModelStruct = /** @class */ (function (_super) {
    __extends(BGModelStruct, _super);
    function BGModelStruct() {
        return _super.call(this) || this;
    }
    BGModelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "BGModel"));
    };
    BGModelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bg = (this.getChild("bg"));
    };
    BGModelStruct.URL = "ui://47qsdr42f84so";
    BGModelStruct.DependPackages = ["GameLaunch"];
    return BGModelStruct;
}(fairygui.GComponent));
exports.default = BGModelStruct;
},{}],599:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var DialogCloseWindowStruct = /** @class */ (function (_super) {
    __extends(DialogCloseWindowStruct, _super);
    function DialogCloseWindowStruct() {
        return _super.call(this) || this;
    }
    DialogCloseWindowStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "DialogCloseWindow"));
    };
    DialogCloseWindowStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_closeButton = (this.getChild("closeButton"));
    };
    DialogCloseWindowStruct.URL = "ui://47qsdr42f84sg";
    DialogCloseWindowStruct.DependPackages = ["GameLaunch"];
    return DialogCloseWindowStruct;
}(fairygui.GComponent));
exports.default = DialogCloseWindowStruct;
},{}],600:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LaunchLoaderPanel_1 = require("../../Extends/GameLaunch/LaunchLoaderPanel");
var ScreenBG_1 = require("../../Extends/GameLaunch/ScreenBG");
var DialogCloseWindow_1 = require("../../Extends/GameLaunch/DialogCloseWindow");
var BGModel_1 = require("../../Extends/GameLaunch/BGModel");
var GlobalModalWaiting_1 = require("../../Extends/GameLaunch/GlobalModalWaiting");
var SystemAlertMessage_1 = require("../../Extends/GameLaunch/SystemAlertMessage");
var SystemConfirmMessage_1 = require("../../Extends/GameLaunch/SystemConfirmMessage");
var SystemToastMessage_1 = require("../../Extends/GameLaunch/SystemToastMessage");
var WindowModalWaiting_1 = require("../../Extends/GameLaunch/WindowModalWaiting");
var GameLaunchBinder = /** @class */ (function () {
    function GameLaunchBinder() {
    }
    GameLaunchBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(LaunchLoaderPanel_1.default.URL, LaunchLoaderPanel_1.default);
        bind(ScreenBG_1.default.URL, ScreenBG_1.default);
        bind(DialogCloseWindow_1.default.URL, DialogCloseWindow_1.default);
        bind(BGModel_1.default.URL, BGModel_1.default);
        bind(GlobalModalWaiting_1.default.URL, GlobalModalWaiting_1.default);
        bind(SystemAlertMessage_1.default.URL, SystemAlertMessage_1.default);
        bind(SystemConfirmMessage_1.default.URL, SystemConfirmMessage_1.default);
        bind(SystemToastMessage_1.default.URL, SystemToastMessage_1.default);
        bind(WindowModalWaiting_1.default.URL, WindowModalWaiting_1.default);
    };
    return GameLaunchBinder;
}());
exports.default = GameLaunchBinder;
},{"../../Extends/GameLaunch/BGModel":582,"../../Extends/GameLaunch/DialogCloseWindow":583,"../../Extends/GameLaunch/GlobalModalWaiting":584,"../../Extends/GameLaunch/LaunchLoaderPanel":585,"../../Extends/GameLaunch/ScreenBG":586,"../../Extends/GameLaunch/SystemAlertMessage":587,"../../Extends/GameLaunch/SystemConfirmMessage":588,"../../Extends/GameLaunch/SystemToastMessage":589,"../../Extends/GameLaunch/WindowModalWaiting":590}],601:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalModalWaitingStruct = /** @class */ (function (_super) {
    __extends(GlobalModalWaitingStruct, _super);
    function GlobalModalWaitingStruct() {
        return _super.call(this) || this;
    }
    GlobalModalWaitingStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "GlobalModalWaiting"));
    };
    GlobalModalWaitingStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_circle = (this.getChild("circle"));
        this.m_rotation = this.getTransition("rotation");
    };
    GlobalModalWaitingStruct.URL = "ui://47qsdr42nk8t0";
    GlobalModalWaitingStruct.DependPackages = ["GameLaunch"];
    return GlobalModalWaitingStruct;
}(fairygui.GComponent));
exports.default = GlobalModalWaitingStruct;
},{}],602:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LaunchLoaderPanelStruct = /** @class */ (function (_super) {
    __extends(LaunchLoaderPanelStruct, _super);
    function LaunchLoaderPanelStruct() {
        return _super.call(this) || this;
    }
    LaunchLoaderPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "LaunchLoaderPanel"));
    };
    LaunchLoaderPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
        this.m_help = (this.getChild("help"));
        this.m_txt_resVer = (this.getChild("txt_resVer"));
        this.m_txt_gamever = (this.getChild("txt_gamever"));
        this.m_screenBG = (this.getChild("screenBG"));
        this.m_progressBar = (this.getChild("progressBar"));
    };
    LaunchLoaderPanelStruct.URL = "ui://47qsdr42f84s0";
    LaunchLoaderPanelStruct.DependPackages = ["GameLaunch"];
    return LaunchLoaderPanelStruct;
}(fairygui.GComponent));
exports.default = LaunchLoaderPanelStruct;
},{}],603:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var ScreenBGStruct = /** @class */ (function (_super) {
    __extends(ScreenBGStruct, _super);
    function ScreenBGStruct() {
        return _super.call(this) || this;
    }
    ScreenBGStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "ScreenBG"));
    };
    ScreenBGStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChild("icon"));
    };
    ScreenBGStruct.URL = "ui://47qsdr42f84s1";
    ScreenBGStruct.DependPackages = ["GameLaunch"];
    return ScreenBGStruct;
}(fairygui.GLabel));
exports.default = ScreenBGStruct;
},{}],604:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemAlertMessageStruct = /** @class */ (function (_super) {
    __extends(SystemAlertMessageStruct, _super);
    function SystemAlertMessageStruct() {
        return _super.call(this) || this;
    }
    SystemAlertMessageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "SystemAlertMessage"));
    };
    SystemAlertMessageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_content = (this.getChild("content"));
        this.m_title = (this.getChild("title"));
        this.m_dialog = (this.getChild("dialog"));
        this.m_okBtn = (this.getChild("okBtn"));
    };
    SystemAlertMessageStruct.URL = "ui://47qsdr42nk8t1";
    SystemAlertMessageStruct.DependPackages = ["GameLaunch"];
    return SystemAlertMessageStruct;
}(fairygui.GComponent));
exports.default = SystemAlertMessageStruct;
},{}],605:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemConfirmMessageStruct = /** @class */ (function (_super) {
    __extends(SystemConfirmMessageStruct, _super);
    function SystemConfirmMessageStruct() {
        return _super.call(this) || this;
    }
    SystemConfirmMessageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "SystemConfirmMessage"));
    };
    SystemConfirmMessageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_content = (this.getChild("content"));
        this.m_title = (this.getChild("title"));
        this.m_dialog = (this.getChild("dialog"));
        this.m_okBtn = (this.getChild("okBtn"));
        this.m_cancleBtn = (this.getChild("cancleBtn"));
    };
    SystemConfirmMessageStruct.URL = "ui://47qsdr42nk8t2";
    SystemConfirmMessageStruct.DependPackages = ["GameLaunch"];
    return SystemConfirmMessageStruct;
}(fairygui.GComponent));
exports.default = SystemConfirmMessageStruct;
},{}],606:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SystemToastMessageStruct = /** @class */ (function (_super) {
    __extends(SystemToastMessageStruct, _super);
    function SystemToastMessageStruct() {
        return _super.call(this) || this;
    }
    SystemToastMessageStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "SystemToastMessage"));
    };
    SystemToastMessageStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChild("title"));
    };
    SystemToastMessageStruct.URL = "ui://47qsdr42nk8t3";
    SystemToastMessageStruct.DependPackages = ["GameLaunch"];
    return SystemToastMessageStruct;
}(fairygui.GComponent));
exports.default = SystemToastMessageStruct;
},{}],607:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var WindowModalWaitingStruct = /** @class */ (function (_super) {
    __extends(WindowModalWaitingStruct, _super);
    function WindowModalWaitingStruct() {
        return _super.call(this) || this;
    }
    WindowModalWaitingStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("GameLaunch", "WindowModalWaiting"));
    };
    WindowModalWaitingStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_circle = (this.getChild("circle"));
        this.m_rotation = this.getTransition("rotation");
    };
    WindowModalWaitingStruct.URL = "ui://47qsdr42f84sp";
    WindowModalWaitingStruct.DependPackages = ["GameLaunch"];
    return WindowModalWaitingStruct;
}(fairygui.GComponent));
exports.default = WindowModalWaitingStruct;
},{}],608:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GameLaunchBinder_1 = require("./GameLaunch/GameLaunchBinder");
var ModuleLoginBinder_1 = require("./ModuleLogin/ModuleLoginBinder");
var SoundBinder_1 = require("./Sound/SoundBinder");
var GuiBinderList = /** @class */ (function () {
    function GuiBinderList() {
    }
    GuiBinderList.fguiBinderAll = function () {
        GameLaunchBinder_1.default.bindAll();
        ModuleLoginBinder_1.default.bindAll();
        SoundBinder_1.default.bindAll();
    };
    return GuiBinderList;
}());
exports.default = GuiBinderList;
},{"./GameLaunch/GameLaunchBinder":600,"./ModuleLogin/ModuleLoginBinder":614,"./Sound/SoundBinder":618}],609:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
// =====================
// fgui 包名称
// ---------------------
var GuiPackageNames = /** @class */ (function () {
    function GuiPackageNames() {
    }
    GuiPackageNames.CommonBase = "CommonBase";
    GuiPackageNames.CommonFx = "CommonFx";
    GuiPackageNames.CommonGame = "CommonGame";
    GuiPackageNames.CommonNumber = "CommonNumber";
    GuiPackageNames.GameGM = "GameGM";
    GuiPackageNames.GameLaunch = "GameLaunch";
    GuiPackageNames.Lang = "Lang";
    GuiPackageNames.Lang_en = "Lang_en";
    GuiPackageNames.Lang_zh_cn = "Lang_zh-cn";
    GuiPackageNames.Lang_zh_tw = "Lang_zh_tw";
    GuiPackageNames.ModuleBag = "ModuleBag";
    GuiPackageNames.ModuleEmail = "ModuleEmail";
    GuiPackageNames.ModuleLogin = "ModuleLogin";
    GuiPackageNames.ModuleRank = "ModuleRank";
    GuiPackageNames.ModuleSetting = "ModuleSetting";
    GuiPackageNames.ModuleShop = "ModuleShop";
    GuiPackageNames.Sound = "Sound";
    GuiPackageNames.SystemModuleDialog = "SystemModuleDialog";
    GuiPackageNames.SystemModuleGuide = "SystemModuleGuide";
    GuiPackageNames.SystemModuleHome = "SystemModuleHome";
    GuiPackageNames.SystemModuleMenu = "SystemModuleMenu";
    GuiPackageNames.SystemModuleTask = "SystemModuleTask";
    GuiPackageNames.FontA = "FontA";
    GuiPackageNames._ResImagePic = "_ResImagePic";
    GuiPackageNames._ResImageUI = "_ResImageUI";
    GuiPackageNames.__ResImageTmp = "__ResImageTmp";
    GuiPackageNames.__Style = "__Style";
    return GuiPackageNames;
}());
exports.default = GuiPackageNames;
},{}],610:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var AccountInputStruct = /** @class */ (function (_super) {
    __extends(AccountInputStruct, _super);
    function AccountInputStruct() {
        return _super.call(this) || this;
    }
    AccountInputStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "AccountInput"));
    };
    AccountInputStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_txt_account = (this.getChild("txt_account"));
        this.m_accountComboBox = (this.getChild("accountComboBox"));
        this.m_button = (this.getChild("button"));
    };
    AccountInputStruct.URL = "ui://4698ugpknz0c1h";
    AccountInputStruct.DependPackages = ["ModuleLogin"];
    return AccountInputStruct;
}(fairygui.GComponent));
exports.default = AccountInputStruct;
},{}],611:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var GuestPanelStruct = /** @class */ (function (_super) {
    __extends(GuestPanelStruct, _super);
    function GuestPanelStruct() {
        return _super.call(this) || this;
    }
    GuestPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "GuestPanel"));
    };
    GuestPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_g_guestlogin = (this.getChild("g_guestlogin"));
        this.m_btn_guestlogin = (this.getChild("btn_guestlogin"));
        this.m_btn_linkaccount = (this.getChild("btn_linkaccount"));
        this.m_btn_back = (this.getChild("btn_back"));
    };
    GuestPanelStruct.URL = "ui://4698ugpknz0c24";
    GuestPanelStruct.DependPackages = ["ModuleLogin"];
    return GuestPanelStruct;
}(fairygui.GComponent));
exports.default = GuestPanelStruct;
},{}],612:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginPanelStruct = /** @class */ (function (_super) {
    __extends(LoginPanelStruct, _super);
    function LoginPanelStruct() {
        return _super.call(this) || this;
    }
    LoginPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "LoginPanel"));
    };
    LoginPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getController("c1");
        this.m_accountInput = (this.getChild("accountInput"));
        this.m_passwordInput = (this.getChild("passwordInput"));
        this.m_btn_forgot = (this.getChild("btn_forgot"));
        this.m_btn_security = (this.getChild("btn_security"));
        this.m_btn_login = (this.getChild("btn_login"));
        this.m_btn_register = (this.getChild("btn_register"));
        this.m_btn_guest = (this.getChild("btn_guest"));
    };
    LoginPanelStruct.URL = "ui://4698ugpknz0c1g";
    LoginPanelStruct.DependPackages = ["ModuleLogin"];
    return LoginPanelStruct;
}(fairygui.GComponent));
exports.default = LoginPanelStruct;
},{}],613:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginWindowUIStruct = /** @class */ (function (_super) {
    __extends(LoginWindowUIStruct, _super);
    function LoginWindowUIStruct() {
        return _super.call(this) || this;
    }
    LoginWindowUIStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "LoginWindowUI"));
    };
    LoginWindowUIStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_TabCtrl = this.getController("TabCtrl");
        this.m_txt_resVer = (this.getChild("txt_resVer"));
        this.m_txt_gamever = (this.getChild("txt_gamever"));
        this.m_screenBG = (this.getChild("screenBG"));
        this.m_loginPanel = (this.getChild("loginPanel"));
        this.m_guestPanel = (this.getChild("guestPanel"));
        this.m_registerPanel = (this.getChild("registerPanel"));
    };
    LoginWindowUIStruct.URL = "ui://4698ugpknz0c0";
    LoginWindowUIStruct.DependPackages = ["ModuleLogin", "GameLaunch"];
    return LoginWindowUIStruct;
}(fairygui.GComponent));
exports.default = LoginWindowUIStruct;
},{}],614:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var LoginWindowUI_1 = require("../../Extends/ModuleLogin/LoginWindowUI");
var LoginPanel_1 = require("../../Extends/ModuleLogin/LoginPanel");
var AccountInput_1 = require("../../Extends/ModuleLogin/AccountInput");
var PasswordInput_1 = require("../../Extends/ModuleLogin/PasswordInput");
var RegisterPanel_1 = require("../../Extends/ModuleLogin/RegisterPanel");
var GuestPanel_1 = require("../../Extends/ModuleLogin/GuestPanel");
var ModuleLoginBinder = /** @class */ (function () {
    function ModuleLoginBinder() {
    }
    ModuleLoginBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
        bind(LoginWindowUI_1.default.URL, LoginWindowUI_1.default);
        bind(LoginPanel_1.default.URL, LoginPanel_1.default);
        bind(AccountInput_1.default.URL, AccountInput_1.default);
        bind(PasswordInput_1.default.URL, PasswordInput_1.default);
        bind(RegisterPanel_1.default.URL, RegisterPanel_1.default);
        bind(GuestPanel_1.default.URL, GuestPanel_1.default);
    };
    return ModuleLoginBinder;
}());
exports.default = ModuleLoginBinder;
},{"../../Extends/ModuleLogin/AccountInput":591,"../../Extends/ModuleLogin/GuestPanel":592,"../../Extends/ModuleLogin/LoginPanel":593,"../../Extends/ModuleLogin/LoginWindowUI":594,"../../Extends/ModuleLogin/PasswordInput":595,"../../Extends/ModuleLogin/RegisterPanel":596}],615:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var PasswordInputStruct = /** @class */ (function (_super) {
    __extends(PasswordInputStruct, _super);
    function PasswordInputStruct() {
        return _super.call(this) || this;
    }
    PasswordInputStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "passwordInput"));
    };
    PasswordInputStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_txt_password = (this.getChild("txt_password"));
        this.m_btn_pwdeye = (this.getChild("btn_pwdeye"));
    };
    PasswordInputStruct.URL = "ui://4698ugpknz0c1n";
    PasswordInputStruct.DependPackages = ["ModuleLogin"];
    return PasswordInputStruct;
}(fairygui.GComponent));
exports.default = PasswordInputStruct;
},{}],616:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var RegisterPanelStruct = /** @class */ (function (_super) {
    __extends(RegisterPanelStruct, _super);
    function RegisterPanelStruct() {
        return _super.call(this) || this;
    }
    RegisterPanelStruct.createInstance = function () {
        return (fairygui.UIPackage.createObject("ModuleLogin", "RegisterPanel"));
    };
    RegisterPanelStruct.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getController("c1");
        this.m_accountInput = (this.getChild("accountInput"));
        this.m_passwordInput = (this.getChild("passwordInput"));
        this.m_btn_onRegister = (this.getChild("btn_onRegister"));
        this.m_lb_agreement = (this.getChild("lb_agreement"));
        this.m_btn_registerback = (this.getChild("btn_registerback"));
    };
    RegisterPanelStruct.URL = "ui://4698ugpknz0c1z";
    RegisterPanelStruct.DependPackages = ["ModuleLogin"];
    return RegisterPanelStruct;
}(fairygui.GComponent));
exports.default = RegisterPanelStruct;
},{}],617:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var GuiSetting_1 = require("../GuiSetting");
var SoundKey = /** @class */ (function () {
    function SoundKey() {
    }
    Object.defineProperty(SoundKey, "idDict", {
        get: function () {
            if (!SoundKey._idDict) {
                SoundKey.init();
            }
            return SoundKey._idDict;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SoundKey, "extDict", {
        get: function () {
            if (!SoundKey._extDict) {
                SoundKey.init();
            }
            return SoundKey._extDict;
        },
        enumerable: true,
        configurable: true
    });
    SoundKey.getId = function (key) {
        if (!SoundKey.idDict.hasKey(key)) {
            console.error("SoundKey 不存在 key=" + key);
            return "";
        }
        return SoundKey.idDict.getValue(key);
    };
    SoundKey.getUrl = function (key) {
        return "ui://" + SoundKey.SoundPackageId + SoundKey.getId(key);
    };
    SoundKey.getPath = function (key) {
        return GuiSetting_1.default.getResPath(SoundKey.SoundPackageName + "_" + SoundKey.getId(key) + SoundKey.extDict.getValue(key), "fgui");
    };
    SoundKey.init = function () {
        var dict = SoundKey._idDict = new Dictionary_1.default();
        dict.add("MM_BGM_Cinema.mp3", "s3xz1n");
        dict.add("MM_BGM_Propaganda.mp3", "s3xz1o");
        dict.add("MM_BGM_RoadShow.mp3", "s3xz1p");
        dict.add("MM_BGM_Award.mp3", "i7ne2w");
        dict.add("MM29_TicketsGreat.ogg", "806p32");
        dict.add("MM01_Button.ogg", "r6c533");
        dict.add("MM02_Popup.ogg", "r6c534");
        dict.add("MM03_ReachGoal.ogg", "r6c535");
        dict.add("MM04_Lose.ogg", "r6c536");
        dict.add("MM05_Upgrade.ogg", "r6c537");
        dict.add("MM06_Building.ogg", "r6c538");
        dict.add("MM07_GoldMuch.ogg", "r6c539");
        dict.add("MM08_GoldLess.ogg", "r6c53a");
        dict.add("MM09_GoldReward.ogg", "r6c53b");
        dict.add("MM10_AwardSwitching.ogg", "r6c53c");
        dict.add("MM11_NewsPaperTop.ogg", "r6c53d");
        dict.add("MM12_RecruitArtist.ogg", "r6c53e");
        dict.add("MM13_GetArtist.ogg", "r6c53f");
        dict.add("MM14_ArtistGradeUp.ogg", "r6c53g");
        dict.add("MM15_Propaganda.ogg", "r6c53h");
        dict.add("MM16_ScriptRolling.ogg", "r6c53i");
        dict.add("MM17_FoundArtist.ogg", "r6c53j");
        dict.add("MM18_Screen.ogg", "r6c53k");
        dict.add("MM19_ArtistShow.ogg", "r6c53l");
        dict.add("MM20_ArtistData.ogg", "r6c53m");
        dict.add("MM21_ArtistAccord.ogg", "r6c53n");
        dict.add("MM22_ScreenOver.ogg", "r6c53o");
        dict.add("MM23_Premiere.ogg", "r6c53p");
        dict.add("MM24_NiceScore1.ogg", "r6c53q");
        dict.add("MM25_NiceScore2.ogg", "r6c53r");
        dict.add("MM26_NiceScore3.ogg", "r6c53s");
        dict.add("MM27_TicketsOrdinary.ogg", "r6c53t");
        dict.add("MM28_TicketsGood.ogg", "r6c53u");
        dict.add("MM30_Settlements.ogg", "r6c53v");
        dict.add("MM31_ClickScreenMenu.ogg", "r6c53w");
        dict.add("MM32_GetScript .ogg", "r6c53x");
        dict.add("MM33_NiceScore4.ogg", "r6c53y");
        dict.add("MM34_CultrueArtist.ogg", "r6c53z");
        dict.add("MM35_AwardResults.ogg", "r6c540");
        dict.add("MM36_CarAcross.ogg", "r6c541");
        dict.add("MM37_FilmStart.ogg", "r6c542");
        dict.add("MM38_AudienceGetIn.ogg", "r6c543");
        dict.add("MM39_FilmShow.ogg", "r6c544");
        dict.add("MM40_FilmScreen.ogg", "r6c545");
        dict.add("MM41_ExpectNotices.ogg", "l1r646");
        dict.add("MM42_FilmFemale01.mp3", "qlot4g");
        dict.add("MM43_FilmFemale02.mp3", "qlot4h");
        dict.add("MM44_FilmFemale03.mp3", "qlot4i");
        dict.add("MM45_FilmFemale04.mp3", "qlot4j");
        dict.add("MM46_FilmMale01.mp3", "qlot4k");
        dict.add("MM47_FilmMale02.mp3", "qlot4l");
        dict.add("MM48_FilmMale03.mp3", "qlot4m");
        dict.add("MM49_FilmMale04.mp3", "qlot4n");
        dict.add("MM50_FilmChangge.mp3", "qlot4o");
        var exts = SoundKey._extDict = new Dictionary_1.default();
        exts.add("MM_BGM_Cinema.mp3", ".mp3");
        exts.add("MM_BGM_Propaganda.mp3", ".mp3");
        exts.add("MM_BGM_RoadShow.mp3", ".mp3");
        exts.add("MM_BGM_Award.mp3", ".mp3");
        exts.add("MM29_TicketsGreat.ogg", ".ogg");
        exts.add("MM01_Button.ogg", ".ogg");
        exts.add("MM02_Popup.ogg", ".ogg");
        exts.add("MM03_ReachGoal.ogg", ".ogg");
        exts.add("MM04_Lose.ogg", ".ogg");
        exts.add("MM05_Upgrade.ogg", ".ogg");
        exts.add("MM06_Building.ogg", ".ogg");
        exts.add("MM07_GoldMuch.ogg", ".ogg");
        exts.add("MM08_GoldLess.ogg", ".ogg");
        exts.add("MM09_GoldReward.ogg", ".ogg");
        exts.add("MM10_AwardSwitching.ogg", ".ogg");
        exts.add("MM11_NewsPaperTop.ogg", ".ogg");
        exts.add("MM12_RecruitArtist.ogg", ".ogg");
        exts.add("MM13_GetArtist.ogg", ".ogg");
        exts.add("MM14_ArtistGradeUp.ogg", ".ogg");
        exts.add("MM15_Propaganda.ogg", ".ogg");
        exts.add("MM16_ScriptRolling.ogg", ".ogg");
        exts.add("MM17_FoundArtist.ogg", ".ogg");
        exts.add("MM18_Screen.ogg", ".ogg");
        exts.add("MM19_ArtistShow.ogg", ".ogg");
        exts.add("MM20_ArtistData.ogg", ".ogg");
        exts.add("MM21_ArtistAccord.ogg", ".ogg");
        exts.add("MM22_ScreenOver.ogg", ".ogg");
        exts.add("MM23_Premiere.ogg", ".ogg");
        exts.add("MM24_NiceScore1.ogg", ".ogg");
        exts.add("MM25_NiceScore2.ogg", ".ogg");
        exts.add("MM26_NiceScore3.ogg", ".ogg");
        exts.add("MM27_TicketsOrdinary.ogg", ".ogg");
        exts.add("MM28_TicketsGood.ogg", ".ogg");
        exts.add("MM30_Settlements.ogg", ".ogg");
        exts.add("MM31_ClickScreenMenu.ogg", ".ogg");
        exts.add("MM32_GetScript .ogg", ".ogg");
        exts.add("MM33_NiceScore4.ogg", ".ogg");
        exts.add("MM34_CultrueArtist.ogg", ".ogg");
        exts.add("MM35_AwardResults.ogg", ".ogg");
        exts.add("MM36_CarAcross.ogg", ".ogg");
        exts.add("MM37_FilmStart.ogg", ".ogg");
        exts.add("MM38_AudienceGetIn.ogg", ".ogg");
        exts.add("MM39_FilmShow.ogg", ".ogg");
        exts.add("MM40_FilmScreen.ogg", ".ogg");
        exts.add("MM41_ExpectNotices.ogg", ".ogg");
        exts.add("MM42_FilmFemale01.mp3", ".mp3");
        exts.add("MM43_FilmFemale02.mp3", ".mp3");
        exts.add("MM44_FilmFemale03.mp3", ".mp3");
        exts.add("MM45_FilmFemale04.mp3", ".mp3");
        exts.add("MM46_FilmMale01.mp3", ".mp3");
        exts.add("MM47_FilmMale02.mp3", ".mp3");
        exts.add("MM48_FilmMale03.mp3", ".mp3");
        exts.add("MM49_FilmMale04.mp3", ".mp3");
        exts.add("MM50_FilmChangge.mp3", ".mp3");
    };
    SoundKey.SoundPackageName = "Sound";
    SoundKey.SoundPackageId = "44whq70o";
    SoundKey.MM_BGM_Cinema = "MM_BGM_Cinema.mp3";
    SoundKey.MM_BGM_Propaganda = "MM_BGM_Propaganda.mp3";
    SoundKey.MM_BGM_RoadShow = "MM_BGM_RoadShow.mp3";
    SoundKey.MM_BGM_Award = "MM_BGM_Award.mp3";
    SoundKey.MM29_TicketsGreat = "MM29_TicketsGreat.ogg";
    SoundKey.MM01_Button = "MM01_Button.ogg";
    SoundKey.MM02_Popup = "MM02_Popup.ogg";
    SoundKey.MM03_ReachGoal = "MM03_ReachGoal.ogg";
    SoundKey.MM04_Lose = "MM04_Lose.ogg";
    SoundKey.MM05_Upgrade = "MM05_Upgrade.ogg";
    SoundKey.MM06_Building = "MM06_Building.ogg";
    SoundKey.MM07_GoldMuch = "MM07_GoldMuch.ogg";
    SoundKey.MM08_GoldLess = "MM08_GoldLess.ogg";
    SoundKey.MM09_GoldReward = "MM09_GoldReward.ogg";
    SoundKey.MM10_AwardSwitching = "MM10_AwardSwitching.ogg";
    SoundKey.MM11_NewsPaperTop = "MM11_NewsPaperTop.ogg";
    SoundKey.MM12_RecruitArtist = "MM12_RecruitArtist.ogg";
    SoundKey.MM13_GetArtist = "MM13_GetArtist.ogg";
    SoundKey.MM14_ArtistGradeUp = "MM14_ArtistGradeUp.ogg";
    SoundKey.MM15_Propaganda = "MM15_Propaganda.ogg";
    SoundKey.MM16_ScriptRolling = "MM16_ScriptRolling.ogg";
    SoundKey.MM17_FoundArtist = "MM17_FoundArtist.ogg";
    SoundKey.MM18_Screen = "MM18_Screen.ogg";
    SoundKey.MM19_ArtistShow = "MM19_ArtistShow.ogg";
    SoundKey.MM20_ArtistData = "MM20_ArtistData.ogg";
    SoundKey.MM21_ArtistAccord = "MM21_ArtistAccord.ogg";
    SoundKey.MM22_ScreenOver = "MM22_ScreenOver.ogg";
    SoundKey.MM23_Premiere = "MM23_Premiere.ogg";
    SoundKey.MM24_NiceScore1 = "MM24_NiceScore1.ogg";
    SoundKey.MM25_NiceScore2 = "MM25_NiceScore2.ogg";
    SoundKey.MM26_NiceScore3 = "MM26_NiceScore3.ogg";
    SoundKey.MM27_TicketsOrdinary = "MM27_TicketsOrdinary.ogg";
    SoundKey.MM28_TicketsGood = "MM28_TicketsGood.ogg";
    SoundKey.MM30_Settlements = "MM30_Settlements.ogg";
    SoundKey.MM31_ClickScreenMenu = "MM31_ClickScreenMenu.ogg";
    SoundKey.MM32_GetScript = "MM32_GetScript .ogg";
    SoundKey.MM33_NiceScore4 = "MM33_NiceScore4.ogg";
    SoundKey.MM34_CultrueArtist = "MM34_CultrueArtist.ogg";
    SoundKey.MM35_AwardResults = "MM35_AwardResults.ogg";
    SoundKey.MM36_CarAcross = "MM36_CarAcross.ogg";
    SoundKey.MM37_FilmStart = "MM37_FilmStart.ogg";
    SoundKey.MM38_AudienceGetIn = "MM38_AudienceGetIn.ogg";
    SoundKey.MM39_FilmShow = "MM39_FilmShow.ogg";
    SoundKey.MM40_FilmScreen = "MM40_FilmScreen.ogg";
    SoundKey.MM41_ExpectNotices = "MM41_ExpectNotices.ogg";
    SoundKey.MM42_FilmFemale01 = "MM42_FilmFemale01.mp3";
    SoundKey.MM43_FilmFemale02 = "MM43_FilmFemale02.mp3";
    SoundKey.MM44_FilmFemale03 = "MM44_FilmFemale03.mp3";
    SoundKey.MM45_FilmFemale04 = "MM45_FilmFemale04.mp3";
    SoundKey.MM46_FilmMale01 = "MM46_FilmMale01.mp3";
    SoundKey.MM47_FilmMale02 = "MM47_FilmMale02.mp3";
    SoundKey.MM48_FilmMale03 = "MM48_FilmMale03.mp3";
    SoundKey.MM49_FilmMale04 = "MM49_FilmMale04.mp3";
    SoundKey.MM50_FilmChangge = "MM50_FilmChangge.mp3";
    return SoundKey;
}());
exports.default = SoundKey;
},{"../../Libs/Helpers/Dictionary":679,"../GuiSetting":621}],618:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.ExportFairyGUICode生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var SoundBinder = /** @class */ (function () {
    function SoundBinder() {
    }
    SoundBinder.bindAll = function () {
        var bind = fairygui.UIObjectFactory.setPackageItemExtension;
    };
    return SoundBinder;
}());
exports.default = SoundBinder;
},{}],619:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Loader = Laya.Loader;
var GuiSetting_1 = require("./GuiSetting");
// =====================
// fgui包资源配置
// ---------------------
var GuiResPackageConfig = /** @class */ (function () {
    function GuiResPackageConfig() {
        // xxx@atlasX.png
        this.resAtlas = [];
        // 声音
        this.sounds = [];
    }
    Object.defineProperty(GuiResPackageConfig.prototype, "loadList", {
        // 获取加载列表
        get: function () {
            if (!this._loadList) {
                var list = [];
                list.push({ url: GuiSetting_1.default.getResPath(this.resBin, this.resDir), type: Loader.BUFFER });
                if (this.resAtlas) {
                    for (var i = 0; i < this.resAtlas.length; i++) {
                        list.push({ url: GuiSetting_1.default.getResPath(this.resAtlas[i], this.resDir), type: Loader.IMAGE });
                    }
                }
                if (this.sounds) {
                    for (var i = 0; i < this.sounds.length; i++) {
                        list.push({ url: GuiSetting_1.default.getResPath(this.sounds[i], this.resDir), type: Loader.SOUND });
                    }
                }
                this._loadList = list;
            }
            return this._loadList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GuiResPackageConfig.prototype, "packagePath", {
        get: function () {
            return GuiSetting_1.default.getResPackagePath(this.packageName, this.resDir);
        },
        enumerable: true,
        configurable: true
    });
    return GuiResPackageConfig;
}());
exports.default = GuiResPackageConfig;
},{"./GuiSetting":621}],620:[function(require,module,exports){
"use strict";
/////////////////////////////////////
// ihaiu.GenerateFguiResPackageConfig生成
// http://blog.ihaiu.com
/////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var GuiResPackageConfig_1 = require("./GuiResPackageConfig");
// =====================
// fgui包资源配置列表
// ---------------------
var GuiResPackageConfigReader = /** @class */ (function () {
    function GuiResPackageConfigReader() {
        // 字典
        this.dict = new Dictionary_1.default();
    }
    // 添加配置
    GuiResPackageConfigReader.prototype.addconfig = function (config) {
        this.dict.add(config.packageName, config);
    };
    // 获取配置
    GuiResPackageConfigReader.prototype.getconfig = function (packageName) {
        return this.dict.getValue(packageName);
    };
    // 初始化
    GuiResPackageConfigReader.prototype.install = function () {
        var config;
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "GameLaunch";
        config.resBin = "GameLaunch.bin";
        config.resAtlas.push("GameLaunch_atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "ModuleLogin";
        config.resBin = "ModuleLogin.bin";
        config.resAtlas.push("ModuleLogin_atlas0.png");
        config.resAtlas.push("ModuleLogin_atlas_nz0c1.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fgui";
        config.packageName = "__ResImageTmp";
        config.resBin = "__ResImageTmp.bin";
        config.resAtlas.push("__ResImageTmp_atlas_f84s2.png");
        this.addconfig(config);
    };
    return GuiResPackageConfigReader;
}());
exports.default = GuiResPackageConfigReader;
},{"../Libs/Helpers/Dictionary":679,"./GuiResPackageConfig":619}],621:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
// =====================
// fgui 设置
// ---------------------
var GuiSetting = /** @class */ (function () {
    function GuiSetting() {
    }
    GuiSetting.getResPackagePath = function (packageName, dir) {
        if (isNullOrEmpty(dir)) {
            return "" + GuiSetting.resRoot + packageName;
        }
        else {
            return "" + GuiSetting.resRoot + dir + "/" + packageName;
        }
    };
    GuiSetting.getResPath = function (filename, dir) {
        if (isNullOrEmpty(dir)) {
            return "" + GuiSetting.resRoot + filename;
        }
        else {
            return "" + GuiSetting.resRoot + dir + "/" + filename;
        }
    };
    GuiSetting.addPackage = function (resKey, packageConfig) {
        if (GuiSetting._uiPackageDict.hasKey(resKey)) {
            return GuiSetting._uiPackageDict.getValue(resKey);
        }
        else {
            var pkg = fairygui.UIPackage.addPackage(resKey);
            GuiSetting._uiPackageDict.add(resKey, pkg);
            return pkg;
        }
    };
    GuiSetting.removePackage = function (resKey, packageConfig) {
        var pkg = GuiSetting._uiPackageDict.getValue(resKey);
        if (pkg) {
            fairygui.UIPackage.removePackage(resKey);
            pkg.dispose();
            GuiSetting._uiPackageDict.remove(resKey);
        }
        GuiSetting._uiPackageDictForReferenceNum.remove(resKey);
    };
    GuiSetting.hasLoadPackage = function (resKey) {
        return GuiSetting._uiPackageDict.hasKey(resKey);
    };
    GuiSetting.addPackageReferenceNum = function (resKey) {
        var num = GuiSetting.getPackageReferenceNum(resKey) + 1;
        if (num == 0) {
            num = 1;
        }
        console.log("~~addPackageReferenceNum:  " + num + "  " + resKey);
        GuiSetting._uiPackageDictForReferenceNum.add(resKey, num);
        return num;
    };
    GuiSetting.removePackageReferenceNum = function (resKey) {
        var num = GuiSetting.getPackageReferenceNum(resKey) - 1;
        if (num < 0) {
            num = 0;
        }
        console.log("~~removePackageReferenceNum:  " + num + "  " + resKey);
        GuiSetting._uiPackageDictForReferenceNum.add(resKey, num);
        return num;
    };
    GuiSetting.getPackageReferenceNum = function (resKey) {
        return GuiSetting._uiPackageDictForReferenceNum.hasKey(resKey) ? GuiSetting._uiPackageDictForReferenceNum.getValue(resKey) : 0;
    };
    // 资源根目录
    GuiSetting.resRoot = "res/";
    // 后缀
    GuiSetting.packageFileExtension = "bin";
    // 包        
    GuiSetting._uiPackageDict = new Dictionary_1.default();
    // 包 引用次数
    GuiSetting._uiPackageDictForReferenceNum = new Dictionary_1.default();
    return GuiSetting;
}());
exports.default = GuiSetting;
},{"../Libs/Helpers/Dictionary":679}],622:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var GuiResPackageConfig_1 = require("./GuiResPackageConfig");
/////////////////////////////////////
// ihaiu.GenerateFguiResPackageConfig生成
// http://blog.ihaiu.com
/////////////////////////////////////
// =====================
// fgui包资源配置列表
// ---------------------
var SpriteResPackageConfigReader = /** @class */ (function () {
    function SpriteResPackageConfigReader() {
        // 字典
        this.dict = new Dictionary_1.default();
    }
    // 添加配置
    SpriteResPackageConfigReader.prototype.addconfig = function (config) {
        this.dict.add(config.packageName, config);
    };
    // 获取配置
    SpriteResPackageConfigReader.prototype.getconfig = function (packageName) {
        return this.dict.getValue(packageName);
    };
    // 初始化
    SpriteResPackageConfigReader.prototype.install = function () {
        var config;
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ActivityIcon";
        config.resBin = "ActivityIcon.bin";
        config.resAtlas.push("ActivityIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ActorBodyIcon";
        config.resBin = "ActorBodyIcon.bin";
        config.resAtlas.push("ActorBodyIcon@atlas0.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_1.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_2.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_3.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_4.png");
        config.resAtlas.push("ActorBodyIcon@atlas0_5.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "BlockIcon";
        config.resBin = "BlockIcon.bin";
        config.resAtlas.push("BlockIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "Building";
        config.resBin = "Building.bin";
        config.resAtlas.push("Building@atlas0.png");
        config.resAtlas.push("Building@atlas0_1.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "CinemaIcon";
        config.resBin = "CinemaIcon.bin";
        config.resAtlas.push("CinemaIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "Icon_En";
        config.resBin = "Icon_En.bin";
        config.resAtlas.push("Icon_En@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "Icon_ZH_CN";
        config.resBin = "Icon_ZH_CN.bin";
        config.resAtlas.push("Icon_ZH_CN@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ItemIcon";
        config.resBin = "ItemIcon.bin";
        config.resAtlas.push("ItemIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "MeetingIcon";
        config.resBin = "MeetingIcon.bin";
        config.resAtlas.push("MeetingIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "MenuIcon";
        config.resBin = "MenuIcon.bin";
        config.resAtlas.push("MenuIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "NPCHeadIcon";
        config.resBin = "NPCHeadIcon.bin";
        config.resAtlas.push("NPCHeadIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "PlayerBodyIcon";
        config.resBin = "PlayerBodyIcon.bin";
        config.resAtlas.push("PlayerBodyIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "PlayerHeadIcon";
        config.resBin = "PlayerHeadIcon.bin";
        config.resAtlas.push("PlayerHeadIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "SettingIcon";
        config.resBin = "SettingIcon.bin";
        config.resAtlas.push("SettingIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "ShootIcon";
        config.resBin = "ShootIcon.bin";
        config.resAtlas.push("ShootIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "SkillIcon";
        config.resBin = "SkillIcon.bin";
        config.resAtlas.push("SkillIcon@atlas0.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "StoryIcon";
        config.resBin = "StoryIcon.bin";
        config.resAtlas.push("StoryIcon@atlas0.png");
        config.resAtlas.push("StoryIcon@atlas0_1.png");
        config.resAtlas.push("StoryIcon@atlas0_2.png");
        config.resAtlas.push("StoryIcon@atlas0_3.png");
        this.addconfig(config);
        config = new GuiResPackageConfig_1.default();
        config.resDir = "fsprite";
        config.packageName = "StoryStackIcon";
        config.resBin = "StoryStackIcon.bin";
        config.resAtlas.push("StoryStackIcon@atlas0.png");
        this.addconfig(config);
    };
    return SpriteResPackageConfigReader;
}());
exports.default = SpriteResPackageConfigReader;
},{"../Libs/Helpers/Dictionary":679,"./GuiResPackageConfig":619}],623:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigManager_1 = require("./Config/ConfigManager");
var ScreenSettingConfig_1 = require("./GameSetting/ScreenSettingConfig");
var GameLocalStorage_1 = require("./GameFrame/LocalStorage/GameLocalStorage");
var GameDeviceConfig_1 = require("./GameSetting/GameDeviceConfig");
var BrowserDetectConfig_1 = require("./GameSetting/BrowserDetectConfig");
var LangManager_1 = require("./Config/LangManager");
var AssetManager_1 = require("./GameFrame/AssetManagers/AssetManager");
var GuiResPackageConfigReader_1 = require("./FGUI/GuiResPackageConfigReader");
var SpriteResPackageConfigReader_1 = require("./FGUI/SpriteResPackageConfigReader");
var Emitter_1 = require("./Libs/Emitter");
var MenuManager_1 = require("./GameFrame/Menu/MenuManager");
var ChannelManager_1 = require("./GameFrame/Channel/ChannelManager");
var ModelManager_1 = require("./GameModule/ModelManager");
var VersionManager_1 = require("./GameVersion/VersionManager");
var GameApplicationBrowser_1 = require("./Bridge/Browser/GameApplicationBrowser");
var AudioManager_1 = require("./GameFrame/Sound/AudioManager");
var GameTimeData_1 = require("./GameFrame/Datas/GameTimeData");
var GameSystemMessage_1 = require("./GameModule/GameSystemMessage");
var LaunchText_1 = require("./Config/Keys/LaunchText");
var LoaderSettingHandler_1 = require("./GameFrame/Loader/LoaderSettingHandler");
var LoaderManager_1 = require("./GameFrame/Loader/LoaderManager");
var Game = /** @class */ (function () {
    function Game() {
    }
    //=====================
    // 初始化
    //----------------------
    Game.init = function () {
    };
    //=====================
    // 游戏设置
    //----------------------
    // 分辨率设置
    Game.screenSetting = new ScreenSettingConfig_1.default();
    // 设备设置
    Game.deviceSetting = new GameDeviceConfig_1.default();
    // 浏览器信息
    Game.browserSetting = new BrowserDetectConfig_1.default();
    // 应用桥接
    Game.application = new GameApplicationBrowser_1.default();
    // 游戏启动文本
    Game.launchText = new LaunchText_1.default();
    //=====================
    // 游戏框架模块
    //----------------------
    // 资源
    Game.asset = new AssetManager_1.default();
    // 配置
    Game.config = new ConfigManager_1.default();
    // 多语言
    Game.lang = LangManager_1.default.Instance;
    // 声音
    Game.sound = new AudioManager_1.default();
    // 时间
    Game.time = new GameTimeData_1.default();
    // 本地数据存储
    Game.localStorage = GameLocalStorage_1.default.Instance;
    // 加载界面
    Game.loader = LoaderManager_1.default.Instance;
    // 加载界面事件
    Game.loaderSettingHandler = new LoaderSettingHandler_1.default();
    // 菜单
    Game.menu = new MenuManager_1.default();
    // 消息对话框
    Game.system = new GameSystemMessage_1.default();
    // 渠道
    Game.channel = ChannelManager_1.default.Instance;
    // 版本管理
    Game.version = VersionManager_1.default.Instance;
    //=====================
    // 游戏模块
    //----------------------
    // 数据模型
    Game.moduleModel = new ModelManager_1.default();
    //=====================
    // 资源
    //----------------------
    // ui资源配置
    Game.guiRes = new GuiResPackageConfigReader_1.default();
    Game.spriteRes = new SpriteResPackageConfigReader_1.default();
    //=====================
    // 事件
    //----------------------
    // 协议--事件--成功
    Game.protoOkEvent = new Emitter_1.default();
    // 协议--Oob列表事件--成功
    Game.protoOobListOkEvent = new Emitter_1.default();
    // 协议--事件--失败
    Game.protoFailEvent = new Emitter_1.default();
    // 游戏--事件
    Game.event = new Emitter_1.default();
    return Game;
}());
exports.default = Game;
},{"./Bridge/Browser/GameApplicationBrowser":1,"./Config/ConfigManager":153,"./Config/Keys/LaunchText":306,"./Config/LangManager":314,"./FGUI/GuiResPackageConfigReader":620,"./FGUI/SpriteResPackageConfigReader":622,"./GameFrame/AssetManagers/AssetManager":628,"./GameFrame/Channel/ChannelManager":629,"./GameFrame/Datas/GameTimeData":630,"./GameFrame/Loader/LoaderManager":635,"./GameFrame/Loader/LoaderSettingHandler":637,"./GameFrame/LocalStorage/GameLocalStorage":638,"./GameFrame/Menu/MenuManager":646,"./GameFrame/Sound/AudioManager":652,"./GameModule/GameSystemMessage":661,"./GameModule/ModelManager":669,"./GameSetting/BrowserDetectConfig":673,"./GameSetting/GameDeviceConfig":674,"./GameSetting/ScreenSettingConfig":675,"./GameVersion/VersionManager":677,"./Libs/Emitter":678}],624:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 720;
    GameConfig.height = 1280;
    GameConfig.scaleMode = Laya.Stage.SCALE_SHOWALL;
    GameConfig.screenMode = "none";
    GameConfig.alignV = Laya.Stage.ALIGN_TOP;
    GameConfig.alignH = Laya.Stage.ALIGN_CENTER;
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],625:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameEventKey = /** @class */ (function () {
    function GameEventKey() {
    }
    GameEventKey.Test = "Test";
    /* --------------------- 框架消息 --------------------*/
    // 打开窗口消息 (menuId:MenuId, openType:MenuOpenType, openIndex?: number | string)
    GameEventKey.GameFrame_OpenMenu = "GameFrame_OpenMenu";
    // 关闭窗口 (menuId: MenuId)
    GameEventKey.GameFrame_CloseMenu = "GameFrame_CloseMenu";
    // 重刷登录数据--处理数据之前
    GameEventKey.GameFrame_ReLoginData_Begin = "GameFrame_ReLoginData_Begin";
    // 重刷登录数据--处理数据之后
    GameEventKey.GameFrame_ReLoginData_End = "GameFrame_ReLoginData_End";
    /* --------------------- 游戏消息 --------------------*/
    // 弹出
    GameEventKey.PopupPanel = "PopupPanel";
    GameEventKey.updateOrderView = "GameEventKeyUpdateOrderView";
    //更新订单
    GameEventKey.GameEventKey_UpdateOrderView = "GameEventKey_UpdateOrderView";
    //更新合作订单
    GameEventKey.GameEventKey_UpdateCoopreationOrderView = "GameEventKey_UpdateCoopreationOrderView";
    //重置搜罗次数
    GameEventKey.GameEventKey_ResetFindStoryTime = "GameEventKey_ResetFindStoryTime";
    //更新拜访艺人
    GameEventKey.GameEventKey_UpdateVisitActor = "GameEventKey_UpdateVisitActor";
    //会议更新
    GameEventKey.GameEventKey_MeetingShowPanel = "GameEventKey_MeetingShowPanel";
    //滚动到
    GameEventKey.GameEventKey_ScrollMainRoom = "GameEventKey_ScrollMainRoom";
    //开始探班状态
    GameEventKey.GameEventKey_StartReception = "GameEventKey_StartReception";
    //点击艺人
    GameEventKey.GameEventKey_FindActorToReception = "GameEventKey_FindActorToReception";
    //禁用滚动
    GameEventKey.GameEventKey_EnabledScrollMain = "GameEventKey_EnabledScrollMain";
    //会议阶段
    GameEventKey.GameEventKey_MeetingStep = "GameEventKey_MeetingStep";
    //拍摄电影
    GameEventKey.GameEventKey_ShootStart = "GameEventKey_ShootStart";
    GameEventKey.GameEventKey_ShootEnd = "GameEventKey_ShootEnd";
    GameEventKey.GameEventKey_ShootStartAddActor = "GameEventKey_ShootStartAddActor";
    //电影上映
    GameEventKey.GameEventKey_FilmStart = "GameEventKey_FilmStart";
    GameEventKey.GameEventKey_FilmOn = "GameEventKey_FilmOn";
    GameEventKey.GameEventKey_FilmEnd = "GameEventKey_FilmEnd";
    //艺人训练
    GameEventKey.GameEventKey_ActorExperciseStart = "GameEventKey_ActorExperciseStart";
    GameEventKey.GameEventKey_ActorExperciseEnd = "GameEventKey_ActorExperciseEnd";
    GameEventKey.GameEventKey_ActorBackToExperciseRoom = "GameEventKey_ActorBackToExperciseRoom";
    //更新艺人隐藏信息
    GameEventKey.GameEventKey_UpdateActorHideInfo = "GameEventKey_UpdateActorHideInfo";
    //更新奖励领取进度
    GameEventKey.GameEventKey_UpdateProgressBoxStatus = "GameEventKey_UpdateProgressBoxStatus";
    //更新红点
    GameEventKey.GameEventKey_UpdateMainUIRed = "GameEventKey_UpdateStoryRed";
    // 拍摄相关============================
    // 
    GameEventKey.GameEventKey_UpdateFilmingStatus = "GameEventKey_UpdateFilmingStatus";
    // 拍摄请求
    GameEventKey.GameEventKey_MakeFilm = "GameEventKey_MakeFilm";
    // 拍摄 修改剧本名称
    GameEventKey.GameEventKey_MakeFilmRename = "GameEventKey_MakeFilmRename";
    // 拍摄 选择艺人
    GameEventKey.GameEventKey_MakeFilmSelectActor = "GameEventKey_MakeFilmSelectActor";
    // 拍摄 选择艺人全部确认
    GameEventKey.GameEventKey_MakeFilmConfirmSetActor = "GameEventKey_MakeFilmConfirmSetActor";
    // 拍摄 选择剧本类型
    GameEventKey.GameEventKey_MakeFilmsetSelectType = "GameEventKey_MakeFilmsetSelectType";
    // 拍摄 院线请求
    GameEventKey.GameEventKey_MakeFilmsetPublishMovie = "GameEventKey_MakeFilmsetPublishMovie";
    // 拍摄 更新电影状态
    GameEventKey.GameEventKey_MakeFilmUpdateMovieState = "GameEventKey_MakeFilmUpdateMovieState";
    // 拍摄 领取剧本目标奖励
    GameEventKey.GameEventKey_MakeFilmGetStoryGoals = "GameEventKey_MakeFilmGetStoryGoals";
    // 拍摄 切换城市
    GameEventKey.GameEventKey_MakeFilmSwitchCity = "GameEventKey_MakeFilmSwitchCity";
    // 拍摄 推广电影
    GameEventKey.GameEventKey_MakeFilmSpreadMovie = "GameEventKey_MakeFilmSpreadMovie";
    // 拍摄 领取收益
    GameEventKey.GameEventKey_MakeFilmGetRewardMovie = "GameEventKey_MakeFilmGetRewardMovie";
    // 拍摄 更新放映中的电影情况
    GameEventKey.GameEventKey_MakeFilmWarEndingIncome = "GameEventKey_MakeFilmWarEndingIncome";
    // 拍摄相关============================
    //玩家升级
    GameEventKey.GameEventKey_PlayerLevelUp = "GameEventKey_PlayerLevelUp";
    GameEventKey.GameEventKey_PlayerLevelUpOnClose = "GameEventKey_PlayerLevelUpOnClose";
    //更新主线任务
    GameEventKey.GameEventKey_ClientUpdateMainTask = "GameEventKey_ClientUpdateMainTask";
    //解锁剧本
    GameEventKey.GameEventKey_StoryUnLock = "GameEventKey_StoryUnLock";
    // 时间提醒
    GameEventKey.GameEventKey_TimeLimitRemind = "GameEventKey_TimeLimitRemind";
    //隐藏显示
    GameEventKey.GameEventKey_VisibleMainUI = "GameEventKey_VisibleMainUI";
    //显示隐藏箭头
    GameEventKey.GameEventKey_VisibleTaskArrowUI = "GameEventKey_VisibleTaskArrowUI";
    //房间和UI界面之间切换
    GameEventKey.GameEventKey_SwitchUIRoom = "GameEventKey_SwitchUIRoom";
    //同步房间信息
    GameEventKey.GameEventKey_SyncRoomInfo = "GameEventKey_SyncRoomInfo";
    //解锁初始
    GameEventKey.GameEventKey_UnlockInit = "GameEventKey_UnlockInit";
    //解锁变更
    GameEventKey.GameEventKey_UnlockChange = "GameEventKey_UnlockChange";
    GameEventKey.GameEventKey_OscarDataChange = "GameEventKey_OscarDataChange";
    GameEventKey.GameEventKey_UpdateTimeMenuTick = "GameEventKey_UpdateTimeMenuTick";
    //剧本播放完成
    GameEventKey.GameEventKey_StorylineComplete = "GameEventKey_StoryComplete";
    //剧本选择动画完成
    GameEventKey.GameEventKey_FilmStoryAnimationComplete = "GameEventKey_FilmStoryAnimationComplete";
    //拍摄状态变化
    GameEventKey.GameEventKey_FilmStoryStateChange = "GameEventKey_FilmStoryStateChange";
    return GameEventKey;
}());
exports.default = GameEventKey;
},{}],626:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var AssetItemType_1 = require("./AssetItemType");
var Loader = Laya.Loader;
var AssetHelper = /** @class */ (function () {
    function AssetHelper() {
    }
    Object.defineProperty(AssetHelper, "layaLoaderType2AssetItemTypeDict", {
        get: function () {
            if (!AssetHelper._layaLoaderType2AssetItemTypeDict) {
                var dict = new Dictionary_1.default();
                dict.add(Loader.IMAGE, AssetItemType_1.AssetItemType.Image);
                dict.add(Loader.BUFFER, AssetItemType_1.AssetItemType.Buffer);
                dict.add(Loader.SOUND, AssetItemType_1.AssetItemType.Sound);
                dict.add(Loader.TEXT, AssetItemType_1.AssetItemType.Text);
                dict.add(Loader.JSON, AssetItemType_1.AssetItemType.Json);
                dict.add(Loader.XML, AssetItemType_1.AssetItemType.Xml);
                dict.add(Loader.FONT, AssetItemType_1.AssetItemType.Font);
                dict.add(Loader.TTF, AssetItemType_1.AssetItemType.TTF);
                AssetHelper._layaLoaderType2AssetItemTypeDict = dict;
            }
            return AssetHelper._layaLoaderType2AssetItemTypeDict;
        },
        enumerable: true,
        configurable: true
    });
    AssetHelper.layaLoaderType2AssetItemType = function (loader) {
        return AssetHelper.layaLoaderType2AssetItemTypeDict.getValue(loader);
    };
    AssetHelper.getAssetItemKey = function (item) {
        return item.type + " " + item.url;
    };
    return AssetHelper;
}());
exports.default = AssetHelper;
},{"../../Libs/Helpers/Dictionary":679,"./AssetItemType":627}],627:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AssetItemType;
(function (AssetItemType) {
    AssetItemType[AssetItemType["FguiPackage"] = 0] = "FguiPackage";
    AssetItemType[AssetItemType["FspritePackage"] = 1] = "FspritePackage";
    AssetItemType[AssetItemType["Image"] = 2] = "Image";
    AssetItemType[AssetItemType["Buffer"] = 3] = "Buffer";
    AssetItemType[AssetItemType["Sound"] = 4] = "Sound";
    AssetItemType[AssetItemType["Text"] = 5] = "Text";
    AssetItemType[AssetItemType["Json"] = 6] = "Json";
    AssetItemType[AssetItemType["Xml"] = 7] = "Xml";
    AssetItemType[AssetItemType["Font"] = 8] = "Font";
    AssetItemType[AssetItemType["TTF"] = 9] = "TTF";
    AssetItemType[AssetItemType["PKM"] = 10] = "PKM";
})(AssetItemType = exports.AssetItemType || (exports.AssetItemType = {}));
},{}],628:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var Handler = Laya.Handler;
var Loader = Laya.Loader;
var AssetItemType_1 = require("./AssetItemType");
var Game_1 = require("../../Game");
var GuiSetting_1 = require("../../FGUI/GuiSetting");
var AssetManager = /** @class */ (function () {
    function AssetManager() {
        this.loadedAssets = new Dictionary_1.default();
    }
    // 加载配置
    AssetManager.prototype.loadConfig = function (path, callback) {
        if (callback) {
            // path = `config/csv/${path}.csv`;
            var obj = {
                onLoaded: function () {
                    var txt = Laya.loader.getRes(path);
                    callback(txt, path);
                }
            };
            Laya.loader.load(path, Handler.create(obj, obj.onLoaded), null, Loader.TEXT);
        }
    };
    // 卸载配置文件
    AssetManager.prototype.unloadConfig = function (path) {
        Laya.loader.clearRes(path);
    };
    // 加载资源列表
    AssetManager.prototype.loadList = function (list, onObj, onCompleteFun, onProgress) {
        var count = list.length;
        var index = 0;
        var callback = {
            onComplete: function (isSuccess) {
                var item = list[index];
                // console.log("加载资源列表 onComplete: val=" + item);
                index++;
                if (onProgress) {
                    var rate = count > 0 ? index / count : 1;
                    onProgress(rate, index, count, item);
                }
                if (index >= count) {
                    if (onCompleteFun) {
                        if (onObj) {
                            onCompleteFun.apply(onObj);
                        }
                        else {
                            onCompleteFun();
                        }
                    }
                }
            },
            onProgress: function (val) {
                // console.log("加载资源列表 onProgress: val=" + val);
            }
        };
        if (list && list.length > 0) {
            var assets = [];
            var item = void 0;
            for (var i = 0; i < list.length; i++) {
                item = list[i];
                if (!item) {
                    callback.onComplete(item);
                }
                // console.log(item.type + ", " + item.url);
                switch (item.type) {
                    case AssetItemType_1.AssetItemType.FguiPackage:
                        this.loadFguiByPackagename(item.url, callback, callback.onComplete);
                        break;
                    case AssetItemType_1.AssetItemType.FspritePackage:
                        this.loadFSpriteByPackagename(item.url, callback, callback.onComplete);
                        break;
                    case AssetItemType_1.AssetItemType.Image:
                        assets.push({ url: item.url, type: Loader.IMAGE });
                        break;
                    case AssetItemType_1.AssetItemType.Buffer:
                        assets.push({ url: item.url, type: Loader.BUFFER });
                        break;
                    case AssetItemType_1.AssetItemType.Sound:
                        assets.push({ url: item.url, type: Loader.SOUND });
                        break;
                    case AssetItemType_1.AssetItemType.Text:
                        assets.push({ url: item.url, type: Loader.TEXT });
                        break;
                    case AssetItemType_1.AssetItemType.Json:
                        assets.push({ url: item.url, type: Loader.JSON });
                        break;
                    case AssetItemType_1.AssetItemType.Xml:
                        assets.push({ url: item.url, type: Loader.XML });
                        break;
                    case AssetItemType_1.AssetItemType.Font:
                        assets.push({ url: item.url, type: Loader.FONT });
                        break;
                    case AssetItemType_1.AssetItemType.TTF:
                        assets.push({ url: item.url, type: Loader.TTF });
                        break;
                }
            }
            if (assets.length > 0) {
                for (var j = 0; j < assets.length; j++) {
                    if (this.loadedAssets.hasKey(assets[j].url)) {
                        callback.onComplete(true);
                    }
                    else {
                        Laya.loader.load([assets[j]], Handler.create(callback, callback.onComplete), Handler.create(callback, callback.onProgress));
                    }
                    this.loadedAssets.add(assets[j].url, Game_1.default.time.localTime);
                }
            }
        }
        else {
            callback.onComplete(null);
        }
    };
    // 加载fgui包
    AssetManager.prototype.loadFguiByPackagename = function (packageName, caller, method) {
        var packageConfig = Game_1.default.guiRes.getconfig(packageName);
        this.loadFgui(packageConfig, caller, method);
    };
    AssetManager.prototype.loadFguiByPackagenameAsync = function (packageName) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        _this.loadFguiByPackagename(packageName, _this, function (packageConfig) {
                            resolve(packageConfig);
                        });
                    })];
            });
        });
    };
    // 加载fsprite包
    AssetManager.prototype.loadFSpriteByPackagename = function (packageName, caller, method) {
        var packageConfig = Game_1.default.spriteRes.getconfig(packageName);
        this.loadFgui(packageConfig, caller, method);
    };
    AssetManager.prototype.loadFgui = function (packageConfig, caller, method) {
        var callback = {
            apply: function () {
                GuiSetting_1.default.addPackage(packageConfig.packagePath, packageConfig);
                if (method) {
                    if (caller) {
                        return method.apply(caller, [packageConfig]);
                    }
                    else {
                        method(packageConfig);
                    }
                }
            }
        };
        GuiSetting_1.default.addPackageReferenceNum(packageConfig.packagePath);
        if (GuiSetting_1.default.hasLoadPackage(packageConfig.packagePath)) {
            callback.apply();
            return;
        }
        Laya.loader.load(packageConfig.loadList, Handler.create(callback, callback.apply));
    };
    AssetManager.prototype.unloadFgui = function (packageName, forceDispose) {
        if (forceDispose === undefined)
            forceDispose = false;
        var packageConfig = Game_1.default.guiRes.getconfig(packageName);
        if (!packageConfig)
            packageConfig = Game_1.default.spriteRes.getconfig(packageName);
        if (packageConfig) {
            var referenceNum = GuiSetting_1.default.removePackageReferenceNum(packageConfig.packagePath);
            if (!forceDispose) {
                if (referenceNum > 0) {
                    return;
                }
            }
            GuiSetting_1.default.removePackage(packageConfig.packagePath, packageConfig);
            var list = packageConfig.loadList;
            for (var i = 0; i < list.length; i++) {
                // console.log("==clearRes:" + list[i].url);
                Laya.loader.clearRes(list[i].url);
            }
        }
    };
    //加载特效
    AssetManager.prototype.loadFx = function (path, caller, complete) {
        Laya.loader.load(path, Handler.create(null, function (setting) {
            if (complete) {
                if (caller) {
                    complete.apply(caller, setting);
                }
                else {
                    complete(setting);
                }
            }
        }), null, Loader.JSON);
    };
    return AssetManager;
}());
exports.default = AssetManager;
},{"../../FGUI/GuiSetting":621,"../../Game":623,"../../Libs/Helpers/Dictionary":679,"./AssetItemType":627}],629:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Handler = laya.utils.Handler;
var Game_1 = require("../../Game");
var MenuId_1 = require("../../GameModule/MenuId");
var ServerStateType;
(function (ServerStateType) {
    ServerStateType[ServerStateType["Close"] = 0] = "Close";
    ServerStateType[ServerStateType["Noraml"] = 1] = "Noraml";
})(ServerStateType = exports.ServerStateType || (exports.ServerStateType = {}));
var ServerNoticType;
(function (ServerNoticType) {
    ServerNoticType[ServerNoticType["Normal"] = 1] = "Normal";
    ServerNoticType[ServerNoticType["StopServer"] = 2] = "StopServer";
})(ServerNoticType || (ServerNoticType = {}));
var ChannelManager = /** @class */ (function () {
    function ChannelManager() {
        this.serverListUrl = "http://mbqb.ihaiu.com/GamePF/ServerList.json";
        // 程序内置默认		
        this.defaultServerItem = { name: "QA", ip: "172.81.240.224", port: 80, state: ServerStateType.Noraml, https: false, test: true };
    }
    Object.defineProperty(ChannelManager, "Instance", {
        get: function () {
            if (!ChannelManager._Instance) {
                ChannelManager._Instance = new ChannelManager();
            }
            return ChannelManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChannelManager.prototype, "noticUrl", {
        // 通知Url		
        get: function () {
            if (this.serverItem) {
                if (this.serverItem.noticUrl) {
                    return this.serverItem.noticUrl;
                }
                if (this.serverItem.https) {
                    return "https://" + this.serverItem.ip + "/notice.html";
                }
                else {
                    return "http://" + this.serverItem.ip + "/notice.html";
                }
            }
            return "http://172.16.0.93/notice.html";
        },
        enumerable: true,
        configurable: true
    });
    ChannelManager.prototype.getServerItem = function (serverName) {
        if (!serverName)
            return null;
        if (this.serverList) {
            for (var i = 0; i < this.serverList.list.length; i++) {
                if (this.serverList.list[i].name == serverName) {
                    return this.serverList.list[i];
                }
            }
        }
        return null;
    };
    Object.defineProperty(ChannelManager.prototype, "serverName", {
        get: function () {
            if (!this._serverName) {
                if (Game_1.default.localStorage.serverName) {
                    var item = this.getServerItem(Game_1.default.localStorage.serverName);
                    if (item) {
                        this._serverName = Game_1.default.localStorage.serverName;
                    }
                }
                if (!this._serverName && this.serverList) {
                    var item = this.getServerItem(this.serverList.defaultServer);
                    if (item) {
                        this._serverName = this.serverList.defaultServer;
                    }
                    else if (this.serverList.list.length > 0) {
                        this._serverName = this.serverList.list[0].name;
                    }
                }
            }
            return this._serverName;
        },
        set: function (name) {
            this._serverName = name;
            Game_1.default.localStorage.serverName = name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChannelManager.prototype, "serverIndex", {
        //======================
        // 选择的服务器的索引
        //----------------------
        get: function () {
            if (this.serverList) {
                for (var i = 0; i < this.serverList.list.length; i++) {
                    if (this.serverList.list[i].name == this.serverName) {
                        return i;
                    }
                }
            }
            return -1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChannelManager.prototype, "serverItem", {
        //======================
        // 选择的服务器
        //----------------------
        get: function () {
            var item = this.getServerItem(this.serverName);
            if (item) {
                return item;
            }
            return this.defaultServerItem;
        },
        enumerable: true,
        configurable: true
    });
    // 请求服务器列表
    ChannelManager.prototype.requestServerList = function (url, caller, onSucess, onFail) {
        function callSuccess() {
            if (onSucess) {
                if (caller) {
                    onSucess.apply(caller);
                }
                else {
                    onSucess();
                }
            }
        }
        function callFail() {
            if (onFail) {
                if (caller) {
                    onFail.apply(caller);
                }
                else {
                    onFail();
                }
            }
        }
        if (this.serverList) {
            callSuccess();
            return;
        }
        if (!url) {
            url = Game_1.default.browserSetting.urlServerList;
        }
        console.log("serverListUrl=" + url);
        // alert("确定是热更新了 serverListUrl=" + url);
        this.serverListUrl = url;
        Laya.loader.load(url, Handler.create(this, function () {
            var resust = Laya.loader.getRes(url);
            if (resust) {
                this.serverList = isString(resust) ? JSON.parse(resust) : resust;
                console.log("获取服务器列表：");
                console.log(resust);
                console.log(JSON.stringify(this.serverList));
                callSuccess();
            }
            else {
                console.log("ChannelManager LoadFail: ServerList.json ");
                callFail();
            }
        }));
    };
    Object.defineProperty(ChannelManager.prototype, "isTodayOpenedNotice", {
        // 是否需要打开通知		
        get: function () {
            if (Game_1.default.localStorage.isNoticTodayNoOpen) {
                if (Game_1.default.localStorage.hasItem("lastOpenNoticeTime", true)) {
                    var lastOpenTime = Game_1.default.localStorage.getInt("lastOpenNoticeTime", true);
                    var isToday = Game_1.default.time.isLocalToday(lastOpenTime);
                    return !isToday;
                }
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    // 请求通知
    ChannelManager.prototype.requestNotice = function () {
        console.log(this.noticUrl);
        Laya.loader.load(this.noticUrl, Handler.create(this, this.onResopneNotic));
        // Laya.loader.load("http://blog.ihaiu.com/params.json", Handler.create(this, () =>
        // {
        // 	let result = Laya.loader.getRes("http://blog.ihaiu.com/params.json");
        // 	if (!isString(result))
        // 	{
        // 		result = JSON.stringify(result);
        // 	}
        // 	console.log("加载http://blog.ihaiu.com/params.json: " + result);
        // }));
    };
    ChannelManager.prototype.onResopneNotic = function () {
        var resust = Laya.loader.getRes(this.noticUrl);
        console.log(resust);
        if (resust) {
            try {
                this.serverNoticData = isString(resust) ? JSON.parse(resust) : resust;
                if (!this.serverNoticData || this.serverNoticData.visible == false) {
                    return;
                }
                if (this.serverNoticData.type == ServerNoticType.Normal) {
                    if (this.isTodayOpenedNotice) {
                        Game_1.default.menu.open(MenuId_1.MenuId.Notice);
                        Game_1.default.localStorage.setInt("lastOpenNoticeTime", Game_1.default.time.localTime, true);
                    }
                }
                else {
                    Game_1.default.system.alrtTextFull(this.serverNoticData.content, this.serverNoticData.title, null, function () {
                        // TODO 退出程序
                        if (window["conch"] && window["conch"]["exit"])
                            window["conch"].exit();
                    });
                }
            }
            catch (error) {
                console.warn("通知有问题");
            }
        }
    };
    return ChannelManager;
}());
exports.default = ChannelManager;
},{"../../Game":623,"../../GameModule/MenuId":662}],630:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TimeHelper_1 = require("../../GameHelpers/TimeHelper");
//======================
// 游戏时间 数据
//----------------------
var GameTimeData = /** @class */ (function () {
    function GameTimeData() {
        // 本地与服务器的时差， unix时间戳 毫秒
        this._serverSubtime = 0;
        // 服务器与客户端的时区差		
        this._localSubServerTimezone = null;
        //服务器所在时区
        this._serverTimezone = "";
        this._preFrame = 0;
        this._localTime = 0;
        // 本地， 登录时间， unix时间戳 毫秒
        this._localLoginTime = new Date().getTime();
        // 服务器， 注册时间， unix时间戳 毫秒
        this._registerTime = new Date().getTime();
        // 服务器， 登录时间， unix时间戳 毫秒
        this._serverLoginTime = new Date().getTime();
        /**
         * 测试所用数据，用于本地时间校正，程序中不要调用
         */
        this._localTestAddTIme = 0;
    }
    // 检查是否就今天		
    GameTimeData.prototype.isLocalToday = function (localTime) {
        var d = new Date(localTime);
        var c = new Date();
        return d.getFullYear() == c.getFullYear() && d.getMonth() == c.getMonth() && d.getDate() == c.getDate();
    };
    // 检查是否就今天 localTime 秒
    GameTimeData.prototype.isLocalTodayTimezone = function (localTime) {
        return TimeHelper_1.default.IsSameDay(localTime, this.serverSeconds);
    };
    Object.defineProperty(GameTimeData.prototype, "serverSubtime", {
        get: function () {
            return this._serverSubtime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "localSubServerTimezone", {
        get: function () {
            if (this._localSubServerTimezone == null) {
                this.serverTimezone = "America/Regina";
            }
            return this._localSubServerTimezone + this._localTestAddTIme;
        },
        set: function (time) {
            this._localSubServerTimezone = time;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "serverTimezone", {
        get: function () {
            if (this._serverTimezone == "") {
                this._serverTimezone = "America/Regina";
            }
            return this._serverTimezone;
        },
        //设置服务器时区
        set: function (timeZone) {
            this._serverTimezone = timeZone;
            this.localSubServerTimezone = new Date().getTimezoneOffset() * 60 * 1000 - 6 * 60 * 60 * 1000;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "localTime", {
        // 	本地，当前时间， unix时间戳 毫秒
        get: function () {
            if (Laya.timer.currFrame != this._preFrame) {
                this._localTime = new Date().getTime();
                this._preFrame = Laya.timer.currFrame;
            }
            return this._localTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "localLoginTime", {
        get: function () {
            return this._localLoginTime;
        },
        set: function (value) {
            this._localLoginTime = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "localGameTime", {
        // 本地 游戏时间， unix时间戳 毫秒
        get: function () {
            return this.localTime - this.localLoginTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "registerTime", {
        get: function () {
            return this._registerTime;
        },
        set: function (value) {
            this._registerTime = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "registerSeconds", {
        // 	注册时间，注册时间， unix时间戳 秒
        get: function () {
            return Math.floor(this.registerTime / 1000);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "serverLoginTime", {
        get: function () {
            return this._serverLoginTime;
        },
        set: function (value) {
            this._serverLoginTime = value;
            this.localLoginTime = this.localTime;
            this._serverSubtime = this.localLoginTime - this._serverLoginTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "serverSeconds", {
        // 	服务器，当前时间， unix时间戳 秒
        get: function () {
            return Math.floor(this.serverMilliseconds / 1000);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameTimeData.prototype, "serverMilliseconds", {
        // 	服务器，当前时间， unix时间戳 毫秒
        get: function () {
            return this.serverLoginTime + this.localGameTime;
        },
        enumerable: true,
        configurable: true
    });
    // 服务器更新时间
    // 年月日时分秒
    GameTimeData.prototype.timestampToTime = function (timestamp) {
        // let date = new Date(timestamp * 1000);
        var date = TimeHelper_1.default.GetServerDateTime(timestamp);
        var Y = date.getFullYear();
        var M = date.getMonth() + 1;
        var D = date.getDate();
        var h = date.getHours();
        var m = date.getMinutes();
        var s = date.getSeconds();
        return [Y, M, D, h, m, s];
    };
    // 本地时间
    // 年月日时分秒
    GameTimeData.prototype.localTimestamToTime = function () {
        // let date = new Date();
        var date = TimeHelper_1.default.GetServerDateTime();
        var Y = date.getFullYear();
        var M = date.getMonth() + 1;
        var D = date.getDate();
        var h = date.getHours();
        var m = date.getMinutes();
        var s = date.getSeconds();
        return [Y, M, D, h, m, s];
    };
    /**
     * 服务器当前时间和之前的一个时间差 秒
     * @param preunix 之前的时间
     */
    GameTimeData.prototype.getSubSecondsPre = function (preunixSeconds) {
        var dTime = this.serverSeconds - preunixSeconds;
        if (dTime < 0)
            dTime = 0;
        return dTime;
    };
    /**
     * 服务器当前时间和之后的一个时间差 秒
     * @param afterunix 之后的时间
     */
    GameTimeData.prototype.getSubSecondsAfter = function (afterunixSeconds) {
        return afterunixSeconds - this.serverSeconds;
    };
    /**
     * 服务器当前时间和之前的一个时间差 毫秒
     * @param preunix 之前的时间
     */
    GameTimeData.prototype.getSubMillisecondsPre = function (preunixMilliseconds) {
        return this.serverMilliseconds - preunixMilliseconds;
    };
    /**
     * 服务器当前时间和之后的一个时间差 毫秒
     * @param afterunix 之后的时间
     */
    GameTimeData.prototype.getSubMillisecondsAfter = function (afterunixMilliseconds) {
        return afterunixMilliseconds - this.serverMilliseconds;
    };
    /**
     * 判断是否跨天
     * @param serverLastRefrushTime 服务器上次刷新时间
     * @param timePoint 跨天时间点，比如：22点
     */
    GameTimeData.prototype.checkNewDayToRefrush = function (serverLastRefrushTime, timePoint) {
        var newDay = false;
        var sevTime = this.timestampToTime(serverLastRefrushTime);
        var locTime = this.localTimestamToTime();
        for (var i = 0; i < 3; i++) {
            if (sevTime[i] < locTime[i]) {
                newDay = true;
                break;
            }
        }
        if (!newDay && timePoint > 0) {
            if (locTime[3] >= timePoint && sevTime[3] < timePoint) {
                newDay = true;
            }
        }
        return newDay;
    };
    /**
     * 检查是否时间到
     * @param localTime 时间戳毫秒 服务器当前时间
     * @param h 小时
     * @param m 分钟
     */
    GameTimeData.prototype.checkTime = function (localTime, h, m) {
        if (m === void 0) { m = 0; }
        return TimeHelper_1.default.IsBeyondTimeInSameDay(localTime / 1000, h, m);
    };
    // 格式化日期，获取今天的日期
    GameTimeData.prototype.timeLeft = function (time, hour, minutes, seconds) {
        if (seconds === void 0) { seconds = 0; }
        if (this.isLocalTodayTimezone(time / 1000)) {
            //服务器所在时区的h时m分s秒对应的时间戳
            var time1 = TimeHelper_1.default.TimeReformat(hour, minutes, seconds).getTime();
            return time1 - time;
        }
        else {
            return 0;
        }
    };
    /**
     * 检查是否时间到
     * @param localTime 时间戳
     * @param h 小时
     * @param m 分钟
     */
    GameTimeData.prototype.checkTime22222 = function (localTime, h, m) {
        if (m === void 0) { m = 0; }
        var d = new Date(localTime);
        if (d.getHours() < h) {
            return false;
        }
        else if (d.getHours() === h) {
            if (d.getMinutes() < m) {
                return false;
            }
        }
        return true;
    };
    // 格式化日期，获取今天的日期
    GameTimeData.prototype.timeLeft22222 = function (time, hour, minutes, seconds) {
        if (seconds === void 0) { seconds = 0; }
        if (this.isLocalToday(time)) {
            // 今天
            var dates = new Date(time);
            // 小时
            var h = dates.getHours();
            // 分钟
            var m = dates.getMinutes();
            // 秒
            var s = dates.getSeconds();
            var cur = h * 3600 + m * 60 + s;
            var req = hour * 3600 + minutes * 60 + seconds;
            var res = (req - cur) * 1000;
            if (res < 0)
                res = 0;
            return res;
        }
        else {
            // 非今天，理论上隔天，本算法不计算往日数据
            return 0;
        }
    };
    //测试所用数据，用于本地时间校正，程序中不要调用
    GameTimeData.prototype.AddLocalTestSubServerTimezone = function (h, m, s) {
        this._localTestAddTIme = this._localTestAddTIme + ((h * 60 + m) * 60 + s) * 1000;
    };
    return GameTimeData;
}());
exports.default = GameTimeData;
// // 	服务器，当前时间， unix时间戳 秒
// Game.time.serverSeconds;
// // 	服务器，当前时间， unix时间戳 毫秒
// Game.time.serverMilliseconds;
// // 上次操作时间， unix时间戳 秒
// let preOpsTime: number;
// // 服务器当前时间和之前的一个时间差 秒
// let s1 = Game.time.getSubSecondsPre(preOpsTime);
// // 下次操作时间， unix时间戳 秒
// let afterOpsTime: number;
// // 服务器当前时间和之前的一个时间差 秒
// let s2 = Game.time.getSubSecondsAfter(afterOpsTime);
// // 上次操作时间， unix时间戳 毫秒
// let preOpsTime2: number;
// // 服务器当前时间和之前的一个时间差 毫秒
// let ms1 = Game.time.getSubMillisecondsPre(preOpsTime);
// // 下次操作时间， unix时间戳 毫秒
// let afterOpsTime2: number;
// // 服务器当前时间和之后的一个时间差 毫秒
// let ms2 = Game.time.getSubMillisecondsAfter(afterOpsTime);
},{"../../GameHelpers/TimeHelper":655}],631:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalModalWaiting_1 = require("../../FGUI/Extends/GameLaunch/GlobalModalWaiting");
var LoaderPanel_1 = require("./LoaderPanel");
//======================
// 加载界面--转圈
//----------------------
var LoaderCirclePanel = /** @class */ (function (_super) {
    __extends(LoaderCirclePanel, _super);
    function LoaderCirclePanel() {
        return _super.call(this) || this;
    }
    LoaderCirclePanel.prototype.onInit = function () {
        this.contentPane = GlobalModalWaiting_1.default.createInstance();
        this.center();
        //弹出窗口的动效已中心为轴心
        this.setPivot(0.5, 0.5);
    };
    return LoaderCirclePanel;
}(LoaderPanel_1.default));
exports.default = LoaderCirclePanel;
},{"../../FGUI/Extends/GameLaunch/GlobalModalWaiting":584,"./LoaderPanel":636}],632:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderId_1 = require("./LoaderId");
var MenuLayer_1 = require("../Menu/MenuLayer");
//======================
// 加载界面控制器
//----------------------
var LoaderCtl = /** @class */ (function () {
    function LoaderCtl() {
        // 是否已经打开
        this.isOpened = false;
        //延时显示加载面板Handler
        this.delayShowPanelHandler = -1;
    }
    Object.defineProperty(LoaderCtl.prototype, "isDelayShowPanel", {
        get: function () {
            return this.loaderId == LoaderId_1.LoaderId.Module;
        },
        enumerable: true,
        configurable: true
    });
    // 打开
    LoaderCtl.prototype.open = function () {
        var _this = this;
        this.isOpened = true;
        if (this.loaderPanel) {
            this.loaderPanel.showOn(MenuLayer_1.default.loader);
            this.loaderPanel.setContentVisiable(true);
            if (this.isDelayShowPanel) {
                this.loaderPanel.setContentVisiable(false);
                clearTimeout(this.delayShowPanelHandler);
                this.delayShowPanelHandler = setTimeout(function () {
                    _this.loaderPanel.setContentVisiable(true);
                }, 100);
            }
        }
    };
    // 关闭
    LoaderCtl.prototype.close = function () {
        if (this.delayShowPanelHandler != -1) {
            clearTimeout(this.delayShowPanelHandler);
            this.delayShowPanelHandler = -1;
        }
        this.isOpened = false;
        if (this.loaderPanel) {
            this.loaderPanel.hide();
            if (this.isDelayShowPanel) {
                this.loaderPanel.setContentVisiable(false);
            }
        }
    };
    // 设置进度
    LoaderCtl.prototype.setProgress = function (progress) {
        // console.log("LoaderCtl.setProgress  progress=" + progress);
        if (this.loaderPanel)
            this.loaderPanel.setValue(progress);
    };
    // 设置进度最大值
    LoaderCtl.prototype.setMax = function (max) {
        if (this.loaderPanel)
            this.loaderPanel.setMax(max);
    };
    // 设置Tip
    LoaderCtl.prototype.setTip = function (txt) {
        if (this.loaderPanel)
            this.loaderPanel.setTip(txt);
    };
    LoaderCtl.prototype.setTips = function (txts) {
        if (this.loaderPanel)
            this.loaderPanel.setTips(txts);
    };
    // 设置版本号
    LoaderCtl.prototype.setVersion = function () {
        if (this.loaderPanel)
            this.loaderPanel.setVersion();
    };
    return LoaderCtl;
}());
exports.default = LoaderCtl;
},{"../Menu/MenuLayer":644,"./LoaderId":634}],633:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderPanel_1 = require("./LoaderPanel");
var LaunchLoaderPanel_1 = require("../../FGUI/Extends/GameLaunch/LaunchLoaderPanel");
var Game_1 = require("../../Game");
var Random_1 = require("../../Libs/Helpers/Random");
//======================
// 加载界面--进入游戏
//----------------------
var LoaderEnterPanel = /** @class */ (function (_super) {
    __extends(LoaderEnterPanel, _super);
    function LoaderEnterPanel() {
        var _this = _super.call(this) || this;
        _this.tips = [];
        _this.__setTipHandlerTimer = -1;
        return _this;
    }
    LoaderEnterPanel.prototype.onInit = function () {
        this.loader = LaunchLoaderPanel_1.default.createInstance();
        this.contentPane = this.loader;
        // this.center();
        //弹出窗口的动效已中心为轴心
        // this.setPivot(0.5, 0.5);
        _super.prototype.onInit.call(this);
        this.tips = Game_1.default.launchText.tips;
        this.setVersion();
    };
    // 显示完成
    LoaderEnterPanel.prototype.onShown = function () {
        _super.prototype.onShown.call(this);
        this.beginTips();
        this.setVersion();
        Game_1.default.version.sLocalVersionChange.add(this.setVersion, this);
    };
    // 隐藏完成
    LoaderEnterPanel.prototype.onHide = function () {
        _super.prototype.onHide.call(this);
        this.stopTips();
        Game_1.default.version.sLocalVersionChange.remove(this.setVersion, this);
    };
    LoaderEnterPanel.prototype.beginTips = function () {
        this.stopTips();
        if (this.tips && this.tips.length > 0) {
            this.__setTipHandler();
        }
    };
    LoaderEnterPanel.prototype.stopTips = function () {
        if (this.__setTipHandlerTimer > 0) {
            clearTimeout(this.__setTipHandlerTimer);
            this.__setTipHandlerTimer = -1;
        }
    };
    LoaderEnterPanel.prototype.__setTipHandler = function () {
        var _this = this;
        this.loader.m_help.text = this.tips[Random_1.default.range(0, this.tips.length)];
        this.__setTipHandlerTimer = setTimeout(function () {
            _this.__setTipHandler();
        }, Random_1.default.range(100, 400));
    };
    // 设置最大值
    LoaderEnterPanel.prototype.setMax = function (value) {
        // console.log("LoaderEnterPanel.setMax  value=" + value);
        this.loader.m_progressBar.max = value;
    };
    // 设置加载进度
    LoaderEnterPanel.prototype.setValue = function (value) {
        // console.log("LoaderEnterPanel.setValue  value=" + value);
        this.loader.m_progressBar.value = value;
    };
    // 设置Tip
    LoaderEnterPanel.prototype.setTip = function (tip) {
        this.loader.m_title.text = tip;
    };
    LoaderEnterPanel.prototype.setTips = function (tips) {
        // this.loader.m_help.text = tips[0];
    };
    // 设置版本号
    LoaderEnterPanel.prototype.setVersion = function () {
        this.loader.m_txt_gamever.text = "GameVersion:" + Game_1.default.version.localAppVersionData.toString();
        this.loader.m_txt_resVer.text = "ResVersion:" + Game_1.default.version.localResVersionData.toString();
    };
    return LoaderEnterPanel;
}(LoaderPanel_1.default));
exports.default = LoaderEnterPanel;
},{"../../FGUI/Extends/GameLaunch/LaunchLoaderPanel":585,"../../Game":623,"../../Libs/Helpers/Random":681,"./LoaderPanel":636}],634:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoaderId;
(function (LoaderId) {
    // 没有显示界面
    LoaderId[LoaderId["None"] = 0] = "None";
    // 转圈圈
    LoaderId[LoaderId["Circle"] = 1] = "Circle";
    // 启动界面
    LoaderId[LoaderId["Launch"] = 2] = "Launch";
    // 进入游戏加载界面
    LoaderId[LoaderId["EnterGame"] = 3] = "EnterGame";
    // 加载模块界面
    LoaderId[LoaderId["Module"] = 4] = "Module";
})(LoaderId = exports.LoaderId || (exports.LoaderId = {}));
},{}],635:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var LoaderId_1 = require("./LoaderId");
var LoaderCtl_1 = require("./LoaderCtl");
var LoaderCirclePanel_1 = require("./LoaderCirclePanel");
var LoaderEnterPanel_1 = require("./LoaderEnterPanel");
//=================
// 加载界面管理器
//------------------
var LoaderManager = /** @class */ (function () {
    function LoaderManager() {
        // 加载器字典
        this.dict = new Dictionary_1.default();
        this.isInited = false;
    }
    Object.defineProperty(LoaderManager, "Instance", {
        get: function () {
            if (!LoaderManager._Instance) {
                LoaderManager._Instance = new LoaderManager();
            }
            return LoaderManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    // 初始化
    LoaderManager.prototype.install = function () {
        if (this.isInited)
            return;
        this.isInited = true;
        // None
        var ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.None;
        this.dict.add(ctl.loaderId, ctl);
        // Circle
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.Circle;
        ctl.loaderPanel = new LoaderCirclePanel_1.default();
        this.dict.add(ctl.loaderId, ctl);
        var defaultPanel = new LoaderEnterPanel_1.default();
        // Launch
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.Launch;
        ctl.loaderPanel = defaultPanel;
        this.dict.add(ctl.loaderId, ctl);
        // EnterGame
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.EnterGame;
        ctl.loaderPanel = defaultPanel;
        this.dict.add(ctl.loaderId, ctl);
        // Module
        ctl = new LoaderCtl_1.default();
        ctl.loaderId = LoaderId_1.LoaderId.Module;
        ctl.loaderPanel = defaultPanel;
        this.dict.add(ctl.loaderId, ctl);
    };
    // 获取加载进度面板控制器
    LoaderManager.prototype.getLoaderCtl = function (loaderId) {
        return this.dict.getValue(loaderId);
    };
    // 打开加载进度面板控制器
    LoaderManager.prototype.open = function (loaderId) {
        var loaderCtl = this.getLoaderCtl(loaderId);
        loaderCtl.open();
        this.current = loaderCtl;
        return loaderCtl;
    };
    // 关闭加载进度控制器
    LoaderManager.prototype.close = function (loaderId) {
        var loaderCtl = this.getLoaderCtl(loaderId);
        if (loaderCtl) {
            if (this.current == loaderCtl) {
                this.current = null;
            }
            loaderCtl.close();
        }
    };
    // 关闭所有
    LoaderManager.prototype.closeAll = function () {
        var list = this.dict.getValues();
        for (var i = 0; i < list.length; i++) {
            list[i].close();
        }
        this.current = null;
    };
    // 设置进度
    LoaderManager.prototype.setProgress = function (progress) {
        if (this.current) {
            this.current.setProgress(progress);
        }
    };
    // 设置进度最大值
    LoaderManager.prototype.setMax = function (max) {
        if (this.current) {
            this.current.setMax(max);
        }
    };
    return LoaderManager;
}());
exports.default = LoaderManager;
},{"../../Libs/Helpers/Dictionary":679,"./LoaderCirclePanel":631,"./LoaderCtl":632,"./LoaderEnterPanel":633,"./LoaderId":634}],636:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal_1 = require("../../Libs/signals/Signal");
var FWindow_1 = require("../Module/FWindow");
//======================
// 加载界面
//----------------------
var LoaderPanel = /** @class */ (function (_super) {
    __extends(LoaderPanel, _super);
    function LoaderPanel() {
        var _this = _super.call(this) || this;
        // 消息--显示完成
        _this.sShowComplete = new Signal_1.default();
        // 消息--隐藏完成
        _this.sHideComplete = new Signal_1.default();
        return _this;
    }
    LoaderPanel.prototype.onInit = function () {
        _super.prototype.onInit.call(this);
    };
    // 设置内容是否显示
    LoaderPanel.prototype.getContentVisiable = function () {
        if (this.contentPane) {
            return this.contentPane.visible;
        }
        return false;
    };
    LoaderPanel.prototype.setContentVisiable = function (value) {
        if (this.contentPane) {
            this.contentPane.visible = value;
        }
    };
    LoaderPanel.prototype.doShowAnimation = function () {
        this.onWindowWillShow();
        _super.prototype.doShowAnimation.call(this);
    };
    LoaderPanel.prototype.doHideAnimation = function () {
        this.onWindowWillHide();
        _super.prototype.doHideAnimation.call(this);
    };
    // 显示完成
    LoaderPanel.prototype.onShown = function () {
        this.sShowComplete.dispatch();
    };
    // 隐藏完成
    LoaderPanel.prototype.onHide = function () {
        this.sHideComplete.dispatch();
    };
    // 设置最大值
    LoaderPanel.prototype.setMax = function (value) {
    };
    // 设置加载进度
    LoaderPanel.prototype.setValue = function (value) {
    };
    // 设置Tip
    LoaderPanel.prototype.setTip = function (tip) {
    };
    LoaderPanel.prototype.setTips = function (tips) {
    };
    // 设置版本号
    LoaderPanel.prototype.setVersion = function () {
    };
    return LoaderPanel;
}(FWindow_1.default));
exports.default = LoaderPanel;
},{"../../Libs/signals/Signal":683,"../Module/FWindow":648}],637:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var LoaderId_1 = require("./LoaderId");
var Mathf_1 = require("../../Libs/Mathf");
//======================
// 加载界面消息处理器
//----------------------
var LoaderSettingHandler = /** @class */ (function () {
    function LoaderSettingHandler() {
        this.percent = 0;
        this.showPercent = 0;
    }
    LoaderSettingHandler.prototype.loading = function (percent) {
        this.percent = percent;
    };
    LoaderSettingHandler.prototype.setTip = function (txt) {
        var ctl = Game_1.default.loader.getLoaderCtl(LoaderId_1.LoaderId.Launch);
        ctl.setTip(txt);
    };
    LoaderSettingHandler.prototype.setPercent = function (percent) {
        var ctl = Game_1.default.loader.getLoaderCtl(LoaderId_1.LoaderId.Launch);
        ctl.setMax(100);
        ctl.setProgress(percent);
    };
    LoaderSettingHandler.prototype.starTweenPrecent = function () {
        var _this = this;
        this.stopTweenPrecent();
        this._tweenHandler = setInterval(function () {
            _this.showPercent = Math.ceil(Mathf_1.default.Lerp(_this.showPercent, _this.percent, 0.1));
            _this.setPercent(_this.showPercent);
        }, 100);
    };
    LoaderSettingHandler.prototype.stopTweenPrecent = function () {
        if (this._tweenHandler) {
            clearInterval(this._tweenHandler);
            this._tweenHandler = null;
        }
    };
    // 开始加载	
    LoaderSettingHandler.prototype.onBegin = function () {
        this.loading(0);
        this.starTweenPrecent();
    };
    // 加载配置	
    LoaderSettingHandler.prototype.onLoadedConfig = function (index, count, rate) {
        this.setTip(Game_1.default.launchText.LoadedConfig);
        this.loading(0 + Math.floor(rate * 40));
    };
    // 加载语言配置
    LoaderSettingHandler.prototype.onLoadedLangConfig = function (index, count, rate) {
        this.setTip(Game_1.default.launchText.LoadedConfig);
        this.loading(40 + Math.floor(rate * 20));
    };
    // 加载UI
    LoaderSettingHandler.prototype.onLoadedFgui = function (index, count) {
        this.setTip(Game_1.default.launchText.LoadedUI);
        this.loading(60 + Math.floor((index / count) * 40));
    };
    // 完成	
    LoaderSettingHandler.prototype.onEnd = function () {
        this.setTip(Game_1.default.launchText.LoadedEnd);
        this.loading(100);
    };
    return LoaderSettingHandler;
}());
exports.default = LoaderSettingHandler;
},{"../../Game":623,"../../Libs/Mathf":682,"./LoaderId":634}],638:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LocalStorage_1 = require("./LocalStorage");
var Game_1 = require("../../Game");
//======================
// 游戏本地数据缓存
//----------------------
var GameLocalStorage = /** @class */ (function (_super) {
    __extends(GameLocalStorage, _super);
    function GameLocalStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(GameLocalStorage, "Instance", {
        get: function () {
            if (!GameLocalStorage._Instance) {
                GameLocalStorage._Instance = new GameLocalStorage();
            }
            return GameLocalStorage._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "gmX", {
        get: function () {
            if (this._gmX === undefined) {
                this._gmX = this.getFloat("gmX", true);
            }
            return this._gmX;
        },
        set: function (value) {
            this._gmX = value;
            this.setFloat("gmX", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "gmY", {
        get: function () {
            if (this._gmY === undefined) {
                if (this.hasItem("gmY", true)) {
                    this._gmY = this.getFloat("gmY", true);
                }
                else {
                    this._gmY = 100;
                }
            }
            return this._gmY;
        },
        set: function (value) {
            this._gmY = value;
            this.setFloat("gmY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "fontSetting", {
        get: function () {
            if (!this._fontSetting) {
                this._fontSetting = this.getItem("fontSetting", true);
            }
            return this._fontSetting;
        },
        set: function (value) {
            this._fontSetting = value;
            this.setItem("fontSetting", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "serverName", {
        get: function () {
            if (!this._serverName) {
                this._serverName = this.getItem("serverName", true);
            }
            return this._serverName;
        },
        set: function (value) {
            this._serverName = value;
            this.setItem("serverName", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "useraccountList", {
        get: function () {
            if (!this._useraccountList) {
                this._useraccountList = this.getJSON("_useraccountList", true);
            }
            if (!this._useraccountList) {
                this._useraccountList = [];
            }
            return this._useraccountList;
        },
        set: function (value) {
            this._useraccountList = value;
            this.setJSON("_useraccountList", value, true);
        },
        enumerable: true,
        configurable: true
    });
    GameLocalStorage.prototype.addUseraccount = function (username, password) {
        var has = false;
        var list = this.useraccountList ? this.useraccountList : [];
        for (var i = 0; i < list.length; i++) {
            if (list[i].username == username) {
                list[i].password = password;
                list[i].lasttime = Game_1.default.time.localTime;
                has = true;
            }
        }
        if (!has) {
            list.push({ username: username, password: password, lasttime: Game_1.default.time.localTime });
        }
        list.sort(function (a, b) { return b.lasttime - a.lasttime; });
        this.useraccountList = list;
    };
    Object.defineProperty(GameLocalStorage.prototype, "password", {
        get: function () {
            if (!this._password) {
                this._password = this.getItem("password");
                if (this._password == null)
                    this._password = "";
            }
            return this._password;
        },
        set: function (value) {
            this._password = value;
            this.setItem("password", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "deviceId", {
        get: function () {
            if (!this._deviceId) {
                if (window["conch"]) {
                    var deviceInfo = JSON.parse(window["conch"].config.getDeviceInfo());
                    this._deviceId = deviceInfo["guid"];
                    if (this._deviceId == "08:00:27:1d:38:2c") {
                        this._deviceId = Game_1.default.application.IDFA;
                    }
                }
                if (!this._deviceId || this._deviceId == "undefined" || this._deviceId == undefined) {
                    this._deviceId = this.getString("_deviceId", true);
                    if (!this._deviceId) {
                        var timestamp = new Date().getTime();
                        var random = Math.random();
                        this._deviceId = timestamp.toString() + "." + random.toString();
                    }
                }
            }
            return this._deviceId;
        },
        set: function (value) {
            this._deviceId = value;
            this.setString("_deviceId", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "guestusername", {
        get: function () {
            if (!this._guestusername) {
                this._guestusername = this.getString("guest", true);
            }
            return this._guestusername;
        },
        set: function (value) {
            this._guestusername = value;
            this.setString("guest", value, true);
            Game_1.default.sound.onLogin();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "isGuest", {
        get: function () {
            if (this._isGuest === undefined) {
                this._isGuest = this.getBoolean("isGuest", true);
            }
            return this._isGuest;
        },
        set: function (value) {
            this._isGuest = value;
            this.setBoolean("isGuest", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "isGameGuest", {
        get: function () {
            if (this._isGameGuest === undefined) {
                this._isGameGuest = this.getBoolean("isGameGuest", true);
            }
            return this._isGameGuest;
        },
        set: function (value) {
            this._isGameGuest = value;
            this.setBoolean("isGameGuest", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "isNoticTodayNoOpen", {
        get: function () {
            if (this._isNoticTodayNoOpen === undefined) {
                this._isNoticTodayNoOpen = this.getBoolean("isNoticTodayNoOpen", true);
            }
            return this._isNoticTodayNoOpen;
        },
        set: function (value) {
            this._isNoticTodayNoOpen = value;
            this.setBoolean("isNoticTodayNoOpen", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "lastOpenShopSpecialTime", {
        get: function () {
            if (this._lastOpenShopSpecialTime === undefined) {
                this._lastOpenShopSpecialTime = this.getFloat("lastOpenShopSpecialTime", true);
            }
            return this._lastOpenShopSpecialTime;
        },
        set: function (value) {
            this._lastOpenShopSpecialTime = value;
            this.setFloat("lastOpenShopSpecialTime", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameLocalStorage.prototype, "lastOpenShopSingleTime", {
        get: function () {
            if (this._lastOpenShopSingleTime === undefined) {
                this._lastOpenShopSingleTime = this.getFloat("lastOpenShopSingleTime", true);
            }
            return this._lastOpenShopSingleTime;
        },
        set: function (value) {
            this._lastOpenShopSingleTime = value;
            this.setFloat("lastOpenShopSingleTime", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return GameLocalStorage;
}(LocalStorage_1.default));
exports.default = GameLocalStorage;
},{"../../Game":623,"./LocalStorage":639}],639:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
//======================
// 游戏本地数据缓存
//----------------------
var LocalStorage = /** @class */ (function () {
    function LocalStorage() {
    }
    Object.defineProperty(LocalStorage.prototype, "username", {
        get: function () {
            if (!this._username) {
                this._username = this.getString("username", true);
            }
            return this._username;
        },
        set: function (value) {
            this._username = value;
            this.setString("username", value, true);
            Game_1.default.sound.onLogin();
        },
        enumerable: true,
        configurable: true
    });
    LocalStorage.prototype.getKey = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        if (isGobal) {
            return key;
        }
        else {
            return this.username + "_" + key;
        }
    };
    // string
    LocalStorage.prototype.setItem = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal));
    };
    // string
    LocalStorage.prototype.setString = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getString = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val === undefined || val === null) {
            val = "";
        }
        return val;
    };
    // boolean
    LocalStorage.prototype.setBoolean = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value ? "true" : "false");
    };
    LocalStorage.prototype.getBoolean = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal)) == "true";
    };
    // int
    LocalStorage.prototype.setInt = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value.toString());
    };
    LocalStorage.prototype.getInt = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val) {
            return parseInt(val);
        }
        return 0;
    };
    // float
    LocalStorage.prototype.setFloat = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value.toString());
    };
    LocalStorage.prototype.getFloat = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val) {
            return parseFloat(val);
        }
        return 0;
    };
    LocalStorage.prototype.setJSON = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setJSON(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getJSON = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getJSON(this.getKey(key, isGobal));
    };
    LocalStorage.prototype.removeItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.removeItem(this.getKey(key, isGobal));
    };
    LocalStorage.prototype.hasItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal)) !== null;
    };
    LocalStorage.prototype.clear = function () {
        return Laya.LocalStorage.clear();
    };
    return LocalStorage;
}());
exports.default = LocalStorage;
},{"../../Game":623}],640:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["Debug"] = 0] = "Debug";
    LogLevel[LogLevel["Info"] = 0] = "Info";
    LogLevel[LogLevel["Warn"] = 2] = "Warn";
    LogLevel[LogLevel["Error"] = 3] = "Error";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
var LogLevelText;
(function (LogLevelText) {
    LogLevelText["Debug"] = "Debug";
    LogLevelText["Info"] = "Info";
    LogLevelText["Warn"] = "Warn";
    LogLevelText["Error"] = "Error";
})(LogLevelText = exports.LogLevelText || (exports.LogLevelText = {}));
var Log = /** @class */ (function () {
    function Log() {
    }
    Object.defineProperty(Log, "Level", {
        get: function () {
            return Log.level;
        },
        set: function (level) {
            Log.level = level;
        },
        enumerable: true,
        configurable: true
    });
    Log.Debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (Log.level > LogLevel.Debug)
            return;
        Log.logger.debug(args);
    };
    Log.Info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (Log.level > LogLevel.Info)
            return;
        Log.logger.info(args);
    };
    Log.Warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (Log.level > LogLevel.Warn)
            return;
        Log.logger.warn(args);
    };
    Log.Error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (Log.level > LogLevel.Warn)
            return;
        Log.logger.error(args);
    };
    Log.logger = console;
    Log.level = LogLevel.Debug;
    return Log;
}());
exports.default = Log;
},{}],641:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 关闭面板时，处理其他面板方式
 */
var MenuCloseOtherType;
(function (MenuCloseOtherType) {
    // 不关闭任何面板
    MenuCloseOtherType[MenuCloseOtherType["None"] = 0] = "None";
    // 除自己外的所有
    MenuCloseOtherType[MenuCloseOtherType["ExceptSelf_All"] = 1] = "ExceptSelf_All";
    // 除自己外的所有模块层级面板
    MenuCloseOtherType[MenuCloseOtherType["ExceptSelf_Module"] = 2] = "ExceptSelf_Module";
    // 相同层级的其他面板
    MenuCloseOtherType[MenuCloseOtherType["ExceptSelf_SameLayer"] = 3] = "ExceptSelf_SameLayer";
})(MenuCloseOtherType = exports.MenuCloseOtherType || (exports.MenuCloseOtherType = {}));
},{}],642:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuId_1 = require("../../GameModule/MenuId");
var MenuCtlStateType_1 = require("./MenuCtlStateType");
var MenuLayer_1 = require("./MenuLayer");
var Game_1 = require("../../Game");
var GameEventKey_1 = require("../../GameEventKey");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var SoundKey_1 = require("../../FGUI/Generates/SoundKey");
var MenuCloseOtherType_1 = require("./MenuCloseOtherType");
var MenuLayerType_1 = require("./MenuLayerType");
// 菜单控制器
var MenuCtl = /** @class */ (function () {
    function MenuCtl() {
        // 返回菜单ID
        this.backMenuId = -1;
        // 返回菜单ID排除
        this.backExcludeMenuIdMenuId = -1;
        // 关闭时间
        this.closeTime = 0;
        // 此次关闭是否销毁
        this.closeIsDestory = true;
    }
    // 打开
    MenuCtl.prototype.open = function (parametar) {
        this.openParametar = parametar;
        if (!this.moduleWindow) {
            this.moduleWindow = new this.menuWindowConfig.windowClass();
            this.moduleWindow.menuId = this.menuId;
            this.moduleWindow.name = this.menuConfig.name;
            this.moduleWindow.windowContainer = MenuLayer_1.default.getLayer(this.menuConfig.menuLayer);
        }
        this.load();
    };
    // 关闭
    MenuCtl.prototype.close = function () {
        if (this.state == MenuCtlStateType_1.MenuCtlStateType.Closed || this.state == MenuCtlStateType_1.MenuCtlStateType.Destoryed)
            return;
        this.__menuManager.__onMenuClose(this);
    };
    // 延时关闭，等把主界面打开再关闭
    MenuCtl.prototype.__delayClose = function () {
        this.backMenuId = -1;
        if (this.moduleWindow && this.moduleWindow.menuIsCreated) {
            Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_CloseMenu, this.moduleWindow.menuId);
            this.moduleWindow.onMenuClose();
            this.closeTime = Game_1.default.time.localTime;
        }
        this.state = MenuCtlStateType_1.MenuCtlStateType.Closed;
        // this.destory();
    };
    // 销毁
    MenuCtl.prototype.destory = function () {
        if (this.moduleWindow) {
            this.moduleWindow.sShowComplete.remove(this.closeOther, this);
            this.moduleWindow.destory();
            this.moduleWindow = null;
        }
        this.state = MenuCtlStateType_1.MenuCtlStateType.Destoryed;
    };
    // 加载资源
    MenuCtl.prototype.load = function () {
        this.state = MenuCtlStateType_1.MenuCtlStateType.Loading;
        var list = this.getLoadAssets();
        if (!list || list.length == 0) {
            this.loadBeginTime = 0;
            this.onLoadComplete();
        }
        else {
            this.loadBeginTime = Game_1.default.time.localTime;
            // 打开加载面板
            var loaderCtl_1 = Game_1.default.loader.open(this.menuConfig.menuLoaderId);
            loaderCtl_1.setMax(list.length);
            loaderCtl_1.setProgress(0);
            var onProgress = function (rate, current, max, assetItemInfo) {
                loaderCtl_1.setProgress(current);
            };
            Game_1.default.asset.loadList(list, this, this.onLoadComplete, onProgress);
        }
    };
    // 加载完成
    MenuCtl.prototype.onLoadComplete = function () {
        this.setShow();
        Game_1.default.loader.close(this.menuConfig.menuLoaderId);
        if (this.loadBeginTime > 0)
            console.log("加载界面花费时间 (" + this.menuConfig.moduleName + ") :" + (Game_1.default.time.localTime - this.loadBeginTime) + " 毫秒");
    };
    // 获取模块资源列表
    MenuCtl.prototype.getLoadAssets = function () {
        var list = [];
        var dict = new Dictionary_1.default();
        if (!this.moduleWindow.menuIsCreated) {
            this.moduleWindow.getLoadAssets(list, dict);
        }
        this.moduleWindow.generateAssetsForDynmic();
        this.moduleWindow.getLoadAssetsForDynamic(list, dict);
        return list;
    };
    // 设置显示
    MenuCtl.prototype.setShow = function () {
        if (!this.moduleWindow) {
            console.warn("\u8BBE\u7F6E\u663E\u793A \u4F46\u662F\u6A21\u5757\u5DF2\u9500\u6BC1 " + this.menuConfig.name + "(" + this.menuConfig.moduleName + "): " + this.menuId);
            return;
        }
        console.log("\u8BBE\u7F6E\u663E\u793A\u9762\u677F " + this.menuConfig.name + "(" + this.menuConfig.moduleName + "): " + this.menuId);
        this.moduleWindow.sShowComplete.addOnce(this.closeOther, this);
        this.moduleWindow.sShowSubwindowComplete.addOnce(this.closeOther, this);
        this.state = MenuCtlStateType_1.MenuCtlStateType.Opened;
        if (this.moduleWindow.menuIsCreated) {
            this.moduleWindow.onMenuOpen(this.openParametar);
        }
        else {
            this.moduleWindow.menuParameter = this.openParametar;
        }
        this.moduleWindow.menuShow(this.moduleWindow.windowContainer);
        switch (this.menuId) {
            case MenuId_1.MenuId.Login:
                Game_1.default.sound.playMusic(SoundKey_1.default.MM_BGM_Cinema);
                break;
            case MenuId_1.MenuId.Home:
                Game_1.default.sound.playMusic(SoundKey_1.default.MM_BGM_Cinema);
                break;
        }
    };
    MenuCtl.prototype.setCloseDontDestory = function () {
    };
    // 关闭其他模块
    MenuCtl.prototype.closeOther = function () {
        var homeIsOpen = this.__menuManager.isOpened(MenuId_1.MenuId.Home);
        // 设置返回MenuID
        var backMenuId = this.__menuManager.getLastModuleOpenMenuId([this.backExcludeMenuIdMenuId, this.menuId]);
        var hasCloseOtherMenu = false;
        var list = Game_1.default.menu.dict.getValues();
        switch (this.menuConfig.menuCloseOtherType) {
            // 不关闭任何面板
            case MenuCloseOtherType_1.MenuCloseOtherType.None:
                break;
            // 除自己外的所有
            case MenuCloseOtherType_1.MenuCloseOtherType.ExceptSelf_All:
                for (var i = 0; i < list.length; i++) {
                    var ctl = list[i];
                    if (ctl.menuId == MenuId_1.MenuId.Home)
                        continue;
                    if (ctl != this) {
                        ctl.closeIsDestory = homeIsOpen;
                        ctl.close();
                        hasCloseOtherMenu = true;
                    }
                }
                break;
            // 除自己外的所有模块层级面板
            case MenuCloseOtherType_1.MenuCloseOtherType.ExceptSelf_Module:
                for (var i = 0; i < list.length; i++) {
                    var ctl = list[i];
                    if (ctl != this && ctl.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.Module) {
                        ctl.closeIsDestory = homeIsOpen;
                        ctl.close();
                        hasCloseOtherMenu = true;
                    }
                }
                break;
            // 相同层级的其他面板
            case MenuCloseOtherType_1.MenuCloseOtherType.ExceptSelf_SameLayer:
                for (var i = 0; i < list.length; i++) {
                    var ctl = list[i];
                    if (ctl.menuId == MenuId_1.MenuId.Home)
                        continue;
                    if (ctl != this && ctl.menuConfig.menuLayer == this.menuConfig.menuLayer) {
                        ctl.closeIsDestory = homeIsOpen;
                        ctl.close();
                        hasCloseOtherMenu = true;
                    }
                }
                break;
        }
        if (this.menuConfig.closeHomeWindow) {
            // this.__menuManager.close(MenuId.Home);
            var home = this.__menuManager.getMenuCtl(MenuId_1.MenuId.Home);
            if (home && home.moduleWindow) {
                var homeWindow = home.moduleWindow;
                if (homeWindow) {
                    homeWindow.setHomeHide();
                }
            }
        }
        this.backMenuId = hasCloseOtherMenu ? backMenuId : -1;
    };
    return MenuCtl;
}());
exports.default = MenuCtl;
},{"../../FGUI/Generates/SoundKey":617,"../../Game":623,"../../GameEventKey":625,"../../GameModule/MenuId":662,"../../Libs/Helpers/Dictionary":679,"./MenuCloseOtherType":641,"./MenuCtlStateType":643,"./MenuLayer":644,"./MenuLayerType":645}],643:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// menu状态
// ---------------------------
var MenuCtlStateType;
(function (MenuCtlStateType) {
    // 关闭的，或者没打开过
    MenuCtlStateType[MenuCtlStateType["Closed"] = 1] = "Closed";
    // 加载中
    MenuCtlStateType[MenuCtlStateType["Loading"] = 2] = "Loading";
    // 打开的
    MenuCtlStateType[MenuCtlStateType["Opened"] = 3] = "Opened";
    // 销毁的
    MenuCtlStateType[MenuCtlStateType["Destoryed"] = 4] = "Destoryed";
})(MenuCtlStateType = exports.MenuCtlStateType || (exports.MenuCtlStateType = {}));
},{}],644:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MenuLayerType_1 = require("./MenuLayerType");
var Game_1 = require("../../Game");
var BGModel_1 = require("../../FGUI/Extends/GameLaunch/BGModel");
/**
 * 模块UI 层
 */
var MenuLayer = /** @class */ (function () {
    function MenuLayer() {
    }
    Object.defineProperty(MenuLayer, "dialogModel", {
        get: function () {
            if (!MenuLayer._dialogModel) {
                MenuLayer._dialogModel = BGModel_1.default.createInstance();
            }
            return MenuLayer._dialogModel;
        },
        enumerable: true,
        configurable: true
    });
    MenuLayer.showDialogModel = function () {
        MenuLayer.dialog.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialog.height = Game_1.default.screenSetting.screenHeight;
        MenuLayer.dialogModel.alpha = 0.8;
        MenuLayer.dialogModel.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialogModel.height = Game_1.default.screenSetting.screenHeight;
        if (MenuLayer.dialogModel)
            MenuLayer.dialog.addChildAt(MenuLayer.dialogModel, 0);
    };
    MenuLayer.resetDialogModelSize = function () {
        MenuLayer.dialog.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialog.height = Game_1.default.screenSetting.screenHeight;
        MenuLayer.dialogModel.width = Game_1.default.screenSetting.screenWidth;
        MenuLayer.dialogModel.height = Game_1.default.screenSetting.screenHeight;
    };
    MenuLayer.hideDialogModel = function () {
        if (MenuLayer.dialogModel)
            MenuLayer.dialogModel.removeFromParent();
    };
    // 初始化
    MenuLayer.install = function () {
        // 根容器
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        MenuLayer.root = fairygui.GRoot.inst;
        MenuLayer.home = MenuLayer.createLayer("MenuLayer-home");
        MenuLayer.homeTop = MenuLayer.createLayer("MenuLayer-homeTop");
        MenuLayer.module = MenuLayer.createLayer("MenuLayer-module");
        MenuLayer.moduleTop = MenuLayer.createLayer("MenuLayer-moduleTop");
        MenuLayer.mainUI = MenuLayer.createLayer("MenuLayer-mainUI");
        MenuLayer.dialog = MenuLayer.createLayer("MenuLayer-dialog");
        MenuLayer.guide = MenuLayer.createLayer("MenuLayer-guide");
        MenuLayer.loader = MenuLayer.createLayer("MenuLayer-loader");
        MenuLayer.gm = MenuLayer.createLayer("MenuLayer-gm");
        MenuLayer.floatMsg = MenuLayer.createLayer("MenuLayer-floatMsg");
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Home, MenuLayer.home);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.HomeTop, MenuLayer.homeTop);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Module, MenuLayer.module);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.ModuleTop, MenuLayer.moduleTop);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.MainUI, MenuLayer.mainUI);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Dialog, MenuLayer.dialog);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Guide, MenuLayer.guide);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Loader, MenuLayer.loader);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.GM, MenuLayer.gm);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.FloatMsg, MenuLayer.floatMsg);
    };
    MenuLayer.getLayer = function (layerType) {
        return MenuLayer.dict.getValue(layerType);
    };
    MenuLayer.createLayer = function (name) {
        var root = MenuLayer.root;
        var v = new fairygui.GRoot();
        if (name) {
            v.name = name;
        }
        v.setSize(root.width, root.height);
        root.addChild(v);
        return v;
    };
    // 字典
    MenuLayer.dict = new Dictionary_1.default();
    return MenuLayer;
}());
exports.default = MenuLayer;
},{"../../FGUI/Extends/GameLaunch/BGModel":582,"../../Game":623,"../../Libs/Helpers/Dictionary":679,"./MenuLayerType":645}],645:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 层级类型
// ---------------------------
var MenuLayerType;
(function (MenuLayerType) {
    // 主界面
    MenuLayerType[MenuLayerType["Home"] = 1] = "Home";
    // 主界面 上一层
    MenuLayerType[MenuLayerType["HomeTop"] = 2] = "HomeTop";
    // 模块
    MenuLayerType[MenuLayerType["Module"] = 3] = "Module";
    // 模块
    MenuLayerType[MenuLayerType["ModuleTop"] = 4] = "ModuleTop";
    // 主UI
    MenuLayerType[MenuLayerType["MainUI"] = 5] = "MainUI";
    // 对话框
    MenuLayerType[MenuLayerType["Dialog"] = 6] = "Dialog";
    // 引导
    MenuLayerType[MenuLayerType["Guide"] = 7] = "Guide";
    // 加载面板
    MenuLayerType[MenuLayerType["Loader"] = 8] = "Loader";
    // GM
    MenuLayerType[MenuLayerType["GM"] = 9] = "GM";
    // 浮动对话框
    MenuLayerType[MenuLayerType["FloatMsg"] = 10] = "FloatMsg";
})(MenuLayerType = exports.MenuLayerType || (exports.MenuLayerType = {}));
},{}],646:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MenuCtl_1 = require("./MenuCtl");
var MenuId_1 = require("../../GameModule/MenuId");
var MenuCtlStateType_1 = require("./MenuCtlStateType");
var MenuOpenType_1 = require("./MenuOpenType");
var Game_1 = require("../../Game");
var MenuLayerType_1 = require("./MenuLayerType");
var FGLoader_1 = require("../../FGUI/FGLoader");
var Log_1 = require("../Log/Log");
var MenuWindows_1 = require("../../GameModule/MenuWindows");
//=================
// 模块管理器
//------------------
var MenuManager = /** @class */ (function () {
    function MenuManager() {
        this.dict = new Dictionary_1.default();
        this.list = [];
        this.stack = [];
    }
    // 初始化
    MenuManager.prototype.install = function () {
    };
    // 获取模块控制器
    MenuManager.prototype.getMenuCtl = function (menuId) {
        return this.dict.getValue(menuId);
    };
    // 销毁
    MenuManager.prototype.destory = function (menuId) {
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            if (ctl.state == MenuCtlStateType_1.MenuCtlStateType.Opened) {
                ctl.close();
                setTimeout(function () {
                    ctl.destory();
                }, 100);
            }
            else {
                ctl.destory();
            }
        }
    };
    // 打开模块的tab面板
    MenuManager.prototype.openTab = function (menuId, tabIndex) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        return this._open(menuId, { openType: MenuOpenType_1.MenuOpenType.Tab, openIndex: tabIndex, args: args });
    };
    // 打开模块的子窗口
    MenuManager.prototype.openSubWindow = function (menuId, subwindowIndex) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        return this._open(menuId, { openType: MenuOpenType_1.MenuOpenType.Subwindow, openIndex: subwindowIndex, args: args });
    };
    // 打开模块
    MenuManager.prototype.open = function (menuId) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this._open(menuId, { openType: MenuOpenType_1.MenuOpenType.None, openIndex: 0, args: args });
    };
    // 打开模块使用menuIndexId
    MenuManager.prototype.openByMenuIndexId = function (menuIndexId) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var indexConfig = Game_1.default.config.menuIndex.getConfig(menuIndexId);
        if (indexConfig) {
            switch (indexConfig.openType) {
                case MenuOpenType_1.MenuOpenType.Subwindow:
                    this.openSubWindow.apply(this, [indexConfig.menuId, indexConfig.menuIndex].concat(args));
                    break;
                case MenuOpenType_1.MenuOpenType.Tab:
                    this.openTab.apply(this, [indexConfig.menuId, indexConfig.menuIndex].concat(args));
                    break;
                default:
                    this.open.apply(this, [indexConfig.menuId].concat(args));
                    break;
            }
        }
        else {
            var menuConfig = Game_1.default.config.menu.getConfig(menuIndexId);
            if (menuConfig) {
                this.open.apply(this, [menuIndexId].concat(args));
            }
        }
    };
    //打开主界面
    MenuManager.prototype.openHome = function () {
        var home = this.getMenuCtl(MenuId_1.MenuId.Home);
        // if (!home || home.state != MenuCtlStateType.Opened)
        // {
        //     this.open(MenuId.Home);
        // }
        if (!home || home.state != MenuCtlStateType_1.MenuCtlStateType.Opened) {
            home = this.open(MenuId_1.MenuId.Home);
        }
        if (home.moduleWindow.contentPane && !home.moduleWindow.contentPane.visible) {
            home.moduleWindow.contentPane.visible = true;
        }
    };
    //关闭主界面
    MenuManager.prototype.closeHome = function () {
        var home = this.getMenuCtl(MenuId_1.MenuId.Home);
        if (home && home.moduleWindow && home.moduleWindow.contentPane) {
            home.moduleWindow.contentPane.visible = false;
        }
    };
    // 打开模块
    MenuManager.prototype._open = function (menuId, parametar) {
        var ctl = this.getMenuCtl(menuId);
        if (!ctl) {
            var menuConfig = Game_1.default.config.menu.getConfig(menuId);
            if (!menuConfig) {
                Log_1.default.Error("MenuManager.open \u6CA1\u6709\u627E\u5230menuConfig, menuId=" + menuId);
                return null;
            }
            var menuWindowConfig = MenuWindows_1.default.get(menuId);
            if (!menuWindowConfig) {
                Log_1.default.Error("MenuManager.open \u6CA1\u6709\u627E\u5230menuWindowConfig, menuId=" + menuId);
                return null;
            }
            if (!menuWindowConfig.windowClass) {
                Log_1.default.Error("MenuManager.open menuWindowConfig.windowClass=" + menuWindowConfig.windowClass + ", menuId=" + menuId);
                return null;
            }
            ctl = new MenuCtl_1.default();
            ctl.__menuManager = this;
            ctl.menuId = menuId;
            ctl.menuConfig = menuConfig;
            ctl.menuWindowConfig = menuWindowConfig;
            this.dict.add(menuId, ctl);
            if (ctl.menuId != MenuId_1.MenuId.Home)
                this.list.push(ctl);
        }
        ctl.open(parametar);
        var index = this.stack.indexOf(ctl);
        if (index != -1)
            this.stack.splice(index, 1);
        this.stack.push(ctl);
        //
        return ctl;
    };
    // 返回
    MenuManager.prototype.back = function (menuId) {
        var _this = this;
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            var backMenuId = ctl.backMenuId;
            if (backMenuId > 0) {
                var backMenuCtl = this.getMenuCtl(backMenuId);
                if (backMenuCtl) {
                    backMenuCtl.backExcludeMenuIdMenuId = menuId;
                    var openParametar = backMenuCtl.moduleWindow ? backMenuCtl.moduleWindow.getLastMenuParameter() : null;
                    if (!openParametar) {
                        openParametar = backMenuCtl.openParametar;
                    }
                    this._open(backMenuId, openParametar);
                }
            }
            setTimeout(function () {
                _this.close(menuId);
            }, 100);
        }
    };
    // 关闭模块
    MenuManager.prototype.close = function (menuId) {
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            ctl.closeIsDestory = true;
            ctl.close();
        }
    };
    MenuManager.prototype.__onMenuClose = function (ctl) {
        for (var i = this.stack.length - 1; i >= 0; i--) {
            if (this.stack[i] == ctl)
                this.stack.splice(i, 1);
        }
        var openedNum = 0;
        var sameLayoutOpenedNum = 0;
        var moduleOpenedNum = 0;
        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
            var item = _a[_i];
            if (item.menuId == ctl.menuId)
                continue;
            switch (item.state) {
                case MenuCtlStateType_1.MenuCtlStateType.Opened:
                    openedNum++;
                    if (item.menuConfig.menuLayer == ctl.menuConfig.menuLayer) {
                        sameLayoutOpenedNum++;
                    }
                    if (item.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.Module || item.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.ModuleTop) {
                        moduleOpenedNum++;
                    }
                    break;
            }
        }
        console.log("\u5173\u95ED\u9762\u677F " + ctl.menuConfig.zh_cn_name + " ( " + ctl.menuConfig.moduleName + ")  :\" + openedNum=" + openedNum + ", sameLayoutOpenedNum=" + sameLayoutOpenedNum + ", moduleOpenedNum=" + moduleOpenedNum);
        if (moduleOpenedNum == 0 && ctl.menuConfig.isAutoOpenHomeWindow) {
            var home = this.getMenuCtl(MenuId_1.MenuId.Home);
            // if (!home || home.state != MenuCtlStateType.Opened)
            // {
            //     this.open(MenuId.Home);
            // }
            if (!home || home.state != MenuCtlStateType_1.MenuCtlStateType.Opened) {
                home = this.open(MenuId_1.MenuId.Home);
            }
            var homeWindow = home.moduleWindow;
            if (homeWindow) {
                homeWindow.setHomeShow();
            }
        }
        ctl.__delayClose();
        // 改成关闭时再去销毁
        this.onTick();
        // 改成关闭时再去清理动态图片
        FGLoader_1.default.clearFreeLong();
    };
    // 获取最后打开的面板
    MenuManager.prototype.getLastOpenMenuId = function () {
        if (this.stack.length > 0) {
            return this.stack[this.stack.length - 1].menuId;
        }
        return -1;
    };
    // 获取最后打开的模块面板ID
    MenuManager.prototype.getLastModuleOpenMenuId = function (excludeMenuId) {
        for (var i = this.stack.length - 1; i >= 0; i--) {
            var ctl = this.stack[i];
            if (ctl.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.Module || ctl.menuConfig.menuLayer == MenuLayerType_1.MenuLayerType.ModuleTop) {
                if (excludeMenuId && excludeMenuId.indexOf(ctl.menuId) != -1) {
                    continue;
                }
                return ctl.menuId;
            }
        }
        return -1;
    };
    // 获取模块是否打开        
    MenuManager.prototype.isOpened = function (menuId) {
        var result = false;
        var ctl = this.getMenuCtl(menuId);
        if (ctl && ctl.state == MenuCtlStateType_1.MenuCtlStateType.Opened) {
            if (ctl.menuId == MenuId_1.MenuId.Home) {
                if (ctl.moduleWindow && ctl.moduleWindow.contentPane)
                    result = ctl.moduleWindow.contentPane.visible;
            }
            else {
                result = true;
            }
        }
        return result;
    };
    // 是否打开子面板或者Tab
    MenuManager.prototype.isOpenedSubOrTab = function (menuId, index) {
        if (!this.isOpened(menuId)) {
            return false;
        }
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            return ctl.moduleWindow.isOpenSubOrTab(index);
        }
        return false;
    };
    /** 获取模块子窗口 */
    MenuManager.prototype.getSubWindow = function (menuId, index) {
        if (!this.isOpened(menuId)) {
            return null;
        }
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            return ctl.moduleWindow.getSubwindow(index);
        }
        return null;
    };
    /** 检测销毁模块 */
    MenuManager.prototype.onTick = function () {
        for (var i = 0; i < this.list.length; i++) {
            var ctl = this.list[i];
            if (ctl.state == MenuCtlStateType_1.MenuCtlStateType.Closed) {
                if (ctl.menuConfig.cacheTime != -1) {
                    var cacheTime = Math.max(ctl.menuConfig.cacheTime, Game_1.default.deviceSetting.menuCacheTime);
                    var subtime = Game_1.default.time.localTime - ctl.closeTime;
                    if (subtime >= cacheTime && ctl.closeIsDestory) {
                        ctl.destory();
                    }
                }
            }
        }
    };
    return MenuManager;
}());
exports.default = MenuManager;
},{"../../FGUI/FGLoader":597,"../../Game":623,"../../GameModule/MenuId":662,"../../GameModule/MenuWindows":668,"../../Libs/Helpers/Dictionary":679,"../Log/Log":640,"./MenuCtl":642,"./MenuCtlStateType":643,"./MenuLayerType":645,"./MenuOpenType":647}],647:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// 打开menu方式
// ---------------------------
var MenuOpenType;
(function (MenuOpenType) {
    // 默认
    MenuOpenType[MenuOpenType["None"] = 0] = "None";
    // Tab面板
    MenuOpenType[MenuOpenType["Tab"] = 2] = "Tab";
    // 子窗口
    MenuOpenType[MenuOpenType["Subwindow"] = 3] = "Subwindow";
})(MenuOpenType = exports.MenuOpenType || (exports.MenuOpenType = {}));
},{}],648:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
//======================
// 扩展 fairygui.Window
//----------------------
var FWindow = /** @class */ (function (_super) {
    __extends(FWindow, _super);
    function FWindow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isAddedStage = false;
        return _this;
    }
    Object.defineProperty(FWindow.prototype, "isShowed", {
        get: function () {
            if (this.contentPane)
                return this.parent != null;
            return false;
        },
        enumerable: true,
        configurable: true
    });
    FWindow.prototype.onWindowWillShow = function () {
        if (this.contentPane) {
            this.callChildOnWindowWillShow(this.contentPane);
        }
        this.setScreenSize();
        if (this.isAddedStage)
            return;
        this.isAddedStage = true;
        Laya.stage.on(laya.events.Event.RESIZE, this, this.setScreenSize);
    };
    FWindow.prototype.onWindowWillHide = function () {
        if (this.contentPane) {
            this.callChildOnWindowWillHide(this.contentPane);
        }
        this.isAddedStage = false;
        Laya.stage.off(laya.events.Event.RESIZE, this, this.setScreenSize);
    };
    FWindow.prototype.setScreenSize = function () {
        if (this.contentPane) {
            this.contentPane.width = Game_1.default.screenSetting.screenWidth;
            this.contentPane.height = Game_1.default.screenSetting.screenHeight;
            this.callChildOnWindowResize(this.contentPane);
            // this.contentPane.displayObject.graphics.drawRect(0, 0, this.contentPane.width, this.contentPane.height, "red");
        }
    };
    //=========================
    // 调用child GComponent的 onWindowWillShow
    //-------------------------
    FWindow.prototype.callChildOnWindowWillShow = function (com) {
        if (com) {
            var fun = com["onWindowWillShow"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowWillShow(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowWillHide
    //-------------------------
    FWindow.prototype.callChildOnWindowWillHide = function (com) {
        if (com) {
            var fun = com["onWindowWillHide"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowWillHide(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowResize
    //-------------------------
    FWindow.prototype.callChildOnWindowResize = function (com) {
        if (com) {
            var fun = com["onWindowResize"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowResize(com._children[i]);
                }
            }
        }
    };
    return FWindow;
}(fairygui.Window));
exports.default = FWindow;
},{"../../Game":623}],649:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//======================
// 模块 数据模型
//----------------------
var MModel = /** @class */ (function () {
    function MModel() {
    }
    // 初始化
    MModel.prototype.install = function () {
    };
    return MModel;
}());
exports.default = MModel;
},{}],650:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("./FWindow");
var Signal_1 = require("../../Libs/signals/Signal");
var AssetItemType_1 = require("../AssetManagers/AssetItemType");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var AssetHelper_1 = require("../AssetManagers/AssetHelper");
var GuiPackageNames_1 = require("../../FGUI/Generates/GuiPackageNames");
var Game_1 = require("../../Game");
var MenuOpenType_1 = require("../Menu/MenuOpenType");
var GameEventKey_1 = require("../../GameEventKey");
var Point = laya.maths.Point;
var Handler = laya.utils.Handler;
//======================
// 模块窗口
//----------------------
var MWindow = /** @class */ (function (_super) {
    __extends(MWindow, _super);
    function MWindow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 消息--显示完成
        _this.sShowComplete = new Signal_1.default();
        // 消息--隐藏完成
        _this.sHideComplete = new Signal_1.default();
        // 是否初始化视图
        _this.menuIsCreated = false;
        // 是否已经销毁
        _this.isDestoryed = false;
        // 是否可以出现显示过度动画
        _this.enableShowAnimation = true;
        // 是否显示需要发消息
        _this.enableShowSignal = true;
        // 是否隐藏需要发消息
        _this.enableHideSignal = true;
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // 依赖资源列表
        _this._loadAssets = [];
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // 动态资源列表
        _this._dynamicAssetsList = [];
        _this.toPoint = new Point();
        _this.srcPoint = new Point();
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // 消息--显示完成
        _this.sShowSubwindowComplete = new Signal_1.default();
        // 消息--隐藏完成
        _this.sHideSubwindowComplete = new Signal_1.default();
        // 子窗口字典
        _this.subwindowDict = new Dictionary_1.default();
        // 打开子窗口栈
        _this.subwindowStack = [];
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
        // Tab字典
        _this.tabDict = new Dictionary_1.default();
        // Tab历史记录
        _this.tabHistorys = [];
        return _this;
    }
    // 是否打开子面板或者Tab
    MWindow.prototype.isOpenSubOrTab = function (index) {
        return this.menuParameter.openIndex == index;
    };
    // 添加依赖资源--fgui 包名
    MWindow.prototype.addAssetForFguiPackagename = function (packagename) {
        this._loadAssets.push({ url: packagename, type: AssetItemType_1.AssetItemType.FguiPackage });
    };
    // 添加依赖资源--组件
    MWindow.prototype.addAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.addAssetForFguiPackagename(names[i]);
        }
    };
    // 获取资源加载列表
    MWindow.prototype.getLoadAssets = function (list, dict) {
        var assets = this._loadAssets;
        for (var i = 0; i < assets.length; i++) {
            var key = AssetHelper_1.default.getAssetItemKey(assets[i]);
            if (!dict.hasKey(key)) {
                list.push(assets[i]);
                dict.add(key, assets[i]);
            }
        }
        return list;
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    MWindow.prototype.unloadAssetForFguiPackagename = function (packagename) {
        switch (packagename) {
            case GuiPackageNames_1.default.CommonBase:
            case GuiPackageNames_1.default.CommonGame:
            case GuiPackageNames_1.default.CommonNumber:
            case GuiPackageNames_1.default.CommonFx:
            case GuiPackageNames_1.default.SystemModuleDialog:
                return;
        }
        Game_1.default.asset.unloadFgui(packagename);
    };
    // 卸载依赖资源--组件
    MWindow.prototype.unloadAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.unloadAssetForFguiPackagename(names[i]);
        }
    };
    // 下周依赖资源--初始化时加载的
    MWindow.prototype.unloadAssetFroAssetList = function () {
        for (var i = 0; i < this._loadAssets.length; i++) {
            this.unloadAssetForFguiPackagename(this._loadAssets[i].url);
        }
    };
    // 添加动态资源
    MWindow.prototype.addDynamicAsset = function (assetItem) {
        if (assetItem)
            this._dynamicAssetsList.push(assetItem);
    };
    // 添加动态资源--AvatarConfig里的所有
    MWindow.prototype.addDynmicAssetForAvatarAll = function (avatarConfig) {
        avatarConfig.getAllAssset(this._dynamicAssetsList);
    };
    // 生成动态预加载资源
    MWindow.prototype.generateAssetsForDynmic = function () {
        this._dynamicAssetsList = [];
    };
    // 获取动态资源加载列表
    MWindow.prototype.getLoadAssetsForDynamic = function (list, dict) {
        var assets = this._dynamicAssetsList;
        for (var i = 0; i < assets.length; i++) {
            var key = AssetHelper_1.default.getAssetItemKey(assets[i]);
            if (!dict.hasKey(key)) {
                list.push(assets[i]);
                dict.add(key, assets[i]);
            }
        }
        var subwindows = this.subwindowDict.getValues();
        for (var i = 0; i < subwindows.length; i++) {
            subwindows[i].getLoadAssetsForDynamic(list, dict);
        }
        return list;
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    // fgui 初始化视图
    MWindow.prototype.onInit = function () {
        this.onMenuCreate();
        _super.prototype.onInit.call(this);
    };
    // 菜单创建
    MWindow.prototype.onMenuCreate = function () {
        // 在该位置实例化显示对象
        // 如果需要创建Tab, 可以在该位置设置
        this.setChildWindow(this.contentPane);
        this.callChildOnWindowInited(this.contentPane);
        this.menuIsCreated = true;
        this.onMenuOpen(this.menuParameter);
    };
    // 菜单打开事件，传递参数
    MWindow.prototype.onMenuOpen = function (parameter) {
        this.enableShowSignal = true;
        this.enableShowAnimation = true;
        this.menuParameter = parameter;
        switch (parameter.openType) {
            // 打开子窗口
            case MenuOpenType_1.MenuOpenType.Subwindow:
                this.enableShowSignal = false;
                this.enableShowAnimation = false;
                this.openSubwindowByIndex.apply(this, [parameter.openIndex, false].concat(parameter.args));
                break;
            // 打开Tab
            case MenuOpenType_1.MenuOpenType.Tab:
                this.openTab(parameter.openIndex);
                break;
            default:
                Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_OpenMenu, this.menuId, parameter.openType);
                break;
        }
    };
    // 窗口显示        
    MWindow.prototype.windowShow = function () {
        if (this.windowContainer)
            this.showOn(this.windowContainer);
        else
            this.show();
    };
    // 菜单显示
    MWindow.prototype.menuShow = function (root) {
        switch (this.menuParameter.openType) {
            // 打开子窗口
            case MenuOpenType_1.MenuOpenType.Subwindow:
                if (!this.contentPane)
                    this.onInit();
                break;
            default:
                this.showOn(root);
                break;
        }
    };
    // 关闭
    MWindow.prototype.menuClose = function () {
        Game_1.default.menu.close(this.menuId);
    };
    // 返回, 到之前打开该模块的面板
    MWindow.prototype.menuBack = function () {
        Game_1.default.menu.back(this.menuId);
    };
    // 销毁
    MWindow.prototype.destory = function () {
        this.callChildOnWindowDestory(this.contentPane);
        this.onMenuDestory();
        this.sShowComplete.removeAll();
        this.sHideComplete.removeAll();
        this.sShowSubwindowComplete.removeAll();
        this.sHideSubwindowComplete.removeAll();
        this.tabDict.clear();
        var list = this.subwindowDict.getValues();
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            item.destory();
        }
        this.subwindowDict.clear();
        if (this.contentPane) {
            this.contentPane.dispose();
            this.contentPane = null;
        }
        this.unloadAssetFroAssetList();
        _super.prototype.dispose.call(this);
        this.isDestoryed = true;
    };
    // 菜单管理调的销毁
    MWindow.prototype.onMenuDestory = function () {
    };
    MWindow.prototype.doShowAnimation = function () {
        var _this = this;
        this.onWindowWillShow();
        if (this.openAnimation == 1) {
            this.srcPoint.x = this.panel.x;
            this.srcPoint.y = this.panel.y;
            this.panel.setScale(0.1, 0.1);
            this.calBuutonPos();
            this.panel.setXY(this.toPoint.x, this.toPoint.y);
            laya.utils.Tween.to(this.panel, { scaleX: 1, scaleY: 1, x: this.srcPoint.x, y: this.srcPoint.y }, 300, laya.utils.Ease.quadOut, Handler.create(this, function () {
                _this.onShown();
            }));
        }
        else {
            _super.prototype.doShowAnimation.call(this);
        }
    };
    Object.defineProperty(MWindow.prototype, "panel", {
        get: function () {
            if (this.contentPane["m_panel"]) {
                return this.contentPane["m_panel"];
            }
            return this.contentPane;
        },
        enumerable: true,
        configurable: true
    });
    MWindow.prototype.doHideAnimation = function () {
        var _this = this;
        this.onWindowWillHide();
        if (this.closeAnimation == 1) {
            this.panel.setScale(1, 1);
            this.calBuutonPos();
            laya.utils.Tween.to(this.panel, { scaleX: 0.1, scaleY: 0.1, x: this.toPoint.x, y: this.toPoint.y }, 300, laya.utils.Ease.quadOut, Handler.create(this, function () {
                _this.panel.x = _this.srcPoint.x;
                _this.panel.y = _this.srcPoint.y;
                _this.hideImmediately();
            }));
        }
        else {
            _super.prototype.doHideAnimation.call(this);
        }
    };
    Object.defineProperty(MWindow.prototype, "openAnimation", {
        get: function () {
            if (this.menuConfig == null) {
                return 0;
            }
            return this.menuConfig.openAnimation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MWindow.prototype, "closeAnimation", {
        get: function () {
            if (this.menuConfig == null) {
                return 0;
            }
            return this.menuConfig.closeAnimation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MWindow.prototype, "menuConfig", {
        get: function () {
            if (this.menuId > 0) {
                return Game_1.default.config.menu.getConfig(this.menuId);
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    MWindow.prototype.calBuutonPos = function () {
        // let btn = Game.moduleModel.func.getMenuCtrlByMenuId(this.menuId);
        // if (btn)
        // {
        //     let p = btn.getGlobalPos();
        //     this.toPoint.x = p.x;
        //     this.toPoint.y = p.y;
        // }
        // else
        // {
        //     this.toPoint.x = Game.screenSetting.screenWidth >> 1;
        //     this.toPoint.y = Game.screenSetting.screenHeight >> 1;
        // }
    };
    // protected doShowAnimation()
    // {
    //     this.onWindowWillShow();
    //     super.doShowAnimation();
    // }
    // protected doHideAnimation()
    // {
    //     this.onWindowWillHide();
    //     super.doHideAnimation();
    // }
    MWindow.prototype.onShown = function () {
        this.panel.setScale(1, 1);
        this.enableHideSignal = true;
        this.onShowComplete();
        if (this.contentPane) {
            this.callChildOnWindowShow(this.contentPane);
        }
    };
    // 菜单管理器调的关闭
    MWindow.prototype.onMenuClose = function () {
        this.hide();
        var list = this.subwindowDict.getValues();
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            item.hide();
        }
    };
    MWindow.prototype.onHide = function () {
        this.enableShowSignal = true;
        this.onHideComplete();
        this.clearTabHistorys();
        if (this.contentPane) {
            this.callChildOnWindowHide(this.contentPane);
        }
    };
    //=========================
    // 显示完成
    // 可以在这里添加协议消息监听
    //-------------------------
    MWindow.prototype.onShowComplete = function () {
        if (this.enableShowSignal) {
            this.sShowComplete.dispatch();
        }
    };
    //=========================
    // 隐藏完成
    // 可以在这里移除协议消息监听
    //-------------------------
    MWindow.prototype.onHideComplete = function () {
        if (this.enableHideSignal) {
            this.sHideComplete.dispatch();
        }
    };
    // 获取子窗口
    MWindow.prototype.getSubwindow = function (subwindowIndex) {
        return this.subwindowDict.getValue(subwindowIndex);
    };
    // 注册子窗口
    MWindow.prototype.registerSubwindow = function (subwindow) {
        this.subwindowDict.add(subwindow.subwindowIndex, subwindow);
    };
    // 关闭子窗口消息        
    MWindow.prototype.__onSubWindowClose = function (subwindow) {
        for (var i = this.subwindowStack.length - 1; i >= 0; i--) {
            if (this.subwindowStack[i] == subwindow)
                this.subwindowStack.splice(i, 1);
        }
    };
    // 获取最后打开的子面板
    MWindow.prototype.__getLastOpenSubWindow = function (excludeSubwindow) {
        for (var i = this.subwindowStack.length - 1; i >= 0; i--) {
            var ctl = this.subwindowStack[i];
            if (excludeSubwindow && excludeSubwindow.indexOf(ctl) != -1) {
                continue;
            }
            return ctl;
        }
        return null;
    };
    // 关闭所有子窗口
    MWindow.prototype.closeAllSubwindowSelf = function (excludeSubwindow) {
        var list = [];
        for (var i = this.subwindowStack.length - 1; i >= 0; i--) {
            list.push(this.subwindowStack[i]);
        }
        for (var i = 0; i < list.length; i++) {
            var ctl = list[i];
            if (excludeSubwindow && excludeSubwindow.indexOf(ctl) != -1) {
                continue;
            }
            ctl.closeSelf();
        }
    };
    // 关闭最后的子窗口
    MWindow.prototype.closeLastSubwindowSelf = function () {
        var subWindow = this.__getLastOpenSubWindow();
        if (subWindow) {
            subWindow.closeSelf();
        }
    };
    // 获取最后的menuParameter
    MWindow.prototype.getLastMenuParameter = function () {
        var subWindow = this.__getLastOpenSubWindow();
        if (subWindow) {
            return subWindow.menuParameter;
        }
        else {
            return this.menuParameter;
        }
    };
    // 打开子窗口
    MWindow.prototype.openSubwindow = function (subwindow, dontCloseOther) {
        var _this = this;
        if (dontCloseOther === void 0) { dontCloseOther = false; }
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        subwindow.__backSubWindow = this.__getLastOpenSubWindow([subwindow]);
        this.menuParameter.openType = MenuOpenType_1.MenuOpenType.Subwindow;
        this.menuParameter.openIndex = subwindow.subwindowIndex;
        this.menuParameter.args = args;
        var menuParmeter = {
            openType: this.menuParameter.openType,
            openIndex: this.menuParameter.openIndex,
            args: args,
            dontCloseOther: dontCloseOther
        };
        if (!dontCloseOther) {
            var caller = {
                on: function () {
                    if (subwindow.whenOpenCloseMainwindow) {
                        _this.enableHideSignal = false;
                        _this.hideImmediately();
                    }
                    if (subwindow.whenOpenCloseOthersubwindow) {
                        var list = _this.subwindowDict.getValues;
                        for (var i = 0; i < list.length; i++) {
                            var item = list[i];
                            if (item != subwindow) {
                                item.hideImmediately();
                                _this.__onSubWindowClose(item);
                            }
                        }
                    }
                    _this.sShowSubwindowComplete.dispatch();
                }
            };
            subwindow.sShowComplete.addOnce(caller.on, caller);
        }
        var index = this.subwindowStack.indexOf(subwindow);
        if (index != -1)
            this.subwindowStack.splice(index, 1);
        this.subwindowStack.push(subwindow);
        if (subwindow.menuIsCreated) {
            subwindow.onMenuOpen(menuParmeter);
        }
        else {
            subwindow.menuParameter = menuParmeter;
        }
        subwindow.showOn(this.windowContainer);
        Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_OpenMenu, this.menuId, menuParmeter.openType, menuParmeter.openIndex);
    };
    // 打开子窗口, 使用索引
    MWindow.prototype.openSubwindowByIndex = function (subwindowIndex, dontCloseOther) {
        if (dontCloseOther === void 0) { dontCloseOther = false; }
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var subwindow = this.getSubwindow(subwindowIndex);
        this.openSubwindow.apply(this, [subwindow, dontCloseOther].concat(args));
    };
    // 子窗口返回到主窗口
    MWindow.prototype.onSubwindowBack = function (subwindow) {
        this.menuParameter.openType = MenuOpenType_1.MenuOpenType.None;
        this.menuParameter.openIndex = 0;
        this.sShowComplete.addOnce(function () {
            subwindow.hide();
        }, subwindow);
        if (this.windowContainer.parent) {
            subwindow.hide();
        }
        this.showOn(this.windowContainer);
        this.subwindowStack = [];
    };
    // 获取Tab的显示对象列表
    MWindow.prototype.getTabDispyaObjects = function (tabIndex) {
        if (this.tabDict.hasKey(tabIndex)) {
            return this.tabDict.getValue(tabIndex);
        }
        var list = [];
        this.tabDict.add(tabIndex, list);
        return list;
    };
    // 注册Tab内容
    MWindow.prototype.registerTab = function (tabIndex, displayObject) {
        var list = this.getTabDispyaObjects(tabIndex);
        list.push(displayObject);
    };
    // 设置Tab，显示或者隐藏
    MWindow.prototype.setTabVisiable = function (tabIndex, visiable) {
        var list = this.getTabDispyaObjects(tabIndex);
        for (var i = 0; i < list.length; i++) {
            if (visiable) {
                this.callChildOnTabShow(list[i]);
            }
            else if (list[i].visible) {
                this.callChildOnTabHide(list[i]);
            }
            list[i].visible = visiable;
        }
    };
    MWindow.prototype.setOpenTab = function (tabIndex) {
        this.menuParameter.openIndex = tabIndex;
        var keys = this.tabDict.getKeys();
        for (var i = 0; i < keys.length; i++) {
            if (keys[i] != tabIndex) {
                this.setTabVisiable(keys[i], false);
            }
        }
        this.setTabVisiable(tabIndex, true);
        this.onOpenTab(tabIndex);
    };
    // 打开Tab
    MWindow.prototype.openTab = function (tabIndex) {
        this.tabHistorys.push(tabIndex);
        this.setOpenTab(tabIndex);
        Game_1.default.event.dispatch(GameEventKey_1.default.GameFrame_OpenMenu, this.menuId, MenuOpenType_1.MenuOpenType.Tab, tabIndex);
    };
    // 如果需要处理额外的业务，可以重新该方法
    MWindow.prototype.onOpenTab = function (tabIndex) {
    };
    // 返回上一次Tab
    MWindow.prototype.backTab = function () {
        if (this.tabHistorys.length > 0) {
            // this.tabHistorys = this.tabHistorys.filter((id)=>{return id != this.menuParameter.openIndex});
            // if(this.tabHistorys.length > 0)
            // {
            //     let index = this.tabHistorys[0];
            //     this.tabHistorys = this.tabHistorys.filter((id)=>{return id != index});
            //     this.menuParameter.openIndex = index;
            //     this.setOpenTab(index);
            // }
            var lastIndex = void 0;
            for (var i = this.tabHistorys.length - 1; i >= 0; i--) {
                if (this.tabHistorys[i] == this.menuParameter.openIndex) {
                    if (i > 0) {
                        if (this.tabHistorys[i - 1] != this.menuParameter.openIndex) {
                            lastIndex = this.tabHistorys[i - 1];
                        }
                    }
                }
            }
            if (lastIndex === undefined) {
                this.menuBack();
            }
            else {
                this.openTab(lastIndex);
            }
        }
    };
    // 清除Tab历史记录
    MWindow.prototype.clearTabHistorys = function () {
        this.tabHistorys = [];
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    //=========================
    // 设置child.moduleWindow
    //-------------------------
    MWindow.prototype.setChildWindow = function (com) {
        if (com) {
            com["moduleWindow"] = this;
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.setChildWindow(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 设置child.onWindowInited
    //-------------------------
    MWindow.prototype.callChildOnWindowInited = function (com) {
        if (com) {
            var fun = com["onWindowInited"];
            if (fun) {
                fun.apply(com);
            }
            if (com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowInited(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 设置child.onWindowDestory
    //-------------------------
    MWindow.prototype.callChildOnWindowDestory = function (com) {
        var container;
        if (com instanceof fairygui.GObject) {
            container = com.displayObject;
        }
        if (com) {
            // if (getClassName(com) == "GuideClickHand")
            //     console.log(com);
            var fun = com["onWindowDestory"];
            if (fun) {
                if (fun.apply(com)) {
                    return;
                }
            }
            for (var i = container.numChildren - 1; i >= 0; i--) {
                var display = container.getChildAt(i);
                if (display["$owner"])
                    this.callChildOnWindowDestory(display["$owner"]);
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowShow
    //-------------------------
    MWindow.prototype.callChildOnWindowShow = function (com) {
        if (com) {
            var enbaleCall = true;
            var fun = com["onWindowShow"];
            if (fun) {
                if (com["whenSelfVisiableCallWindowShowAndHide"] !== undefined) {
                    var whenSelfVisiableCallWindowShowAndHide = com["whenSelfVisiableCallWindowShowAndHide"];
                    if (whenSelfVisiableCallWindowShowAndHide) {
                        if (com.visible == false) {
                            enbaleCall = false;
                        }
                    }
                }
                if (enbaleCall) {
                    fun.apply(com);
                }
            }
            if (enbaleCall && com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowShow(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowHide
    //-------------------------
    MWindow.prototype.callChildOnWindowHide = function (com) {
        if (com) {
            var enbaleCall = true;
            var fun = com["onWindowHide"];
            if (fun) {
                if (com["whenSelfVisiableCallWindowShowAndHide"] !== undefined) {
                    var whenSelfVisiableCallWindowShowAndHide = com["whenSelfVisiableCallWindowShowAndHide"];
                    if (whenSelfVisiableCallWindowShowAndHide) {
                        if (com.visible == false) {
                            enbaleCall = false;
                        }
                    }
                }
                if (enbaleCall) {
                    fun.apply(com);
                }
            }
            if (enbaleCall && com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowHide(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onTabShow
    //-------------------------
    MWindow.prototype.callChildOnTabShow = function (com) {
        if (com) {
            var fun = com["onTabShow"];
            if (fun) {
                fun.apply(com);
            }
            if (com["_children"]) {
                for (var i = 0; i < com["_children"]["length"]; i++) {
                    this.callChildOnTabShow(com["_children"][i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onTabHide
    //-------------------------
    MWindow.prototype.callChildOnTabHide = function (com) {
        if (com) {
            var fun = com["onTabHide"];
            if (fun) {
                fun.apply(com);
            }
            if (com["_children"]) {
                for (var i = 0; i < com["_children"]["length"]; i++) {
                    this.callChildOnTabHide(com["_children"][i]);
                }
            }
        }
    };
    return MWindow;
}(FWindow_1.default));
exports.default = MWindow;
},{"../../FGUI/Generates/GuiPackageNames":609,"../../Game":623,"../../GameEventKey":625,"../../Libs/Helpers/Dictionary":679,"../../Libs/signals/Signal":683,"../AssetManagers/AssetHelper":626,"../AssetManagers/AssetItemType":627,"../Menu/MenuOpenType":647,"./FWindow":648}],651:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// 模块配置
var ModuleConfig = /** @class */ (function () {
    function ModuleConfig(menuId, windowClass) {
        this.menuId = menuId;
        this.windowClass = windowClass;
    }
    return ModuleConfig;
}());
exports.default = ModuleConfig;
},{}],652:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundManager = Laya.SoundManager;
var Handler = laya.utils.Handler;
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var Game_1 = require("../../Game");
var SoundKey_1 = require("../../FGUI/Generates/SoundKey");
//======================
// 声音管理器
//----------------------
var AudioManager = /** @class */ (function () {
    function AudioManager() {
        // 正在播放中的音效列表
        this.soundPlayingDic = new Dictionary_1.default();
        this.localUseGlobal = true;
    }
    // 初始化
    AudioManager.prototype.install = function () {
        // this.muted = this.muted;
        // this.soundMuted = this.soundMuted;
        // this.musicMuted = this.musicMuted;
        // this.musicVolume = this.musicVolume;
        // this.soundVolume = this.soundVolume;
        this.onLogin();
        Game_1.default.application.sAppResume.add(this.onAppResume, this);
    };
    AudioManager.prototype.onAppResume = function () {
        this.replayMusic();
    };
    AudioManager.prototype.onLogin = function () {
        this.muted = this.muted;
        this.soundMuted = this.soundMuted;
        this.musicMuted = this.musicMuted;
        this.musicVolume = this.musicVolume;
        this.soundVolume = this.soundVolume;
    };
    /**
     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播发当前的背景音乐。
     * @param soundKey	声音Key。
     * @param loops		循环次数,0表示无限循环。
     * @param complete	声音播放完成回调。
     * @param startTime	声音播放起始时间。
     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。
     */
    AudioManager.prototype.playMusic = function (soundKey, loops, complete, startTime) {
        // if (BrowserDetect.isMobile)
        // 	return;
        this.lastMusic = soundKey;
        if (this.musicMuted) {
            return;
        }
        var path = SoundKey_1.default.getPath(soundKey);
        SoundManager.stopMusic();
        return SoundManager.playMusic(path, loops, complete, startTime);
    };
    /**
     * 重新播放背景音乐
     */
    AudioManager.prototype.replayMusic = function () {
        if (this.lastMusic) {
            this.playMusic(this.lastMusic);
        }
        else {
            this.playMusic(SoundKey_1.default.MM_BGM_Cinema);
        }
    };
    /**
     * 播放音效。音效可以同时播放多个。
     * @param url			声音文件地址。
     * @param isStopPreSound 是否停止其它声音
     * @param loops			循环次数,0表示无限循环。
     * @param complete		声音播放完成回调  Handler对象。
     * @param soundClass	使用哪个声音类进行播放，null表示自动选择。
     * @param startTime		声音播放起始时间。
     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。
     */
    AudioManager.prototype.playSound = function (soundKey, isStopPreSound, loops, complete, startTime) {
        if (!this.soundPlayingDic || this.soundPlayingDic === null) {
            this.soundPlayingDic = new Dictionary_1.default();
        }
        if (isStopPreSound) {
            this.stopAllSound();
            this.soundPlayingDic.clear();
        }
        var path = SoundKey_1.default.getPath(soundKey);
        var isPlay = true;
        if (!complete || complete === null) {
            complete = Handler.create(this, this.playSoundComplete, [path]);
            if (this.soundPlayingDic.hasKey(path)) {
                isPlay = false;
            }
        }
        if (isPlay) {
            var soundChannel = SoundManager.playSound(path, loops, complete, startTime);
            this.soundPlayingDic.add(path, soundChannel);
        }
        return this.soundPlayingDic.getValue(path);
    };
    // 声音播放完成
    AudioManager.prototype.playSoundComplete = function (path) {
        if (this.soundPlayingDic.hasKey(path)) {
            this.soundPlayingDic.remove(path);
        }
    };
    /**
     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。
     * @param url  声音文件地址。
     */
    AudioManager.prototype.stopSound = function (soundKey) {
        var path = SoundKey_1.default.getPath(soundKey);
        if (this.soundPlayingDic.hasKey(path)) {
            this.soundPlayingDic.remove(path);
        }
        SoundManager.stopSound(path);
    };
    /**
     * 停止播放所有声音（包括背景音乐和音效）。
     */
    AudioManager.prototype.stopAll = function () {
        if (this.soundPlayingDic) {
            this.soundPlayingDic.clear();
        }
        SoundManager.stopAll();
    };
    /**
     * 停止播放所有音效（不包括背景音乐）。
     */
    AudioManager.prototype.stopAllSound = function () {
        if (this.soundPlayingDic) {
            this.soundPlayingDic.clear();
        }
        SoundManager.stopAllSound();
    };
    /**
     * 停止播放背景音乐（不包括音效）。
     * @param url  声音文件地址。
     */
    AudioManager.prototype.stopMusic = function () {
        SoundManager.stopMusic();
    };
    Object.defineProperty(AudioManager.prototype, "muted", {
        get: function () {
            if (this._muted === undefined) {
                this._muted = Game_1.default.localStorage.hasItem("sound_muted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_muted", this.localUseGlobal) : false;
            }
            return this._muted;
        },
        set: function (value) {
            this._muted = value;
            Game_1.default.localStorage.setBoolean("sound_muted", value, this.localUseGlobal);
            SoundManager.muted = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "soundMuted", {
        get: function () {
            if (this._soundMuted === undefined) {
                this._soundMuted = Game_1.default.localStorage.hasItem("sound_soundMuted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_soundMuted", this.localUseGlobal) : false;
            }
            return this._soundMuted;
        },
        set: function (value) {
            this._soundMuted = value;
            Game_1.default.localStorage.setBoolean("sound_soundMuted", value, this.localUseGlobal);
            SoundManager.soundMuted = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "musicMuted", {
        get: function () {
            if (this._musicMuted === undefined) {
                this._musicMuted = Game_1.default.localStorage.hasItem("sound_musicMuted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_musicMuted", this.localUseGlobal) : false;
            }
            return this._musicMuted;
        },
        set: function (value) {
            this._musicMuted = value;
            Game_1.default.localStorage.setBoolean("sound_musicMuted", value, this.localUseGlobal);
            SoundManager.musicMuted = value;
            if (value) {
                SoundManager.stopMusic();
            }
            else {
                this.replayMusic();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "musicVolume", {
        get: function () {
            if (this._musicVolume === undefined) {
                this._musicVolume = Game_1.default.localStorage.hasItem("sound_musicVolume", this.localUseGlobal) ? Game_1.default.localStorage.getFloat("sound_musicVolume", this.localUseGlobal) : 1;
            }
            return this._musicVolume;
        },
        set: function (value) {
            this._musicVolume = value;
            Game_1.default.localStorage.setFloat("sound_musicVolume", value, this.localUseGlobal);
            SoundManager.musicVolume = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "soundVolume", {
        get: function () {
            if (this._soundVolume === undefined) {
                this._soundVolume = Game_1.default.localStorage.hasItem("sound_soundVolume", this.localUseGlobal) ? Game_1.default.localStorage.getFloat("sound_soundVolume", this.localUseGlobal) : 1;
            }
            return this._soundVolume;
        },
        set: function (value) {
            this._soundVolume = value;
            Game_1.default.localStorage.setFloat("sound_soundVolume", value, this.localUseGlobal);
            SoundManager.soundVolume = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "autoStopMusic", {
        get: function () {
            return this._autoStopMusic;
        },
        set: function (value) {
            SoundManager.autoStopMusic = value;
            this._autoStopMusic = value;
        },
        enumerable: true,
        configurable: true
    });
    return AudioManager;
}());
exports.default = AudioManager;
},{"../../FGUI/Generates/SoundKey":617,"../../Game":623,"../../Libs/Helpers/Dictionary":679}],653:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var SoundKey_1 = require("../../FGUI/Generates/SoundKey");
var SystemToastMessage_1 = require("./SystemToastMessage");
var TEXT_1 = require("../../Config/Keys/TEXT");
var SystemAlertMessage_1 = require("../../FGUI/Extends/GameLaunch/SystemAlertMessage");
var SystemConfirmMessage_1 = require("../../FGUI/Extends/GameLaunch/SystemConfirmMessage");
//======================
// 转圈
//----------------------
var SystemMessag = /** @class */ (function () {
    function SystemMessag() {
        // 浮动消息
        this.toastMessage = new SystemToastMessage_1.default();
        /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    }
    // 播放打开声音		
    SystemMessag.prototype.playOpenSound = function () {
        // 播放弹出声音
        if (window["Game"] && window["Game"]["_isInstall"])
            Game_1.default.sound.playSound(SoundKey_1.default.MM02_Popup);
    };
    Object.defineProperty(SystemMessag.prototype, "alertMessage", {
        get: function () {
            if (!this._alertMessage) {
                this._alertMessage = SystemAlertMessage_1.default.createInstance();
            }
            return this._alertMessage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemMessag.prototype, "confirmMessage", {
        get: function () {
            if (!this._confirmMessage) {
                this._confirmMessage = SystemConfirmMessage_1.default.createInstance();
            }
            return this._confirmMessage;
        },
        enumerable: true,
        configurable: true
    });
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    // 浮动消息
    SystemMessag.prototype.toastText = function (txt) {
        this.toastMessage.play(txt);
    };
    SystemMessag.prototype.toastMsg = function (msgKey) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgKey].concat(args));
        this.toastMessage.play(txt);
    };
    SystemMessag.prototype.toastFormatText = function (txt) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.toastText(format(txt, args));
    };
    /**
     * 道具不足提示
     * @param id 道具id
     */
    SystemMessag.prototype.toastItemNotEnough = function (id) {
        var config = Game_1.default.config.item.getConfig(id);
        var itemName = "";
        if (config)
            itemName = config.name;
        else
            itemName = id.toString();
        this.toastText(format(TEXT_1.default.ToastTextItemNotEnough, itemName));
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    // 对话框消息,一个按钮, 简洁方法
    SystemMessag.prototype.alertText = function (txt, yesObj, yesFun) {
        this.alrtTextFull(txt, "", yesObj, yesFun);
    };
    SystemMessag.prototype.alertMsg = function (msgKey, yesObj, yesFun) {
        var txt = Game_1.default.config.msg.getTxt(msgKey);
        this.alrtTextFull(txt, "", yesObj, yesFun);
    };
    SystemMessag.prototype.alertMsgFormat = function (msgKey, msgargs, yesObj, yesFun) {
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgKey].concat(msgargs));
        this.alrtTextFull(txt, "", yesObj, yesFun);
    };
    SystemMessag.prototype.alrtTMsgFull = function (msgkey, msgargs, title, yesObj, yesFun, yesTxt, buttonEnable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (yesObj === void 0) { yesObj = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (buttonEnable === void 0) { buttonEnable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgkey].concat(msgargs));
        this.alrtTextFull(txt, "", yesObj, yesFun, yesTxt, buttonEnable, isClickButtonAutoClose);
    };
    /**
     * 对话框消息,一个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param yesObj 点击yes按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param buttonEnable 按钮是否可以点击
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemMessag.prototype.alrtTextFull = function (txt, title, yesObj, yesFun, yesTxt, closeButtonVisiable, buttonEnable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (yesObj === void 0) { yesObj = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (buttonEnable === void 0) { buttonEnable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(yesTxt)) {
            yesTxt = Game_1.default.launchText.btnYes;
        }
        this.alertMessage.open(txt, title, yesObj, yesFun, yesTxt, closeButtonVisiable, buttonEnable, isClickButtonAutoClose);
        this.playOpenSound();
    };
    SystemMessag.prototype.closeAlert = function () {
        this.alertMessage.close();
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    /**
     * 对话框消息,两个按钮
     * @param msgkey MsgConfig key
     * @param msgargs 消息参数
     * @param title 标题
     * @param caller 点击按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param noFun 点击no按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param noTxt no按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemMessag.prototype.confirmMsg = function (msgkey, msgargs, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (caller === void 0) { caller = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (noFun === void 0) { noFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (noTxt === void 0) { noTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        var _a;
        var txt = (_a = Game_1.default.config.msg).getTxtFormat.apply(_a, [msgkey].concat(msgargs));
        this.confirmText(txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose);
    };
    /**
     * 对话框消息,两个按钮
     * @param txt 消息内容
     * @param title 标题
     * @param caller 点击按钮回调对象
     * @param yesFun 点击yes按钮回调函数
     * @param noFun 点击no按钮回调函数
     * @param yesTxt yes按钮 文本
     * @param noTxt no按钮 文本
     * @param closeButtonVisiable 是否显示关闭按钮
     * @param isClickButtonAutoClose 点击按钮后是否自动关闭
     */
    SystemMessag.prototype.confirmText = function (txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose) {
        if (title === void 0) { title = ""; }
        if (caller === void 0) { caller = null; }
        if (yesFun === void 0) { yesFun = null; }
        if (noFun === void 0) { noFun = null; }
        if (yesTxt === void 0) { yesTxt = null; }
        if (noTxt === void 0) { noTxt = null; }
        if (closeButtonVisiable === void 0) { closeButtonVisiable = true; }
        if (isClickButtonAutoClose === void 0) { isClickButtonAutoClose = true; }
        if (isNullOrEmpty(yesTxt)) {
            yesTxt = TEXT_1.default.ButtonYes;
        }
        if (isNullOrEmpty(noTxt)) {
            noTxt = TEXT_1.default.ButtonNo;
        }
        this.confirmMessage.open(txt, title, caller, yesFun, noFun, yesTxt, noTxt, closeButtonVisiable, isClickButtonAutoClose);
        this.playOpenSound();
    };
    /*------------------------------- 我是漂亮的分割线 ----------------------------------------- */
    /**
     * 关闭对话框
     */
    SystemMessag.prototype.alertMessageHide = function () {
        if (this._alertMessage) {
            this._alertMessage.close();
        }
        if (this._confirmMessage) {
            this._confirmMessage.close();
        }
    };
    return SystemMessag;
}());
exports.default = SystemMessag;
},{"../../Config/Keys/TEXT":309,"../../FGUI/Extends/GameLaunch/SystemAlertMessage":587,"../../FGUI/Extends/GameLaunch/SystemConfirmMessage":588,"../../FGUI/Generates/SoundKey":617,"../../Game":623,"./SystemToastMessage":654}],654:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Handler = laya.utils.Handler;
var SystemToastMessage_1 = require("../../FGUI/Extends/GameLaunch/SystemToastMessage");
//======================
// 浮动消息管理
//----------------------
var SystemToastMessag = /** @class */ (function () {
    function SystemToastMessag() {
        // 所有的
        this.list = [];
        // 可以使用的池
        this.pools = [];
        this.timeSpacing = 1;
    }
    SystemToastMessag.prototype.play = function (txt) {
        if (txt != this.lastTxt) {
            this.show(txt);
        }
        else if (getTime() - this.lastTime >= this.timeSpacing) {
            this.show(txt);
        }
    };
    SystemToastMessag.prototype.show = function (txt) {
        this.lastTxt = txt;
        this.lastTime = getTime();
        var item;
        if (this.pools.length > 0) {
            item = this.pools.pop();
        }
        else {
            item = SystemToastMessage_1.default.createInstance();
            this.list.push(item);
        }
        item.play(txt, Handler.create(this, this.onItemComplete));
    };
    SystemToastMessag.prototype.onItemComplete = function (item) {
        this.pools.push(item);
    };
    return SystemToastMessag;
}());
exports.default = SystemToastMessag;
},{"../../FGUI/Extends/GameLaunch/SystemToastMessage":589}],655:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
var TEXT_1 = require("../Config/Keys/TEXT");
var LangType_1 = require("../Config/LangType");
var TimeHelper = /** @class */ (function () {
    function TimeHelper() {
    }
    /**
     * 获取服务器时区时间的本地对应时间 （用于判断跨天，星期，显示服务器时间）,返回的Date，使用Get函数可以获得服务器的年月日时分秒，方便显示和比较， 但时间戳不同，慎用。
     * @param time 时间戳 秒
     * @return 返回的Date，使用Get函数可以获得服务器的年月日时分秒，方便显示和比较， 但时间戳不同，慎用。
     */
    TimeHelper.GetServerDateTime = function (time) {
        if (time == null) {
            time = Game_1.default.time.serverSeconds;
        }
        return new Date(time * 1000 + Game_1.default.time.localSubServerTimezone);
    };
    /**
     * 判断服务器时区下时间戳的星期
     * @param time 时间戳 秒
     */
    TimeHelper.IsWeek = function (time, week) {
        var date = this.GetServerDateTime(time);
        return date.getDay() == week;
    };
    /**
     * 判断服务器时区下时间戳是否是同一天
     * @param time1 时间戳 秒
     * @param time2 时间戳 秒
     */
    TimeHelper.IsSameDay = function (time1, time2) {
        var d1 = this.GetServerDateTime(time1);
        var d2 = this.GetServerDateTime(time2);
        return d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate();
    };
    /**
     * 判断服务器时区下时间戳是否超过某个时刻
     * @param time 时间戳 秒
     */
    TimeHelper.IsBeyondTimeInSameDay = function (time, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        return this.BeyondTimeInSameDay(time, h, m, s) < 0;
    };
    /**
     * 判断服务器时区下时间戳到指定时间的差
     * @param time 时间戳 秒
     */
    TimeHelper.BeyondTimeInSameDay = function (time, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        if (h == 24) {
            h = 0;
            var date_1 = this.TimeReformat(h, m, s);
            return (date_1.getTime() / 1000 + this.OneDaySeconds) - time;
        }
        var date = this.TimeReformat(h, m, s);
        return date.getTime() / 1000 - time;
    };
    /**
     * 获取某个时间到某个点的秒数
     * 如果该点过了判断时间 那该点为下一天该点到这个时间的秒数
     * 否则为该点到判断时间的秒数
     * @param time
     * @param h
     * @param m
     * @param s
     */
    TimeHelper.SubSecondTimeInDay = function (time, h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var seconds = this.BeyondTimeInSameDay(time, h, m, s);
        if (seconds <= 0) {
            seconds = seconds + this.OneDaySeconds;
        }
        return seconds;
    };
    //获取下一天零点的时间戳
    TimeHelper.NextDayZeroPointSecound = function () {
        return this.TimeReformat().getTime() / 1000 + this.OneDaySeconds;
    };
    /**
     *
     * @param lastTime
     * @param hour
     * @param callback
     */
    TimeHelper.lastHourToReset = function (lastTime, hour, callback) {
        var currSecond = Game_1.default.time.serverSeconds;
        //重置小时
        var resetHour = hour;
        //上次时间的小时
        var lastHour = TimeHelper.GetServerDateTime(lastTime).getHours();
        //当前时间的小时
        var nowHour = TimeHelper.GetServerDateTime().getHours();
        //超过一天 重置
        if (currSecond - lastTime > TimeHelper.OneDaySeconds) {
            callback();
        }
        else {
            var isSameDay = TimeHelper.IsSameDay(lastTime, currSecond);
            if (isSameDay) {
                if (nowHour >= resetHour && lastHour < resetHour) {
                    //同一天 上次更新时间在重置时间之前
                    callback();
                }
            }
            else {
                //不在同一天
                if (lastHour < resetHour) {
                    callback();
                }
            }
        }
    };
    TimeHelper.Log = function (time, name) {
        if (time == null) {
            time = Game_1.default.time.serverMilliseconds;
        }
        if (name == null) {
            name = "";
        }
        if (Game_1.default.time.serverTimezone == "") {
            console.log(">>>>>>>TIME>>>>>>>", time, new Date(time).toLocaleString(), name);
        }
        console.log(">>>>>>>TIME>>>>>>>", time, new Date(time).toLocaleString("en-US", { timeZone: Game_1.default.time.serverTimezone }), new Date(time).toLocaleString(), name);
    };
    /**
     * 返回格式 00:00:00
     * @param time 秒
     */
    TimeHelper.TimeFormat = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        str += hours < 10 ? "0" + hours : hours;
        str += ":" + (minutes < 10 ? "0" + minutes : minutes);
        str += ":" + (seconds < 10 ? "0" + seconds : seconds);
        return str;
    };
    /**
     * 返回格式 x小时x分x秒
     * @param time 秒
     */
    TimeHelper.TimeFormat2 = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        if (hours > 0)
            str += hours + TEXT_1.default.Hour;
        str += minutes + TEXT_1.default.Minute;
        str += seconds + TEXT_1.default.Second;
        return str;
    };
    /**
     * 返回格式 Y-M-D-H:M:S
     * @param time 时间戳 秒
     */
    TimeHelper.DateTimeFormat = function (time, isHaveYear) {
        if (isHaveYear === void 0) { isHaveYear = true; }
        //三目运算符
        var Dates = this.GetServerDateTime(time);
        //年份
        var Year = Dates.getFullYear();
        //月份下标是0-11
        var Months = (Dates.getMonth() + 1) < 10 ? '0' + (Dates.getMonth() + 1) : (Dates.getMonth() + 1);
        //具体的天数
        var Day = Dates.getDate() < 10 ? '0' + Dates.getDate() : Dates.getDate();
        //小时
        var Hours = Dates.getHours() < 10 ? '0' + Dates.getHours() : Dates.getHours();
        //分钟
        var Minutes = Dates.getMinutes() < 10 ? '0' + Dates.getMinutes() : Dates.getMinutes();
        //秒
        // const Seconds = Dates.getSeconds() < 10 ? '0' + Dates.getSeconds() : Dates.getSeconds();
        //返回数据格式
        if (Game_1.default.lang.lang == LangType_1.default.zh_cn) {
            if (isHaveYear) {
                return Year + '-' + Months + '-' + Day + ' ' + Hours + ':' + Minutes;
            }
            else {
                return Months + '-' + Day + ' ' + Hours + ':' + Minutes;
            }
        }
        else {
            if (isHaveYear) {
                return Year + ' ' + TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day + ', ' + Hours + ':' + Minutes;
            }
            else {
                return TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day + ', ' + Hours + ':' + Minutes;
            }
        }
    };
    /**
     * 返回格式 Y-M-D
     * @param time 单位：秒
     */
    TimeHelper.DateTimeFormat2 = function (time) {
        //三目运算符
        var Dates = this.GetServerDateTime(time);
        //年份
        var Year = Dates.getFullYear();
        //月份下标是0-11
        var Months = (Dates.getMonth() + 1) < 10 ? '0' + (Dates.getMonth() + 1) : (Dates.getMonth() + 1);
        //具体的天数
        var Day = Dates.getDate() < 10 ? '0' + Dates.getDate() : Dates.getDate();
        if (Game_1.default.lang.lang == LangType_1.default.zh_cn) {
            //返回数据格式
            return Year + '-' + Months + '-' + Day;
        }
        else {
            //返回数据格式
            return Year + ' ' + TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day;
        }
    };
    /**
     * 返回格式 M - D
     * @param time 单位：秒
     */
    TimeHelper.DateTimeFormat3 = function (time) {
        //三目运算符
        var Dates = this.GetServerDateTime(time);
        //月份下标是0-11
        var Months = (Dates.getMonth() + 1) < 10 ? '0' + (Dates.getMonth() + 1) : (Dates.getMonth() + 1);
        //具体的天数
        var Day = Dates.getDate() < 10 ? '0' + Dates.getDate() : Dates.getDate();
        if (Game_1.default.lang.lang == LangType_1.default.zh_cn) {
            //返回数据格式
            return Months + '-' + Day;
        }
        else {
            //返回数据格式
            return TimeHelper.MonthText[Dates.getMonth()] + ' ' + Day;
        }
    };
    TimeHelper.DateTimeFormat4 = function (time) {
        //三目运算符
        var Dates = this.GetServerDateTime(time);
        //小时
        var Hours = Dates.getHours() < 10 ? '0' + Dates.getHours() : Dates.getHours();
        //分钟
        var Minutes = Dates.getMinutes() < 10 ? '0' + Dates.getMinutes() : Dates.getMinutes();
        return Hours + ':' + Minutes;
    };
    //服务器所在时区的h时m分s秒对应的时间戳
    TimeHelper.TimeReformat = function (h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var date = this.GetServerDateTime();
        date.setHours(h);
        date.setMinutes(m);
        date.setSeconds(s);
        // TimeHelper.Log(date.getTime(), "TimeReformat1");
        // TimeHelper.Log((date.getTime() - Game.time.localSubServerTimezone), "TimeReformat1");
        return new Date(date.getTime() - Game_1.default.time.localSubServerTimezone);
    };
    TimeHelper.TimeReformat1 = function (h, m, s) {
        if (h === void 0) { h = 0; }
        if (m === void 0) { m = 0; }
        if (s === void 0) { s = 0; }
        var date = this.TimeReformat(h, m, s);
        return date.getTime();
    };
    TimeHelper.TimeReformat2 = function (time) {
        var strTimes = time.split(':');
        var h, m, s;
        if (strTimes[0]) {
            h = Number(strTimes[0]) || 0;
        }
        if (strTimes[1]) {
            m = Number(strTimes[1]) || 0;
        }
        if (strTimes[2]) {
            s = Number(strTimes[2]) || 0;
        }
        return this.TimeReformat1(h, m, s);
    };
    /**
     * 返回格式 00:00
     * @param time 秒
     */
    TimeHelper.TimeFormat3 = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        str += hours == 0 ? "" : "0" + hours;
        str += (hours > 0 ? ":" : "") + (minutes < 10 ? "0" + minutes : minutes);
        str += ":" + (seconds < 10 ? "0" + seconds : seconds);
        return str;
    };
    /**
     * 返回格式 x小时x分x秒 前面为0 不显示
     * @param time 秒
     */
    TimeHelper.TimeFormat4 = function (time) {
        var str = "";
        var hours = Math.floor(time / 3600);
        var minutes = Math.floor((time % 3600) / 60);
        var seconds = Math.floor(time % 60);
        if (hours > 0)
            str += hours + TEXT_1.default.Hour;
        if (minutes > 0)
            str += minutes + TEXT_1.default.Minute;
        str += seconds + TEXT_1.default.Second;
        return str;
    };
    TimeHelper.OneDaySeconds = 86400;
    TimeHelper.MonthText = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    return TimeHelper;
}());
exports.default = TimeHelper;
},{"../Config/Keys/TEXT":309,"../Config/LangType":315,"../Game":623}],656:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GuiSetting_1 = require("./FGUI/GuiSetting");
var FGLoader_1 = require("./FGUI/FGLoader");
var GuiBinderList_1 = require("./FGUI/Generates/GuiBinderList");
var Game_1 = require("./Game");
var GuiPackageNames_1 = require("./FGUI/Generates/GuiPackageNames");
var LoaderId_1 = require("./GameFrame/Loader/LoaderId");
var MenuLayer_1 = require("./GameFrame/Menu/MenuLayer");
var MenuId_1 = require("./GameModule/MenuId");
var MenuWindows_1 = require("./GameModule/MenuWindows");
var GameLaunch = /** @class */ (function () {
    function GameLaunch() {
    }
    // 初始化
    GameLaunch.prototype.install = function () {
        this.installAsync();
    };
    GameLaunch.prototype.installAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // 初始化UI层级容器
                        MenuLayer_1.default.install();
                        // 初始化UI窗口配置
                        MenuWindows_1.default.install();
                        // 设置FGUI
                        console.time("initFguiSetting");
                        return [4 /*yield*/, this.initFguiSetting()];
                    case 1:
                        _a.sent();
                        console.timeEnd("initFguiSetting");
                        // 初始化加载界面
                        Game_1.default.loader.install();
                        // 打开启动界面
                        Game_1.default.loader.open(LoaderId_1.LoaderId.Launch);
                        Game_1.default.loaderSettingHandler.onBegin();
                        // 加载配置
                        console.time("initConfig");
                        return [4 /*yield*/, this.initConfig()];
                    case 2:
                        _a.sent();
                        console.timeEnd("initConfig");
                        // 加载多语言配置
                        return [4 /*yield*/, this.initLangConfig()];
                    case 3:
                        // 加载多语言配置
                        _a.sent();
                        // 初始化数据模型
                        Game_1.default.moduleModel.install();
                        // 打开登录界面
                        Game_1.default.menu.open(MenuId_1.MenuId.Login);
                        return [2 /*return*/];
                }
            });
        });
    };
    // 加载版本文件
    GameLaunch.prototype.loadVersion = function () {
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    };
    GameLaunch.prototype.onVersionLoaded = function () {
    };
    // 设置FGUI
    GameLaunch.prototype.initFguiSetting = function () {
        return __awaiter(this, void 0, void 0, function () {
            var packageConfig;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // 初始化 fgui资源列表
                        Game_1.default.guiRes.install();
                        // 设置fgui文件后缀
                        fairygui.UIConfig.packageFileExtension = GuiSetting_1.default.packageFileExtension;
                        // 注册Loader类
                        fairygui.UIObjectFactory.setLoaderExtension(FGLoader_1.default);
                        // 绑定组件
                        GuiBinderList_1.default.fguiBinderAll();
                        //设置字体
                        fairygui.UIConfig.defaultFont = "_sans";
                        return [4 /*yield*/, Game_1.default.asset.loadFguiByPackagenameAsync(GuiPackageNames_1.default.GameLaunch)];
                    case 1:
                        packageConfig = _a.sent();
                        GuiSetting_1.default.addPackage(packageConfig.packagePath);
                        // 初始化转圈
                        fairygui.UIConfig.globalModalWaiting = fairygui.UIPackage.getItemURL(packageConfig.packageName, "GlobalModalWaiting");
                        fairygui.UIConfig.windowModalWaiting = fairygui.UIPackage.getItemURL(packageConfig.packageName, "WindowModalWaiting");
                        return [2 /*return*/];
                }
            });
        });
    };
    // 加载配置
    GameLaunch.prototype.initConfig = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Game_1.default.config.configLoader = Game_1.default.asset;
                        Game_1.default.config.initList();
                        Game_1.default.config.sLoadProgress.add(Game_1.default.loaderSettingHandler.onLoadedConfig, Game_1.default.loaderSettingHandler);
                        return [4 /*yield*/, Game_1.default.config.loadAllAsync()];
                    case 1:
                        _a.sent();
                        Game_1.default.config.sLoadProgress.remove(Game_1.default.loaderSettingHandler.onLoadedConfig, Game_1.default.loaderSettingHandler);
                        return [2 /*return*/];
                }
            });
        });
    };
    // 加载多语言配置
    GameLaunch.prototype.initLangConfig = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Game_1.default.lang.current.configLoader = Game_1.default.asset;
                        Game_1.default.lang.current.initList();
                        if (!Game_1.default.lang.isUseLang) return [3 /*break*/, 2];
                        Game_1.default.lang.current.sLoadProgress.add(Game_1.default.loaderSettingHandler.onLoadedLangConfig, Game_1.default.loaderSettingHandler);
                        return [4 /*yield*/, Game_1.default.lang.current.loadAllAsync()];
                    case 1:
                        _a.sent();
                        Game_1.default.lang.current.sLoadProgress.remove(Game_1.default.loaderSettingHandler.onLoadedLangConfig, Game_1.default.loaderSettingHandler);
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    return GameLaunch;
}());
exports.default = GameLaunch;
},{"./FGUI/FGLoader":597,"./FGUI/Generates/GuiBinderList":608,"./FGUI/Generates/GuiPackageNames":609,"./FGUI/GuiSetting":621,"./Game":623,"./GameFrame/Loader/LoaderId":634,"./GameFrame/Menu/MenuLayer":644,"./GameModule/MenuId":662,"./GameModule/MenuWindows":668}],657:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var GameLaunch_1 = require("./GameLaunch");
var GameMain = /** @class */ (function () {
    function GameMain() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        // 启动游戏
        new GameLaunch_1.default().install();
    }
    return GameMain;
}());
//激活启动类
new GameMain();
},{"./GameConfig":624,"./GameLaunch":656}],658:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MModel_1 = require("../../GameFrame/Module/MModel");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var ItemData_1 = require("../DataStructs/ItemData");
//======================
// 物品 数据模型
//----------------------
var ItemModel = /** @class */ (function (_super) {
    __extends(ItemModel, _super);
    function ItemModel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 物品字典
        _this.dict = new Dictionary_1.default();
        // 物品字典,用uuid作为字典
        _this.dictByUuid = new Dictionary_1.default();
        return _this;
    }
    ItemModel.prototype.CreateItem = function (id, num) {
        var item = new ItemData_1.default();
        item.itemId = id;
        item.itemNum = num;
        return item;
    };
    Object.defineProperty(ItemModel.prototype, "itemList", {
        // 获取物品列表，数量大于0，且config存在
        get: function () {
            var list = [];
            var items = this.dict.getValues();
            for (var i = 0; i < items.length; i++) {
                if (items[i].itemNum > 0 && items[i].itemConfig) {
                    list.push(items[i]);
                }
            }
            return list;
        },
        enumerable: true,
        configurable: true
    });
    ItemModel.prototype.GetItemListByType = function (types) {
        var list = [];
        var items = this.dict.getValues();
        for (var i = 0; i < items.length; i++) {
            for (var j = 0; j < types.length; j++) {
                var type = types[j];
                if (items[i].itemType == type && items[i].itemNum > 0 && items[i].itemConfig) {
                    list.push(items[i]);
                    break;
                }
            }
        }
        return list;
    };
    // 获取物品, 用uuid
    ItemModel.prototype.getItemByUuid = function (uuid) {
        if (this.dictByUuid.hasKey(uuid)) {
            return this.dictByUuid.getValue(uuid);
        }
        else {
            return null;
        }
    };
    // 获取物品数量, 用uuid
    ItemModel.prototype.getItemNumByUuid = function (uuid) {
        var item = this.getItemByUuid(uuid);
        if (item) {
            return item.itemNum;
        }
        return 0;
    };
    // 获取物品
    ItemModel.prototype.getItem = function (itemId) {
        if (this.dict.hasKey(itemId)) {
            return this.dict.getValue(itemId);
        }
        else {
            var item = ItemData_1.default.Create(itemId, 0);
            this.dict.add(itemId, item);
            return item;
        }
    };
    // 获取物品数量文本
    ItemModel.prototype.getItemNumTxt = function (itemId) {
        return formatNumberUnit(this.getItemNum(itemId));
    };
    // 获取物品数量
    ItemModel.prototype.getItemNum = function (itemId) {
        var item = this.getItem(itemId);
        if (item) {
            return item.itemNum;
        }
        return 0;
    };
    // 设置物品数量
    ItemModel.prototype.setItemNum = function (itemId, itemNum, uuid, createTime) {
        var item;
        if (uuid) {
            item = this.getItemByUuid(uuid);
            if (!item && itemId > 0) {
                item = this.getItem(itemId);
                item.uuid = uuid;
                this.dictByUuid.add(uuid, item);
            }
        }
        if (!item) {
            item = this.getItem(itemId);
        }
        item.itemNum = itemNum;
        if (createTime !== undefined) {
            item.createTime = createTime;
        }
    };
    // 是否满足物品数量
    ItemModel.prototype.hasItemNum = function (itemId, needNum) {
        return this.getItemNum(itemId) >= needNum;
    };
    return ItemModel;
}(MModel_1.default));
exports.default = ItemModel;
},{"../../GameFrame/Module/MModel":649,"../../Libs/Helpers/Dictionary":679,"../DataStructs/ItemData":660}],659:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MModel_1 = require("../../GameFrame/Module/MModel");
var Dictionary_1 = require("../../Libs/Helpers/Dictionary");
var MailModel = /** @class */ (function (_super) {
    __extends(MailModel, _super);
    function MailModel() {
        var _this = _super.call(this) || this;
        _this.dict = new Dictionary_1.default();
        return _this;
    }
    Object.defineProperty(MailModel.prototype, "mailList", {
        get: function () {
            var list = [];
            var items = this.dict.getValues();
            for (var i = 0; i < items.length; i++) {
                if (items[i]) {
                    list.push(items[i]);
                }
            }
            return list;
        },
        enumerable: true,
        configurable: true
    });
    return MailModel;
}(MModel_1.default));
exports.default = MailModel;
},{"../../GameFrame/Module/MModel":649,"../../Libs/Helpers/Dictionary":679}],660:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var DTItemNum_1 = require("../../Config/ConfigExtends/DTItemNum");
//======================
// 物品 数据
//----------------------
var ItemData = /** @class */ (function () {
    function ItemData() {
        // 物品ID
        this.itemId = 0;
        // 物品数量
        this.itemNum = 0;
        // 创建(获得)时间
        this.createTime = 0;
        // static Binning(data: Proto.SS.ItemDesc | DTItemNum | ItemData)
        // {
        //     if (data instanceof ItemData)
        //     {
        //         return data;
        //     } else
        //     {
        //         let item = new ItemData();
        //         if (data instanceof DTItemNum)
        //         {
        //             item.itemId = data.itemId;
        //             item.itemNum = data.itemNum;
        //         } else
        //         {
        //             item.itemId = data.itemId;
        //             item.itemNum = data.amount;
        //         }
        //         return item;
        //     }
        // }
        // static BinningItemList(_list: Proto.SS.ItemDesc[] | DTItemNum[] | ItemData[])
        // {
        //     if (_list == null)
        //     {
        //         return [];
        //     }
        //     let list: ItemData[] = [];
        //     for (var index = 0; index < _list.length; index++)
        //     {
        //         var data = _list[index];
        //         if (!data)
        //         {
        //             console.warn("ItemData.BinningItemList data=null , index=" + index);
        //             continue;
        //         }
        //         let item = ItemData.Binning(data);
        //         if (!item || item.itemNum === undefined || item.itemNum === null)
        //         {
        //             console.warn("ItemData.BinningItemList index=" + index + " item.itemNum=" + item.itemNum);
        //             continue;
        //         }
        //         list.push(item);
        //     }
        //     return list;
        // }
    }
    Object.defineProperty(ItemData.prototype, "itemNumTxt", {
        // 数字文本
        get: function () {
            var fix = this.itemNum > 1000 ? 1 : 0;
            return formatNumberUnit(this.itemNum, fix);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemConfig", {
        // 物品配置
        get: function () {
            return Game_1.default.config.item.getConfig(this.itemId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemType", {
        // 物品类型
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.type;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemName", {
        // 物品名称
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.name;
            }
            return this.itemId + "\u6CA1\u914D\u7F6E\u8BE5\u7269\u54C1";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemDes", {
        // 物品描述
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.item_des;
            }
            return this.itemId + "\u6CA1\u914D\u7F6E\u8BE5\u7269\u54C1";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemStar", {
        // 物品星级
        get: function () {
            if (this.itemConfig) {
                var propertyCfg = Game_1.default.config.property.getConfig(this.itemConfig.star);
                if (propertyCfg) {
                    var star = Number(propertyCfg.zh_cn_name);
                    if (star == null) {
                        console.log("Error Item Star");
                        return 0;
                    }
                    star = star < 0 ? 0 : star;
                    star = star > 6 ? 6 : star;
                    return star;
                }
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemIconUrl", {
        // 物品图标
        get: function () {
            if (this.itemConfig) {
                var avatarConfig = Game_1.default.config.avatar.getConfig(this.itemConfig.icon);
                if (avatarConfig) {
                    return avatarConfig.iconUrl;
                }
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "itemBodyIconUrl", {
        get: function () {
            if (this.itemConfig) {
                var avatarConfig = Game_1.default.config.avatar.getConfig(this.itemConfig.icon);
                if (avatarConfig) {
                    return avatarConfig.bodyIconUrl;
                }
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundItem", {
        get: function () {
            if (this.itemConfig) {
                var compoundConfig = Game_1.default.config.compound.getConfig(this.itemConfig.syn_id);
                if (compoundConfig && compoundConfig.syn_item != 0) {
                    var item = new DTItemNum_1.default();
                    item.itemId = compoundConfig.syn_item;
                    item.itemNum = compoundConfig.num_req;
                    return item;
                }
                return null;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundNum", {
        get: function () {
            if (this.compoundItem) {
                var num = this.compoundItem.itemNum;
                return Math.floor(this.itemNum / num);
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "splitItem", {
        get: function () {
            if (this.itemConfig) {
                var compoundConfig = Game_1.default.config.compound.getConfig(this.itemConfig.syn_id);
                if (compoundConfig) {
                    var splitList = compoundConfig.split_list;
                    if (splitList.length == 1 && splitList[0].itemId == 0) {
                        return [];
                    }
                    return splitList;
                }
                return null;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundActor", {
        get: function () {
            if (this.itemConfig) {
                var item = new DTItemNum_1.default();
                item.itemId = this.itemConfig.actor_id;
                item.itemNum = this.itemConfig.actor_num;
                return item;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "compoundActorNum", {
        get: function () {
            if (this.compoundActor) {
                var num = this.compoundActor.itemNum;
                return Math.floor(this.itemNum / num);
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "canUse", {
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.can_use;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "canSell", {
        get: function () {
            if (this.itemConfig) {
                return this.itemConfig.can_sell;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ItemData.prototype, "red", {
        get: function () {
            return this.itemType == 8 || this.itemType == 17;
        },
        enumerable: true,
        configurable: true
    });
    // 创建物品数据结构，使用物品ID和数量
    ItemData.Create = function (itemId, itemNum) {
        var item = new ItemData();
        item.itemId = itemId;
        item.itemNum = itemNum;
        return item;
    };
    ItemData.GetIconUrl = function (id) {
        var itemConfig = Game_1.default.config.item.getConfig(id);
        if (itemConfig) {
            var avatarConfig = Game_1.default.config.avatar.getConfig(itemConfig.icon);
            if (avatarConfig) {
                return avatarConfig.iconUrl;
            }
        }
        return "";
    };
    ItemData.GetName = function (id) {
        var itemConfig = Game_1.default.config.item.getConfig(id);
        if (itemConfig) {
            return itemConfig.name;
        }
        return "";
    };
    return ItemData;
}());
exports.default = ItemData;
},{"../../Config/ConfigExtends/DTItemNum":44,"../../Game":623}],661:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SystemMessage_1 = require("../GameFrame/System/SystemMessage");
//======================
// 消息对话框API
//----------------------
var GameSystemMessag = /** @class */ (function (_super) {
    __extends(GameSystemMessag, _super);
    function GameSystemMessag() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GameSystemMessag;
}(SystemMessage_1.default));
exports.default = GameSystemMessag;
},{"../GameFrame/System/SystemMessage":653}],662:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// 模块ID
var MenuId;
(function (MenuId) {
    /*------------- 系统  ------------ */
    /** 主界面 */
    MenuId[MenuId["Home"] = 1] = "Home";
    /** 登录 */
    MenuId[MenuId["Login"] = 101] = "Login";
    /** 创建角色 */
    MenuId[MenuId["CreateRole"] = 102] = "CreateRole";
    /** 角色信息 */
    MenuId[MenuId["PlayerInfo"] = 103] = "PlayerInfo";
    /** 排行榜 */
    MenuId[MenuId["Rank"] = 104] = "Rank";
    /** 主线任务 */
    MenuId[MenuId["MainTask"] = 105] = "MainTask";
    /** 街区 */
    MenuId[MenuId["Street"] = 106] = "Street";
    /** 公告 */
    MenuId[MenuId["Notice"] = 107] = "Notice";
    /** 主线完成 */
    MenuId[MenuId["GuideComplete"] = 108] = "GuideComplete";
    /*------------- 主菜单  ------------ */
    /** 拍摄界面 */
    MenuId[MenuId["War"] = 3] = "War";
    /** 市场 */
    MenuId[MenuId["Market"] = 5] = "Market";
    /** 仓库 */
    MenuId[MenuId["Bag"] = 6] = "Bag";
    //艺人
    MenuId[MenuId["ArtistList"] = 4] = "ArtistList";
    MenuId[MenuId["ArtistDetail"] = 401] = "ArtistDetail";
    MenuId[MenuId["ActorDetail"] = 402] = "ActorDetail";
    MenuId[MenuId["ArtistFrozen"] = 403] = "ArtistFrozen";
    MenuId[MenuId["ArtistScoutResult"] = 404] = "ArtistScoutResult";
    MenuId[MenuId["ArtistScoutSuccess"] = 405] = "ArtistScoutSuccess";
    MenuId[MenuId["ArtistTrain"] = 406] = "ArtistTrain";
    MenuId[MenuId["ArtistTrainResult"] = 407] = "ArtistTrainResult";
    MenuId[MenuId["ArtistGet"] = 408] = "ArtistGet";
    MenuId[MenuId["ArtistShare"] = 409] = "ArtistShare";
    MenuId[MenuId["ArtListExercise"] = 410] = "ArtListExercise";
    MenuId[MenuId["ArtistAssistant"] = 411] = "ArtistAssistant";
    /*------------- 右上角菜单  ------------ */
    /** 商城 */
    MenuId[MenuId["Shop"] = 21] = "Shop";
    /** 充值 */
    MenuId[MenuId["Recharge"] = 22] = "Recharge";
    /** 日常以及日常奖励 */
    MenuId[MenuId["Mission"] = 23] = "Mission";
    MenuId[MenuId["MissionReward"] = 231] = "MissionReward";
    /** 福利 */
    MenuId[MenuId["Weal"] = 24] = "Weal";
    /** 活动 */
    MenuId[MenuId["Event"] = 25] = "Event";
    /** 超级偶像 */
    MenuId[MenuId["SuperIdol"] = 26] = "SuperIdol";
    /*------------- 右下角菜单  ------------ */
    /** 设置 */
    MenuId[MenuId["SystemSetting"] = 31] = "SystemSetting";
    /** 邮件 */
    MenuId[MenuId["Mail"] = 32] = "Mail";
    /** 聊天 */
    MenuId[MenuId["Chat"] = 33] = "Chat";
    /*------------- 右中角菜单  ------------ */
    /** 奥斯卡 */
    MenuId[MenuId["Awards"] = 41] = "Awards";
    /** 小目标 -- 等级礼包 */
    MenuId[MenuId["Goal"] = 42] = "Goal";
    /** 小目标 -- 奖杯礼包 */
    MenuId[MenuId["CupGift"] = 43] = "CupGift";
    /*------------- 左中角菜单  ------------ */
    /** 持续收益 */
    MenuId[MenuId["WarContinue"] = 301] = "WarContinue";
    /*------------- 经营子菜单  ------------ */
    /** 生产 */
    MenuId[MenuId["Produce"] = 51] = "Produce";
    /** 订单 */
    MenuId[MenuId["Order"] = 52] = "Order";
    /** 公务 */
    MenuId[MenuId["Official"] = 53] = "Official";
    /** 粉丝 */
    MenuId[MenuId["Fans"] = 54] = "Fans";
    /** 会议 */
    MenuId[MenuId["Meeting"] = 55] = "Meeting";
    /*------------- 管理子菜单  ------------ */
    /** 剧本 */
    MenuId[MenuId["StoryLibrary"] = 61] = "StoryLibrary";
    /** 院线 */
    MenuId[MenuId["Cinemas"] = 62] = "Cinemas";
    /** 编剧 */
    MenuId[MenuId["Screenwriter"] = 63] = "Screenwriter";
    /** 艺人名录 */
    MenuId[MenuId["Artist"] = 64] = "Artist";
    /** 宝物 */
    MenuId[MenuId["Treasure"] = 65] = "Treasure";
    /** 剧本信息  */
    MenuId[MenuId["StoryInfo"] = 6101] = "StoryInfo";
    /*------------- 社交子菜单  ------------ */
    /** 集团 */
    MenuId[MenuId["Group"] = 71] = "Group";
    /** 领袖 */
    MenuId[MenuId["Leader"] = 72] = "Leader";
    /** 合作 */
    MenuId[MenuId["Cooperation"] = 73] = "Cooperation";
    /*------------- 合作子菜单  ------------ */
    /** 合作任务 */
    MenuId[MenuId["CooperationTask"] = 81] = "CooperationTask";
    /** 合作订单 */
    MenuId[MenuId["CooperatOrder"] = 82] = "CooperatOrder";
    /** 送美元 */
    MenuId[MenuId["CooperatSentDollar"] = 83] = "CooperatSentDollar";
    /** 送金币 */
    MenuId[MenuId["CooperatSentGold"] = 84] = "CooperatSentGold";
    /** 有子菜单的按钮开始ID */
    MenuId[MenuId["SubMenuButtonBegin"] = 10000] = "SubMenuButtonBegin";
    /**主菜单 */
    MenuId[MenuId["Run"] = 10001] = "Run";
    MenuId[MenuId["Manage"] = 10002] = "Manage";
    MenuId[MenuId["Social"] = 10003] = "Social";
    /*------------- 建筑子菜单  ------------ */
    MenuId[MenuId["BuildRoomUpgrade"] = 201] = "BuildRoomUpgrade";
    MenuId[MenuId["BuildRoomList"] = 202] = "BuildRoomList";
    MenuId[MenuId["GoldExchange"] = 203] = "GoldExchange";
    MenuId[MenuId["PopUp"] = 20001] = "PopUp";
})(MenuId = exports.MenuId || (exports.MenuId = {}));
},{}],663:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
//=========================
// 验证基类
//-------------------------
var MenuValidate = /** @class */ (function () {
    function MenuValidate() {
        this.dict = new Dictionary_1.default();
    }
    /**
     * 获取单例实例
     */
    MenuValidate.getInstance = function () {
        var Class = this;
        if (Class.__instance == null) {
            Class.__instance = new Class();
            Class.__instance.install();
        }
        return Class.__instance;
    };
    MenuValidate.prototype.validate = function (menuId) {
        if (this.dict.hasKey(menuId)) {
            return this.dict.getValue(menuId).apply(this);
        }
        return true;
    };
    MenuValidate.prototype.add = function (menuId, fun) {
        this.dict.add(menuId, fun);
    };
    MenuValidate.prototype.install = function () {
    };
    return MenuValidate;
}());
exports.default = MenuValidate;
},{"../Libs/Helpers/Dictionary":679}],664:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
var MenuId_1 = require("./MenuId");
//=========================
// 验证是否可以打开
//-------------------------
var MenuValidateEnableOpen = /** @class */ (function (_super) {
    __extends(MenuValidateEnableOpen, _super);
    function MenuValidateEnableOpen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuValidateEnableOpen.prototype.install = function () {
        this.dict.add(MenuId_1.MenuId.War, this.warEnableOpen);
    };
    MenuValidateEnableOpen.prototype.validate = function (menuId) {
        switch (menuId) {
            case MenuId_1.MenuId.War:
                return this.warEnableOpen();
        }
        return _super.prototype.validate.call(this, menuId);
    };
    //拍摄是否可以使用
    MenuValidateEnableOpen.prototype.warEnableOpen = function () {
        return true;
        // let b: boolean = false;
        // if (User.isNineToFiftyFive && !User.isTenTime && (!Game.moduleModel.warData.moveData || (Game.moduleModel.warData.moveData !== null && Game.moduleModel.warData.moveData.state < EMovieState.result)))
        // {
        // 	Game.system.toastText(TEXT.NineToFiftyFiveTip);
        // }
        // else
        // {
        // 	b = true;
        // }
        // return b;
    };
    return MenuValidateEnableOpen;
}(MenuValidate_1.default));
exports.default = MenuValidateEnableOpen;
},{"./MenuId":662,"./MenuValidate":663}],665:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
//==================
//验证新功能
//==================
var MenuValidateNew = /** @class */ (function (_super) {
    __extends(MenuValidateNew, _super);
    function MenuValidateNew() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuValidateNew.prototype.install = function () {
    };
    MenuValidateNew.prototype.validate = function (menuId) {
        if (this.dict.hasKey(menuId)) {
            return this.dict.getValue(menuId).apply(this);
        }
        // let isNew = Game.moduleModel.func.getIsNewMenu(menuId);
        // if (isNew)
        // {
        // 	return isNew;
        // }
        // let menuConfig = Game.config.menu.getConfig(menuId);
        // if (menuConfig.isSubbarMainButton)
        // {
        // 	let list = Game.config.menu.getBarMenus(<number>menuId);
        // 	for (let i = 0; i < list.length; i++)
        // 	{
        // 		if (this.validate(list[i].menuId))
        // 		{
        // 			return true;
        // 		}
        // 	}
        // }
        return false;
    };
    return MenuValidateNew;
}(MenuValidate_1.default));
exports.default = MenuValidateNew;
},{"./MenuValidate":663}],666:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var Game_1 = require("../Game");
//=========================
// 验证是否开放
//-------------------------
var MenuValidateOpening = /** @class */ (function (_super) {
    __extends(MenuValidateOpening, _super);
    function MenuValidateOpening() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.closeDict = new Dictionary_1.default();
        return _this;
    }
    MenuValidateOpening.prototype.install = function () {
        // this.addClose(MenuId.GuideComplete, this.isCloseGuideComplete);
        // this.addClose(MenuId.Goal, this.isCloseGoal);
        // this.addClose(MenuId.CupGift, this.isCloseCupGift);
    };
    // isCloseGuideComplete(): boolean
    // {
    // 	return Game.moduleModel.guide.guideCompleteStatus == 1;
    // }
    // isCloseGoal(): boolean
    // {
    // 	return Game.moduleModel.targetPackage.isCloseLevelGift;
    // }
    // isCloseCupGift(): boolean
    // {
    // 	return Game.moduleModel.targetPackage.isCloseCupGift;
    // }
    MenuValidateOpening.prototype.addClose = function (id, func) {
        this.closeDict.add(id, func);
    };
    MenuValidateOpening.prototype.validate = function (menuId) {
        var isClose = false;
        if (this.closeDict.hasKey(menuId)) {
            isClose = this.closeDict.getValue(menuId).apply(this);
        }
        if (isClose == true) {
            return false;
        }
        var unlockConfig = Game_1.default.config.unlock.getUnlockConfig(menuId);
        if (this.dict.hasKey(menuId)) {
            return this.dict.getValue(menuId).apply(this);
        }
        // if (unlockConfig)
        // {
        // 	switch (unlockConfig.open_type)
        // 	{
        // 		case UnlockType.None:
        // 			return true;
        // 		case UnlockType.Level:
        // 			return User.info.level >= unlockConfig.open_data;
        // 		case UnlockType.BuildingLevel:
        // 			return Game.moduleModel.building.validataBuildLevel(unlockConfig.open_data);
        // 		case UnlockType.BlockLevel:
        // 			return Game.moduleModel.street.validataBlockLevelId(unlockConfig.open_data);
        // 		case UnlockType.Other:
        // 			return false;
        // 		case UnlockType.HoldCity:
        // 			return Game.moduleModel.market.IsTaskCityFinish(unlockConfig.open_data);
        // 		case UnlockType.MainTask:
        // 			return Game.moduleModel.task.isCompleteMainTask(unlockConfig.open_data);
        // 	}
        // }
        return _super.prototype.validate.call(this, menuId);
    };
    return MenuValidateOpening;
}(MenuValidate_1.default));
exports.default = MenuValidateOpening;
},{"../Game":623,"../Libs/Helpers/Dictionary":679,"./MenuValidate":663}],667:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuValidate_1 = require("./MenuValidate");
var MenuValidateOpening_1 = require("./MenuValidateOpening");
//=========================
// 验证是否解锁
//-------------------------
var MenuValidateUnlock = /** @class */ (function (_super) {
    __extends(MenuValidateUnlock, _super);
    function MenuValidateUnlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuValidateUnlock.prototype.install = function () {
    };
    MenuValidateUnlock.prototype.validate = function (menuId) {
        return MenuValidateOpening_1.default.getInstance().validate(menuId);
    };
    return MenuValidateUnlock;
}(MenuValidate_1.default));
exports.default = MenuValidateUnlock;
},{"./MenuValidate":663,"./MenuValidateOpening":666}],668:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Libs/Helpers/Dictionary");
var MenuId_1 = require("./MenuId");
var ModuleConfig_1 = require("../GameFrame/Module/ModuleConfig");
var HomeWindow_1 = require("./ViewWindows/HomeWindow");
var LoginWindow_1 = require("./ViewWindows/LoginWindow");
//======================
// 模块配置
//----------------------
var MenuWindows = /** @class */ (function () {
    function MenuWindows() {
    }
    MenuWindows.get = function (menuId) {
        return MenuWindows.dict.getValue(menuId);
    };
    MenuWindows.add = function (menuId, windowClass) {
        // 请在该地方配置menuId对应的 MWindow
        MenuWindows.dict.add(menuId, new ModuleConfig_1.default(menuId, windowClass));
    };
    MenuWindows.install = function () {
        MenuWindows.add(MenuId_1.MenuId.Login, LoginWindow_1.default);
        MenuWindows.add(MenuId_1.MenuId.Home, HomeWindow_1.default);
    };
    MenuWindows.dict = new Dictionary_1.default();
    return MenuWindows;
}());
exports.default = MenuWindows;
},{"../GameFrame/Module/ModuleConfig":651,"../Libs/Helpers/Dictionary":679,"./MenuId":662,"./ViewWindows/HomeWindow":671,"./ViewWindows/LoginWindow":672}],669:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ModelManagerList_1 = require("./ModelManagerList");
//======================
// 模块 数据模型 管理器
//----------------------
var ModelManager = /** @class */ (function (_super) {
    __extends(ModelManager, _super);
    function ModelManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 初始化
    ModelManager.prototype.install = function () {
        this.initList();
        for (var i = 0; i < this.list.length; i++) {
            this.list[i].install();
        }
    };
    return ModelManager;
}(ModelManagerList_1.default));
exports.default = ModelManager;
},{"./ModelManagerList":670}],670:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ItemModel_1 = require("./DataModels/ItemModel");
var MailModel_1 = require("./DataModels/MailModel");
//======================
// 模块 数据模型 管理器
//----------------------
var ModelManagerList = /** @class */ (function () {
    function ModelManagerList() {
        // 列表
        this.list = [];
        // 埋点数据
        // buriedPoint: BuriedPointModel = new BuriedPointModel();
        // 物品
        this.item = new ItemModel_1.default();
        // 邮件
        this.mail = new MailModel_1.default();
    }
    // 初始化列表
    ModelManagerList.prototype.initList = function () {
        this.list.push(this.item);
        this.list.push(this.mail);
    };
    return ModelManagerList;
}());
exports.default = ModelManagerList;
},{"./DataModels/ItemModel":658,"./DataModels/MailModel":659}],671:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MWindow_1 = require("../../GameFrame/Module/MWindow");
//======================
// 游戏主界面
//----------------------
var HomeWindow = /** @class */ (function (_super) {
    __extends(HomeWindow, _super);
    function HomeWindow() {
        return _super.call(this) || this;
    }
    // 设置主界面显示
    HomeWindow.prototype.setHomeShow = function () {
        if (this.contentPane && !this.contentPane.visible) {
            this.contentPane.visible = true;
            this.onShown();
        }
    };
    // 设置主界面隐藏
    HomeWindow.prototype.setHomeHide = function () {
        if (this.contentPane && this.contentPane.visible) {
            this.contentPane.visible = false;
            this.onHide();
        }
    };
    return HomeWindow;
}(MWindow_1.default));
exports.default = HomeWindow;
},{"../../GameFrame/Module/MWindow":650}],672:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MWindow_1 = require("../../GameFrame/Module/MWindow");
var LoginWindowUI_1 = require("../../FGUI/Extends/ModuleLogin/LoginWindowUI");
var MenuOpenType_1 = require("../../GameFrame/Menu/MenuOpenType");
var Game_1 = require("../../Game");
var LoginTabType;
(function (LoginTabType) {
    // 登录
    LoginTabType[LoginTabType["Login"] = 0] = "Login";
    // 注册
    LoginTabType[LoginTabType["Register"] = 1] = "Register";
    // 游客登录
    LoginTabType[LoginTabType["LoginGuest"] = 2] = "LoginGuest";
    // 注册协议
    LoginTabType[LoginTabType["Agreement"] = 3] = "Agreement";
})(LoginTabType = exports.LoginTabType || (exports.LoginTabType = {}));
//======================
// 登录窗口
//----------------------
var LoginWindow = /** @class */ (function (_super) {
    __extends(LoginWindow, _super);
    function LoginWindow() {
        var _this = _super.call(this) || this;
        // 添加依赖资源
        _this.addAssetForFguiComponent(LoginWindowUI_1.default);
        return _this;
    }
    // 生成动态预加载资源
    LoginWindow.prototype.generateAssetsForDynmic = function () {
        _super.prototype.generateAssetsForDynmic.call(this);
        // // 方式1, 自己手动加资源
        // this.addDynamicAsset({url:xxxxx, type:AssetItemType.Buffer});
        // // 方式2, 添加AvatarConfig里指定的资源
        // let list = Game.moduleModel.story.getList();
        // for(let i = 0; i < list.length; i ++)
        // {
        //     this.addDynamicAsset(list[i].avatarConfig.iconAssetItem);
        //     this.addDynamicAsset(list[i].avatarConfig.miniIconAssetItem);
        // }
        // // 方式3, 添加AvatarConfig所有的资源
        // let list = Game.moduleModel.story.getList();
        // for(let i = 0; i < list.length; i ++)
        // {
        //     this.addDynmicAssetForAvatarAll(list[i].avatarConfig);
        // }
    };
    // 菜单创建
    LoginWindow.prototype.onMenuCreate = function () {
        var windowUI = LoginWindowUI_1.default.createInstance();
        this.conent = windowUI;
        this.contentPane = windowUI;
        // this.center();
        // //弹出窗口的动效已中心为轴心
        // this.setPivot(0.5, 0.5);
        this.openTab(LoginTabType.Login);
        _super.prototype.onMenuCreate.call(this);
    };
    // 菜单打开事件，传递参数
    LoginWindow.prototype.onMenuOpen = function (parameter) {
        if (parameter.openType == MenuOpenType_1.MenuOpenType.None) {
            if (Game_1.default.localStorage.isGuest) {
                parameter.openType = MenuOpenType_1.MenuOpenType.Tab;
                parameter.openIndex = LoginTabType.LoginGuest;
            }
        }
        _super.prototype.onMenuOpen.call(this, parameter);
    };
    // 打开Tab面板
    LoginWindow.prototype.openTab = function (tabIndex) {
        if (this.conent) {
            this.conent.m_TabCtrl.setSelectedIndex(tabIndex);
        }
        _super.prototype.openTab.call(this, tabIndex);
    };
    //=========================
    // 显示完成
    // 可以在这里添加协议消息监听
    //-------------------------
    LoginWindow.prototype.onShowComplete = function () {
        _super.prototype.onShowComplete.call(this);
    };
    //=========================
    // 隐藏完成
    // 可以在这里移除协议消息监听
    //-------------------------
    LoginWindow.prototype.onHideComplete = function () {
        _super.prototype.onHideComplete.call(this);
    };
    return LoginWindow;
}(MWindow_1.default));
exports.default = LoginWindow;
},{"../../FGUI/Extends/ModuleLogin/LoginWindowUI":594,"../../Game":623,"../../GameFrame/Menu/MenuOpenType":647,"../../GameFrame/Module/MWindow":650}],673:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
/**
* 浏览器检测
*/
var BrowserDetectConfig = /** @class */ (function () {
    function BrowserDetectConfig() {
        this.isConch = false;
        this.isCrosswalk = false;
        // 发布版本
        this.isResease = false;
        // 是本地
        this.isLocal = false;
        // 是否显示GM
        this.enableGM = true;
        // 是否显示状态
        this.isShowState = true;
        // 是否使用版本号
        this.isUseVersion = false;
        // 内部充值模式
        this.isDebugRecharge = true;
        // 是否请求公告
        this.isRequestNotice = false;
        this.urlServerListRemote = "http://mbqb.ihaiu.com/GamePF/ServerList.json";
        this.urlServerListLocal = "ServerList.json";
        if (window && window.navigator && window.navigator.userAgent) {
            var agent = window.navigator.userAgent;
            console.log(agent);
            this.isFirefox = (agent.indexOf("Firefox") > -1);
            this.isOpera = (window["opera"] != null);
            this.isChrome = (agent.indexOf("Chrome") > -1); // NOTE that Chrome on Android returns true but is a completely different browser with different abilities
            this.isIOS = agent.indexOf("iPod") > -1 || agent.indexOf("iPhone") > -1 || agent.indexOf("iPad") > -1;
            this.isAndroid = (agent.indexOf("Android") > -1);
            this.isBlackberry = (agent.indexOf("Blackberry") > -1);
            this.isTV = (agent.indexOf("Box") > -1) || (agent.indexOf("box") > -1);
            this.isIE = (agent.indexOf("IE") > -1);
            this.isMobile = this.isIOS || this.isAndroid || this.isBlackberry;
            this.isApp = window["conch"] ? true : false;
        }
        else {
            this.isMobile = true;
            this.isApp = true;
        }
        // this.isMobile = true;
        // this.isApp = true;
        // console.log("window.location=" + (window["location"] ? JSON.stringify(window["location"]) : "没有"));
        this.isResease = true;
        if (window && window["location"] && window["location"]["pathname"] && window["location"]["pathname"].startsWith("/GamePF") || /\/[A-Z]:\//.test(window["location"]["pathname"])) {
            this.isResease = false;
        }
        // if (this.isResease)
        // {
        // 	this.enableGM = false;
        // 	this.isShowState = false;
        // 	this.isLocal = true;
        // }
        if (window && window["location"] && window["location"]["pathname"] && /\/[A-Z]:\//.test(window["location"]["pathname"])) {
            this.isUseVersion = false;
        }
        if (!this.isIOS && window && window["location"] && window && window["location"]["origin"] && window && (window["location"]["origin"] == "http://pfqa.ihaiu.com" || window["location"]["origin"] == "http://172.16.50.181:8900")) {
            this.isUseVersion = false;
            this.enableGM = true;
            this.isLocal = true;
        }
        this.enableGM = true;
        if (this.isAndroid) {
            this.isUseVersion = false;
            this.enableGM = true;
            this.isShowState = true;
            this.isLocal = true;
            this.isDebugRecharge = true;
        }
        if (this.isIOS) {
            this.isUseVersion = false;
            this.enableGM = true;
            this.isShowState = true;
            this.isLocal = true;
            this.isDebugRecharge = false;
        }
        this.isLocal = true;
        console.log("this.isResease=" + this.isResease);
        console.log("this.urlServerList=" + this.urlServerList);
        if (window["conch"]) {
            var nType = window["conch"].config.getNetworkType();
            console.log("getNetworkType:" + nType);
            window["conch"].setNetworkEvtFunction(function (type) {
                console.log("setNetworkEvtFunction:" + type);
            });
        }
    }
    Object.defineProperty(BrowserDetectConfig.prototype, "versionUrl", {
        // 版本号路径
        get: function () {
            // if (window && window["location"] && window["location"]["_fullpath"] && window["location"]["_fullpath"].startsWith("https://cdn-exp-pf.shinezone.com/resources/"))
            // {
            // 	return window["location"]["_fullpath"].replace("https://cdn-exp-pf.shinezone.com/resources/", "https://s3.amazonaws.com/mv-va-qa01/resources/") + "/version.json";
            // }
            // else
            // {
            return "version.json";
            // }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "urlServerList", {
        get: function () {
            if (this.isLocal) {
                return this.urlServerListLocal;
            }
            else {
                return this.urlServerListRemote;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "deviceInfo", {
        get: function () {
            if (window["conch"]) {
                if (!this._deviceInfo) {
                    this._deviceInfo = JSON.parse(window["conch"].config.getDeviceInfo());
                }
            }
            else {
                if (!this._deviceInfo)
                    this._deviceInfo = {
                        "os": "ios",
                        "devicename": "iPhone8,1",
                        "imei": "imeixxx",
                        "imsi": "imsixxx",
                        "phonemodel": "iPhone",
                        "localmodel": "iPhone",
                        "retinavalue": "2.000000",
                        "osversion": "10.2",
                        "resolution": "375*667",
                        "guid": "E5B525AB-6B9A-495F-BF74-82345E76D646"
                    };
            }
            return this._deviceInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "deviceId", {
        /**
         * 获取设备ID
         */
        get: function () {
            return Game_1.default.localStorage.deviceId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "deviceName", {
        get: function () {
            return this.deviceInfo["devicename"];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowserDetectConfig.prototype, "isIphoneX", {
        get: function () {
            if (this.deviceName && this.deviceName.indexOf("iPhone") != -1) {
                try {
                    var v = this.deviceName.replace("iPhone", "").replace(",", ".");
                    var num = parseFloat(v);
                    if (num >= 10.3) {
                        return true;
                    }
                }
                catch (error) {
                    return false;
                }
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    return BrowserDetectConfig;
}());
exports.default = BrowserDetectConfig;
},{"../Game":623}],674:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** 机器性能类型 */
var GameDevicePerformanceType;
(function (GameDevicePerformanceType) {
    /** 非常底，快支持不了 */
    GameDevicePerformanceType[GameDevicePerformanceType["VeryLower"] = 0] = "VeryLower";
    /** 底 */
    GameDevicePerformanceType[GameDevicePerformanceType["Lower"] = 1] = "Lower";
    /** 中 */
    GameDevicePerformanceType[GameDevicePerformanceType["Middle"] = 2] = "Middle";
    /** 高 */
    GameDevicePerformanceType[GameDevicePerformanceType["Hight"] = 3] = "Hight";
})(GameDevicePerformanceType || (GameDevicePerformanceType = {}));
/**
* 机型配置
*/
var GameDeviceConfig = /** @class */ (function () {
    function GameDeviceConfig() {
        /** 骨骼动画最大缓存数量 */
        this.skeletonCacheMaxNum = 10;
        /** 总共单位最大数量 default = 10*/
        this.unitMaxNum = 10;
        /** 单个房间单位最大数量 default = 2*/
        this.roomUnitMaxNum = 2;
        /** 模块最小缓存时间 */
        this.menuCacheTime = 10000;
        /** 动态图片缓存数量 */
        this.fguiLoaderCacheNum = 100;
        /** 动态图片缓存时间 */
        this.fguiLoaderCacheTime = 100;
        /** 粒子拖尾每次发射数量 */
        this.trailNum = 5;
        /** 机器性能类型 */
        this._performanceType = GameDevicePerformanceType.Lower;
        this._networkType = -1;
    }
    Object.defineProperty(GameDeviceConfig.prototype, "performanceType", {
        get: function () {
            return this._performanceType;
        },
        set: function (val) {
            this._performanceType = val;
            switch (val) {
                case GameDevicePerformanceType.VeryLower:
                    this.skeletonCacheMaxNum = 5;
                    this.unitMaxNum = 18;
                    this.roomUnitMaxNum = 2;
                    this.menuCacheTime = 3000;
                    this.fguiLoaderCacheNum = 50;
                    this.fguiLoaderCacheTime = 3000;
                    this.trailNum = 1;
                    break;
                case GameDevicePerformanceType.Lower:
                    this.skeletonCacheMaxNum = 10;
                    this.unitMaxNum = 20;
                    this.roomUnitMaxNum = 3;
                    this.menuCacheTime = 3000;
                    this.fguiLoaderCacheNum = 30;
                    this.fguiLoaderCacheTime = 3000;
                    this.trailNum = 2;
                    break;
                case GameDevicePerformanceType.Middle:
                    this.skeletonCacheMaxNum = 25;
                    this.unitMaxNum = 30;
                    this.roomUnitMaxNum = 4;
                    this.menuCacheTime = 10000;
                    this.fguiLoaderCacheNum = 60;
                    this.fguiLoaderCacheTime = 10000;
                    this.trailNum = 4;
                    break;
                case GameDevicePerformanceType.Hight:
                    this.skeletonCacheMaxNum = 50;
                    this.unitMaxNum = 50;
                    this.roomUnitMaxNum = 4;
                    this.menuCacheTime = 300000;
                    this.fguiLoaderCacheNum = 100;
                    this.fguiLoaderCacheTime = 100000;
                    this.trailNum = 5;
                    break;
            }
            // this.unitMaxNum = 2;
            // this.roomUnitMaxNum = 1;
        },
        enumerable: true,
        configurable: true
    });
    GameDeviceConfig.prototype.init = function () {
        var totalMem = this.getTotalMem();
        if (totalMem <= 0) {
            this.performanceType = GameDevicePerformanceType.Hight;
        }
        else if (totalMem <= 1 * 1024 * 1024) {
            this.performanceType = GameDevicePerformanceType.VeryLower;
        }
        else if (totalMem <= 2 * 1024 * 1024) {
            this.performanceType = GameDevicePerformanceType.Middle;
        }
        else {
            this.performanceType = GameDevicePerformanceType.Hight;
        }
    };
    Object.defineProperty(GameDeviceConfig.prototype, "isApp", {
        /**
         * 是否是应用设备
         */
        get: function () {
            return window["conch"] ? true : false;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 获得运行设备总内存
     * 单位为KB
     */
    GameDeviceConfig.prototype.getTotalMem = function () {
        if (this.isApp) {
            return window["conch"].config.getTotalMem();
        }
        return 0;
    };
    /**
     * 获得当前应用程序占用的内存
     * 单位为KB
     */
    GameDeviceConfig.prototype.getUsedMem = function () {
        if (this.isApp) {
            return window["conch"].config.getUsedMem();
        }
        return 0;
    };
    /**
     * 获得可用的内存
     * 单位为KB
     */
    GameDeviceConfig.prototype.getAvalidMem = function () {
        if (this.isApp) {
            return window["conch"].config.getAvalidMem();
        }
        return 0;
    };
    /**
     * 获得网络状态
     */
    GameDeviceConfig.prototype.getNetworkType = function () {
        if (this._networkType == -1) {
            if (this.isApp) {
                this._networkType = window["conch"].config.getNetworkType();
                return this._networkType;
            }
        }
        else {
            return this._networkType;
        }
        return NetworkType.NET_UNKNOWN;
    };
    Object.defineProperty(GameDeviceConfig.prototype, "networkType", {
        set: function (type) {
            this._networkType = type;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 打印设备信息情况
     */
    GameDeviceConfig.prototype.printInfo = function () {
        var str = " TotalMem: " + kbToStr(this.getTotalMem()) + "\n UsedMem: " + kbToStr(this.getUsedMem()) + "\n AvalidMem: " + kbToStr(this.getAvalidMem()) + "\n NetworkType: " + this.getNetworkType();
        console.log(str);
    };
    return GameDeviceConfig;
}());
exports.default = GameDeviceConfig;
},{}],675:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 屏幕分辨率
 */
var ScreenSettingConfig = /** @class */ (function () {
    function ScreenSettingConfig() {
        // 开发分辨率
        this.developWidth = 720;
        this.developHeight = 1280;
    }
    Object.defineProperty(ScreenSettingConfig.prototype, "developAspect", {
        get: function () {
            return this.developWidth / this.developHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenWidth", {
        // 屏幕分辨率
        get: function () {
            return fairygui.GRoot.inst.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenHeight", {
        get: function () {
            return fairygui.GRoot.inst.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenAspect", {
        get: function () {
            return this.screenWidth / this.screenHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleExpand", {
        // 获取缩放比例
        get: function () {
            var rate = 1;
            if (this.screenAspect <= this.developAspect) {
                rate = this.screenHeight / this.developHeight / (this.screenWidth / this.developWidth);
            }
            else {
                rate = this.screenWidth / this.developWidth / (this.screenHeight / this.developHeight);
            }
            return rate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleShrink", {
        get: function () {
            var rate = 1;
            if (this.screenAspect <= this.developAspect) {
                rate = this.screenHeight / this.developHeight;
            }
            else {
                rate = this.screenWidth / this.developWidth;
            }
            return rate;
        },
        enumerable: true,
        configurable: true
    });
    return ScreenSettingConfig;
}());
exports.default = ScreenSettingConfig;
},{}],676:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 版本号数据结构
 */
var VersionData = /** @class */ (function () {
    function VersionData() {
        // 第一部分为主版本号
        this.master = 0;
        // 第二部分为次版本号, 需要更新app版本
        this.minor = 0;
        // 第三部分为修订版
        this.revised = 0;
        // 第四部分为修订版
        this.revised2 = 0;
    }
    Object.defineProperty(VersionData.prototype, "isZero", {
        get: function () {
            return this.master == 0 &&
                this.minor == 0 &&
                this.revised == 0 &&
                this.revised2 == 0;
        },
        enumerable: true,
        configurable: true
    });
    VersionData.prototype.setVersionTxt = function (versionTxt) {
        if (versionTxt === undefined || versionTxt === null)
            return this;
        if (isNullOrEmpty(versionTxt.trim()))
            return this;
        versionTxt = versionTxt.toLowerCase();
        versionTxt = versionTxt.replace("version:", "").replace("version", "").replace("ver", "").replace("v", "");
        var arr = versionTxt.split('.');
        this.master = parseInt(arr[0]);
        if (arr.length > 1)
            this.minor = parseInt(arr[1]);
        if (arr.length > 2)
            this.revised = parseInt(arr[2]);
        if (arr.length > 3)
            this.revised2 = parseInt(arr[3]);
        return this;
    };
    VersionData.prototype.equal = function (target) {
        return this.master == target.master
            && this.minor == target.minor
            && this.revised == target.revised
            && this.revised2 == target.revised2;
    };
    VersionData.prototype.toString = function () {
        return "v" + this.master + "." + this.minor + "." + this.revised + "." + this.revised2;
    };
    return VersionData;
}());
exports.default = VersionData;
},{}],677:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LocalStorage = Laya.LocalStorage;
var VersionData_1 = require("./VersionData");
var Game_1 = require("../Game");
var Signal_1 = require("../Libs/signals/Signal");
var VersionManager = /** @class */ (function () {
    function VersionManager() {
        this.platform = "android";
        this.urlpath = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources/ios/web/";
        this.url = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources/ios/web/index.html";
        this.appId = "com.shinezone.movie";
        this.webRoot = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources";
        this.webVersionUrl = "http://mbqb.ihaiu.com/Gidea-PF-Res/resources/verinfo/DTGameVersion.json";
        // 本地版本号发生变化
        this.sLocalVersionChange = new Signal_1.default();
        // 拷贝 assets->data/{packages}/files 的版本
        this.assetCopytoFileVersionData = new VersionData_1.default();
        // 本地，应用版本
        this.localAppVersionData = new VersionData_1.default();
        // 网络，应用版本
        this.webAppVersionData = new VersionData_1.default();
        // 本地，资源版本
        this.localResVersionData = new VersionData_1.default();
        // 网络，资源版本
        this.webResVersionData = new VersionData_1.default();
        // 本地，分包资源版本
        this.localPartialVersionData = new VersionData_1.default();
        // 网络，分包资源版本
        this.webPartialVersionData = new VersionData_1.default();
    }
    Object.defineProperty(VersionManager, "Instance", {
        get: function () {
            if (!VersionManager._Instance) {
                VersionManager._Instance = new VersionManager();
            }
            return VersionManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "localAppVersion", {
        // /** 初始化 */
        // init()
        // {
        // 	// 设置处理器			
        // 	if (BrowserDetect.isCrosswalk)
        // 	{
        // 		this.versionHandler = new CrosswalkVersionHandler(this);
        // 	}
        // 	else
        // 	{
        // 		this.versionHandler = new ConchVersionHandler(this);
        // 	}
        // 	// 设置信息
        // 	this.platform = AppSetting.platform;
        // 	this.appId = AppSetting.appId;
        // 	this.url = AppSetting.url;
        // 	this.urlpath = this.url.replace("index.html", "");
        // 	var folderUrl = this.url.replace("/index.html", "");
        // 	folderUrl = folderUrl.substring(0, folderUrl.lastIndexOf("/"));
        // 	this.webRoot = folderUrl.substring(0, folderUrl.lastIndexOf("/"));
        // 	this.webVersionUrl = this.webRoot + "/verinfo/DTGameVersion.json";
        // 	console.log("GameVersion platform=" + this.platform);
        // 	console.log("GameVersion appId=" + this.appId);
        // 	console.log("GameVersion url=" + this.url);
        // 	console.log("GameVersion urlpath=" + this.urlpath);
        // 	console.log("GameVersion webRoot=" + this.webRoot);
        // 	console.log("GameVersion webVersionUrl=" + this.webVersionUrl);
        // 	gameDeviceConfig.checkNetwork();
        // 	this.localAppVersionData = new VersionData().setVersionTxt(this.localAppVersion);
        // 	this.localResVersionData = new VersionData().setVersionTxt(this.localResVersion);
        // 	this.assetCopytoFileVersionData = new VersionData().setVersionTxt(this.assetsCopytoFileVersion);
        // 	console.log("GameVersion localAppVersionData=" + this.localAppVersionData.toString());
        // 	console.log("GameVersion localResVersionData=" + this.localResVersionData.toString());
        // 	console.log("GameVersion assetCopytoFileVersionData=" + this.assetCopytoFileVersionData.toString());
        // 	gameLaunchLoding.setVersion();
        // 	// 设置是否要显示错误对话框			
        // 	try
        // 	{
        // 		if (!BrowserDetect.enableGM && window["showAlertOnJsException"])
        // 		{
        // 			window["showAlertOnJsException"](false);
        // 		}
        // 	}
        // 	catch (error)
        // 	{
        // 		console.warn("window.showAlertOnJsException error:" + error);
        // 	}
        // 	if (AppSetting.enableVersion)
        // 	{
        // 		this.checkAssetsCopy();
        // 	}
        // 	else
        // 	{
        // 		this.end();
        // 	}
        // }
        // /**
        //  * 刷新应用版本信息
        //  */
        // refreshAppVersion()
        // {
        // 	this.__localResVersion = null;
        // 	this.localAppVersionData = new VersionData().setVersionTxt(this.localAppVersion);
        // 	this.localResVersionData = new VersionData().setVersionTxt(this.localResVersion);
        // 	gameLaunchLoding.setVersion();
        // }
        /**
         * 获取当前应用版本
         */
        get: function () {
            return Game_1.default.application.AppVersionName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "localResVersion", {
        get: function () {
            if (!this.__localResVersion) {
                this.__localResVersion = LocalStorage.getItem("__localResVersion");
                if (!this.__localResVersion) {
                    this.__localResVersion = this.localAppVersion;
                }
            }
            return this.__localResVersion;
        },
        set: function (version) {
            this.__localResVersion = version;
            LocalStorage.setItem("__localResVersion", version);
            this.sLocalVersionChange.dispatch();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "assetsCopytoFileVersion", {
        get: function () {
            if (!this.__assetsCopytoFileVersion) {
                this.__assetsCopytoFileVersion = LocalStorage.getItem("__assetsCopytoFileVersion");
                if (!this.__assetsCopytoFileVersion) {
                    this.__assetsCopytoFileVersion = "0.0.0";
                }
            }
            return this.__assetsCopytoFileVersion;
        },
        set: function (version) {
            this.__assetsCopytoFileVersion = version;
            LocalStorage.setItem("__assetsCopytoFileVersion", version);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "localPartialVersion", {
        get: function () {
            if (!this.__localPartialVersion) {
                this.__localPartialVersion = LocalStorage.getItem("__localPartialVersion");
                if (!this.__localPartialVersion) {
                    this.__localPartialVersion = "0.0.0";
                }
            }
            return this.__localPartialVersion;
        },
        set: function (version) {
            this.__localPartialVersion = version;
            LocalStorage.setItem("__localPartialVersion", version);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VersionManager.prototype, "isNeedAssetsCopy", {
        // 获取是否需要拷贝assets->data/{packages}/files
        get: function () {
            if (Game_1.default.browserSetting.isCrosswalk) {
                return !this.localAppVersionData.equal(this.assetCopytoFileVersionData);
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    return VersionManager;
}());
exports.default = VersionManager;
},{"../Game":623,"../Libs/signals/Signal":683,"./VersionData":676}],678:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 事件
 */
var Emitter = /** @class */ (function () {
    function Emitter(isDispatchName) {
        if (isDispatchName === void 0) { isDispatchName = false; }
        /** 监听数组 */
        this.listeners = {};
        /** 是否把事件名称抛当参数抛给回调 */
        this.isDispatchName = false;
        this.isDispatchName = isDispatchName;
    }
    /**
     * 注册事件
     * @param name 事件名称
     * @param callback 回调函数
     * @param context 上下文
     */
    Emitter.prototype.add = function (name, callback, context) {
        var hasRegistered = false;
        var observers = this.listeners[name];
        if (!observers) {
            this.listeners[name] = [];
        }
        else {
            var length_1 = observers.length;
            for (var i = 0; i < length_1; i++) {
                var observer = observers[i];
                if (observer.comparAll(callback, context)) {
                    hasRegistered = true;
                }
            }
        }
        if (!hasRegistered) {
            this.listeners[name].push(new Observer(callback, context));
        }
    };
    /**
     * 移除事件
     * @param name 事件名称
     * @param callback 回调函数
     * @param context 上下文
     */
    Emitter.prototype.remove = function (name, callback, context) {
        var observers = this.listeners[name];
        if (!observers)
            return;
        var length = observers.length;
        for (var i = 0; i < length; i++) {
            var observer = observers[i];
            if (observer.compar(context)) {
                observers.splice(i, 1);
                break;
            }
        }
        if (observers.length == 0) {
            delete this.listeners[name];
        }
    };
    /**
     * 发送事件
     * @param name 事件名称
     */
    Emitter.prototype.dispatch = function (name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var observers = this.listeners[name];
        if (!observers)
            return;
        var length = observers.length;
        for (var i = length - 1; i >= 0; i--) {
            var observer = observers[i];
            if (this.isDispatchName) {
                observer.notify.apply(observer, [name].concat(args));
            }
            else {
                observer.notify.apply(observer, args);
            }
        }
    };
    return Emitter;
}());
exports.default = Emitter;
/**
 * 观察者
 */
var Observer = /** @class */ (function () {
    function Observer(callback, context) {
        /** 回调函数 */
        this.callback = null;
        /** 上下文 */
        this.context = null;
        var self = this;
        self.callback = callback;
        self.context = context;
    }
    /**
     * 发送通知
     * @param args 不定参数
     */
    Observer.prototype.notify = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a;
        var self = this;
        (_a = self.callback).call.apply(_a, [self.context].concat(args));
    };
    /**
     * 上下文比较
     * @param context 上下文
     */
    Observer.prototype.compar = function (context) {
        return context == this.context;
    };
    /**
     * 上下文比较
     * @param context 上下文
     */
    Observer.prototype.comparAll = function (callback, context) {
        return callback == this.callback && context == this.context;
    };
    return Observer;
}());
},{}],679:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary = /** @class */ (function () {
    function Dictionary() {
        this.dict = {};
        this._count = 0;
    }
    Object.defineProperty(Dictionary.prototype, "count", {
        get: function () {
            return this._count;
        },
        enumerable: true,
        configurable: true
    });
    Dictionary.prototype.add = function (key, val) {
        if (this.hasKey(key) === false) {
            this._count++;
        }
        this.dict[key] = val;
    };
    Dictionary.prototype.set = function (key, val) {
        if (this.hasKey(key) === false) {
            this._count++;
        }
        this.dict[key] = val;
    };
    Dictionary.prototype.remove = function (key) {
        if (this.hasKey(key)) {
            this._count--;
        }
        // this.dict[key] = undefined;
        delete this.dict[key];
    };
    Dictionary.prototype.hasKey = function (key) {
        return this.dict[key] != undefined;
    };
    Dictionary.prototype.getValue = function (key) {
        return this.dict[key];
    };
    Dictionary.prototype.getValueOrDefault = function (key, _default) {
        if (this.hasKey(key)) {
            return this.getValue(key);
        }
        else {
            return _default;
        }
    };
    Dictionary.prototype.__getDict = function () {
        return this.dict;
    };
    Dictionary.prototype.getValues = function () {
        var list = [];
        for (var key in this.dict) {
            list.push(this.dict[key]);
        }
        return list;
    };
    Dictionary.prototype.getKeys = function () {
        var list = [];
        for (var key in this.dict) {
            list.push(key);
        }
        return list;
    };
    Dictionary.prototype.clear = function () {
        this.dict = {};
        this._count = 0;
    };
    return Dictionary;
}());
exports.default = Dictionary;
},{}],680:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var FguiHelper = /** @class */ (function () {
    function FguiHelper() {
    }
    // 屏幕自适应
    FguiHelper.autoScreenSize = function (content, alignH, alignV) {
        var rate = Game_1.default.screenSetting.screenScaleExpand;
        content.width = content.sourceWidth * rate;
        content.height = content.sourceHeight * rate;
        if (alignH) {
            var parent_1 = fairygui.GRoot.inst;
            switch (alignH) {
                case Laya.Stage.ALIGN_LEFT:
                    content.x = 0;
                    break;
                case Laya.Stage.ALIGN_CENTER:
                    content.x = (parent_1.width - content.width) * 0.5;
                    break;
                case Laya.Stage.ALIGN_RIGHT:
                    content.x = parent_1.width - content.width;
                    break;
            }
            switch (alignV) {
                case Laya.Stage.ALIGN_TOP:
                    content.y = 0;
                    break;
                case Laya.Stage.ALIGN_MIDDLE:
                    content.y = (parent_1.height - content.height) * 0.5;
                    break;
                case Laya.Stage.ALIGN_BOTTOM:
                    content.y = parent_1.height - content.height;
                    break;
            }
        }
    };
    // 屏幕居中
    FguiHelper.centerScreen = function (content) {
        content.x = (Game_1.default.screenSetting.screenWidth - content.width) * 0.5;
        content.y = (Game_1.default.screenSetting.screenHeight - content.height) * 0.5;
    };
    FguiHelper.centerScreenForCenter = function (content) {
        content.x = Game_1.default.screenSetting.screenWidth * 0.5;
        content.y = Game_1.default.screenSetting.screenHeight * 0.5;
    };
    // 屏幕大小
    FguiHelper.setScreenSize = function (content) {
        content.width = Game_1.default.screenSetting.screenWidth;
        content.height = Game_1.default.screenSetting.screenHeight;
    };
    /** 获取值，使用访问路径 */
    FguiHelper.getValueForPath = function (path, content) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        if (path.endsWith("()")) {
            return FguiHelper.getFunResultForPath.apply(FguiHelper, [path, content].concat(args));
        }
        else {
            return FguiHelper.getFieldValueForPath(path, content);
        }
    };
    /** 获取函数结果值，使用访问路径 */
    FguiHelper.getFunResultForPath = function (path, content) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        if (path.endsWith("()")) {
            path = path.replace("()", "");
            var fun = FguiHelper.getFieldValueForPath(path, content);
            if (fun) {
                var paths = path.split(/[\.\/]/);
                if (paths.length == 1) {
                    if (args.length == 1) {
                        return fun.apply(content, args[0]);
                    }
                    return fun.apply(content, args);
                }
                else {
                    var objPath = "";
                    var gap = "";
                    for (var i = 0; i < paths.length - 1; i++) {
                        objPath += gap + paths[i];
                        gap = ".";
                    }
                    var obj = FguiHelper.getFieldValueForPath(objPath, content);
                    if (args.length == 1) {
                        return fun.apply(obj, args[0]);
                    }
                    return fun.apply(obj, args);
                }
            }
        }
        else {
            return FguiHelper.getFieldValueForPath(path, content);
        }
    };
    /** 获取值，使用访问路径 */
    FguiHelper.getFieldValueForPath = function (path, content) {
        if (!content) {
            content = window;
            if (!content) {
                content = this;
            }
        }
        var paths = path.split(/[\.\/]/);
        var val = content;
        for (var i = 0; i < paths.length; i++) {
            if (val[paths[i]]) {
                val = val[paths[i]];
            }
            else {
                return null;
            }
        }
        return val;
    };
    FguiHelper.setStringsSource = function (lang) {
        //let txtmap = fairygui.UIPackage["_stringsSource"] = {};
        var txtmap = fairygui.TranslationHelper["strings"] = {};
        var list = lang.getConfigList();
        for (var i = 0; i < list.length; i++) {
            var config = list[i];
            var name_1 = config.dict.getValue("name");
            var value = config.dict.getValue("value");
            var index = name_1.indexOf("-");
            if (value === undefined || value === null)
                continue;
            if (index == -1)
                continue;
            var uiUrl = name_1.substr(0, index);
            var uiNodeName = name_1.substr(index + 1);
            var col = txtmap[uiUrl];
            if (!col) {
                col = {};
                txtmap[uiUrl] = col;
            }
            col[uiNodeName] = value;
        }
    };
    FguiHelper.setGray = function (component) {
        if (!component)
            return;
        if (!FguiHelper.grayscaleFilters) {
            var grayscaleFilter = new Laya.ColorFilter(FguiHelper.grayscaleMat);
            FguiHelper.grayscaleFilters = [grayscaleFilter];
        }
        component.displayObject.filters = FguiHelper.grayscaleFilters;
    };
    FguiHelper.clearFilters = function (component) {
        if (!component)
            return;
        component.displayObject.filters = null;
    };
    Object.defineProperty(FguiHelper, "saturationFilters", {
        get: function () {
            if (!FguiHelper._saturationFilters) {
                FguiHelper._saturationFilters = [new Laya.ColorFilter(FguiHelper.saturation)];
            }
            return FguiHelper._saturationFilters;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FguiHelper, "saturationFilters2", {
        get: function () {
            if (!FguiHelper._saturationFilters2) {
                FguiHelper._saturationFilters2 = [new Laya.ColorFilter(FguiHelper.saturation2)];
            }
            return FguiHelper._saturationFilters2;
        },
        enumerable: true,
        configurable: true
    });
    FguiHelper.halfStaturation = function (obj) {
        if (!obj)
            return;
        obj.displayObject.filters = FguiHelper.saturationFilters;
    };
    FguiHelper.half2Staturation = function (obj) {
        if (!obj)
            return;
        obj.displayObject.filters = FguiHelper.saturationFilters2;
    };
    //组件弹出效果
    FguiHelper.boundEffect = function (target, duration) {
        if (duration === void 0) { duration = 1000; }
        target.setPivot(0.5, 0.5);
        target.setScale(0.5, 0.5);
        Laya.Tween.to(target, { scaleX: 1, scaleY: 1 }, duration, Laya.Ease.backOut, Laya.Handler.create(null, function () {
        }), 0, true, true);
    };
    //设置灰色
    FguiHelper.grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0, 0.3086, 0.6094, 0.0820, 0, 0, 0.3086, 0.6094, 0.0820, 0, 0, 0, 0, 0, 1, 0];
    FguiHelper.grayscaleFilters = null;
    FguiHelper.normalFilters = null;
    // 饱和度一半
    FguiHelper.saturation = [
        0.5, 0, 0, 0, 0,
        0, 0.5, 0, 0, 0,
        0, 0, 0.5, 0, 0,
        0, 0, 0, 1, 0,
    ];
    // 饱和度一半
    FguiHelper.saturation2 = [
        0.25, 0, 0, 0, 0,
        0, 0.25, 0, 0, 0,
        0, 0, 0.25, 0, 0,
        0, 0, 0, 1, 0,
    ];
    return FguiHelper;
}());
exports.default = FguiHelper;
},{"../../Game":623}],681:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Random = /** @class */ (function () {
    function Random() {
    }
    // int
    // min <= r < max
    Random.range = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        return min + Math.floor(range * rand);
    };
    // int
    // min <= r <= max
    Random.rangeBoth = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        return min + Math.round(range * rand);
    };
    // int
    // min < r < max
    Random.rangeBetween = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        if (Math.round(rand * range) == 0) {
            return min + 1;
        }
        else if (Math.round(rand * max) == max) {
            return max - 1;
        }
        else {
            return min + Math.round(rand * range) - 1;
        }
    };
    /// <summary>
    /// 乱序排列一个数组
    /// </summary>
    Random.GetDisorderList = function (list) {
        var countNum = list.length;
        var listA = new Array();
        var listB = new Array();
        for (var i = 0; i < countNum; i++) {
            listA.push(list[i]);
        }
        while (listB.length < countNum) {
            var index = Random.range(0, listA.length);
            if (listB.indexOf(listA[index]) === -1) {
                listB.push(listA[index]);
                listA.splice(index, 1);
            }
        }
        return listB;
    };
    return Random;
}());
exports.default = Random;
},{}],682:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mathf = /** @class */ (function () {
    function Mathf() {
    }
    Mathf.clamp = function (num, min, max) {
        return Math.max(Math.min(num, Math.max(min, max)), Math.min(min, max));
    };
    Mathf.Clamp01 = function (value) {
        if (value < 0.0)
            return 0.0;
        if (value > 1.0)
            return 1;
        return value;
    };
    /// <summary>
    ///   <para>Linearly interpolates between a and b by t.</para>
    /// </summary>
    /// <param name="a"></param>
    /// <param name="b"></param>
    /// <param name="t"></param>
    Mathf.Lerp = function (a, b, t) {
        return a + (b - a) * Mathf.Clamp01(t);
    };
    return Mathf;
}());
exports.default = Mathf;
},{}],683:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal = /** @class */ (function () {
    function Signal() {
        this._listeners = [];
    }
    Signal.prototype.add = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new SignalHandler(listener, self));
        }
    };
    Signal.prototype.addOnce = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new SignalHandler(listener, self, true));
        }
    };
    Signal.prototype.hasListener = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                return true;
            }
        }
        return false;
    };
    Signal.prototype.remove = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                this._listeners.splice(i, 1);
                break;
            }
        }
    };
    Signal.prototype.removeAll = function () {
        this._listeners.length = 0;
    };
    Signal.prototype.dispatch = function () {
        this._listeners.forEach(function (handler) { return handler.apply(); });
        this._listeners = this._listeners.filter(function (handler, i, arr) { return !handler.once(); });
    };
    return Signal;
}());
exports.default = Signal;
var SignalHandler = /** @class */ (function () {
    function SignalHandler(handler, self, once) {
        if (once === void 0) { once = false; }
        this._handler = handler;
        this._self = self;
        this._once = once;
    }
    SignalHandler.prototype.apply = function () {
        this._handler.apply(this._self);
    };
    SignalHandler.prototype.equals = function (handler, self) {
        return this._handler == handler && this._self == self;
    };
    SignalHandler.prototype.once = function () {
        return this._once;
    };
    return SignalHandler;
}());
},{}],684:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Typed3Signal = /** @class */ (function () {
    function Typed3Signal() {
        this._listeners = [];
    }
    Typed3Signal.prototype.add = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self));
        }
    };
    Typed3Signal.prototype.addOnce = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new TypedSignalHandler(listener, self, true));
        }
    };
    Typed3Signal.prototype.hasListener = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                return true;
            }
        }
        return false;
    };
    Typed3Signal.prototype.remove = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                this._listeners.splice(i, 1);
                break;
            }
        }
    };
    Typed3Signal.prototype.removeAll = function () {
        this._listeners.length = 0;
    };
    Typed3Signal.prototype.dispatch = function (value1, value2, value3) {
        this._listeners.forEach(function (handler) { return handler.apply(value1, value2, value3); });
        this._listeners = this._listeners.filter(function (handler, i, arr) { return !handler.once(); });
    };
    return Typed3Signal;
}());
exports.default = Typed3Signal;
var TypedSignalHandler = /** @class */ (function () {
    function TypedSignalHandler(handler, self, once) {
        if (once === void 0) { once = false; }
        this._handler = handler;
        this._self = self;
        this._once = once;
    }
    TypedSignalHandler.prototype.apply = function (arg1, arg2, arg3) {
        this._handler.apply(this._self, [arg1, arg2, arg3]);
    };
    TypedSignalHandler.prototype.equals = function (handler, self) {
        return this._handler == handler && this._self == self;
    };
    TypedSignalHandler.prototype.once = function () {
        return this._once;
    };
    return TypedSignalHandler;
}());
},{}]},{},[657])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
